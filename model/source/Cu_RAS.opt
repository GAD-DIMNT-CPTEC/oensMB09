       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Cu_RAS.f90
       !        File                  :  Cu_RAS.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
   63.       
   63.       subroutine initarakawa
   65.       $I_L65_10 = 0
   65. !dir$ ivdep
   65.       do
   65.          ph(1 + $I_L65_10) = t$372(1 + $I_L65_10)
   65.          aa(1 + $I_L65_10) = t$373(1 + $I_L65_10)
   65.          ad(1 + $I_L65_10) = 0.0
   65.          ac(1 + $I_L65_10) = 0.0
   65.          $I_L65_10 = 1 + $I_L65_10
   65.          if ( $I_L65_10 >= 15 ) exit
   65.       enddo
   65.       actop = 1.7
   65.       $I_L65_8 = 0
   65. !dir$ ivdep
   65.       do
   65.          $tem_S2 = ph(2 + $I_L65_8) + -ph(1 + $I_L65_8)
   65.          $au_WR0_R0 = ( aa(1 + $I_L65_8) * 1.0/$tem_S2 )
   65.          $ad_WR0_R1 = ( aa(2 + $I_L65_8) * 1.0/$tem_S2 )
   65.          ac(2 + $I_L65_8) = ph(2 + $I_L65_8) * $au_WR0_R0 + -( ph(1 + $I_L65_8) * $ad_WR0_R1 )
   65.          $ad_WR0_R1 = $ad_WR0_R1 + -$au_WR0_R0
   65.          ad(2 + $I_L65_8) = $ad_WR0_R1
   65.          $I_L65_8 = 1 + $I_L65_8
   65.          if ( $I_L65_8 >= 14 ) exit
   65.       enddo
   66.       call initmstad2
   68.       return
   68.       end
   68.       
   72.       
   72.       real (kind=8)
   72.       function es3( t )
   78.       $tx_S0 = t + -tbase
   79.       if ( ( t + -tbase ) >= -50.0 ) then
   80.          $es3_S1 = 6.1070420000000003e-1 + $tx_S0 * ( 4.4411569999999997e-2 + $tx_S0 * ( 1.4320979999999999e-3 + $tx_S0 * ( 2.6513960000000001e-5 + $tx_S0 * ( 3.0099980000000002e-7 + $tx_S0 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S0 ) ) ) ) )
   80.       else
   82.          $es3_S1 = 6.3600000000000002e-3 * _expn( ( 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S0 ) * 25.600000000000001 ) )
   82.       endif
   84.       es3 = $es3_S1
   84.       return
   84.       end
   84.       
   90.       
   90.       subroutine initacritn
   98.       $I_L98_10 = 0
   98. !dir$ ivdep
   98.       do
   98.          ph(1 + $I_L98_10) = t$372(1 + $I_L98_10)
  101.          aa(1 + $I_L98_10) = t$373(1 + $I_L98_10)
  105.          ad(1 + $I_L98_10) = 0.0
  106.          ac(1 + $I_L98_10) = 0.0
   98.          $I_L98_10 = 1 + $I_L98_10
   98.          if ( $I_L98_10 >= 15 ) exit
   98.       enddo
  108.       actop = 1.7
  114.       $I_L114_8 = 0
  114. !dir$ ivdep
  114.       do
  115.          $tem_S2 = ph(2 + $I_L114_8) + -ph(1 + $I_L114_8)
  116.          $au_WR0_R0 = ( aa(1 + $I_L114_8) * 1.0/$tem_S2 )
  117.          $ad_WR0_R1 = ( aa(2 + $I_L114_8) * 1.0/$tem_S2 )
  118.          ac(2 + $I_L114_8) = ph(2 + $I_L114_8) * $au_WR0_R0 + -( ph(1 + $I_L114_8) * $ad_WR0_R1 )
  119.          $ad_WR0_R1 = $ad_WR0_R1 + -$au_WR0_R0
  119.          ad(2 + $I_L114_8) = $ad_WR0_R1
  120.          $I_L114_8 = 1 + $I_L114_8
  114.          if ( $I_L114_8 >= 14 ) exit
  114.       enddo
  121.       return
  121.       end
  121.       
  129.       
  129.       subroutine acritn( len, pl, plb, acr )
  129.       t$4 = len
  131.       t$32 = _zla( 0, len )
  138.       if ( len > 0 ) then
  144.          $SC_aa_I0 = aa(15)
  138.          $I_L138_6 = 0
  138. !dir$ ivdep
  138.          do
  139.             $iwk_S1 = int( ( -9.9999999900000003e-1 + 2.0e-2 * pl(1 + $I_L138_6) ) )
  140.             if ( int( ( -9.9999999900000003e-1 + 2.0e-2 * pl(1 + $I_L138_6) ) ) <= 1 ) then
  147.                acr(1 + $I_L138_6) = actop
  141.             else if ( $iwk_S1 <= 15 ) then
  142.                acr(1 + $I_L138_6) = ac($iwk_S1) + pl(1 + $I_L138_6) * ad($iwk_S1)
  142.             else
  144.                acr(1 + $I_L138_6) = $SC_aa_I0
  144.             endif
  149.             acr(1 + $I_L138_6) = acr(1 + $I_L138_6) * ( plb(1 + $I_L138_6) + -pl(1 + $I_L138_6) )
  150.             $I_L138_6 = 1 + $I_L138_6
  148.             if ( $I_L138_6 >= len ) exit
  148.          enddo
  148.       endif
  151.       return
  151.       end
  151.       
  159.       
  159.       subroutine qsat( tt, p, q, dqdt, ldqdt )
  190.       $t_S2 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) )
  191.       $q_S0 = ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) )
  192.       $d_S1 = 1.0/( p + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) ) )
  193.       q = ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) ) * 1.0/( p + -6.0855080510827297e-1 * $q_S0 )
  195.       if ( ldqdt ) then
  197.          dqdt = ( ( 2.758084175464619e-1 + $t_S2 * ( 1.7766871900621335e-2 + $t_S2 * ( 4.9435463199216435e-4 + $t_S2 * ( 7.5378169874987931e-6 + $t_S2 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S2 ) ) ) ) ) + 6.0855080510827297e-1 * q ) * $d_S1
  197.       endif
  200.       return
  200.       end
  200.       
  208.       
  208.       subroutine rncl( len, pl, rno, clf )
  208.       t$5 = len
  210.       t$33 = _zla( 0, len )
  221.       if ( len > 0 ) then
  221.          $I_L221_4 = 0
  221. !dir$ ivdep
  221.          do
  222.             rno(1 + $I_L221_4) = 1.0
  223.             clf(1 + $I_L221_4) = 5.0e-1
  224.             if ( pl(1 + $I_L221_4) < 500.0 ) then
  221.                goto 10
  224.             else if ( pl(1 + $I_L221_4) <= 800.0 ) then
  225.                rno(1 + $I_L221_4) = 8.0000000000000004e-1 + 6.6666666666666675e-4 * ( 800.0 + -pl(1 + $I_L221_4) )
  225.             else
  225.    10          continue
  226.                if ( pl(1 + $I_L221_4) > 800.0 ) then
  227.                   rno(1 + $I_L221_4) = 8.0000000000000004e-1
  227.                endif
  227.             endif
  229.             $I_L221_4 = 1 + $I_L221_4
  228.             if ( $I_L221_4 >= len ) exit
  228.          enddo
  228.       endif
  230.       return
  230.       end
  230.       
  236.       
  236.       subroutine initmstad2
  262.       $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  263.       $I_L263_68 = 0
  263. !$omp do schedule(static)
  263.       do
  264.          $$_t = 180.0 + real( $I_L263_68, 8 )
  265.          $$_el = 2520000.0 + -3182.4000000000001 * ( ( 180.0 + real( $I_L263_68, 8 ) ) + -tbase )
  266.          $$_tx = ( 180.0 + real( $I_L263_68, 8 ) ) + -tbase
  266.          if ( ( ( 180.0 + real( $I_L263_68, 8 ) ) + -tbase ) >= -50.0 ) then
  266.             $es3_S1 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
  266.          else
  266.             $es3_S1 = 6.3600000000000002e-3 * _expn( ( 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) * 25.600000000000001 ) )
  266.          endif
  268.          $I_L268_64 = 0
  268. !dir$ ivdep
  268.          do
  275.             $$_p = 2.9999999999999999e-1 + 5.0000000000000001e-3 * real( $I_L268_64, 8 )
  272.             $pdkap_S2 = 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $es3_S1 ) )
  273.             $$_pdkap = _expn( $pdkap_S2 )
  274.             thetae(1 + $I_L263_68, 1 + $I_L268_64) = ( $$_t * _expn( ( $$_el * ( 1.0/( 100.0 * $$_p + -$es3_S1 ) * $es3_S1 * 6.2199349945828819e-1 ) * 1.0/$$_t * 9.9542106310969544e-4 ) ) * 1.0/$$_pdkap )
  276.             $I_L268_64 = 1 + $I_L268_64
  268.             if ( $I_L268_64 >= 181 ) exit
  268.          enddo
  277.          $I_L263_68 = 1 + $I_L263_68
  276.          if ( $I_L263_68 >= 151 ) exit
  276.       enddo
  278.       $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  287.       $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  288.       $I_L288_72 = 0
  288. !$omp do schedule(static)
  288.       do
  289.          $$_thee = 170.0 + real( $I_L288_72, 8 )
  290.          tfmthe(1 + $I_L288_72, 1) = 0.0
  291.          qfmthe(1 + $I_L288_72, 1) = 0.0
  293.          $I_L293_70 = 0
  293.          do
  331.             $$_p = 5.0000000000000001e-3 + 5.0000000000000001e-3 * real( $I_L293_70, 8 )
  297.             $$_t = cvmg( cvmg( 300.0, tbase, $$_p >= 5.0000000000000003e-2 ), 100.0, $$_p >= 2.5000000000000001e-2 )
  307.             $I_L307_66 = 0
  307.             do
  311.                $tx_S5 = $$_t + -tbase
  311.                if ( ( $$_t + -tbase ) >= -50.0 ) then
  311.                   $es3_S6 = 6.1070420000000003e-1 + $tx_S5 * ( 4.4411569999999997e-2 + $tx_S5 * ( 1.4320979999999999e-3 + $tx_S5 * ( 2.6513960000000001e-5 + $tx_S5 * ( 3.0099980000000002e-7 + $tx_S5 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S5 ) ) ) ) )
  311.                else
  311.                   $es3_S6 = 6.3600000000000002e-3 * _expn( ( 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S5 ) * 25.600000000000001 ) )
  311.                endif
  317.                $$_pdkap = _expn( 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $es3_S6 ) ) )
  318.                $$_fun = ( $$_t * _expn( ( ( 1.0/( 100.0 * $$_p + -$es3_S6 ) * $es3_S6 * 6.2199349945828819e-1 ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * 1.0/$$_t * 9.9542106310969544e-4 ) ) * 1.0/$$_pdkap )
  321.                $$_chg = ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( 1.0/$$_t * ( 1.0/( 100.0 * $$_p + -$es3_S6 ) * $es3_S6 * 6.2199349945828819e-1 ) * 9.9542106310969544e-4 ) * ( -3182.4000000000001 * $$_t + ( $$_p * 1.0/( $$_p + -1.0e-2 * $es3_S6 ) ) * ( ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * 1.0/$$_t * 2.1668472372697724e-3 ) ) ) ) )
  322.                $$_t = $$_t + ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( 1.0/$$_t * ( 1.0/( 100.0 * $$_p + -$es3_S6 ) * $es3_S6 * 6.2199349945828819e-1 ) * 9.9542106310969544e-4 ) * ( -3182.4000000000001 * $$_t + ( $$_p * 1.0/( $$_p + -1.0e-2 * $es3_S6 ) ) * ( ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * 1.0/$$_t * 2.1668472372697724e-3 ) ) ) ) )
  323.                if ( abs( $$_chg ) < 1.1920928955078125e-7 ) exit
  324.                $I_L307_66 = 1 + $I_L307_66
  324.                if ( $I_L307_66 >= 100 ) exit
  324.             enddo
  325.             tfmthe(1 + $I_L288_72, 2 + $I_L293_70) = $$_t
  329.             $$_tx = $$_t + -tbase
  329.             if ( ( $$_t + -tbase ) >= -50.0 ) then
  329.                $es3_S9 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
  329.             else
  329.                $es3_S9 = 6.3600000000000002e-3 * _expn( ( 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) * 25.600000000000001 ) )
  329.             endif
  330.             qfmthe(1 + $I_L288_72, 2 + $I_L293_70) = ( 1.0/( 100.0 * $$_p + -3.7800650054171181e-1 * $es3_S9 ) * $es3_S9 * 6.2199349945828819e-1 )
  332.             $I_L293_70 = 1 + $I_L293_70
  329.             if ( $I_L293_70 >= 240 ) exit
  329.          enddo
  333.          $I_L288_72 = 1 + $I_L288_72
  332.          if ( $I_L288_72 >= 431 ) exit
  332.       enddo
  334.       $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
  335.       return
  335.       end
  335.       
  354.       
  354.       subroutine mstad2( h, press, tin, tmst, qmst, ktop, ier, slcl, ll, qin, tlcl, llift, ncols, kmax )
  354.       t$7 = ncols
  400.       t$34 = _zla( 0, ncols )
  354.       t$6 = kmax
  395.       t$35 = _zla( 0, kmax )
  354.       t$36 = _zla( 0, ncols )
  354.       t$37 = _zla( 0, ncols ) * _zla( 0, kmax )
  423.       t$40 = 4 * _zla( 0, ncols )
  412.       t$42 = 8 * _zla( 0, ncols )
  415.       t$44 = 12 * _zla( 0, ncols )
  421.       t$46 = 16 * _zla( 0, ncols )
  427.       t$48 = 20 * _zla( 0, ncols )
  425.       t$50 = 24 * _zla( 0, ncols )
  424.       t$52 = 28 * _zla( 0, ncols )
  422.       t$53 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  422.       t$55 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  414.       t$56 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  414.       t$58 = 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  410.       t$59 = 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  410.       t$61 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  419.       t$62 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  419.       t$64 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 32 * _zla( 0, ncols )
  411.       t$65 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 32 * _zla( 0, ncols )
  411.       t$67 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 40 * _zla( 0, ncols )
  420.       t$68 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 40 * _zla( 0, ncols )
  420.       t$70 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 48 * _zla( 0, ncols )
  426.       t$71 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 48 * _zla( 0, ncols )
  426.       t$73 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 56 * _zla( 0, ncols )
  413.       t$74 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 56 * _zla( 0, ncols )
  413.       t$76 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
  418.       t$77 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
  418.       t$79 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 72 * _zla( 0, ncols )
  416.       t$80 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 72 * _zla( 0, ncols )
  416.       t$82 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 80 * _zla( 0, ncols )
  417.       t$83 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 80 * _zla( 0, ncols )
  417.       t$85 = 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols )
  354.       t$38 = int( _alloc( 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) ), 8 )
  423.       t$39 = t$38
  412.       t$41 = t$38 + 4 * _zla( 0, ncols )
  415.       t$43 = t$38 + 8 * _zla( 0, ncols )
  421.       t$45 = t$38 + 12 * _zla( 0, ncols )
  427.       t$47 = t$38 + 16 * _zla( 0, ncols )
  425.       t$49 = t$38 + 20 * _zla( 0, ncols )
  424.       t$51 = t$38 + 24 * _zla( 0, ncols )
  422.       t$54 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  414.       t$57 = t$38 + 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  410.       t$60 = t$38 + 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  419.       t$63 = t$38 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 )
  411.       t$66 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 32 * _zla( 0, ncols )
  420.       t$69 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 40 * _zla( 0, ncols )
  426.       t$72 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 48 * _zla( 0, ncols )
  413.       t$75 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 56 * _zla( 0, ncols )
  418.       t$78 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
  416.       t$81 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 72 * _zla( 0, ncols )
  417.       t$84 = t$38 + 8 * ( ( 7 + 28 * _zla( 0, ncols ) ) / 8 ) + 80 * _zla( 0, ncols )
  437.       if ( ncols > 0 ) then
  437.          $I_L437_58 = 0
  437. !dir$ ivdep
  437.          do
  438.             ier(1 + $I_L437_58) = 0
  439.             if ( llift(1 + $I_L437_58) ) then
  440.                pp(1 + $I_L437_58) = h(1 + $I_L437_58) * slcl(1 + $I_L437_58)
  441.                $ti_WR0_R0 = -179.0 + tlcl(1 + $I_L437_58)
  441.                ti(1 + $I_L437_58) = $ti_WR0_R0
  442.                $jt_WR0_R1 = int( $ti_WR0_R0 )
  442.                jt(1 + $I_L437_58) = int( $ti_WR0_R0 )
  443.                if ( int( $ti_WR0_R0 ) <= 0 ) then
  440.                   goto 10
  443.                else if ( $jt_WR0_R1 > 150 ) then
  443.    10             continue
  444.                   ier(1 + $I_L437_58) = 1
  444.                endif
  444.             endif
  447.             $I_L437_58 = 1 + $I_L437_58
  446.             if ( $I_L437_58 >= ncols ) exit
  446.          enddo
  449.          $I_L449_60 = 0
  449. !dir$ ivdep
  449.          do
  450.             if ( llift(1 + $I_L449_60) ) then
  450.                if ( ier(1 + $I_L449_60) == 0 ) then
  451.                   x(1 + $I_L449_60) = ti(1 + $I_L449_60) + ( -jt(1 + $I_L449_60) )
  452.                   $pk_WR0_R2 = -59.0 + 200.0 * pp(1 + $I_L449_60)
  452.                   pk(1 + $I_L449_60) = $pk_WR0_R2
  453.                   $kp_WR0_R3 = int( $pk_WR0_R2 )
  453.                   kp(1 + $I_L449_60) = int( $pk_WR0_R2 )
  457.                   if ( int( $pk_WR0_R2 ) <= 0 ) then
  451.                      goto 20
  457.                   else if ( $kp_WR0_R3 > 180 ) then
  457.    20                continue
  458.                      ier(1 + $I_L449_60) = 1
  458.                   endif
  458.                endif
  458.             endif
  461.             $I_L449_60 = 1 + $I_L449_60
  460.             if ( $I_L449_60 >= ncols ) exit
  460.          enddo
  463.          $I_L463_62 = 0
  463. !dir$ ivdep
  463.          do
  464.             if ( llift(1 + $I_L463_62) ) then
  464.                if ( ier(1 + $I_L463_62) == 0 ) then
  465.                   $y_WR0_R4 = pk(1 + $I_L463_62) + ( -kp(1 + $I_L463_62) )
  466.                   $yy_WR0_R5 = 1.0 + -$y_WR0_R4
  467.                   $xx_WR0_R6 = 1.0 + -x(1 + $I_L463_62)
  468.                   $the_WR0_R7 = $xx_WR0_R6 * ( $yy_WR0_R5 * thetae(jt(1 + $I_L463_62), kp(1 + $I_L463_62)) + $y_WR0_R4 * thetae(jt(1 + $I_L463_62), 1 + kp(1 + $I_L463_62)) ) + x(1 + $I_L463_62) * ( $yy_WR0_R5 * thetae(1 + jt(1 + $I_L463_62), kp(1 + $I_L463_62)) + $y_WR0_R4 * thetae(1 + jt(1 + $I_L463_62), 1 + kp(1 + $I_L463_62)) )
  477.                   $kt_WR0_R9 = int( ( -169.0 + $the_WR0_R7 ) )
  477.                   kt(1 + $I_L463_62) = int( ( -169.0 + $the_WR0_R7 ) )
  478.                   y(1 + $I_L463_62) = ( ( -169.0 + $the_WR0_R7 ) + ( -( int( ( -169.0 + $the_WR0_R7 ) ) ) ) )
  479.                   yy(1 + $I_L463_62) = ( 1.0 + -( ( -169.0 + $the_WR0_R7 ) + ( -( int( ( -169.0 + $the_WR0_R7 ) ) ) ) ) )
  483.                   if ( int( ( -169.0 + $the_WR0_R7 ) ) <= 0 ) then
  465.                      goto 30
  483.                   else if ( $kt_WR0_R9 > 430 ) then
  483.    30                continue
  484.                      ier(1 + $I_L463_62) = 1
  484.                   endif
  484.                endif
  484.             endif
  488.             $I_L463_62 = 1 + $I_L463_62
  487.             if ( $I_L463_62 >= ncols ) exit
  487.          enddo
  492.          $I_L492_64 = 0
  492. !dir$ ivdep
  492.          do
  493.             if ( llift(1 + $I_L492_64) ) then
  493.                if ( ier(1 + $I_L492_64) == 0 ) then
  494.                   tmst(1 + $I_L492_64, 1) = tlcl(1 + $I_L492_64)
  495.                   $pi_WR0_R10 = 1.0 + 200.0 * pp(1 + $I_L492_64)
  495.                   pi(1 + $I_L492_64) = $pi_WR0_R10
  496.                   $ip_WR0_R11 = int( $pi_WR0_R10 )
  496.                   ip(1 + $I_L492_64) = int( $pi_WR0_R10 )
  497.                   $x_WR0_R12 = $pi_WR0_R10 + ( -( int( $pi_WR0_R10 ) ) )
  497.                   x(1 + $I_L492_64) = ( $pi_WR0_R10 + ( -( int( $pi_WR0_R10 ) ) ) )
  498.                   qmst(1 + $I_L492_64, 1) = ( 1.0 + -$x_WR0_R12 ) * ( yy(1 + $I_L492_64) * qfmthe(kt(1 + $I_L492_64), $ip_WR0_R11) + y(1 + $I_L492_64) * qfmthe(1 + kt(1 + $I_L492_64), $ip_WR0_R11) ) + $x_WR0_R12 * ( yy(1 + $I_L492_64) * qfmthe(kt(1 + $I_L492_64), 1 + $ip_WR0_R11) + y(1 + $I_L492_64) * qfmthe(1 + kt(1 + $I_L492_64), 1 + $ip_WR0_R11) )
  498.                endif
  498.             endif
  503.             $I_L492_64 = 1 + $I_L492_64
  502.             if ( $I_L492_64 >= ncols ) exit
  502.          enddo
  515.          $I_L515_68 = 0
  515. !dir$ ivdep
  515.          do
  516.             if ( llift(1 + $I_L515_68) ) then
  516.                if ( ier(1 + $I_L515_68) == 0 ) then
  517.                   $ktop_WR0_R13 = -1 + ll(1 + $I_L515_68)
  517.                   ktop(1 + $I_L515_68) = $ktop_WR0_R13
  518.                   if ( $ktop_WR0_R13 <= 0 ) then
  518.                      ktop(1 + $I_L515_68) = 1
  518.                   endif
  519.                   lstb(1 + $I_L515_68) = 0
  520.                   lcld(1 + $I_L515_68) = 0
  520.                endif
  520.             endif
  522.             $I_L515_68 = 1 + $I_L515_68
  521.             if ( $I_L515_68 >= ncols ) exit
  521.          enddo
  521.       endif
  505.       if ( -2 + kmax >= 0 ) then
  506.          if ( ncols > 0 ) then
  505.             $I_L505_74 = 0
  505. !dir$ blocking_size( 0, 0 )
  505.             do
  506.                $I_L506_66 = 0
  506. !dir$ ivdep
  506. !dir$ blocking_size( 0, 0 )
  506.                do
  507.                   tmst(1 + $I_L506_66, 2 + $I_L505_74) = tmst(1 + $I_L506_66, 1)
  508.                   qmst(1 + $I_L506_66, 2 + $I_L505_74) = qmst(1 + $I_L506_66, 1)
  509.                   $I_L506_66 = 1 + $I_L506_66
  506.                   if ( $I_L506_66 >= ncols ) exit
  506.                enddo
  510.                $I_L505_74 = 1 + $I_L505_74
  509.                if ( $I_L505_74 >= -1 + kmax ) exit
  509.             enddo
  509.          endif
  509.       endif
  524.       if ( kmax > 0 ) then
  525.          if ( ncols > 0 ) then
  524.             $SI_L524_70_G1 = 0
  524.             do
  525.                $I_L525_76 = 0
  525. !dir$ ivdep
  525. !dir$ blocking_size( 0, 0 )
  525.                do
  524.                   $SCA_llift_I0 = llift(1 + $I_L525_76)
  524.                   $I_L524_78 = 0
  524. !dir$ blocking_size( 256, 256 )
  524.                   do
  526.                      if ( $SCA_llift_I0 ) then
  526.                         if ( ier(1 + $I_L525_76) == 0 ) then
  526.                            if ( lcld(1 + $I_L525_76) == 0 ) then
  526.                               if ( ( $I_L524_78 + 256 * $SI_L524_70_G1 + 1 ) >= ll(1 + $I_L525_76) ) then
  528.                                  pp(1 + $I_L525_76) = h(1 + $I_L525_76) * press($I_L524_78 + 256 * $SI_L524_70_G1 + 1)
  529.                                  pi(1 + $I_L525_76) = 1.0 + 200.0 * pp(1 + $I_L525_76)
  530.                                  ip(1 + $I_L525_76) = int( pi(1 + $I_L525_76) )
  531.                                  x(1 + $I_L525_76) = pi(1 + $I_L525_76) + ( -ip(1 + $I_L525_76) )
  532.                                  $tmst_WR0_R14 = ( 1.0 + -x(1 + $I_L525_76) ) * ( yy(1 + $I_L525_76) * tfmthe(kt(1 + $I_L525_76), ip(1 + $I_L525_76)) + y(1 + $I_L525_76) * tfmthe(1 + kt(1 + $I_L525_76), ip(1 + $I_L525_76)) ) + x(1 + $I_L525_76) * ( yy(1 + $I_L525_76) * tfmthe(kt(1 + $I_L525_76), 1 + ip(1 + $I_L525_76)) + y(1 + $I_L525_76) * tfmthe(1 + kt(1 + $I_L525_76), 1 + ip(1 + $I_L525_76)) )
  532.                                  tmst(1 + $I_L525_76, $I_L524_78 + 256 * $SI_L524_70_G1 + 1) = $tmst_WR0_R14
  536.                                  $qmst_WR0_R15 = ( 1.0 + -x(1 + $I_L525_76) ) * ( yy(1 + $I_L525_76) * qfmthe(kt(1 + $I_L525_76), ip(1 + $I_L525_76)) + y(1 + $I_L525_76) * qfmthe(1 + kt(1 + $I_L525_76), ip(1 + $I_L525_76)) ) + x(1 + $I_L525_76) * ( yy(1 + $I_L525_76) * qfmthe(kt(1 + $I_L525_76), 1 + ip(1 + $I_L525_76)) + y(1 + $I_L525_76) * qfmthe(1 + kt(1 + $I_L525_76), 1 + ip(1 + $I_L525_76)) )
  536.                                  qmst(1 + $I_L525_76, $I_L524_78 + 256 * $SI_L524_70_G1 + 1) = $qmst_WR0_R15
  543.                                  tvdiff(1 + $I_L525_76) = $tmst_WR0_R14 + -tin(1 + $I_L525_76, $I_L524_78 + 256 * $SI_L524_70_G1 + 1) + ( $qmst_WR0_R15 + -qin(1 + $I_L525_76, $I_L524_78 + 256 * $SI_L524_70_G1 + 1) ) * tin(1 + $I_L525_76, $I_L524_78 + 256 * $SI_L524_70_G1 + 1) * 6.0999999999999999e-1
  545.                                  if ( tvdiff(1 + $I_L525_76) > 0.0 ) then
  557.                                     $LD_SPLT_P1 = ktop(1 + $I_L525_76)
  557.                                     ktop(1 + $I_L525_76) = 1 + $LD_SPLT_P1
  546.                                  else if ( lstb(1 + $I_L525_76) == 0 ) then
  547.                                     lstb(1 + $I_L525_76) = 1
  548.                                     ktop1(1 + $I_L525_76) = ktop(1 + $I_L525_76)
  549.                                     ktop(1 + $I_L525_76) = 1 + ktop(1 + $I_L525_76)
  549.                                  else
  551.                                     lcld(1 + $I_L525_76) = 1
  552.                                     if ( ktop(1 + $I_L525_76) + -ktop1(1 + $I_L525_76) + -1 <= 0 ) then
  553.                                        ktop(1 + $I_L525_76) = ktop1(1 + $I_L525_76)
  553.                                     endif
  553.                                  endif
  553.                               endif
  553.                            endif
  553.                         endif
  553.                      endif
  524.                      $I_L524_78 = 1 + $I_L524_78
  560.                      if ( $I_L524_78 >= min( kmax, 256 + 256 * $SI_L524_70_G1 ) + -256 * $SI_L524_70_G1 ) exit
  560.                   enddo
  561.                   $I_L525_76 = 1 + $I_L525_76
  561.                   if ( $I_L525_76 >= ncols ) exit
  561.                enddo
  524.                $SI_L524_70_G1 = 1 + $SI_L524_70_G1
  561.                if ( $SI_L524_70_G1 >= _rsh( 255 + kmax, 8 ) ) exit
  561.             enddo
  561.          endif
  561.       endif
  564.       $Reduc_A34 = .false.
  564.       $F_A36 = ncols
  564.       if ( ncols > 0 ) then
  564.          $I_L564_72 = 0
  564. !dir$ ivdep
  564.          do
  564.             if ( ier(1 + $I_L564_72) /= 0 ) then
  564.                $Reduc_A34 = .true.
  564.                goto 40
  564.             endif
  564.             $I_L564_72 = 1 + $I_L564_72
  564.             if ( $I_L564_72 >= $F_A36 ) exit
  564.          enddo
  564.       endif
  564.    40 continue
  564.       if ( $Reduc_A34 ) then
  565.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$9,  _substr(t$8,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(mstad2)**', 0x800600000000L ) ) )
  566.           _substr(t$417,1,21) = '** ERROR AT MSTAD2 **'
  566.          call _stop(  _substr(t$417,1,21) )
  566.       else
  354.          _free( t$38 )
  354.       endif
  568.       return
  568.       end
  568.       
  576.       
  576.       subroutine qstar9( t, p, n, qstt, layr, kmax )
  576.       t$10 = n
  594.       t$86 = _zla( 0, n )
  599.       t$89 = 8 * _zla( 0, n )
  600.       t$90 = 8 * _zla( 0, n )
  600.       t$92 = 16 * _zla( 0, n )
  602.       t$94 = 20 * _zla( 0, n )
  603.       t$96 = 24 * _zla( 0, n )
  576.       t$12 = kmax
  647.       t$97 = _zla( 0, kmax )
  647.       t$98 = 24 * _zla( 0, n )
  647.       t$100 = 8 * _zla( 0, kmax ) + 24 * _zla( 0, n )
  601.       t$101 = 8 * _zla( 0, kmax ) + 24 * _zla( 0, n )
  601.       t$103 = 8 * _zla( 0, kmax ) + 32 * _zla( 0, n )
  576.       t$87 = int( _alloc( 8 * _zla( 0, kmax ) + 32 * _zla( 0, n ) ), 8 )
  599.       t$88 = t$87
  600.       t$91 = t$87 + 8 * _zla( 0, n )
  602.       t$93 = t$87 + 16 * _zla( 0, n )
  603.       t$95 = t$87 + 20 * _zla( 0, n )
  647.       t$99 = t$87 + 24 * _zla( 0, n )
  601.       t$102 = t$87 + 8 * _zla( 0, kmax ) + 24 * _zla( 0, n )
  652.       $F_A33 = kmax
  652.       if ( kmax > 0 ) then
  652.          $I_L652_22 = 0
  652. !dir$ ivdep
  652.          do
  652.             qfac(1 + $I_L652_22) = 1.0
  652.             $I_L652_22 = 1 + $I_L652_22
  652.             if ( $I_L652_22 >= $F_A33 ) exit
  652.          enddo
  652.       endif
  654.       if ( n > 0 ) then
  654.          $I_L654_18 = 0
  654. !dir$ ivdep
  654.          do
  655.             $tq_WR0_R0 = -198.99999 + t(1 + $I_L654_18)
  655.             tq(1 + $I_L654_18) = $tq_WR0_R0
  656.             if ( t(1 + $I_L654_18) < 200.0 ) then
  656.                $tq_WR0_R0 = 1.0000100000000001
  656.                tq(1 + $I_L654_18) = 1.0000100000000001
  656.             endif
  657.             if ( t(1 + $I_L654_18) > 337.89999999999998 ) then
  657.                $tq_WR0_R0 = 138.90001000000001
  657.                tq(1 + $I_L654_18) = 138.90001000000001
  657.             endif
  658.             i1(1 + $I_L654_18) = int( $tq_WR0_R0 )
  659.             i2(1 + $I_L654_18) = 1 + int( $tq_WR0_R0 )
  660.             $I_L654_18 = 1 + $I_L654_18
  657.             if ( $I_L654_18 >= n ) exit
  657.          enddo
  674.          $SC_qfac_I0 = qfac(layr)
  662.          $I_L662_20 = 0
  662. !dir$ ivdep
  662.          do
  663.             $e1_WR0_R2 = est(i1(1 + $I_L662_20))
  664.             $e2_WR0_R3 = est(i2(1 + $I_L662_20))
  668.             $qstt_WR0_R4 = tq(1 + $I_L662_20) + ( -i1(1 + $I_L662_20) )
  670.             $qstt_WR0_R4 = $qstt_WR0_R4 * ( $e2_WR0_R3 + -$e1_WR0_R2 ) + $e1_WR0_R2
  671.             $e1_WR0_R2 = 6.1652281134401965e-1 * p(1 + $I_L662_20)
  674.             $qstt_WR0_R4 = ( 1.0/p(1 + $I_L662_20) * min( $e1_WR0_R2, $qstt_WR0_R4 ) * 6.22e-1 ) * $SC_qfac_I0
  674.             qstt(1 + $I_L662_20) = $qstt_WR0_R4
  665.             $I_L662_20 = 1 + $I_L662_20
  662.             if ( $I_L662_20 >= n ) exit
  662.          enddo
  662.       endif
  576.       _free( t$87 )
  677.       return
  677.       end
  677.       
  685.       
  685.       subroutine rnevp( ft, fq, pain, fp, sig, dsig, clfric, rcon, rlar, dtc3, ncols, kmax, nlst )
  685.       t$13 = ncols
  685.       t$14 = kmax
  699.       t$104 = _zla( 0, ncols )
  685.       t$105 = _zla( 0, ncols )
  699.       t$106 = _zla( 0, kmax )
  685.       t$107 = _zla( 0, ncols ) * _zla( 0, kmax )
  726.       t$110 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  733.       t$111 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  733.       t$113 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  727.       t$114 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  727.       t$116 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  730.       t$117 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  730.       t$119 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  729.       t$120 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  729.       t$122 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  731.       t$123 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  731.       t$125 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  725.       t$126 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  725.       t$128 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  732.       t$129 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  732.       t$131 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  723.       t$132 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  723.       t$134 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  724.       t$135 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  724.       t$137 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  717.       t$138 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  717.       t$140 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  721.       t$141 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  721.       t$143 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  728.       t$144 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  728.       t$146 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96
  722.       t$147 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96
  722.       t$149 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104
  685.       t$108 = int( _alloc( 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 ), 8 )
  726.       t$109 = t$108
  733.       t$112 = t$108 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  727.       t$115 = t$108 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  730.       t$118 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  729.       t$121 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  731.       t$124 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  725.       t$127 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  732.       t$130 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  723.       t$133 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  724.       t$136 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  717.       t$139 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  721.       t$142 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  728.       t$145 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  722.       t$148 = t$108 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96
  800.       if ( kmax > 0 ) then
  801.          if ( ncols > 0 ) then
  800.             $I_L800_120 = 0
  800. !dir$ blocking_size( 0, 0 )
  800.             do
  801.                $SCA_sig_I1 = sig(kmax + -$I_L800_120)
  801.                $SCA_dsig_I2 = dsig(kmax + -$I_L800_120)
  801.                $I_L801_100 = 0
  801. !dir$ ivdep
  801. !dir$ blocking_size( 0, 0 )
  801.                do
  802.                   tl(1 + $I_L801_100, 1 + $I_L800_120) = ft(1 + $I_L801_100, kmax + -$I_L800_120)
  803.                   ql(1 + $I_L801_100, 1 + $I_L800_120) = fq(1 + $I_L801_100, kmax + -$I_L800_120)
  804.                   $pl_WR0_R0 = $SCA_sig_I1 * fp(1 + $I_L801_100) * 10.0
  804.                   pl(1 + $I_L801_100, 1 + $I_L800_120) = $pl_WR0_R0
  806.                   amass(1 + $I_L801_100, 1 + $I_L800_120) = ( 9.810000000000001e-3 * 1.0/( $SCA_dsig_I2 * fp(1 + $I_L801_100) ) )
  808.                   temp2(1 + $I_L801_100, 1 + $I_L800_120) = _sqrt( 1.0e-3 * $pl_WR0_R0 )
  813.                   rain(1 + $I_L801_100, 1 + $I_L800_120) = pain(1 + $I_L801_100, 1 + $I_L800_120)
  809.                   $I_L801_100 = 1 + $I_L801_100
  801.                   if ( $I_L801_100 >= ncols ) exit
  801.                enddo
  810.                $I_L800_120 = 1 + $I_L800_120
  809.                if ( $I_L800_120 >= kmax ) exit
  809.             enddo
  809.          endif
  809.       endif
  816.       $rphf_S15 = ( 3600.0 * 1.0/dtc3 )
  818.       if ( ncols > 0 ) then
  818.          $I_L818_102 = 0
  818. !dir$ ivdep
  818.          do
  819.             rcon(1 + $I_L818_102) = 0.0
  820.             rlar(1 + $I_L818_102) = 0.0
  821.             $I_L818_102 = 1 + $I_L818_102
  818.             if ( $I_L818_102 >= ncols ) exit
  818.          enddo
  818.       endif
  822.       if ( ncols * kmax > 0 ) then
  822.          $I_L822_104 = 0
  822. !dir$ ivdep
  822.          do
  824.             tempc(1 + $I_L822_104, 1) = 0.0
  825.             cvt(1 + $I_L822_104, 1) = 0.0
  826.             cvq(1 + $I_L822_104, 1) = 0.0
  827.             $I_L822_104 = 1 + $I_L822_104
  822.             if ( $I_L822_104 >= ( ncols * kmax ) ) exit
  822.          enddo
  822.       endif
  831.       if ( -2 + kmax >= 0 ) then
  831.          $I_L831_126 = 0
  831.          do
  832.             if ( ncols > 0 ) then
  832.                $I_L832_106 = 0
  832. !dir$ ivdep
  832.                do
  833.                   tempc(1 + $I_L832_106, 3) = tl(1 + $I_L832_106, 2 + $I_L831_126)
  834.                   tempc(1 + $I_L832_106, 4) = ql(1 + $I_L832_106, 2 + $I_L831_126)
  835.                   $I_L832_106 = 1 + $I_L832_106
  832.                   if ( $I_L832_106 >= ncols ) exit
  832.                enddo
  832.             endif
  836.             $I_L836_122 = 0
  836.             do
  837.                ipa$13 = loc( tempc(1, 3) )
  837.                t = _copyin( tempc(1, 3) )
  837.                ipa$15 = loc( pl(1, 2 + $I_L831_126) )
  837.                p = _copyin( pl(1, 2 + $I_L831_126) )
  837.                ipa$17 = loc( tempc(1, 2) )
  837.                qstt = _copyin( tempc(1, 2) )
  837.                t$10 = ncols
  837.                t$86 = max( 0, ncols )
  837.                t$89 = 8 * ncols
  837.                t$90 = 8 * ( ( 7 + 8 * ncols ) / 8 )
  837.                t$92 = 8 * ncols + 8 * ( ( 7 + 8 * ncols ) / 8 )
  837.                t$94 = 8 * ( ( 7 + 8 * ncols ) / 8 ) + 12 * ncols
  837.                t$96 = 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols
  837.                t$12 = kmax
  837.                t$97 = max( 0, kmax )
  837.                t$98 = 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 )
  837.                t$100 = 8 * kmax + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 )
  837.                t$101 = 8 * ( ( 8 * kmax + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 ) + 7 ) / 8 )
  837.                t$103 = 8 * ncols + 8 * ( ( 8 * kmax + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 ) + 7 ) / 8 )
  837.                t$87 = int( _alloc( 8 * ncols + 8 * ( ( 8 * kmax + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
  837.                t$88 = t$87
  837.                t$91 = t$87 + 8 * ( ( 7 + 8 * ncols ) / 8 )
  837.                t$93 = t$87 + 8 * ncols + 8 * ( ( 7 + 8 * ncols ) / 8 )
  837.                t$95 = t$87 + 8 * ( ( 7 + 8 * ncols ) / 8 ) + 12 * ncols
  837.                t$99 = t$87 + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 )
  837.                t$102 = t$87 + 8 * ( ( 8 * kmax + 8 * ( ( 8 * ( ( 7 + 8 * ncols ) / 8 ) + 16 * ncols + 7 ) / 8 ) + 7 ) / 8 )
  837.                $F_A33 = kmax
  837.                $I_L837_118 = 0
  837. !dir$ ivdep
  837.                do
  837.                   qfac(1 + $I_L837_118) = 1.0
  837.                   $I_L837_118 = 1 + $I_L837_118
  837.                   if ( $I_L837_118 >= $F_A33 ) exit
  837.                enddo
  837.                if ( ncols > 0 ) then
  837.                   $I_L837_108 = 0
  837. !dir$ ivdep
  837.                   do
  837.                      $tq_WR0_R2 = -198.99999 + t(1 + $I_L837_108)
  837.                      tq(1 + $I_L837_108) = $tq_WR0_R2
  837.                      if ( t(1 + $I_L837_108) < 200.0 ) then
  837.                         $tq_WR0_R2 = 1.0000100000000001
  837.                         tq(1 + $I_L837_108) = 1.0000100000000001
  837.                      endif
  837.                      if ( t(1 + $I_L837_108) > 337.89999999999998 ) then
  837.                         $tq_WR0_R2 = 138.90001000000001
  837.                         tq(1 + $I_L837_108) = 138.90001000000001
  837.                      endif
  837.                      i1(1 + $I_L837_108) = int( $tq_WR0_R2 )
  837.                      i2(1 + $I_L837_108) = 1 + int( $tq_WR0_R2 )
  837.                      $I_L837_108 = 1 + $I_L837_108
  837.                      if ( $I_L837_108 >= ncols ) exit
  837.                   enddo
  837.                   $SC_qfac_I0 = qfac(2 + $I_L831_126)
  837.                   $I_L837_110 = 0
  837. !dir$ ivdep
  837.                   do
  837.                      $e1_WR0_R4 = est(i1(1 + $I_L837_110))
  837.                      $e2_WR0_R5 = est(i2(1 + $I_L837_110))
  837.                      $qstt_WR0_R6 = tq(1 + $I_L837_110) + ( -i1(1 + $I_L837_110) )
  837.                      $qstt_WR0_R6 = $qstt_WR0_R6 * ( $e2_WR0_R5 + -$e1_WR0_R4 ) + $e1_WR0_R4
  837.                      $e1_WR0_R4 = 6.1652281134401965e-1 * p(1 + $I_L837_110)
  837.                      $qstt_WR0_R6 = ( 1.0/p(1 + $I_L837_110) * min( $e1_WR0_R4, $qstt_WR0_R6 ) * 6.22e-1 ) * $SC_qfac_I0
  837.                      qstt(1 + $I_L837_110) = $qstt_WR0_R6
  837.                      $I_L837_110 = 1 + $I_L837_110
  837.                      if ( $I_L837_110 >= ncols ) exit
  837.                   enddo
  837.                endif
  837.                _free( t$87 )
  837.                tempc(1, 2) = _copyout( qstt )
  837.                pl(1, 2 + $I_L831_126) = _copyout( p )
  837.                tempc(1, 3) = _copyout( t )
  843.                if ( ncols > 0 ) then
  843.                   $I_L843_112 = 0
  843. !dir$ ivdep
  843.                   do
  844.                      $tempc_WR0_R7 = tempc(1 + $I_L843_112, 2) + -tempc(1 + $I_L843_112, 4)
  845.                      $tempc_WR0_R8 = ( 1.0/( tempc(1 + $I_L843_112, 3) * tempc(1 + $I_L843_112, 3) ) * tempc(1 + $I_L843_112, 2) * 13480000.0 )
  845.                      tempc(1 + $I_L843_112, 6) = $tempc_WR0_R8
  846.                      $tempc_WR0_R7 = ( $tempc_WR0_R7 * 1.0/( 1.0 + $tempc_WR0_R8 ) )
  846.                      tempc(1 + $I_L843_112, 5) = $tempc_WR0_R7
  847.                      tempc(1 + $I_L843_112, 4) = tempc(1 + $I_L843_112, 4) + $tempc_WR0_R7 * cvmg( 1.0, 5.0e-1, $I_L836_122 /= 0 )
  848.                      tempc(1 + $I_L843_112, 3) = tempc(1 + $I_L843_112, 3) + cvmg( 1.0, 5.0e-1, $I_L836_122 /= 0 ) * $tempc_WR0_R7 * -2552.3429710867399
  849.                      $I_L843_112 = 1 + $I_L843_112
  843.                      if ( $I_L843_112 >= ncols ) exit
  843.                   enddo
  843.                endif
  850.                $I_L836_122 = 1 + $I_L836_122
  849.                if ( $I_L836_122 >= 3 ) exit
  849.             enddo
  851.             if ( ncols > 0 ) then
  851.                $I_L851_114 = 0
  851. !dir$ ivdep
  851.                do
  853.                   $evp9_WR0_R9 = ( ( tempc(1 + $I_L851_114, 4) + -ql(1 + $I_L851_114, 2 + $I_L831_126) ) * 1.0/amass(1 + $I_L851_114, 2 + $I_L831_126) )
  854.                   $rcon_WR0_R10 = rcon(1 + $I_L851_114) + rain(1 + $I_L851_114, 2 + $I_L831_126)
  854.                   rcon(1 + $I_L851_114) = $rcon_WR0_R10
  855.                   $clfrac_WR0_R11 = ( 1.0 + -( ql(1 + $I_L851_114, 2 + $I_L831_126) * 1.0/tempc(1 + $I_L851_114, 4) ) ) * clfric
  856.                   $tempc_WR0_R12 = max( $clfrac_WR0_R11, tempc(1 + $I_L851_114, 8) )
  856.                   tempc(1 + $I_L851_114, 8) = $tempc_WR0_R12
  858.                   if ( $rcon_WR0_R10 <= 0.0 ) then
  851.                      goto 10
  858.                   else if ( $evp9_WR0_R9 > 0.0 ) then
  861.                      $rpow_S16 = _expn( 5.7799999999999996e-1 * log( $rcon_WR0_R10 * $rphf_S15 * temp2(1 + $I_L851_114, 2 + $I_L831_126) ) )
  863.                      $art_WR0_R13 = 1.0 + -_expn( ( $rpow_S16 * dtc3 * -1.0399999999999999e-4 ) )
  865.                      $tempc_WR0_R14 = min( $rcon_WR0_R10, ( $evp9_WR0_R9 * $art_WR0_R13 * ( min( 1.0, $tempc_WR0_R12 ) ) ) )
  865.                      tempc(1 + $I_L851_114, 7) = ( min( $rcon_WR0_R10, ( $evp9_WR0_R9 * $art_WR0_R13 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  866.                      $rcon_WR0_R10 = $rcon_WR0_R10 + -( min( $rcon_WR0_R10, ( $evp9_WR0_R9 * $art_WR0_R13 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  866.                      rcon(1 + $I_L851_114) = $rcon_WR0_R10
  868.                      $cvq_WR0_R15 = cvq(1 + $I_L851_114, 2 + $I_L831_126) + $tempc_WR0_R14 * amass(1 + $I_L851_114, 2 + $I_L831_126)
  868.                      cvq(1 + $I_L851_114, 2 + $I_L831_126) = $cvq_WR0_R15
  869.                      $cvt_WR0_R16 = cvt(1 + $I_L851_114, 2 + $I_L831_126) + $tempc_WR0_R14 * amass(1 + $I_L851_114, 2 + $I_L831_126) * -2552.3429710867399
  869.                      cvt(1 + $I_L851_114, 2 + $I_L831_126) = $cvt_WR0_R16
  873.                      tl(1 + $I_L851_114, 2 + $I_L831_126) = tl(1 + $I_L851_114, 2 + $I_L831_126) + $cvt_WR0_R16
  874.                      ql(1 + $I_L851_114, 2 + $I_L831_126) = ql(1 + $I_L851_114, 2 + $I_L831_126) + $cvq_WR0_R15
  874.                   else
  874.    10                continue
  876.                      tempc(1 + $I_L851_114, 7) = 0.0
  876.                   endif
  878.                   $I_L851_114 = 1 + $I_L851_114
  877.                   if ( $I_L851_114 >= ncols ) exit
  877.                enddo
  877.             endif
  879.             $I_L831_126 = 1 + $I_L831_126
  878.             if ( $I_L831_126 >= -1 + kmax ) exit
  878.          enddo
  878.       endif
  883.       if ( kmax > 0 ) then
  884.          if ( ncols > 0 ) then
  883.             $I_L883_124 = 0
  883.             do
  884.                $I_L884_116 = 0
  884. !dir$ ivdep
  884.                do
  885.                   ft(1 + $I_L884_116, 1 + $I_L883_124) = tl(1 + $I_L884_116, kmax + -$I_L883_124)
  886.                   fq(1 + $I_L884_116, 1 + $I_L883_124) = ql(1 + $I_L884_116, kmax + -$I_L883_124)
  887.                   $I_L884_116 = 1 + $I_L884_116
  884.                   if ( $I_L884_116 >= ncols ) exit
  884.                enddo
  888.                $I_L883_124 = 1 + $I_L883_124
  887.                if ( $I_L883_124 >= kmax ) exit
  887.             enddo
  887.          endif
  887.       endif
  685.       _free( t$108 )
  889.       return
  889.       end
  889.       
  897.       
  897.       subroutine cloud( len, lenc, k, ic, rasalf, setras, frac, alhl, rkap, poi, qoi, uoi, voi, prs, prj, pcu, cln, tcu, qcu, alf, bet, gam, prh, pri, hol, eta, hst, qol, gmh, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, alm, wfn, akm, qs1, clf, uht, vht, wlq, ia, i1, i2, cmb2pa, rhmax )
  897.       t$15 = len
  897.       t$16 = k
  978.       t$150 = _zla( 0, len )
  897.       t$151 = _zla( 0, len )
  978.       t$152 = _zla( 0, k )
  897.       t$153 = _zla( 0, len ) * _zla( 0, k )
  897.       t$17 = ( 1 + k )
  980.       t$154 = _zla( 0, ( 1 + k ) )
  897.       t$155 = _zla( 0, len ) * _zla( 0, ( 1 + k ) )
  897.       t$18 = lenc
 1015.       t$156 = _zla( 0, lenc )
  897.       t$157 = _zla( 0, lenc )
  897.       t$158 = _zla( 0, k ) * _zla( 0, lenc )
 1044.       $rkapp1_S0 = 1.0 + rkap
 1046.       $albcp_S7 = 9.9542106310969544e-4 * alhl
 1049.       $twobal_S82 = ( 2.0 * 1.0/alhl )
 1055.       if ( setras ) then
 1056.          if ( k > 0 ) then
 1057.             if ( lenc > 0 ) then
 1056.                $I_L1056_639 = 0
 1056.                do
 1057.                   $I_L1057_530 = 0
 1057. !dir$ ivdep
 1057.                   do
 1058.                      prh(1 + $I_L1057_530, 1 + $I_L1056_639) = ( ( prj(1 + $I_L1057_530, 2 + $I_L1056_639) * prs(1 + $I_L1057_530, 2 + $I_L1056_639) + -( prj(1 + $I_L1057_530, 1 + $I_L1056_639) * prs(1 + $I_L1057_530, 1 + $I_L1056_639) ) ) * 1.0/( ( prs(1 + $I_L1057_530, 2 + $I_L1056_639) + -prs(1 + $I_L1057_530, 1 + $I_L1056_639) ) * $rkapp1_S0 ) )
 1060.                      $I_L1057_530 = 1 + $I_L1057_530
 1057.                      if ( $I_L1057_530 >= lenc ) exit
 1057.                   enddo
 1064.                   $I_L1064_532 = 0
 1064. !dir$ ivdep
 1064.                   do
 1065.                      $tx5_WR0_R0 = poi(1 + $I_L1064_532, 1 + $I_L1056_639) * prh(1 + $I_L1064_532, 1 + $I_L1056_639)
 1065.                      tx5(1 + $I_L1064_532) = $tx5_WR0_R0
 1066.                      $tx1_WR0_R1 = 5.0e-1 * ( prs(1 + $I_L1064_532, 1 + $I_L1056_639) + prs(1 + $I_L1064_532, 2 + $I_L1056_639) )
 1066.                      tx1(1 + $I_L1064_532) = $tx1_WR0_R1
 1067.                      tx3(1 + $I_L1064_532) = $tx5_WR0_R0
 1068.                      $t_S5 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) )
 1068.                      $d_S6 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1068.                      tx2(1 + $I_L1064_532) = ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * $d_S6 )
 1068.                      $tx4_WR0_R4 = ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) )
 1068.                      tx4(1 + $I_L1064_532) = ( ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * $d_S6 ) ) * $d_S6 )
 1069.                      alf(1 + $I_L1064_532, 1 + $I_L1056_639) = ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) ) + -( $tx4_WR0_R4 * $tx5_WR0_R0 )
 1070.                      bet(1 + $I_L1064_532, 1 + $I_L1056_639) = ( ( ( 2.758084175464619e-1 + $t_S5 * ( 1.7766871900621335e-2 + $t_S5 * ( 4.9435463199216435e-4 + $t_S5 * ( 7.5378169874987931e-6 + $t_S5 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S5 ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) * $d_S6 ) ) * $d_S6 ) * prh(1 + $I_L1064_532, 1 + $I_L1056_639)
 1071.                      gam(1 + $I_L1064_532, 1 + $I_L1056_639) = 1.0/( ( 1.0 + $tx4_WR0_R4 * $albcp_S7 ) * prh(1 + $I_L1064_532, 1 + $I_L1056_639) )
 1072.                      pri(1 + $I_L1064_532, 1 + $I_L1056_639) = ( ( 1004.6 * 1.0/cmb2pa ) * 1.0/( prs(1 + $I_L1064_532, 2 + $I_L1056_639) + -prs(1 + $I_L1064_532, 1 + $I_L1056_639) ) )
 1073.                      $I_L1064_532 = 1 + $I_L1064_532
 1064.                      if ( $I_L1064_532 >= lenc ) exit
 1064.                   enddo
 1061.                   $I_L1056_639 = 1 + $I_L1056_639
 1060.                   if ( $I_L1056_639 >= k ) exit
 1060.                enddo
 1060.             endif
 1060.          endif
 1060.       endif
 1077.       if ( k > 0 ) then
 1078.          if ( len > 0 ) then
 1077.             $I_L1077_641 = 0
 1077.             do
 1078.                $I_L1078_534 = 0
 1078. !dir$ ivdep
 1078.                do
 1079.                   tcu(1 + $I_L1078_534, 1 + $I_L1077_641) = 0.0
 1080.                   qcu(1 + $I_L1078_534, 1 + $I_L1077_641) = 0.0
 1081.                   $I_L1078_534 = 1 + $I_L1078_534
 1078.                   if ( $I_L1078_534 >= len ) exit
 1078.                enddo
 1082.                $I_L1077_641 = 1 + $I_L1077_641
 1081.                if ( $I_L1077_641 >= k ) exit
 1081.             enddo
 1081.          endif
 1081.       endif
 1084.       if ( lenc > 0 ) then
 1084.          $I_L1084_536 = 0
 1084. !dir$ ivdep
 1084.          do
 1085.             $tx1_WR0_R5 = prj(1 + $I_L1084_536, 1 + k) * poi(1 + $I_L1084_536, k)
 1085.             tx1(1 + $I_L1084_536) = $tx1_WR0_R5
 1086.             $qs1_WR0_R6 = alf(1 + $I_L1084_536, k) + bet(1 + $I_L1084_536, k) * poi(1 + $I_L1084_536, k)
 1086.             qs1(1 + $I_L1084_536) = $qs1_WR0_R6
 1087.             $qol_WR0_R7 = min( qoi(1 + $I_L1084_536, k), $qs1_WR0_R6 * rhmax )
 1087.             qol(1 + $I_L1084_536, k) = $qol_WR0_R7
 1088.             hol(1 + $I_L1084_536, k) = 1004.6 * $tx1_WR0_R5 + $qol_WR0_R7 * alhl
 1089.             eta(1 + $I_L1084_536, k) = 0.0
 1090.             tx2(1 + $I_L1084_536) = ( prj(1 + $I_L1084_536, 1 + k) + -prj(1 + $I_L1084_536, k) ) * poi(1 + $I_L1084_536, k) * 1004.6
 1091.             $I_L1084_536 = 1 + $I_L1084_536
 1084.             if ( $I_L1084_536 >= lenc ) exit
 1084.          enddo
 1084.       endif
 1093.       if ( ic < -1 + k ) then
 1094.          if ( ic + -k + 2 <= 0 ) then
 1095.             if ( lenc > 0 ) then
 1095.                $I_L1095_667 = 0
 1095.                do
 1094.                   $I_L1094_657 = 0
 1094.                   if ( k + -ic + -3 >= 0 ) then
 1094.                      $I_L1094_689 = 0
 1094. !dir$ blocking_size( 0, 0 )
 1094.                      do
 1095.                         $I_L1095_538 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                         do
 1096.                            $qs1_WR0_R8 = alf($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) + bet($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1)
 1096.                            qs1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $qs1_WR0_R8
 1097.                            $qol_WR0_R9 = min( qoi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1), $qs1_WR0_R8 * rhmax )
 1097.                            qol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) = $qol_WR0_R9
 1098.                            $tem1_S13 = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) * 1004.6
 1099.                            hol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) = $tem1_S13 + $qol_WR0_R9 * alhl
 1100.                            hst($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) = $tem1_S13 + $qs1_WR0_R8 * alhl
 1101.                            $tx1_WR0_R10 = ( prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689) + -prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) ) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1)
 1101.                            tx1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $tx1_WR0_R10
 1102.                            eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) = eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689) + 102.51020408163265 * $tx1_WR0_R10
 1103.                            tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + 1004.6 * $tx1_WR0_R10
 1096.                            $qs1_WR0_R8 = alf($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) + bet($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2)
 1096.                            qs1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $qs1_WR0_R8
 1097.                            $qol_WR0_R9 = min( qoi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2), $qs1_WR0_R8 * rhmax )
 1097.                            qol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) = $qol_WR0_R9
 1098.                            $tem1_S13 = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) * 1004.6
 1099.                            hol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) = $tem1_S13 + $qol_WR0_R9 * alhl
 1100.                            hst($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) = $tem1_S13 + $qs1_WR0_R8 * alhl
 1101.                            $tx1_WR0_R10 = ( prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) + -prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) ) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2)
 1101.                            tx1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $tx1_WR0_R10
 1102.                            eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -2) = eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -2 * $I_L1094_689 + -1) + 102.51020408163265 * $tx1_WR0_R10
 1103.                            tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + 1004.6 * $tx1_WR0_R10
 1095.                            $I_L1095_538 = 1 + $I_L1095_538
 1095.                            if ( $I_L1095_538 >= min( lenc, 256 + 256 * $I_L1095_667 ) + -256 * $I_L1095_667 ) exit
 1095.                         enddo
 1105.                         $I_L1094_689 = 1 + $I_L1094_689
 1105.                         if ( $I_L1094_689 >= _rsh( k + -ic + -1, 1 ) ) exit
 1105.                      enddo
 1105.                      $I_L1094_657 = and( 0xfffffffffffffffeUL, k + -ic + -1 )
 1105.                   endif
 1094.                   if ( $I_L1094_657 < k + -ic + -1 ) then
 1095.                      $I_L1095_538 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                      do
 1096.                         $qs1_WR0_R8 = alf($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) + bet($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1)
 1096.                         qs1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $qs1_WR0_R8
 1097.                         $qol_WR0_R9 = min( qoi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1), $qs1_WR0_R8 * rhmax )
 1097.                         qol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) = $qol_WR0_R9
 1098.                         $tem1_S13 = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) * 1004.6
 1099.                         hol($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) = $tem1_S13 + $qol_WR0_R9 * alhl
 1100.                         hst($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) = $tem1_S13 + $qs1_WR0_R8 * alhl
 1101.                         $tx1_WR0_R10 = ( prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657) + -prj($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) ) * poi($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1)
 1101.                         tx1($I_L1095_538 + 256 * $I_L1095_667 + 1) = $tx1_WR0_R10
 1102.                         eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657 + -1) = eta($I_L1095_538 + 256 * $I_L1095_667 + 1, k + -$I_L1094_657) + 102.51020408163265 * $tx1_WR0_R10
 1103.                         tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) = tx2($I_L1095_538 + 256 * $I_L1095_667 + 1) + 1004.6 * $tx1_WR0_R10
 1095.                         $I_L1095_538 = 1 + $I_L1095_538
 1095.                         if ( $I_L1095_538 >= min( lenc, 256 + 256 * $I_L1095_667 ) + -256 * $I_L1095_667 ) exit
 1095.                      enddo
 1095.                   endif
 1095.                   $I_L1095_667 = 1 + $I_L1095_667
 1104.                   if ( $I_L1095_667 >= 1 + max( 0, -1 + _rsh( 255 + lenc, 8 ) ) ) exit
 1104.                enddo
 1104.             endif
 1104.          endif
 1104.       endif
 1108.       if ( lenc > 0 ) then
 1108.          $I_L1108_541 = 0
 1108. !dir$ ivdep
 1108.          do
 1109.             $hol_WR0_R11 = tx2(1 + $I_L1108_541)
 1110.             $qs1_WR0_R12 = alf(1 + $I_L1108_541, ic) + bet(1 + $I_L1108_541, ic) * poi(1 + $I_L1108_541, ic)
 1110.             qs1(1 + $I_L1108_541) = $qs1_WR0_R12
 1111.             $qol_WR0_R13 = min( qoi(1 + $I_L1108_541, ic), $qs1_WR0_R12 * rhmax )
 1111.             qol(1 + $I_L1108_541, ic) = $qol_WR0_R13
 1112.             $tem1_S15 = $hol_WR0_R11 + prj(1 + $I_L1108_541, 1 + ic) * poi(1 + $I_L1108_541, ic) * 1004.6
 1113.             hol(1 + $I_L1108_541, ic) = ( $tem1_S15 + $qol_WR0_R13 * alhl )
 1114.             hst(1 + $I_L1108_541, ic) = $tem1_S15 + $qs1_WR0_R12 * alhl
 1115.             $tx3_WR0_R14 = ( prj(1 + $I_L1108_541, 1 + ic) + -prh(1 + $I_L1108_541, ic) ) * poi(1 + $I_L1108_541, ic)
 1115.             tx3(1 + $I_L1108_541) = $tx3_WR0_R14
 1116.             eta(1 + $I_L1108_541, ic) = eta(1 + $I_L1108_541, 1 + ic) + 102.51020408163265 * $tx3_WR0_R14
 1117.             $I_L1108_541 = 1 + $I_L1108_541
 1108.             if ( $I_L1108_541 >= lenc ) exit
 1108.          enddo
 1119.          $I_L1119_543 = 0
 1119. !dir$ ivdep
 1119.          do
 1120.             tx2(1 + $I_L1119_543) = hol(1 + $I_L1119_543, k) + -hst(1 + $I_L1119_543, ic)
 1121.             tx1(1 + $I_L1119_543) = 0.0
 1122.             $I_L1119_543 = 1 + $I_L1119_543
 1119.             if ( $I_L1119_543 >= lenc ) exit
 1119.          enddo
 1119.       endif
 1126.       if ( k + -ic > 0 ) then
 1127.          if ( lenc > 0 ) then
 1127.             $I_L1127_669 = 0
 1127.             do
 1126.                $I_L1126_659 = 0
 1126.                if ( k + -ic >= 4 ) then
 1126.                   $I_L1126_691 = 0
 1126. !dir$ blocking_size( 0, 0 )
 1126.                   do
 1127.                      $I_L1127_545 = 0
 1127. !dir$ ivdep
 1127. !dir$ blocking_size( 256, 256 )
 1127.                      do
 1128.                         tx1($I_L1127_545 + 256 * $I_L1127_669 + 1) = tx1($I_L1127_545 + 256 * $I_L1127_669 + 1) + ( hst($I_L1127_545 + 256 * $I_L1127_669 + 1, ic) + -hol($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691) ) * ( eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691) + -eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 1) ) + ( hst($I_L1127_545 + 256 * $I_L1127_669 + 1, ic) + -hol($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 1) ) * ( eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 1) + -eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 2) ) + ( hst($I_L1127_545 + 256 * $I_L1127_669 + 1, ic) + -hol($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 2) ) * ( eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 2) + -eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 3) ) + ( hst($I_L1127_545 + 256 * $I_L1127_669 + 1, ic) + -hol($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 3) ) * ( eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 3) + -eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + 4 * $I_L1126_691 + 4) )
 1127.                         $I_L1127_545 = 1 + $I_L1127_545
 1127.                         if ( $I_L1127_545 >= min( lenc, 256 + 256 * $I_L1127_669 ) + -256 * $I_L1127_669 ) exit
 1127.                      enddo
 1131.                      $I_L1126_691 = 1 + $I_L1126_691
 1131.                      if ( $I_L1126_691 >= _rsh( ( k + -ic ), 2 ) ) exit
 1131.                   enddo
 1131.                   $I_L1126_659 = and( 0xfffffffffffffffcUL, ( k + -ic ) )
 1131.                endif
 1126.                if ( $I_L1126_659 < k + -ic ) then
 1126.                   $I_L1126_683 = 0
 1126. !dir$ blocking_size( 0, 0 )
 1126.                   do
 1127.                      $I_L1127_545 = 0
 1127. !dir$ ivdep
 1127. !dir$ blocking_size( 256, 256 )
 1127.                      do
 1128.                         tx1($I_L1127_545 + 256 * $I_L1127_669 + 1) = tx1($I_L1127_545 + 256 * $I_L1127_669 + 1) + ( hst($I_L1127_545 + 256 * $I_L1127_669 + 1, ic) + -hol($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + $I_L1126_659 + $I_L1126_683) ) * ( eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + $I_L1126_659 + $I_L1126_683) + -eta($I_L1127_545 + 256 * $I_L1127_669 + 1, ic + $I_L1126_659 + $I_L1126_683 + 1) )
 1127.                         $I_L1127_545 = 1 + $I_L1127_545
 1127.                         if ( $I_L1127_545 >= min( lenc, 256 + 256 * $I_L1127_669 ) + -256 * $I_L1127_669 ) exit
 1127.                      enddo
 1131.                      $I_L1126_683 = 1 + $I_L1126_683
 1131.                      if ( $I_L1126_683 >= k + -ic + -$I_L1126_659 ) exit
 1131.                   enddo
 1131.                endif
 1127.                $I_L1127_669 = 1 + $I_L1127_669
 1130.                if ( $I_L1127_669 >= 1 + max( 0, -1 + _rsh( 255 + lenc, 8 ) ) ) exit
 1130.             enddo
 1130.          endif
 1130.       endif
 1133.       $len1_S20 = 0
 1137.       if ( lenc > 0 ) then
 1137.          $I_L1137_548 = 0
 1137. !dir$ ivdep
 1137.          do
 1138.             if ( tx1(1 + $I_L1137_548) > 0.0 ) then
 1138.                if ( tx2(1 + $I_L1137_548) > 0.0 ) then
 1139.                   $len1_S20 = 1 + $len1_S20
 1140.                   ia($len1_S20) = ( 1 + $I_L1137_548 )
 1141.                   alm($len1_S20) = ( tx2(1 + $I_L1137_548) * 1.0/tx1(1 + $I_L1137_548) )
 1141.                endif
 1141.             endif
 1143.             $I_L1137_548 = 1 + $I_L1137_548
 1142.             if ( $I_L1137_548 >= lenc ) exit
 1142.          enddo
 1142.       endif
 1145.       len2 = $len1_S20
 1147.       if ( 1 + ic < k ) then
 1148.          if ( lenc > 0 ) then
 1148.             $I_L1148_550 = 0
 1148. !dir$ ivdep
 1148.             do
 1149.                if ( tx2(1 + $I_L1148_550) <= 0.0 ) then
 1149.                   if ( hol(1 + $I_L1148_550, k) > hst(1 + $I_L1148_550, 1 + ic) ) then
 1150.                      len2 = 1 + len2
 1151.                      ia(len2) = ( 1 + $I_L1148_550 )
 1152.                      alm(len2) = 0.0
 1152.                   endif
 1152.                endif
 1154.                $I_L1148_550 = 1 + $I_L1148_550
 1153.                if ( $I_L1148_550 >= lenc ) exit
 1153.             enddo
 1153.          endif
 1153.       endif
 1157.       if ( len2 == 0 ) then
 1158.          if ( k * lenc > 0 ) then
 1158.             $I_L1158_552 = 0
 1158. !dir$ ivdep
 1158.             do
 1159.                hst(1 + $I_L1158_552, 1) = 0.0
 1160.                qol(1 + $I_L1158_552, 1) = 0.0
 1161.                $I_L1158_552 = 1 + $I_L1158_552
 1158.                if ( $I_L1158_552 >= ( k * lenc ) ) exit
 1158.             enddo
 1158.          endif
 1162.          if ( lenc > 0 ) then
 1162.             $I_L1162_554 = 0
 1162. !dir$ ivdep
 1162.             do
 1163.                pcu(1 + $I_L1162_554) = 0.0
 1164.                $I_L1162_554 = 1 + $I_L1162_554
 1162.                if ( $I_L1162_554 >= lenc ) exit
 1162.             enddo
 1162.          endif
 1162.       else
 1171.          if ( len2 > 0 ) then
 1171.             $I_L1171_556 = 0
 1171. !dir$ ivdep
 1171.             do
 1172.                eta(1 + $I_L1171_556, k) = 1.0
 1173.                $ii_S25 = ia(1 + $I_L1171_556)
 1174.                tx2(1 + $I_L1171_556) = 5.0e-1 * ( prs($ii_S25, ic) + prs($ii_S25, 1 + ic) )
 1175.                tx4(1 + $I_L1171_556) = prs($ii_S25, k)
 1176.                $I_L1171_556 = 1 + $I_L1171_556
 1171.                if ( $I_L1171_556 >= len2 ) exit
 1171.             enddo
 1171.          endif
 1178.          if ( len2 + -$len1_S20 > 0 ) then
 1178.             $I_L1178_558 = 0
 1178. !dir$ ivdep
 1178.             do
 1179.                wfn($len1_S20 + $I_L1178_558 + 1) = 0.0
 1180.                $ii_S27 = ia($len1_S20 + $I_L1178_558 + 1)
 1181.                if ( hst($ii_S27, 1 + ic) < hst($ii_S27, ic) ) then
 1182.                   tx6($len1_S20 + $I_L1178_558 + 1) = ( ( hst($ii_S27, 1 + ic) + -hol($ii_S27, k) ) * 1.0/( hst($ii_S27, 1 + ic) + -hst($ii_S27, ic) ) )
 1182.                else
 1184.                   tx6($len1_S20 + $I_L1178_558 + 1) = 0.0
 1184.                endif
 1186.                tx2($len1_S20 + $I_L1178_558 + 1) = ( 1.0 + -tx6($len1_S20 + $I_L1178_558 + 1) ) * ( prs($ii_S27, 1 + ic) + prs($ii_S27, 2 + ic) ) * 5.0e-1 + tx2($len1_S20 + $I_L1178_558 + 1) * tx6($len1_S20 + $I_L1178_558 + 1)
 1188.                $I_L1178_558 = 1 + $I_L1178_558
 1185.                if ( $I_L1178_558 >= ( len2 + -$len1_S20 ) ) exit
 1185.             enddo
 1185.          endif
 1190.          call acritn( len2, tx2(1), tx4(1), tx3(1) )
 1192.          if ( ic + -k < 0 ) then
 1193.             if ( len2 > 0 ) then
 1192.                $I_L1192_643 = 0
 1192.                do
 1193.                   $I_L1193_560 = 0
 1193. !dir$ ivdep
 1193.                   do
 1194.                      tx1(1 + $I_L1193_560) = eta(ia(1 + $I_L1193_560), k + -$I_L1192_643 + -1)
 1195.                      $I_L1193_560 = 1 + $I_L1193_560
 1193.                      if ( $I_L1193_560 >= len2 ) exit
 1193.                   enddo
 1197.                   $I_L1197_562 = 0
 1197. !dir$ ivdep
 1197.                   do
 1198.                      eta(1 + $I_L1197_562, k + -$I_L1192_643 + -1) = 1.0 + alm(1 + $I_L1197_562) * tx1(1 + $I_L1197_562)
 1199.                      $I_L1197_562 = 1 + $I_L1197_562
 1197.                      if ( $I_L1197_562 >= len2 ) exit
 1197.                   enddo
 1200.                   $I_L1192_643 = 1 + $I_L1192_643
 1199.                   if ( $I_L1192_643 >= ( k + -ic ) ) exit
 1199.                enddo
 1199.             endif
 1199.          endif
 1204.          if ( $len1_S20 > 0 ) then
 1205.             $I_L1205_564 = 0
 1205. !dir$ ivdep
 1205.             do
 1206.                $ii_S32 = ia(1 + $I_L1205_564)
 1207.                wfn(1 + $I_L1205_564) = -( gam($ii_S32, ic) * ( prj($ii_S32, 1 + ic) + -prh($ii_S32, ic) ) * hst($ii_S32, ic) * eta(1 + $I_L1205_564, 1 + ic) )
 1209.                $I_L1205_564 = 1 + $I_L1205_564
 1205.                if ( $I_L1205_564 >= $len1_S20 ) exit
 1205.             enddo
 1205.          endif
 1212.          if ( len2 > 0 ) then
 1212.             $I_L1212_566 = 0
 1212. !dir$ ivdep
 1212.             do
 1213.                $ii_S34 = ia(1 + $I_L1212_566)
 1214.                tx1(1 + $I_L1212_566) = hol($ii_S34, k)
 1215.                $I_L1212_566 = 1 + $I_L1212_566
 1212.                if ( $I_L1212_566 >= len2 ) exit
 1212.             enddo
 1212.          endif
 1217.          if ( 1 + ic <= -1 + k ) then
 1218.             if ( ic + -k + 2 <= 0 ) then
 1219.                if ( len2 > 0 ) then
 1219.                   $I_L1219_671 = 0
 1219.                   do
 1218.                      $I_L1218_661 = 0
 1218. !dir$ blocking_size( 0, 0 )
 1218.                      do
 1219.                         $I_L1219_568 = 0
 1219. !dir$ ivdep
 1219. !dir$ blocking_size( 256, 256 )
 1219.                         do
 1220.                            $ii_S36 = ia($I_L1219_568 + 256 * $I_L1219_671 + 1)
 1221.                            $tem_S39 = tx1($I_L1219_568 + 256 * $I_L1219_671 + 1) + ( eta($I_L1219_568 + 256 * $I_L1219_671 + 1, k + -$I_L1218_661 + -1) + -eta($I_L1219_568 + 256 * $I_L1219_671 + 1, k + -$I_L1218_661) ) * hol($ii_S36, k + -$I_L1218_661 + -1)
 1222.                            $pcu_WR0_R16 = prj($ii_S36, k + -$I_L1218_661) + -prh($ii_S36, k + -$I_L1218_661 + -1)
 1223.                            $tem1_S38 = eta($I_L1219_568 + 256 * $I_L1219_671 + 1, k + -$I_L1218_661) * $pcu_WR0_R16
 1224.                            $tx1_WR0_R15 = tx1($I_L1219_568 + 256 * $I_L1219_671 + 1) * $pcu_WR0_R16
 1224.                            tx1($I_L1219_568 + 256 * $I_L1219_671 + 1) = $tx1_WR0_R15
 1225.                            $pcu_WR0_R16 = prh($ii_S36, k + -$I_L1218_661 + -1) + -prj($ii_S36, k + -$I_L1218_661 + -1)
 1225.                            pcu($I_L1219_568 + 256 * $I_L1219_671 + 1) = $pcu_WR0_R16
 1226.                            $tem1_S40 = ( $tem1_S38 + eta($I_L1219_568 + 256 * $I_L1219_671 + 1, k + -$I_L1218_661 + -1) * $pcu_WR0_R16 ) * hst($ii_S36, k + -$I_L1218_661 + -1)
 1227.                            $tx1_WR0_R15 = $tx1_WR0_R15 + $tem_S39 * $pcu_WR0_R16
 1227.                            tx1($I_L1219_568 + 256 * $I_L1219_671 + 1) = $tx1_WR0_R15
 1228.                            wfn($I_L1219_568 + 256 * $I_L1219_671 + 1) = wfn($I_L1219_568 + 256 * $I_L1219_671 + 1) + ( $tx1_WR0_R15 + -$tem1_S40 ) * gam($ii_S36, k + -$I_L1218_661 + -1)
 1229.                            tx1($I_L1219_568 + 256 * $I_L1219_671 + 1) = $tem_S39
 1219.                            $I_L1219_568 = 1 + $I_L1219_568
 1219.                            if ( $I_L1219_568 >= min( len2, 256 + 256 * $I_L1219_671 ) + -256 * $I_L1219_671 ) exit
 1219.                         enddo
 1231.                         $I_L1218_661 = 1 + $I_L1218_661
 1231.                         if ( $I_L1218_661 >= k + -ic + -1 ) exit
 1231.                      enddo
 1219.                      $I_L1219_671 = 1 + $I_L1219_671
 1230.                      if ( $I_L1219_671 >= 1 + max( 0, -1 + _rsh( 255 + len2, 8 ) ) ) exit
 1230.                   enddo
 1230.                endif
 1230.             endif
 1230.          endif
 1233.          $lena_S43 = 0
 1234.          if ( $len1_S20 > 0 ) then
 1236.             $I_L1236_571 = 0
 1236. !dir$ ivdep
 1236.             do
 1237.                $ii_S42 = ia(1 + $I_L1236_571)
 1238.                $wfn_WR0_R17 = wfn(1 + $I_L1236_571) + tx1(1 + $I_L1236_571) * gam($ii_S42, ic) * ( prj($ii_S42, 1 + ic) + -prh($ii_S42, ic) ) + -tx3(1 + $I_L1236_571)
 1238.                wfn(1 + $I_L1236_571) = $wfn_WR0_R17
 1240.                if ( $wfn_WR0_R17 > 0.0 ) then
 1241.                   $lena_S43 = 1 + $lena_S43
 1242.                   i1($lena_S43) = $ii_S42
 1243.                   i2($lena_S43) = ( 1 + $I_L1236_571 )
 1244.                   tx1($lena_S43) = $wfn_WR0_R17
 1245.                   tx2($lena_S43) = qs1($ii_S42)
 1246.                   tx6($lena_S43) = 1.0
 1246.                endif
 1248.                $I_L1236_571 = 1 + $I_L1236_571
 1247.                if ( $I_L1236_571 >= $len1_S20 ) exit
 1247.             enddo
 1247.          endif
 1250.          lenb = $lena_S43
 1251.          if ( len2 + -$len1_S20 > 0 ) then
 1251.             $I_L1251_573 = 0
 1251. !dir$ ivdep
 1251.             do
 1252.                $wfn_WR0_R18 = wfn($len1_S20 + $I_L1251_573 + 1) + -tx3($len1_S20 + $I_L1251_573 + 1)
 1252.                wfn($len1_S20 + $I_L1251_573 + 1) = $wfn_WR0_R18
 1253.                if ( $wfn_WR0_R18 > 0.0 ) then
 1253.                   if ( tx6($len1_S20 + $I_L1251_573 + 1) > 0.0 ) then
 1254.                      lenb = 1 + lenb
 1255.                      i1(lenb) = ia($len1_S20 + $I_L1251_573 + 1)
 1256.                      i2(lenb) = ( $len1_S20 + $I_L1251_573 + 1 )
 1257.                      tx1(lenb) = $wfn_WR0_R18
 1258.                      tx2(lenb) = qs1(ia($len1_S20 + $I_L1251_573 + 1))
 1259.                      tx4(lenb) = tx6($len1_S20 + $I_L1251_573 + 1)
 1259.                   endif
 1259.                endif
 1261.                $I_L1251_573 = 1 + $I_L1251_573
 1260.                if ( $I_L1251_573 >= ( len2 + -$len1_S20 ) ) exit
 1260.             enddo
 1260.          endif
 1262.          if ( lenb <= 0 ) then
 1263.             if ( k * lenc > 0 ) then
 1263.                $I_L1263_575 = 0
 1263. !dir$ ivdep
 1263.                do
 1264.                   hst(1 + $I_L1263_575, 1) = 0.0
 1265.                   qol(1 + $I_L1263_575, 1) = 0.0
 1266.                   $I_L1263_575 = 1 + $I_L1263_575
 1263.                   if ( $I_L1263_575 >= ( k * lenc ) ) exit
 1263.                enddo
 1263.             endif
 1267.             if ( lenc > 0 ) then
 1267.                $I_L1267_577 = 0
 1267. !dir$ ivdep
 1267.                do
 1268.                   pcu(1 + $I_L1267_577) = 0.0
 1269.                   $I_L1267_577 = 1 + $I_L1267_577
 1267.                   if ( $I_L1267_577 >= lenc ) exit
 1267.                enddo
 1267.             endif
 1267.          else
 1272.             $I_L1272_579 = 0
 1272. !dir$ ivdep
 1272.             do
 1273.                wfn(1 + $I_L1272_579) = tx1(1 + $I_L1272_579)
 1274.                qs1(1 + $I_L1272_579) = tx2(1 + $I_L1272_579)
 1275.                $I_L1272_579 = 1 + $I_L1272_579
 1272.                if ( $I_L1272_579 >= lenb ) exit
 1272.             enddo
 1276.             if ( k + -ic >= 0 ) then
 1276.                $I_L1276_645 = 0
 1276.                do
 1277.                   $I_L1277_581 = 0
 1277. !dir$ ivdep
 1277.                   do
 1278.                      tx1(1 + $I_L1277_581) = eta(i2(1 + $I_L1277_581), ic + $I_L1276_645)
 1279.                      $I_L1277_581 = 1 + $I_L1277_581
 1277.                      if ( $I_L1277_581 >= lenb ) exit
 1277.                   enddo
 1280.                   $I_L1280_583 = 0
 1280. !dir$ ivdep
 1280.                   do
 1281.                      eta(1 + $I_L1280_583, ic + $I_L1276_645) = tx1(1 + $I_L1280_583)
 1282.                      $I_L1280_583 = 1 + $I_L1280_583
 1280.                      if ( $I_L1280_583 >= lenb ) exit
 1280.                   enddo
 1283.                   $I_L1276_645 = 1 + $I_L1276_645
 1282.                   if ( $I_L1276_645 >= k + -ic + 1 ) exit
 1282.                enddo
 1282.             endif
 1285.             if ( $lena_S43 > 0 ) then
 1285.                $I_L1285_585 = 0
 1285. !dir$ ivdep
 1285.                do
 1286.                   $ii_S52 = i1(1 + $I_L1285_585)
 1287.                   tx8(1 + $I_L1285_585) = hst($ii_S52, ic) + -hol($ii_S52, ic)
 1288.                   $I_L1285_585 = 1 + $I_L1285_585
 1285.                   if ( $I_L1285_585 >= $lena_S43 ) exit
 1285.                enddo
 1285.             endif
 1289.             if ( lenb + -$lena_S43 > 0 ) then
 1289.                $I_L1289_587 = 0
 1289. !dir$ ivdep
 1289.                do
 1290.                   $ii_S54 = i1($lena_S43 + $I_L1289_587 + 1)
 1291.                   $tx6_WR0_R19 = tx4($lena_S43 + $I_L1289_587 + 1)
 1291.                   tx6($lena_S43 + $I_L1289_587 + 1) = $tx6_WR0_R19
 1292.                   $tem_S55 = $tx6_WR0_R19 * ( hol($ii_S54, ic) + -hol($ii_S54, 1 + ic) ) + hol($ii_S54, 1 + ic)
 1293.                   $tx8_WR0_R20 = hol($ii_S54, k) + -$tem_S55
 1293.                   tx8($lena_S43 + $I_L1289_587 + 1) = $tx8_WR0_R20
 1294.                   $tem1_S56 = $tx6_WR0_R19 * ( qol($ii_S54, ic) + -qol($ii_S54, 1 + ic) ) + qol($ii_S54, 1 + ic)
 1295.                   tx5($lena_S43 + $I_L1289_587 + 1) = $tem_S55 + -( $tem1_S56 * alhl )
 1296.                   qs1($lena_S43 + $I_L1289_587 + 1) = $tem1_S56 + $tx8_WR0_R20 * 1.0/alhl
 1297.                   tx3($lena_S43 + $I_L1289_587 + 1) = hol($ii_S54, ic)
 1298.                   $I_L1289_587 = 1 + $I_L1289_587
 1289.                   if ( $I_L1289_587 >= ( lenb + -$lena_S43 ) ) exit
 1289.                enddo
 1289.             endif
 1299.             $I_L1299_589 = 0
 1299. !dir$ ivdep
 1299.             do
 1300.                $ii_S58 = i1(1 + $I_L1299_589)
 1301.                wlq(1 + $I_L1299_589) = qol($ii_S58, k) + -( qs1(1 + $I_L1299_589) * eta(1 + $I_L1299_589, ic) )
 1302.                uht(1 + $I_L1299_589) = uoi($ii_S58, k) + -( uoi($ii_S58, ic) * eta(1 + $I_L1299_589, ic) )
 1303.                vht(1 + $I_L1299_589) = voi($ii_S58, k) + -( voi($ii_S58, ic) * eta(1 + $I_L1299_589, ic) )
 1304.                tx7(1 + $I_L1299_589) = hol($ii_S58, k)
 1305.                $I_L1299_589 = 1 + $I_L1299_589
 1299.                if ( $I_L1299_589 >= lenb ) exit
 1299.             enddo
 1306.             if ( ic + -k < 0 ) then
 1307.                $I_L1307_673 = 0
 1307.                do
 1306.                   $I_L1306_663 = 0
 1306.                   if ( k + -ic >= 4 ) then
 1306.                      $I_L1306_693 = 0
 1306. !dir$ blocking_size( 0, 0 )
 1306.                      do
 1307.                         $I_L1307_591 = 0
 1307. !dir$ ivdep
 1307. !dir$ blocking_size( 256, 256 )
 1307.                         do
 1308.                            $ii_S61 = i1($I_L1307_591 + 256 * $I_L1307_673 + 1)
 1309.                            $tem_S62 = eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -1) + -eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693)
 1310.                            wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) = wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * qol($ii_S61, k + -4 * $I_L1306_693 + -1)
 1311.                            uht($I_L1307_591 + 256 * $I_L1307_673 + 1) = uht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * uoi($ii_S61, k + -4 * $I_L1306_693 + -1)
 1312.                            vht($I_L1307_591 + 256 * $I_L1307_673 + 1) = vht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * voi($ii_S61, k + -4 * $I_L1306_693 + -1)
 1308.                            $ii_S61 = i1($I_L1307_591 + 256 * $I_L1307_673 + 1)
 1309.                            $tem_S62 = eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -2) + -eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -1)
 1310.                            wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) = wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * qol($ii_S61, k + -4 * $I_L1306_693 + -2)
 1311.                            uht($I_L1307_591 + 256 * $I_L1307_673 + 1) = uht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * uoi($ii_S61, k + -4 * $I_L1306_693 + -2)
 1312.                            vht($I_L1307_591 + 256 * $I_L1307_673 + 1) = vht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * voi($ii_S61, k + -4 * $I_L1306_693 + -2)
 1308.                            $ii_S61 = i1($I_L1307_591 + 256 * $I_L1307_673 + 1)
 1309.                            $tem_S62 = eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -3) + -eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -2)
 1310.                            wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) = wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * qol($ii_S61, k + -4 * $I_L1306_693 + -3)
 1311.                            uht($I_L1307_591 + 256 * $I_L1307_673 + 1) = uht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * uoi($ii_S61, k + -4 * $I_L1306_693 + -3)
 1312.                            vht($I_L1307_591 + 256 * $I_L1307_673 + 1) = vht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * voi($ii_S61, k + -4 * $I_L1306_693 + -3)
 1308.                            $ii_S61 = i1($I_L1307_591 + 256 * $I_L1307_673 + 1)
 1309.                            $tem_S62 = eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -4) + -eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -4 * $I_L1306_693 + -3)
 1310.                            wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) = wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * qol($ii_S61, k + -4 * $I_L1306_693 + -4)
 1311.                            uht($I_L1307_591 + 256 * $I_L1307_673 + 1) = uht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * uoi($ii_S61, k + -4 * $I_L1306_693 + -4)
 1312.                            vht($I_L1307_591 + 256 * $I_L1307_673 + 1) = vht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * voi($ii_S61, k + -4 * $I_L1306_693 + -4)
 1307.                            $I_L1307_591 = 1 + $I_L1307_591
 1307.                            if ( $I_L1307_591 >= min( lenb, 256 + 256 * $I_L1307_673 ) + -256 * $I_L1307_673 ) exit
 1307.                         enddo
 1314.                         $I_L1306_693 = 1 + $I_L1306_693
 1314.                         if ( $I_L1306_693 >= _rsh( ( k + -ic ), 2 ) ) exit
 1314.                      enddo
 1314.                      $I_L1306_663 = and( 0xfffffffffffffffcUL, ( k + -ic ) )
 1314.                   endif
 1306.                   if ( $I_L1306_663 < k + -ic ) then
 1306.                      $I_L1306_686 = 0
 1306. !dir$ blocking_size( 0, 0 )
 1306.                      do
 1307.                         $I_L1307_591 = 0
 1307. !dir$ ivdep
 1307. !dir$ blocking_size( 256, 256 )
 1307.                         do
 1308.                            $ii_S61 = i1($I_L1307_591 + 256 * $I_L1307_673 + 1)
 1309.                            $tem_S62 = eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -$I_L1306_663 + -$I_L1306_686 + -1) + -eta($I_L1307_591 + 256 * $I_L1307_673 + 1, k + -$I_L1306_663 + -$I_L1306_686)
 1310.                            wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) = wlq($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * qol($ii_S61, k + -$I_L1306_663 + -$I_L1306_686 + -1)
 1311.                            uht($I_L1307_591 + 256 * $I_L1307_673 + 1) = uht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * uoi($ii_S61, k + -$I_L1306_663 + -$I_L1306_686 + -1)
 1312.                            vht($I_L1307_591 + 256 * $I_L1307_673 + 1) = vht($I_L1307_591 + 256 * $I_L1307_673 + 1) + $tem_S62 * voi($ii_S61, k + -$I_L1306_663 + -$I_L1306_686 + -1)
 1307.                            $I_L1307_591 = 1 + $I_L1307_591
 1307.                            if ( $I_L1307_591 >= min( lenb, 256 + 256 * $I_L1307_673 ) + -256 * $I_L1307_673 ) exit
 1307.                         enddo
 1314.                         $I_L1306_686 = 1 + $I_L1306_686
 1314.                         if ( $I_L1306_686 >= k + -ic + -$I_L1306_663 ) exit
 1314.                      enddo
 1314.                   endif
 1307.                   $I_L1307_673 = 1 + $I_L1307_673
 1313.                   if ( $I_L1307_673 >= 1 + max( 0, -1 + _rsh( 255 + lenb, 8 ) ) ) exit
 1313.                enddo
 1313.             endif
 1318.             $I_L1318_594 = 0
 1318. !dir$ ivdep
 1318.             do
 1319.                $ii_S64 = i1(1 + $I_L1318_594)
 1320.                $tem_S65 = ( ( poi($ii_S64, -1 + k) + -poi($ii_S64, k) ) * 1.0/( prh($ii_S64, k) + -prh($ii_S64, -1 + k) ) )
 1322.                hol(1 + $I_L1318_594, k) = $tem_S65 * ( prj($ii_S64, k) + -prh($ii_S64, -1 + k) ) * prh($ii_S64, k) * pri($ii_S64, k)
 1323.                hol(1 + $I_L1318_594, -1 + k) = $tem_S65 * ( prh($ii_S64, k) + -prj($ii_S64, k) ) * prh($ii_S64, -1 + k) * pri($ii_S64, -1 + k)
 1324.                akm(1 + $I_L1318_594) = 0.0
 1325.                tx2(1 + $I_L1318_594) = 5.0e-1 * ( prs($ii_S64, ic) + prs($ii_S64, 1 + ic) )
 1326.                $I_L1318_594 = 1 + $I_L1318_594
 1318.                if ( $I_L1318_594 >= lenb ) exit
 1318.             enddo
 1328.             if ( 1 + ic <= -1 + k ) then
 1329.                if ( ic + -k + 2 <= 0 ) then
 1330.                   $I_L1330_675 = 0
 1330.                   do
 1329.                      $I_L1329_665 = 0
 1329. !dir$ blocking_size( 0, 0 )
 1329.                      do
 1330.                         $I_L1330_596 = 0
 1330. !dir$ ivdep
 1330. !dir$ blocking_size( 256, 256 )
 1330.                         do
 1331.                            $ii_S68 = i1($I_L1330_596 + 256 * $I_L1330_675 + 1)
 1332.                            $tem_S69 = ( ( poi($ii_S68, k + -$I_L1329_665 + -2) + -poi($ii_S68, k + -$I_L1329_665 + -1) ) * eta($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -1) * 1.0/( prh($ii_S68, k + -$I_L1329_665 + -1) + -prh($ii_S68, k + -$I_L1329_665 + -2) ) )
 1334.                            hol($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -1) = $tem_S69 * ( prj($ii_S68, k + -$I_L1329_665 + -1) + -prh($ii_S68, k + -$I_L1329_665 + -2) ) * prh($ii_S68, k + -$I_L1329_665 + -1) * pri($ii_S68, k + -$I_L1329_665 + -1) + hol($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -1)
 1336.                            hol($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -2) = $tem_S69 * ( prh($ii_S68, k + -$I_L1329_665 + -1) + -prj($ii_S68, k + -$I_L1329_665 + -1) ) * prh($ii_S68, k + -$I_L1329_665 + -2) * pri($ii_S68, k + -$I_L1329_665 + -2)
 1338.                            akm($I_L1330_596 + 256 * $I_L1330_675 + 1) = akm($I_L1330_596 + 256 * $I_L1330_675 + 1) + -( hol($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -1) * ( eta($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665 + -1) * ( prh($ii_S68, k + -$I_L1329_665 + -1) + -prj($ii_S68, k + -$I_L1329_665 + -1) ) + eta($I_L1330_596 + 256 * $I_L1330_675 + 1, k + -$I_L1329_665) * ( prj($ii_S68, k + -$I_L1329_665) + -prh($ii_S68, k + -$I_L1329_665 + -1) ) ) * 1.0/prh($ii_S68, k + -$I_L1329_665 + -1) )
 1330.                            $I_L1330_596 = 1 + $I_L1330_596
 1330.                            if ( $I_L1330_596 >= min( lenb, 256 + 256 * $I_L1330_675 ) + -256 * $I_L1330_675 ) exit
 1330.                         enddo
 1342.                         $I_L1329_665 = 1 + $I_L1329_665
 1342.                         if ( $I_L1329_665 >= k + -ic + -1 ) exit
 1342.                      enddo
 1330.                      $I_L1330_675 = 1 + $I_L1330_675
 1341.                      if ( $I_L1330_675 >= 1 + max( 0, -1 + _rsh( 255 + lenb, 8 ) ) ) exit
 1341.                   enddo
 1341.                endif
 1341.             endif
 1345.             call rncl( lenb, tx2(1), tx1(1), clf(1) )
 1347.             if ( lenb > 0 ) then
 1347.                $I_L1347_599 = 0
 1347. !dir$ ivdep
 1347.                do
 1348.                   tx2(1 + $I_L1347_599) = ( 1.0 + -tx1(1 + $I_L1347_599) ) * wlq(1 + $I_L1347_599)
 1349.                   wlq(1 + $I_L1347_599) = tx1(1 + $I_L1347_599) * wlq(1 + $I_L1347_599)
 1350.                   tx1(1 + $I_L1347_599) = hol(1 + $I_L1347_599, ic)
 1351.                   $I_L1347_599 = 1 + $I_L1347_599
 1347.                   if ( $I_L1347_599 >= lenb ) exit
 1347.                enddo
 1347.             endif
 1353.             if ( lenb + -$lena_S43 > 0 ) then
 1353.                $I_L1353_601 = 0
 1353. !dir$ ivdep
 1353.                do
 1354.                   $ii_S72 = i1($lena_S43 + $I_L1353_601 + 1)
 1355.                   tx1($lena_S43 + $I_L1353_601 + 1) = tx1($lena_S43 + $I_L1353_601 + 1) + ( tx5($lena_S43 + $I_L1353_601 + 1) + -tx3($lena_S43 + $I_L1353_601 + 1) + qol($ii_S72, ic) * alhl ) * ( 9.9542106310969544e-4 * pri($ii_S72, ic) )
 1357.                   $I_L1353_601 = 1 + $I_L1353_601
 1353.                   if ( $I_L1353_601 >= ( lenb + -$lena_S43 ) ) exit
 1353.                enddo
 1353.             endif
 1359.             if ( lenb > 0 ) then
 1359.                $I_L1359_603 = 0
 1359. !dir$ ivdep
 1359.                do
 1360.                   hol(1 + $I_L1359_603, ic) = tx1(1 + $I_L1359_603) + -( tx2(1 + $I_L1359_603) * $albcp_S7 * pri(i1(1 + $I_L1359_603), ic) )
 1361.                   $I_L1359_603 = 1 + $I_L1359_603
 1359.                   if ( $I_L1359_603 >= lenb ) exit
 1359.                enddo
 1359.             endif
 1363.             if ( $lena_S43 > 0 ) then
 1364.                $I_L1364_605 = 0
 1364. !dir$ ivdep
 1364.                do
 1365.                   $ii_S75 = i1(1 + $I_L1364_605)
 1366.                   akm(1 + $I_L1364_605) = akm(1 + $I_L1364_605) + -( eta(1 + $I_L1364_605, 1 + ic) * ( prj($ii_S75, 1 + ic) + -prh($ii_S75, ic) ) * tx1(1 + $I_L1364_605) * 1.0/prh($ii_S75, ic) )
 1368.                   $I_L1364_605 = 1 + $I_L1364_605
 1364.                   if ( $I_L1364_605 >= $lena_S43 ) exit
 1364.                enddo
 1364.             endif
 1373.             if ( lenb > 0 ) then
 1373.                $I_L1373_607 = 0
 1373. !dir$ ivdep
 1373.                do
 1374.                   $ii_S77 = i1(1 + $I_L1373_607)
 1375.                   $tx3_WR0_R21 = qol($ii_S77, -1 + k) + -qol($ii_S77, k)
 1375.                   tx3(1 + $I_L1373_607) = $tx3_WR0_R21
 1376.                   $gmh_WR0_R22 = hol(1 + $I_L1373_607, k) + $tx3_WR0_R21 * pri($ii_S77, k) * ( 5.0e-1 * $albcp_S7 )
 1376.                   gmh(1 + $I_L1373_607, k) = $gmh_WR0_R22
 1377.                   akm(1 + $I_L1373_607) = akm(1 + $I_L1373_607) + gam($ii_S77, -1 + k) * ( prj($ii_S77, k) + -prh($ii_S77, -1 + k) ) * $gmh_WR0_R22
 1379.                   $I_L1373_607 = 1 + $I_L1373_607
 1373.                   if ( $I_L1373_607 >= lenb ) exit
 1373.                enddo
 1373.             endif
 1381.             if ( 1 + ic <= -1 + k ) then
 1382.                if ( ic + -k + 2 <= 0 ) then
 1383.                   if ( lenb > 0 ) then
 1382.                      $I_L1382_647 = 0
 1382.                      if ( k + -ic + -5 >= 0 ) then
 1382.                         $I_L1382_695 = 0
 1382. !dir$ blocking_size( 0, 0 )
 1382.                         do
 1383.                            $I_L1383_609 = 0
 1383. !dir$ ivdep
 1383. !dir$ blocking_size( 0, 0 )
 1383.                            do
 1384.                               $ii_S80 = i1(1 + $I_L1383_609)
 1385.                               $tx2_WR0_R24 = tx3(1 + $I_L1383_609)
 1386.                               $tx3_WR0_R23 = ( qol($ii_S80, k + -4 * $I_L1382_695 + -2) + -qol($ii_S80, k + -4 * $I_L1382_695 + -1) ) * eta(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -1)
 1386.                               tx3(1 + $I_L1383_609) = $tx3_WR0_R23
 1387.                               $tx2_WR0_R24 = $tx2_WR0_R24 + $tx3_WR0_R23
 1387.                               tx2(1 + $I_L1383_609) = $tx2_WR0_R24
 1388.                               gmh(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -1) = hol(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -1) + $tx2_WR0_R24 * pri($ii_S80, k + -4 * $I_L1382_695 + -1) * ( 5.0e-1 * $albcp_S7 )
 1384.                               $ii_S80 = i1(1 + $I_L1383_609)
 1385.                               $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                               $tx3_WR0_R23 = ( qol($ii_S80, k + -4 * $I_L1382_695 + -3) + -qol($ii_S80, k + -4 * $I_L1382_695 + -2) ) * eta(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -2)
 1386.                               tx3(1 + $I_L1383_609) = $tx3_WR0_R23
 1387.                               $tx2_WR0_R24 = $tx2_WR0_R24 + $tx3_WR0_R23
 1387.                               tx2(1 + $I_L1383_609) = $tx2_WR0_R24
 1388.                               gmh(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -2) = hol(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -2) + $tx2_WR0_R24 * pri($ii_S80, k + -4 * $I_L1382_695 + -2) * ( 5.0e-1 * $albcp_S7 )
 1384.                               $ii_S80 = i1(1 + $I_L1383_609)
 1385.                               $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                               $tx3_WR0_R23 = ( qol($ii_S80, k + -4 * $I_L1382_695 + -4) + -qol($ii_S80, k + -4 * $I_L1382_695 + -3) ) * eta(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -3)
 1386.                               tx3(1 + $I_L1383_609) = $tx3_WR0_R23
 1387.                               $tx2_WR0_R24 = $tx2_WR0_R24 + $tx3_WR0_R23
 1387.                               tx2(1 + $I_L1383_609) = $tx2_WR0_R24
 1388.                               gmh(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -3) = hol(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -3) + $tx2_WR0_R24 * pri($ii_S80, k + -4 * $I_L1382_695 + -3) * ( 5.0e-1 * $albcp_S7 )
 1384.                               $ii_S80 = i1(1 + $I_L1383_609)
 1385.                               $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                               $tx3_WR0_R23 = ( qol($ii_S80, k + -4 * $I_L1382_695 + -5) + -qol($ii_S80, k + -4 * $I_L1382_695 + -4) ) * eta(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -4)
 1386.                               tx3(1 + $I_L1383_609) = $tx3_WR0_R23
 1387.                               $tx2_WR0_R24 = $tx2_WR0_R24 + $tx3_WR0_R23
 1387.                               tx2(1 + $I_L1383_609) = $tx2_WR0_R24
 1388.                               gmh(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -4) = hol(1 + $I_L1383_609, k + -4 * $I_L1382_695 + -4) + $tx2_WR0_R24 * pri($ii_S80, k + -4 * $I_L1382_695 + -4) * ( 5.0e-1 * $albcp_S7 )
 1389.                               $I_L1383_609 = 1 + $I_L1383_609
 1383.                               if ( $I_L1383_609 >= lenb ) exit
 1383.                            enddo
 1390.                            $I_L1382_695 = 1 + $I_L1382_695
 1389.                            if ( $I_L1382_695 >= _rsh( k + -ic + -1, 2 ) ) exit
 1389.                         enddo
 1390.                         $I_L1382_647 = and( 0xfffffffffffffffcUL, k + -ic + -1 )
 1390.                      endif
 1382.                      if ( $I_L1382_647 < k + -ic + -1 ) then
 1382.                         $I_L1382_677 = 0
 1382. !dir$ blocking_size( 0, 0 )
 1382.                         do
 1383.                            $I_L1383_609 = 0
 1383. !dir$ ivdep
 1383. !dir$ blocking_size( 0, 0 )
 1383.                            do
 1384.                               $ii_S80 = i1(1 + $I_L1383_609)
 1385.                               $tx2_WR0_R24 = tx3(1 + $I_L1383_609)
 1386.                               $tx3_WR0_R23 = ( qol($ii_S80, k + -$I_L1382_647 + -$I_L1382_677 + -2) + -qol($ii_S80, k + -$I_L1382_647 + -$I_L1382_677 + -1) ) * eta(1 + $I_L1383_609, k + -$I_L1382_647 + -$I_L1382_677 + -1)
 1386.                               tx3(1 + $I_L1383_609) = $tx3_WR0_R23
 1387.                               $tx2_WR0_R24 = $tx2_WR0_R24 + $tx3_WR0_R23
 1387.                               tx2(1 + $I_L1383_609) = $tx2_WR0_R24
 1388.                               gmh(1 + $I_L1383_609, k + -$I_L1382_647 + -$I_L1382_677 + -1) = hol(1 + $I_L1383_609, k + -$I_L1382_647 + -$I_L1382_677 + -1) + $tx2_WR0_R24 * pri($ii_S80, k + -$I_L1382_647 + -$I_L1382_677 + -1) * ( 5.0e-1 * $albcp_S7 )
 1389.                               $I_L1383_609 = 1 + $I_L1383_609
 1383.                               if ( $I_L1383_609 >= lenb ) exit
 1383.                            enddo
 1390.                            $I_L1382_677 = 1 + $I_L1382_677
 1389.                            if ( $I_L1382_677 >= k + -ic + -$I_L1382_647 + -1 ) exit
 1389.                         enddo
 1389.                      endif
 1389.                   endif
 1389.                endif
 1389.             endif
 1393.             if ( lenb + -$lena_S43 > 0 ) then
 1393.                $I_L1393_611 = 0
 1393. !dir$ ivdep
 1393.                do
 1394.                   tx3($lena_S43 + $I_L1393_611 + 1) = tx3($lena_S43 + $I_L1393_611 + 1) + $twobal_S82 * ( tx7($lena_S43 + $I_L1393_611 + 1) + -tx8($lena_S43 + $I_L1393_611 + 1) + -tx5($lena_S43 + $I_L1393_611 + 1) + -( qol(i1($lena_S43 + $I_L1393_611 + 1), ic) * alhl ) )
 1396.                   $I_L1393_611 = 1 + $I_L1393_611
 1393.                   if ( $I_L1393_611 >= ( lenb + -$lena_S43 ) ) exit
 1393.                enddo
 1393.             endif
 1398.             if ( lenb > 0 ) then
 1398.                $I_L1398_613 = 0
 1398. !dir$ ivdep
 1398.                do
 1399.                   gmh(1 + $I_L1398_613, ic) = tx1(1 + $I_L1398_613) + ( tx3(1 + $I_L1398_613) * ( 5.0e-1 * alhl ) + eta(1 + $I_L1398_613, ic) * tx8(1 + $I_L1398_613) ) * pri(i1(1 + $I_L1398_613), ic) * 9.9542106310969544e-4
 1401.                   $I_L1398_613 = 1 + $I_L1398_613
 1398.                   if ( $I_L1398_613 >= lenb ) exit
 1398.                enddo
 1398.             endif
 1405.             if ( 1 + ic <= -1 + k ) then
 1406.                if ( lenb > 0 ) then
 1406.                   $I_L1406_615 = 0
 1406. !dir$ ivdep
 1406.                   do
 1407.                      tx1(1 + $I_L1406_615) = gmh(1 + $I_L1406_615, k)
 1408.                      $I_L1406_615 = 1 + $I_L1406_615
 1406.                      if ( $I_L1406_615 >= lenb ) exit
 1406.                   enddo
 1406.                endif
 1409.                if ( ic + -k + 2 <= 0 ) then
 1409.                   $I_L1409_649 = 0
 1409.                   do
 1410.                      if ( lenb > 0 ) then
 1410.                         $I_L1410_617 = 0
 1410. !dir$ ivdep
 1410.                         do
 1411.                            $ii_S87 = i1(1 + $I_L1410_617)
 1412.                            tx1(1 + $I_L1410_617) = tx1(1 + $I_L1410_617) + ( eta(1 + $I_L1410_617, k + -$I_L1409_649 + -1) + -eta(1 + $I_L1410_617, k + -$I_L1409_649) ) * gmh(1 + $I_L1410_617, k + -$I_L1409_649 + -1)
 1413.                            tx2(1 + $I_L1410_617) = gam($ii_S87, k + -$I_L1409_649 + -2) * ( prj($ii_S87, k + -$I_L1409_649 + -1) + -prh($ii_S87, k + -$I_L1409_649 + -2) )
 1414.                            $I_L1410_617 = 1 + $I_L1410_617
 1410.                            if ( $I_L1410_617 >= lenb ) exit
 1410.                         enddo
 1410.                      endif
 1415.                      if ( k + -ic + -$I_L1409_649 + -2 == 0 ) then
 1416.                         if ( lenb + -$lena_S43 > 0 ) then
 1416.                            $I_L1416_619 = 0
 1416. !dir$ ivdep
 1416.                            do
 1417.                               tx2($lena_S43 + $I_L1416_619 + 1) = 0.0
 1418.                               $I_L1416_619 = 1 + $I_L1416_619
 1416.                               if ( $I_L1416_619 >= ( lenb + -$lena_S43 ) ) exit
 1416.                            enddo
 1416.                         endif
 1416.                      endif
 1420.                      if ( lenb > 0 ) then
 1420.                         $I_L1420_621 = 0
 1420. !dir$ ivdep
 1420.                         do
 1421.                            $ii_S90 = i1(1 + $I_L1420_621)
 1422.                            akm(1 + $I_L1420_621) = akm(1 + $I_L1420_621) + tx1(1 + $I_L1420_621) * ( tx2(1 + $I_L1420_621) + gam($ii_S90, k + -$I_L1409_649 + -1) * ( prh($ii_S90, k + -$I_L1409_649 + -1) + -prj($ii_S90, k + -$I_L1409_649 + -1) ) )
 1424.                            $I_L1420_621 = 1 + $I_L1420_621
 1420.                            if ( $I_L1420_621 >= lenb ) exit
 1420.                         enddo
 1420.                      endif
 1425.                      $I_L1409_649 = 1 + $I_L1409_649
 1424.                      if ( $I_L1409_649 >= k + -ic + -1 ) exit
 1424.                   enddo
 1424.                endif
 1424.             endif
 1428.             if ( lenb + -$lena_S43 > 0 ) then
 1428.                $I_L1428_623 = 0
 1428. !dir$ ivdep
 1428.                do
 1429.                   $ii_S92 = i1($lena_S43 + $I_L1428_623 + 1)
 1430.                   $tx2_WR0_R25 = 5.0e-1 * ( prs($ii_S92, ic) + prs($ii_S92, 1 + ic) ) + ( 1.0 + -tx6($lena_S43 + $I_L1428_623 + 1) ) * ( prs($ii_S92, 2 + ic) + -prs($ii_S92, ic) ) * 5.0e-1
 1430.                   tx2($lena_S43 + $I_L1428_623 + 1) = $tx2_WR0_R25
 1432.                   $tx1_WR0_R26 = prs($ii_S92, 1 + ic)
 1432.                   tx1($lena_S43 + $I_L1428_623 + 1) = $tx1_WR0_R26
 1433.                   $tx5_WR0_R27 = 5.0e-1 * ( $tx1_WR0_R26 + prs($ii_S92, 2 + ic) )
 1433.                   tx5($lena_S43 + $I_L1428_623 + 1) = $tx5_WR0_R27
 1434.                   if ( $tx2_WR0_R25 < $tx1_WR0_R26 ) then
 1428.                      goto 10
 1434.                   else if ( $tx2_WR0_R25 < $tx5_WR0_R27 ) then
 1435.                      tx6($lena_S43 + $I_L1428_623 + 1) = 1.0 + -( ( $tx2_WR0_R25 + -$tx1_WR0_R26 ) * 1.0/( $tx5_WR0_R27 + -$tx1_WR0_R26 ) )
 1436.                      $tem_S93 = ( pri($ii_S92, 1 + ic) * 1.0/pri($ii_S92, ic) )
 1437.                      hol($lena_S43 + $I_L1428_623 + 1, 1 + ic) = hol($lena_S43 + $I_L1428_623 + 1, 1 + ic) + hol($lena_S43 + $I_L1428_623 + 1, ic) * $tem_S93
 1438.                      hol($lena_S43 + $I_L1428_623 + 1, ic) = 0.0
 1439.                      gmh($lena_S43 + $I_L1428_623 + 1, 1 + ic) = gmh($lena_S43 + $I_L1428_623 + 1, 1 + ic) + gmh($lena_S43 + $I_L1428_623 + 1, ic) * $tem_S93
 1440.                      gmh($lena_S43 + $I_L1428_623 + 1, ic) = 0.0
 1440.                   else
 1440.    10                continue
 1441.                      tx6($lena_S43 + $I_L1428_623 + 1) = cvmg( 0.0, 1.0, $tx2_WR0_R25 >= $tx1_WR0_R26 )
 1441.                   endif
 1446.                   $I_L1428_623 = 1 + $I_L1428_623
 1445.                   if ( $I_L1428_623 >= ( lenb + -$lena_S43 ) ) exit
 1445.                enddo
 1445.             endif
 1448.             if ( lenc > 0 ) then
 1448.                $I_L1448_625 = 0
 1448. !dir$ ivdep
 1448.                do
 1449.                   pcu(1 + $I_L1448_625) = 0.0
 1450.                   $I_L1448_625 = 1 + $I_L1448_625
 1448.                   if ( $I_L1448_625 >= lenc ) exit
 1448.                enddo
 1448.             endif
 1452.             if ( lenb > 0 ) then
 1465.                if ( -1 + k <= ic ) then
 1452.                   $I_L1452_635 = 0
 1452. !dir$ ivdep
 1452.                   do
 1453.                      $ii_S96 = i1(1 + $I_L1452_635)
 1454.                      if ( akm(1 + $I_L1452_635) >= 0.0 ) then
 1452.                         goto 20
 1454.                      else if ( wlq(1 + $I_L1452_635) >= 0.0 ) then
 1455.                         $wfn_WR0_R29 = -( tx6(1 + $I_L1452_635) * wfn(1 + $I_L1452_635) * rasalf * 1.0/akm(1 + $I_L1452_635) )
 1455.                         wfn(1 + $I_L1452_635) = $wfn_WR0_R29
 1455.                      else
 1455.    20                   continue
 1457.                         $wfn_WR0_R29 = 0.0
 1457.                         wfn(1 + $I_L1452_635) = 0.0
 1457.                      endif
 1459.                      $tem_S97 = ( prs($ii_S96, 1 + k) + -prs($ii_S96, k) ) * ( cmb2pa * frac )
 1460.                      $wfn_WR0_R29 = min( $tem_S97, $wfn_WR0_R29 )
 1460.                      wfn(1 + $I_L1452_635) = $wfn_WR0_R29
 1472.                      tx1(1 + $I_L1452_635) = 864.0 * $wfn_WR0_R29
 1477.                      pcu($ii_S96) = wlq(1 + $I_L1452_635) * $wfn_WR0_R29 * 1.020408163265306e-1
 1481.                      tx4(1 + $I_L1452_635) = $wfn_WR0_R29 * 1.0/alhl
 1482.                      tx5(1 + $I_L1452_635) = 9.9542106310969544e-4 * $wfn_WR0_R29
 1483.                      $I_L1452_635 = 1 + $I_L1452_635
 1473.                      if ( $I_L1452_635 >= lenb ) exit
 1473.                   enddo
 1473.                else if ( ic + -k < 0 ) then
 1452.                   $I_L1452_651 = 0
 1452.                   do
 1453.                      $ii_S96 = i1(1 + $I_L1452_651)
 1454.                      if ( akm(1 + $I_L1452_651) >= 0.0 ) then
 1452.                         goto 30
 1454.                      else if ( wlq(1 + $I_L1452_651) >= 0.0 ) then
 1455.                         wfn(1 + $I_L1452_651) = -( tx6(1 + $I_L1452_651) * wfn(1 + $I_L1452_651) * rasalf * 1.0/akm(1 + $I_L1452_651) )
 1455.                      else
 1455.    30                   continue
 1457.                         wfn(1 + $I_L1452_651) = 0.0
 1457.                      endif
 1459.                      $tem_S97 = ( prs($ii_S96, 1 + k) + -prs($ii_S96, k) ) * ( cmb2pa * frac )
 1460.                      wfn(1 + $I_L1452_651) = min( $tem_S97, wfn(1 + $I_L1452_651) )
 1464.                      etamn = 0.0
 1466.                      $I_L1466_627 = 0
 1466. !dir$ ivdep
 1466.                      do
 1467.                         etamn = etamn + eta(1 + $I_L1452_651, k + -$I_L1466_627 + -1)
 1468.                         $I_L1466_627 = 1 + $I_L1466_627
 1466.                         if ( $I_L1466_627 >= ( k + -ic ) ) exit
 1466.                      enddo
 1470.                      tx1(1 + $I_L1452_651) = ( etamn * 1.0/( real( k + -ic + -1 ) ) ) * wfn(1 + $I_L1452_651) * 864.0
 1477.                      pcu($ii_S96) = wlq(1 + $I_L1452_651) * wfn(1 + $I_L1452_651) * 1.020408163265306e-1
 1481.                      tx4(1 + $I_L1452_651) = wfn(1 + $I_L1452_651) * 1.0/alhl
 1482.                      tx5(1 + $I_L1452_651) = 9.9542106310969544e-4 * wfn(1 + $I_L1452_651)
 1483.                      $I_L1452_651 = 1 + $I_L1452_651
 1473.                      if ( $I_L1452_651 >= lenb ) exit
 1473.                   enddo
 1473.                else
 1452.                   $I_L1452_637 = 0
 1452. !dir$ ivdep
 1452.                   do
 1453.                      $ii_S96 = i1(1 + $I_L1452_637)
 1454.                      if ( akm(1 + $I_L1452_637) >= 0.0 ) then
 1452.                         goto 40
 1454.                      else if ( wlq(1 + $I_L1452_637) >= 0.0 ) then
 1455.                         $wfn_WR0_R28 = -( tx6(1 + $I_L1452_637) * wfn(1 + $I_L1452_637) * rasalf * 1.0/akm(1 + $I_L1452_637) )
 1455.                         wfn(1 + $I_L1452_637) = $wfn_WR0_R28
 1455.                      else
 1455.    40                   continue
 1457.                         $wfn_WR0_R28 = 0.0
 1457.                         wfn(1 + $I_L1452_637) = 0.0
 1457.                      endif
 1459.                      $tem_S97 = ( prs($ii_S96, 1 + k) + -prs($ii_S96, k) ) * ( cmb2pa * frac )
 1460.                      $wfn_WR0_R28 = min( $tem_S97, $wfn_WR0_R28 )
 1460.                      wfn(1 + $I_L1452_637) = $wfn_WR0_R28
 1470.                      tx1(1 + $I_L1452_637) = 0.0
 1477.                      pcu($ii_S96) = wlq(1 + $I_L1452_637) * $wfn_WR0_R28 * 1.020408163265306e-1
 1481.                      tx4(1 + $I_L1452_637) = $wfn_WR0_R28 * 1.0/alhl
 1482.                      tx5(1 + $I_L1452_637) = 9.9542106310969544e-4 * $wfn_WR0_R28
 1483.                      $I_L1452_637 = 1 + $I_L1452_637
 1473.                      if ( $I_L1452_637 >= lenb ) exit
 1473.                   enddo
 1473.                endif
 1485.                $I_L1485_629 = 0
 1485. !dir$ ivdep
 1485.                do
 1486.                   $ii_S101 = i1(1 + $I_L1485_629)
 1487.                   cln($ii_S101) = tx1(1 + $I_L1485_629)
 1488.                   $I_L1485_629 = 1 + $I_L1485_629
 1485.                   if ( $I_L1485_629 >= lenb ) exit
 1485.                enddo
 1485.             endif
 1492.             if ( k + -ic >= 0 ) then
 1493.                if ( lenb > 0 ) then
 1492.                   $I_L1492_653 = 0
 1492.                   if ( k + -ic + -3 >= 0 ) then
 1492.                      $I_L1492_697 = 0
 1492. !dir$ blocking_size( 0, 0 )
 1492.                      do
 1493.                         $I_L1493_631 = 0
 1493. !dir$ ivdep
 1493. !dir$ blocking_size( 0, 0 )
 1493.                         do
 1494.                            $ii_S104 = i1(1 + $I_L1493_631)
 1495.                            $tem_S106 = ( gmh(1 + $I_L1493_631, ic + 4 * $I_L1492_697) + -hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697) ) * tx4(1 + $I_L1493_631)
 1496.                            $tem1_S105 = hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697) * tx5(1 + $I_L1493_631)
 1497.                            tcu($ii_S104, ic + 4 * $I_L1492_697) = ( $tem1_S105 * 1.0/prh($ii_S104, ic + 4 * $I_L1492_697) )
 1498.                            qcu($ii_S104, ic + 4 * $I_L1492_697) = $tem_S106
 1494.                            $ii_S104 = i1(1 + $I_L1493_631)
 1495.                            $tem_S106 = ( gmh(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 1) + -hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 1) ) * tx4(1 + $I_L1493_631)
 1496.                            $tem1_S105 = hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 1) * tx5(1 + $I_L1493_631)
 1497.                            tcu($ii_S104, ic + 4 * $I_L1492_697 + 1) = ( $tem1_S105 * 1.0/prh($ii_S104, ic + 4 * $I_L1492_697 + 1) )
 1498.                            qcu($ii_S104, ic + 4 * $I_L1492_697 + 1) = $tem_S106
 1494.                            $ii_S104 = i1(1 + $I_L1493_631)
 1495.                            $tem_S106 = ( gmh(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 2) + -hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 2) ) * tx4(1 + $I_L1493_631)
 1496.                            $tem1_S105 = hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 2) * tx5(1 + $I_L1493_631)
 1497.                            tcu($ii_S104, ic + 4 * $I_L1492_697 + 2) = ( $tem1_S105 * 1.0/prh($ii_S104, ic + 4 * $I_L1492_697 + 2) )
 1498.                            qcu($ii_S104, ic + 4 * $I_L1492_697 + 2) = $tem_S106
 1494.                            $ii_S104 = i1(1 + $I_L1493_631)
 1495.                            $tem_S106 = ( gmh(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 3) + -hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 3) ) * tx4(1 + $I_L1493_631)
 1496.                            $tem1_S105 = hol(1 + $I_L1493_631, ic + 4 * $I_L1492_697 + 3) * tx5(1 + $I_L1493_631)
 1497.                            tcu($ii_S104, ic + 4 * $I_L1492_697 + 3) = ( $tem1_S105 * 1.0/prh($ii_S104, ic + 4 * $I_L1492_697 + 3) )
 1498.                            qcu($ii_S104, ic + 4 * $I_L1492_697 + 3) = $tem_S106
 1499.                            $I_L1493_631 = 1 + $I_L1493_631
 1493.                            if ( $I_L1493_631 >= lenb ) exit
 1493.                         enddo
 1500.                         $I_L1492_697 = 1 + $I_L1492_697
 1499.                         if ( $I_L1492_697 >= _rsh( k + -ic + 1, 2 ) ) exit
 1499.                      enddo
 1500.                      $I_L1492_653 = and( 0xfffffffffffffffcUL, k + -ic + 1 )
 1500.                   endif
 1492.                   if ( $I_L1492_653 < k + -ic + 1 ) then
 1492.                      $I_L1492_680 = 0
 1492. !dir$ blocking_size( 0, 0 )
 1492.                      do
 1493.                         $I_L1493_631 = 0
 1493. !dir$ ivdep
 1493. !dir$ blocking_size( 0, 0 )
 1493.                         do
 1494.                            $ii_S104 = i1(1 + $I_L1493_631)
 1495.                            $tem_S106 = ( gmh(1 + $I_L1493_631, ic + $I_L1492_653 + $I_L1492_680) + -hol(1 + $I_L1493_631, ic + $I_L1492_653 + $I_L1492_680) ) * tx4(1 + $I_L1493_631)
 1496.                            $tem1_S105 = hol(1 + $I_L1493_631, ic + $I_L1492_653 + $I_L1492_680) * tx5(1 + $I_L1493_631)
 1497.                            tcu($ii_S104, ic + $I_L1492_653 + $I_L1492_680) = ( $tem1_S105 * 1.0/prh($ii_S104, ic + $I_L1492_653 + $I_L1492_680) )
 1498.                            qcu($ii_S104, ic + $I_L1492_653 + $I_L1492_680) = $tem_S106
 1499.                            $I_L1493_631 = 1 + $I_L1493_631
 1493.                            if ( $I_L1493_631 >= lenb ) exit
 1493.                         enddo
 1500.                         $I_L1492_680 = 1 + $I_L1492_680
 1499.                         if ( $I_L1492_680 >= k + -ic + -$I_L1492_653 + 1 ) exit
 1499.                      enddo
 1499.                   endif
 1499.                endif
 1499.             endif
 1502.             if ( k > 0 ) then
 1503.                if ( lenc > 0 ) then
 1502.                   $I_L1502_655 = 0
 1502.                   do
 1503.                      $I_L1503_633 = 0
 1503. !dir$ ivdep
 1503.                      do
 1504.                         hst(1 + $I_L1503_633, 1 + $I_L1502_655) = 0.0
 1505.                         qol(1 + $I_L1503_633, 1 + $I_L1502_655) = 0.0
 1506.                         $I_L1503_633 = 1 + $I_L1503_633
 1503.                         if ( $I_L1503_633 >= lenc ) exit
 1503.                      enddo
 1507.                      $I_L1502_655 = 1 + $I_L1502_655
 1506.                      if ( $I_L1502_655 >= k ) exit
 1506.                   enddo
 1506.                endif
 1506.             endif
 1506.          endif
 1506.       endif
 1508.       return
 1508.       end
 1508.       
 1516.       
 1516.       subroutine ras( len, lenc, k, dt, ncrnd, krmax, frac, rasal, botop, alhl, rkap, poi, qoi, uoi, voi, prs, prj, cup, cln, q1, q2, alf, bet, gam, prh, pri, hoi, eta, tcu, qcu, hst, qol, gmh, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, tx9, wfn, akm, qs1, clf, uht, vht, wlq, pcu, ia, i1, i2, kmax, kmaxm1, kmaxp1 )
 1516.       t$22 = ( -1 + k )
 1623.       t$159 = _zla( 0, ( -1 + k ) )
 1516.       t$19 = len
 1516.       t$20 = k
 1617.       t$160 = _zla( 0, len )
 1516.       t$161 = _zla( 0, len )
 1617.       t$162 = _zla( 0, k )
 1516.       t$163 = _zla( 0, len ) * _zla( 0, k )
 1516.       t$21 = ( 1 + k )
 1619.       t$164 = _zla( 0, ( 1 + k ) )
 1516.       t$165 = _zla( 0, len ) * _zla( 0, ( 1 + k ) )
 1516.       t$23 = lenc
 1637.       t$166 = _zla( 0, lenc )
 1516.       t$167 = _zla( 0, lenc )
 1516.       t$168 = _zla( 0, k ) * _zla( 0, lenc )
 1687.       setras = .false.
 1688.       $rkapp1_S2 = 1.0 + rkap
 1690.       $albcp_S9 = 9.9542106310969544e-4 * alhl
 1694.       k = kmaxm1
 1695.       if ( lenc > 0 ) then
 1695.          $I_L1695_76 = 0
 1695. !dir$ ivdep
 1695.          do
 1698.             poi(1 + $I_L1695_76, kmaxm1) = ( ( poi(1 + $I_L1695_76, kmax) * ( prs(1 + $I_L1695_76, kmaxp1) + -prs(1 + $I_L1695_76, kmax) ) + poi(1 + $I_L1695_76, kmaxm1) * ( prs(1 + $I_L1695_76, kmax) + -prs(1 + $I_L1695_76, kmaxm1) ) ) * 1.0/( prs(1 + $I_L1695_76, kmaxp1) + -prs(1 + $I_L1695_76, kmaxm1) ) )
 1701.             qoi(1 + $I_L1695_76, kmaxm1) = ( ( qoi(1 + $I_L1695_76, kmax) * ( prs(1 + $I_L1695_76, kmaxp1) + -prs(1 + $I_L1695_76, kmax) ) + qoi(1 + $I_L1695_76, kmaxm1) * ( prs(1 + $I_L1695_76, kmax) + -prs(1 + $I_L1695_76, kmaxm1) ) ) * 1.0/( prs(1 + $I_L1695_76, kmaxp1) + -prs(1 + $I_L1695_76, kmaxm1) ) )
 1706.             prj(1 + $I_L1695_76, kmax) = prj(1 + $I_L1695_76, kmaxp1)
 1708.             prs(1 + $I_L1695_76, kmax) = prs(1 + $I_L1695_76, kmaxp1)
 1702.             $I_L1695_76 = 1 + $I_L1695_76
 1695.             if ( $I_L1695_76 >= lenc ) exit
 1695.          enddo
 1695.       endif
 1710.       if ( kmaxm1 > 0 ) then
 1711.          if ( lenc > 0 ) then
 1710.             $I_L1710_92 = 0
 1710.             do
 1711.                $I_L1711_78 = 0
 1711. !dir$ ivdep
 1711.                do
 1712.                   prh(1 + $I_L1711_78, 1 + $I_L1710_92) = ( ( prj(1 + $I_L1711_78, 2 + $I_L1710_92) * prs(1 + $I_L1711_78, 2 + $I_L1710_92) + -( prj(1 + $I_L1711_78, 1 + $I_L1710_92) * prs(1 + $I_L1711_78, 1 + $I_L1710_92) ) ) * 1.0/( ( prs(1 + $I_L1711_78, 2 + $I_L1710_92) + -prs(1 + $I_L1711_78, 1 + $I_L1710_92) ) * $rkapp1_S2 ) )
 1714.                   $I_L1711_78 = 1 + $I_L1711_78
 1711.                   if ( $I_L1711_78 >= lenc ) exit
 1711.                enddo
 1717.                $I_L1717_80 = 0
 1717. !dir$ ivdep
 1717.                do
 1718.                   $tx5_WR0_R0 = poi(1 + $I_L1717_80, 1 + $I_L1710_92) * prh(1 + $I_L1717_80, 1 + $I_L1710_92)
 1718.                   tx5(1 + $I_L1717_80) = $tx5_WR0_R0
 1719.                   $tx1_WR0_R1 = 5.0e-1 * ( prs(1 + $I_L1717_80, 1 + $I_L1710_92) + prs(1 + $I_L1717_80, 2 + $I_L1710_92) )
 1719.                   tx1(1 + $I_L1717_80) = $tx1_WR0_R1
 1720.                   tx3(1 + $I_L1717_80) = $tx5_WR0_R0
 1721.                   $t_S7 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) )
 1721.                   $d_S8 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1721.                   tx2(1 + $I_L1717_80) = ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * $d_S8 )
 1721.                   $tx4_WR0_R4 = ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) )
 1721.                   tx4(1 + $I_L1717_80) = ( ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * $d_S8 ) ) * $d_S8 )
 1722.                   alf(1 + $I_L1717_80, 1 + $I_L1710_92) = ( ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) * 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) ) + -( $tx4_WR0_R4 * $tx5_WR0_R0 )
 1723.                   bet(1 + $I_L1717_80, 1 + $I_L1710_92) = ( ( ( 2.758084175464619e-1 + $t_S7 * ( 1.7766871900621335e-2 + $t_S7 * ( 4.9435463199216435e-4 + $t_S7 * ( 7.5378169874987931e-6 + $t_S7 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S7 ) ) ) ) ) + 6.0855080510827297e-1 * ( ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) * $d_S8 ) ) * $d_S8 ) * prh(1 + $I_L1717_80, 1 + $I_L1710_92)
 1724.                   gam(1 + $I_L1717_80, 1 + $I_L1710_92) = 1.0/( ( 1.0 + $tx4_WR0_R4 * $albcp_S9 ) * prh(1 + $I_L1717_80, 1 + $I_L1710_92) )
 1725.                   pri(1 + $I_L1717_80, 1 + $I_L1710_92) = ( 10.045999999999999 * 1.0/( prs(1 + $I_L1717_80, 2 + $I_L1710_92) + -prs(1 + $I_L1717_80, 1 + $I_L1710_92) ) )
 1726.                   $I_L1717_80 = 1 + $I_L1717_80
 1717.                   if ( $I_L1717_80 >= lenc ) exit
 1717.                enddo
 1715.                $I_L1710_92 = 1 + $I_L1710_92
 1714.                if ( $I_L1710_92 >= kmaxm1 ) exit
 1714.             enddo
 1714.          endif
 1714.       endif
 1732.       $onbdt_S13 = 1.0/dt
 1733.       fracs = frac * 1.0/dt
 1742.       if ( kmaxm1 + -min( krmax, -1 + kmaxm1 ) + -1 > 0 ) then
 1743.          if ( botop ) then
 1744.             $I_L1744_82 = 0
 1744. !dir$ ivdep
 1744.             do
 1745.                ic(1 + $I_L1744_82) = ( kmaxm1 + -$I_L1744_82 + -1 )
 1746.                $I_L1744_82 = 1 + $I_L1744_82
 1744.                if ( $I_L1744_82 >= kmaxm1 + -min( krmax, -1 + kmaxm1 ) + -1 ) exit
 1744.             enddo
 1744.          else
 1748.             $I_L1748_84 = 0
 1748. !dir$ ivdep
 1748.             do
 1749.                ic(kmaxm1 + -min( krmax, -1 + kmaxm1 ) + -$I_L1748_84 + -1) = ( $I_L1748_84 + min( krmax, -1 + kmaxm1 ) + 1 )
 1750.                $I_L1748_84 = 1 + $I_L1748_84
 1748.                if ( $I_L1748_84 >= kmaxm1 + -min( krmax, -1 + kmaxm1 ) + -1 ) exit
 1748.             enddo
 1748.          endif
 1748.       endif
 1774.       if ( kmaxm1 + ncrnd + -min( krmax, -1 + kmaxm1 ) + -1 > 0 ) then
 1785.          if ( lenc > 0 ) then
 1774.             $I_L1774_96 = 0
 1774.             do
 1775.                ib = ic(1 + $I_L1774_96)
 1776.                rasalf = rasal(ib) * $onbdt_S13
 1777.                ipa$107 = 100.0
 1777.                ipa$108 = 9.9990000000000001e-1
 1777.                call cloud( len, lenc, k, ib, rasalf, setras, fracs, alhl, rkap, poi(1, 1), qoi(1, 1), uoi(1, 1), voi(1, 1), prs(1, 1), prj(1, 1), pcu(1), cln(1, ib), tcu(1, 1), qcu(1, 1), alf(1, 1), bet(1, 1), gam(1, 1), prh(1, 1), pri(1, 1), hoi(1, 1), eta(1, 1), hst(1, 1), qol(1, 1), gmh(1, 1), tx1(1), tx2(1), tx3(1), tx4(1), tx5(1), tx6(1), tx7(1), tx8(1), tx9(1), wfn(1), akm(1), qs1(1), clf(1), uht(1), vht(1), wlq(1), ia(1), i1(1), i2(1), ipa$107, ipa$108 )
 1784.                if ( k + -ib >= 0 ) then
 1784.                   $I_L1784_94 = 0
 1784.                   do
 1785.                      $I_L1785_86 = 0
 1785. !dir$ ivdep
 1785.                      do
 1789.                         poi(1 + $I_L1785_86, ib + $I_L1784_94) = poi(1 + $I_L1785_86, ib + $I_L1784_94) + tcu(1 + $I_L1785_86, ib + $I_L1784_94) * dt
 1790.                         qoi(1 + $I_L1785_86, ib + $I_L1784_94) = qoi(1 + $I_L1785_86, ib + $I_L1784_94) + qcu(1 + $I_L1785_86, ib + $I_L1784_94) * dt
 1794.                         q1(1 + $I_L1785_86, ib + $I_L1784_94) = q1(1 + $I_L1785_86, ib + $I_L1784_94) + tcu(1 + $I_L1785_86, ib + $I_L1784_94) * prh(1 + $I_L1785_86, ib + $I_L1784_94) * 86400.0
 1795.                         q2(1 + $I_L1785_86, ib + $I_L1784_94) = q2(1 + $I_L1785_86, ib + $I_L1784_94) + 86400.0 * qcu(1 + $I_L1785_86, ib + $I_L1784_94)
 1796.                         $I_L1785_86 = 1 + $I_L1785_86
 1785.                         if ( $I_L1785_86 >= lenc ) exit
 1785.                      enddo
 1797.                      $I_L1784_94 = 1 + $I_L1784_94
 1796.                      if ( $I_L1784_94 >= k + -ib + 1 ) exit
 1796.                   enddo
 1796.                endif
 1801.                $I_L1801_88 = 0
 1801. !dir$ ivdep
 1801.                do
 1802.                   cup(1 + $I_L1801_88, ib) = cup(1 + $I_L1801_88, ib) + 86400.0 * pcu(1 + $I_L1801_88)
 1803.                   $I_L1801_88 = 1 + $I_L1801_88
 1801.                   if ( $I_L1801_88 >= lenc ) exit
 1801.                enddo
 1804.                $I_L1774_96 = 1 + $I_L1774_96
 1803.                if ( $I_L1774_96 >= kmaxm1 + ncrnd + -min( krmax, -1 + kmaxm1 ) + -1 ) exit
 1803.             enddo
 1803.          else
 1774.             $I_L1774_90 = 0
 1774.             do
 1775.                ib = ic(1 + $I_L1774_90)
 1776.                rasalf = rasal(ib) * $onbdt_S13
 1777.                ipa$107 = 100.0
 1777.                ipa$108 = 9.9990000000000001e-1
 1777.                call cloud( len, lenc, k, ib, rasalf, setras, fracs, alhl, rkap, poi(1, 1), qoi(1, 1), uoi(1, 1), voi(1, 1), prs(1, 1), prj(1, 1), pcu(1), cln(1, ib), tcu(1, 1), qcu(1, 1), alf(1, 1), bet(1, 1), gam(1, 1), prh(1, 1), pri(1, 1), hoi(1, 1), eta(1, 1), hst(1, 1), qol(1, 1), gmh(1, 1), tx1(1), tx2(1), tx3(1), tx4(1), tx5(1), tx6(1), tx7(1), tx8(1), tx9(1), wfn(1), akm(1), qs1(1), clf(1), uht(1), vht(1), wlq(1), ia(1), i1(1), i2(1), ipa$107, ipa$108 )
 1804.                $I_L1774_90 = 1 + $I_L1774_90
 1803.                if ( $I_L1774_90 >= kmaxm1 + ncrnd + -min( krmax, -1 + kmaxm1 ) + -1 ) exit
 1803.             enddo
 1803.          endif
 1803.       endif
 1805.       return
 1805.       end
 1805.       
 1815.       
 1815.       subroutine arprep( dtwrk, dqwrk, sl, si, fpn, ktop, kbot, rrr, hrar, qrar, dt, ftn, fqn, del, kuo, cldm, cflric, kmaxp1, kmaxm1, ncols, kmax, nls )
 1815.       t$25 = ncols
 1815.       t$26 = kmax
 1877.       t$169 = _zla( 0, ncols )
 1815.       t$170 = _zla( 0, ncols )
 1877.       t$171 = _zla( 0, kmax )
 1815.       t$172 = _zla( 0, ncols ) * _zla( 0, kmax )
 1815.       t$27 = kmaxp1
 1876.       t$173 = _zla( 0, kmaxp1 )
 1932.       t$176 = 8 * _zla( 0, ncols )
 1911.       t$177 = 8 * _zla( 0, ncols )
 1911.       t$179 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1912.       t$180 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1912.       t$182 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1938.       t$183 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1938.       t$185 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, ncols )
 1900.       t$186 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, ncols )
 1900.       t$188 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1915.       t$189 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1915.       t$191 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1913.       t$192 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1913.       t$194 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1914.       t$195 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1914.       t$197 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1916.       t$198 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1916.       t$200 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1917.       t$201 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1917.       t$203 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
 1940.       t$205 = _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 20 * _zla( 0, ncols )
 1941.       t$207 = _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 24 * _zla( 0, ncols )
 1939.       t$209 = _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols )
 1935.       t$210 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1935.       t$212 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1895.       t$213 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1895.       t$215 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1919.       t$216 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + 8 * _zla( 0, ncols )
 1919.       t$218 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1920.       t$219 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + 8 * _zla( 0, ncols )
 1920.       t$221 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1815.       t$222 = _zla( 0, ncols ) * _zla( 0, kmaxp1 )
 1893.       t$223 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1893.       t$225 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1892.       t$226 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 8 + 8 * _zla( 0, ncols )
 1892.       t$228 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1901.       t$229 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * _zla( 0, ncols )
 1901.       t$231 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1902.       t$232 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 8 * _zla( 0, ncols )
 1902.       t$234 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1904.       t$235 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * _zla( 0, ncols )
 1904.       t$237 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1896.       t$238 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * _zla( 0, ncols )
 1896.       t$240 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1918.       t$241 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * _zla( 0, ncols )
 1918.       t$243 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1933.       t$244 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * _zla( 0, ncols )
 1933.       t$246 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1815.       t$28 = kmaxm1
 1894.       t$247 = _zla( 0, kmaxm1 )
 1894.       t$248 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 16 * _zla( 0, ncols )
 1894.       t$250 = 8 * _zla( 0, kmaxm1 ) + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1906.       t$251 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 )
 1906.       t$253 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 )
 1905.       t$254 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 )
 1905.       t$256 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 )
 1899.       t$257 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 )
 1899.       t$259 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 )
 1907.       t$260 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1907.       t$262 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1903.       t$263 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1903.       t$265 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1922.       t$266 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1922.       t$268 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1923.       t$269 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1923.       t$271 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1924.       t$272 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, kmaxm1 ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( _zla( 0, ncols ) + ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 3 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1924.       t$274 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1925.       t$275 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1925.       t$277 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1926.       t$278 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1926.       t$280 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1927.       t$281 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1927.       t$283 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1928.       t$284 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1928.       t$286 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1929.       t$287 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1929.       t$289 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1930.       t$290 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1930.       t$292 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1936.       t$293 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1936.       t$295 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1897.       t$296 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1897.       t$298 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1937.       t$299 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1937.       t$301 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1898.       t$302 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1898.       t$304 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1931.       t$305 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1931.       t$307 = 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1934.       t$308 = 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1934.       t$310 = 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1815.       t$174 = int( _alloc( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1932.       t$175 = t$174
 1911.       t$178 = t$174 + 8 * _zla( 0, ncols )
 1912.       t$181 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1938.       t$184 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1900.       t$187 = t$174 + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, ncols )
 1915.       t$190 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1913.       t$193 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1914.       t$196 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1916.       t$199 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1917.       t$202 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1940.       t$204 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
 1941.       t$206 = t$174 + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 20 * _zla( 0, ncols )
 1939.       t$208 = t$174 + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 24 * _zla( 0, ncols )
 1935.       t$211 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1895.       t$214 = t$174 + 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1919.       t$217 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1920.       t$220 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1893.       t$224 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1892.       t$227 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 )
 1901.       t$230 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1902.       t$233 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1904.       t$236 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1896.       t$239 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1918.       t$242 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1933.       t$245 = t$174 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1894.       t$249 = t$174 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 16
 1906.       t$252 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 )
 1905.       t$255 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 )
 1899.       t$258 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 )
 1907.       t$261 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1903.       t$264 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1922.       t$267 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1923.       t$270 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1924.       t$273 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1925.       t$276 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1926.       t$279 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1927.       t$282 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1928.       t$285 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1929.       t$288 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1930.       t$291 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1936.       t$294 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1897.       t$297 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1937.       t$300 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1898.       t$303 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1931.       t$306 = t$174 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1934.       t$309 = t$174 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 28 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmaxp1 ) * 2 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 2 * _zla( 0, ncols ) + _zla( 0, kmaxm1 ) + 0 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1962.       botop = .true.
 1963.       len = ncols
 1964.       lenc = ncols
 1965.       k1 = kmax
 1966.       twodt = 2.0 * dt
 1968.       krmax = nls
 1969.       ncrnd = 0
 1970.       alhl = 2520000.0
 1971.       rkap = 2.8573561616563808e-1
 1972.       frac = 1.0
 1982.       if ( kmaxp1 > 0 ) then
 1984.          if ( ncols > 0 ) then
 1982.             $I_L1982_112 = 0
 1982.             do
 1983.                $cnst_S1 = _exp3( log( abs( si(1 + $I_L1982_112) ) ), si(1 + $I_L1982_112), 2.8573561616563808e-1 )
 1984.                $SCA_si_I0 = si(1 + $I_L1982_112)
 1984.                $I_L1984_94 = 0
 1984. !dir$ ivdep
 1984.                do
 1985.                   prj(1 + $I_L1984_94, kmax + -$I_L1982_112 + 1) = $cnst_S1
 1986.                   prs(1 + $I_L1984_94, kmax + -$I_L1982_112 + 1) = $SCA_si_I0 * fpn(1 + $I_L1984_94) * 10.0
 1987.                   $I_L1984_94 = 1 + $I_L1984_94
 1984.                   if ( $I_L1984_94 >= ncols ) exit
 1984.                enddo
 1988.                $I_L1982_112 = 1 + $I_L1982_112
 1987.                if ( $I_L1982_112 >= kmaxp1 ) exit
 1987.             enddo
 1987.          endif
 1987.       endif
 1989.       if ( kmax > 0 ) then
 1991.          if ( ncols > 0 ) then
 1989.             $I_L1989_114 = 0
 1989.             do
 1990.                $cnst_S4 = _exp3( log( abs( 1.0/sl(1 + $I_L1989_114) ) ), 1.0/sl(1 + $I_L1989_114), 2.8573561616563808e-1 )
 1991.                $I_L1991_96 = 0
 1991. !dir$ ivdep
 1991.                do
 1992.                   poi(1 + $I_L1991_96, kmax + -$I_L1989_114) = dtwrk(1 + $I_L1991_96, 1 + $I_L1989_114) * $cnst_S4
 1993.                   qoi(1 + $I_L1991_96, kmax + -$I_L1989_114) = dqwrk(1 + $I_L1991_96, 1 + $I_L1989_114)
 1994.                   hrar(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1995.                   qrar(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1996.                   uoi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1997.                   voi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1998.                   cln(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1999.                   q1(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2000.                   q2(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2001.                   tcu(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2002.                   qcu(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2003.                   alf(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2004.                   bet(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2005.                   gam(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2006.                   gmh(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2007.                   eta(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2008.                   hoi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2009.                   hst(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2010.                   qol(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2011.                   prh(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2012.                   pri(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2013.                   rvd(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2014.                   $I_L1991_96 = 1 + $I_L1991_96
 1991.                   if ( $I_L1991_96 >= ncols ) exit
 1991.                enddo
 2015.                $I_L1989_114 = 1 + $I_L1989_114
 2014.                if ( $I_L1989_114 >= kmax ) exit
 2014.             enddo
 2014.          endif
 2014.       endif
 2016.       if ( kmaxm1 > 0 ) then
 2016.          $I_L2016_98 = 0
 2016. !dir$ ivdep
 2016.          do
 2017.             rasal(1 + $I_L2016_98) = 1.3888888888888889e-4 * twodt
 2018.             $I_L2016_98 = 1 + $I_L2016_98
 2016.             if ( $I_L2016_98 >= kmaxm1 ) exit
 2016.          enddo
 2016.       endif
 2019.       if ( ncols > 0 ) then
 2019.          $I_L2019_100 = 0
 2019. !dir$ ivdep
 2019.          do
 2020.             rrr(1 + $I_L2019_100) = 0.0
 2022.             ktop(1 + $I_L2019_100) = 3
 2023.             kbot(1 + $I_L2019_100) = 3
 2024.             tx9(1 + $I_L2019_100) = 0.0
 2028.             cldm(1 + $I_L2019_100) = 0.0
 2029.             $I_L2019_100 = 1 + $I_L2019_100
 2019.             if ( $I_L2019_100 >= ncols ) exit
 2019.          enddo
 2019.       endif
 2033.       call ras( len, lenc, k1, twodt, ncrnd, krmax, frac, rasal(1), botop, alhl, rkap, poi(1, 1), qoi(1, 1), uoi(1, 1), voi(1, 1), prs(1, 1), prj(1, 1), rvd(1, 1), cln(1, 1), q1(1, 1), q2(1, 1), alf(1, 1), bet(1, 1), gam(1, 1), prh(1, 1), pri(1, 1), hoi(1, 1), eta(1, 1), tcu(1, 1), qcu(1, 1), hst(1, 1), qol(1, 1), gmh(1, 1), tx1(1), tx2(1), tx3(1), tx4(1), tx5(1), tx6(1), tx7(1), tx8(1), tx9(1), wfn(1), akm(1), qs1(1), clf(1), uht(1), vht(1), wlq(1), pcu(1), ia(1), i1(1), i2(1), kmax, kmaxm1, kmaxp1 )
 2044.       if ( kmax > 0 ) then
 2045.          if ( ncols > 0 ) then
 2044.             $SI_L2044_102_G3 = 0
 2044.             do
 2045.                $I_L2045_116 = 0
 2045. !dir$ ivdep
 2045. !dir$ blocking_size( 0, 0 )
 2045.                do
 2044.                   $I_L2044_122 = 0
 2044. !dir$ unroll 4
 2044. !dir$ blocking_size( 256, 256 )
 2044.                   do
 2046.                      if ( cln(1 + $I_L2045_116, kmaxp1 + -$I_L2044_122 + -256 * $SI_L2044_102_G3 + -1) > 0.0 ) then
 2047.                         ktop(1 + $I_L2045_116) = ( $I_L2044_122 + 256 * $SI_L2044_102_G3 + 1 )
 2051.                         cldm(1 + $I_L2045_116) = cldm(1 + $I_L2045_116) + cln(1 + $I_L2045_116, kmaxp1 + -$I_L2044_122 + -256 * $SI_L2044_102_G3 + -1)
 2051.                      endif
 2044.                      $I_L2044_122 = 1 + $I_L2044_122
 2055.                      if ( $I_L2044_122 >= min( kmax, 256 + 256 * $SI_L2044_102_G3 ) + -256 * $SI_L2044_102_G3 ) exit
 2055.                   enddo
 2056.                   $I_L2045_116 = 1 + $I_L2045_116
 2056.                   if ( $I_L2045_116 >= ncols ) exit
 2056.                enddo
 2044.                $SI_L2044_102_G3 = 1 + $SI_L2044_102_G3
 2056.                if ( $SI_L2044_102_G3 >= _rsh( 255 + kmax, 8 ) ) exit
 2056.             enddo
 2058.             $I_L2058_118 = 0
 2058.             do
 2059.                $I_L2059_104 = 0
 2059. !dir$ ivdep
 2059.                do
 2060.                   hrar(1 + $I_L2059_104, 1 + $I_L2058_118) = 1.1574074074074073e-5 * q1(1 + $I_L2059_104, kmaxp1 + -$I_L2058_118 + -1)
 2061.                   qrar(1 + $I_L2059_104, 1 + $I_L2058_118) = 1.1574074074074073e-5 * q2(1 + $I_L2059_104, kmaxp1 + -$I_L2058_118 + -1)
 2062.                   ftn(1 + $I_L2059_104, 1 + $I_L2058_118) = dtwrk(1 + $I_L2059_104, 1 + $I_L2058_118) + twodt * q1(1 + $I_L2059_104, kmaxp1 + -$I_L2058_118 + -1) * 1.1574074074074073e-5
 2063.                   fqn(1 + $I_L2059_104, 1 + $I_L2058_118) = dqwrk(1 + $I_L2059_104, 1 + $I_L2058_118) + twodt * q2(1 + $I_L2059_104, kmaxp1 + -$I_L2058_118 + -1) * 1.1574074074074073e-5
 2064.                   rvd(1 + $I_L2059_104, 1 + $I_L2058_118) = twodt * rvd(1 + $I_L2059_104, 1 + $I_L2058_118) * 1.1574074074074073e-5
 2065.                   $I_L2059_104 = 1 + $I_L2059_104
 2059.                   if ( $I_L2059_104 >= ncols ) exit
 2059.                enddo
 2066.                $I_L2058_118 = 1 + $I_L2058_118
 2065.                if ( $I_L2058_118 >= kmax ) exit
 2065.             enddo
 2065.          endif
 2065.       endif
 2067.       if ( ncols > 0 ) then
 2067.          $I_L2067_106 = 0
 2067. !dir$ ivdep
 2067.          do
 2068.             cldm(1 + $I_L2067_106) = 3.5000000000000003e-2 * log( 1.0 + cldm(1 + $I_L2067_106) )
 2074.             hrar(1 + $I_L2067_106, 1) = hrar(1 + $I_L2067_106, 2)
 2075.             qrar(1 + $I_L2067_106, 1) = qrar(1 + $I_L2067_106, 2)
 2076.             ftn(1 + $I_L2067_106, 1) = dtwrk(1 + $I_L2067_106, 1) + twodt * hrar(1 + $I_L2067_106, 2)
 2077.             fqn(1 + $I_L2067_106, 1) = dqwrk(1 + $I_L2067_106, 1) + twodt * qrar(1 + $I_L2067_106, 2)
 2069.             $I_L2067_106 = 1 + $I_L2067_106
 2067.             if ( $I_L2067_106 >= ncols ) exit
 2067.          enddo
 2067.       endif
 2082.       ipa$435 = 1
 2082.       call rnevp( ftn(1, 1), fqn(1, 1), rvd(1, 1), fpn(1), sl(1), del(1), cflric, rnew(1), rdum(1), twodt, ncols, kmax, ipa$435 )
 2087.       if ( ncols > 0 ) then
 2087.          $I_L2087_108 = 0
 2087. !dir$ ivdep
 2087.          do
 2088.             $rrr_WR0_R0 = 5.0000000000000001e-4 * rnew(1 + $I_L2087_108)
 2088.             rrr(1 + $I_L2087_108) = $rrr_WR0_R0
 2089.             if ( $rrr_WR0_R0 > 0.0 ) then
 2089.                kuo(1 + $I_L2087_108) = 1
 2089.             endif
 2090.             $I_L2087_108 = 1 + $I_L2087_108
 2089.             if ( $I_L2087_108 >= ncols ) exit
 2089.          enddo
 2089.       endif
 2092.       if ( kmax > 0 ) then
 2093.          if ( ncols > 0 ) then
 2092.             $I_L2092_120 = 0
 2092.             do
 2093.                $I_L2093_110 = 0
 2093. !dir$ ivdep
 2093.                do
 2094.                   hrar(1 + $I_L2093_110, 1 + $I_L2092_120) = ( ( ftn(1 + $I_L2093_110, 1 + $I_L2092_120) + -dtwrk(1 + $I_L2093_110, 1 + $I_L2092_120) ) * 1.0/twodt )
 2095.                   qrar(1 + $I_L2093_110, 1 + $I_L2092_120) = ( ( fqn(1 + $I_L2093_110, 1 + $I_L2092_120) + -dqwrk(1 + $I_L2093_110, 1 + $I_L2092_120) ) * 1.0/twodt )
 2096.                   $I_L2093_110 = 1 + $I_L2093_110
 2093.                   if ( $I_L2093_110 >= ncols ) exit
 2093.                enddo
 2097.                $I_L2092_120 = 1 + $I_L2092_120
 2096.                if ( $I_L2092_120 >= kmax ) exit
 2096.             enddo
 2096.          endif
 2096.       endif
 1815.       _free( t$174 )
 2098.       return
 2098.       end
 2098.       
 2103.       
 2103.       subroutine shllcl( dt, ps, sl, si, qn1, tn1, kuo, plcl, kktop, kkbot, ncols, kmax )
 2103.       t$29 = ncols
 2147.       t$311 = _zla( 0, ncols )
 2103.       t$30 = kmax
 2148.       t$312 = _zla( 0, kmax )
 2103.       t$31 = ( 1 + kmax )
 2149.       t$313 = _zla( 0, ( 1 + kmax ) )
 2103.       t$314 = _zla( 0, ncols )
 2103.       t$315 = _zla( 0, ncols ) * _zla( 0, kmax )
 2170.       t$318 = 8 * _zla( 0, ncols )
 2169.       t$319 = 8 * _zla( 0, ncols )
 2169.       t$321 = 16 * _zla( 0, ncols )
 2163.       t$322 = 16 * _zla( 0, ncols )
 2163.       t$324 = 24 * _zla( 0, ncols )
 2171.       t$325 = 24 * _zla( 0, ncols )
 2171.       t$327 = 32 * _zla( 0, ncols )
 2173.       t$329 = 36 * _zla( 0, ncols )
 2175.       t$331 = 40 * _zla( 0, ncols )
 2176.       t$333 = 44 * _zla( 0, ncols )
 2174.       t$335 = 48 * _zla( 0, ncols )
 2157.       t$336 = 48 * _zla( 0, ncols )
 2157.       t$338 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 48 * _zla( 0, ncols )
 2166.       t$339 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 48 * _zla( 0, ncols )
 2166.       t$341 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 56 * _zla( 0, ncols )
 2168.       t$342 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 56 * _zla( 0, ncols )
 2168.       t$344 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 64 * _zla( 0, ncols )
 2159.       t$345 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 64 * _zla( 0, ncols )
 2159.       t$347 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 2161.       t$348 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 2161.       t$350 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 2165.       t$351 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 2165.       t$353 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 72 * _zla( 0, ncols )
 2164.       t$354 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 72 * _zla( 0, ncols )
 2164.       t$356 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 80 * _zla( 0, ncols )
 2172.       t$357 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 80 * _zla( 0, ncols )
 2172.       t$359 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 88 * _zla( 0, ncols )
 2158.       t$360 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 88 * _zla( 0, ncols )
 2158.       t$362 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 2167.       t$363 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 2167.       t$365 = _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 96 * _zla( 0, ncols )
 2160.       t$366 = _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 96 * _zla( 0, ncols )
 2160.       t$368 = 96 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 2162.       t$369 = 96 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 2162.       t$371 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 104 * _zla( 0, ncols )
 2103.       t$316 = int( _alloc( _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 104 * _zla( 0, ncols ) ), 8 )
 2170.       t$317 = t$316
 2169.       t$320 = t$316 + 8 * _zla( 0, ncols )
 2163.       t$323 = t$316 + 16 * _zla( 0, ncols )
 2171.       t$326 = t$316 + 24 * _zla( 0, ncols )
 2173.       t$328 = t$316 + 32 * _zla( 0, ncols )
 2175.       t$330 = t$316 + 36 * _zla( 0, ncols )
 2176.       t$332 = t$316 + 40 * _zla( 0, ncols )
 2174.       t$334 = t$316 + 44 * _zla( 0, ncols )
 2157.       t$337 = t$316 + 48 * _zla( 0, ncols )
 2166.       t$340 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 48 * _zla( 0, ncols )
 2168.       t$343 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 56 * _zla( 0, ncols )
 2159.       t$346 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 64 * _zla( 0, ncols )
 2161.       t$349 = t$316 + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 2165.       t$352 = t$316 + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 2164.       t$355 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 72 * _zla( 0, ncols )
 2172.       t$358 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 80 * _zla( 0, ncols )
 2158.       t$361 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 88 * _zla( 0, ncols )
 2167.       t$364 = t$316 + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 2160.       t$367 = t$316 + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 96 * _zla( 0, ncols )
 2162.       t$370 = t$316 + 96 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 2188.       if ( dt == 0.0 ) then
 2103.          _free( t$316 )
 2103.       else
 2192.          if ( ncols > 0 ) then
 2192.             $I_L2192_92 = 0
 2192. !dir$ ivdep
 2192.             do
 2193.                kktop(1 + $I_L2192_92) = 1
 2194.                kkbot(1 + $I_L2192_92) = 1
 2195.                llift(1 + $I_L2192_92) = .false.
 2216.                hnew(1 + $I_L2192_92) = 1.0e-2 * ps(1 + $I_L2192_92)
 2197.                $I_L2192_92 = 1 + $I_L2192_92
 2192.                if ( $I_L2192_92 >= ncols ) exit
 2192.             enddo
 2192.          endif
 2201.          if ( kmax > 0 ) then
 2201.             $I_L2201_94 = 0
 2201. !dir$ ivdep
 2201.             do
 2202.                if ( si(1 + $I_L2201_94) < sthick .orelse. si(2 + $I_L2201_94) >= sthick ) then
 2206.                   $I_L2201_94 = 1 + $I_L2201_94
 2205.                else
 2205.                endif
 2205.                if ( $I_L2201_94 >= kmax ) exit
 2205.             enddo
 2220.             if ( ncols > 0 ) then
 2219.                $I_L2219_108 = 0
 2219.                do
 2220.                   $SCA_sl_I0 = sl(1 + $I_L2219_108)
 2220.                   $I_L2220_96 = 0
 2220. !dir$ ivdep
 2220.                   do
 2221.                      press(1 + $I_L2220_96, 1 + $I_L2219_108) = $SCA_sl_I0 * ps(1 + $I_L2220_96)
 2237.                      tin(1 + $I_L2220_96, 1 + $I_L2219_108) = tn1(1 + $I_L2220_96, 1 + $I_L2219_108)
 2222.                      $I_L2220_96 = 1 + $I_L2220_96
 2220.                      if ( $I_L2220_96 >= ncols ) exit
 2220.                   enddo
 2229.                   $I_L2229_98 = 0
 2229. !dir$ ivdep
 2229.                   do
 2230.                      qin(1 + $I_L2229_98, 1 + $I_L2219_108) = qn1(1 + $I_L2229_98, 1 + $I_L2219_108)
 2231.                      if ( qn1(1 + $I_L2229_98, 1 + $I_L2219_108) <= 0.0 ) then
 2231.                         qin(1 + $I_L2229_98, 1 + $I_L2219_108) = 9.9999999999999998e-13
 2231.                      endif
 2232.                      $I_L2229_98 = 1 + $I_L2229_98
 2231.                      if ( $I_L2229_98 >= ncols ) exit
 2231.                   enddo
 2223.                   $I_L2219_108 = 1 + $I_L2219_108
 2222.                   if ( $I_L2219_108 >= kmax ) exit
 2222.                enddo
 2222.             endif
 2222.          endif
 2241.          if ( ncols > 0 ) then
 2241.             $I_L2241_100 = 0
 2241. !dir$ ivdep
 2241.             do
 2242.                qex1(1 + $I_L2241_100) = 0.0
 2243.                qpar(1 + $I_L2241_100) = qin(1 + $I_L2241_100, ki)
 2244.                $I_L2241_100 = 1 + $I_L2241_100
 2241.                if ( $I_L2241_100 >= ncols ) exit
 2241.             enddo
 2241.          endif
 2248.          if ( kthick + -ki >= 0 ) then
 2249.             if ( ncols > 0 ) then
 2249.                $I_L2249_110 = 0
 2249. !dir$ ivdep
 2249.                do
 2248.                   $SCA_llift_I1 = llift(1 + $I_L2249_110)
 2248.                   $I_L2248_102 = 0
 2248.                   do
 2250.                      if ( $SCA_llift_I1 == 0 ) then
 2251.                         tpar(1 + $I_L2249_110) = tin(1 + $I_L2249_110, ki) * _expn( 2.8573561616563808e-1 * log( ( press(1 + $I_L2249_110, ki + $I_L2248_102) * 1.0/press(1 + $I_L2249_110, ki) ) ) )
 2253.                         $tx_S12 = tpar(1 + $I_L2249_110) + -tbase
 2253.                         if ( tpar(1 + $I_L2249_110) + -tbase >= -50.0 ) then
 2253.                            $es3_S13 = 6.1070420000000003e-1 + $tx_S12 * ( 4.4411569999999997e-2 + $tx_S12 * ( 1.4320979999999999e-3 + $tx_S12 * ( 2.6513960000000001e-5 + $tx_S12 * ( 3.0099980000000002e-7 + $tx_S12 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S12 ) ) ) ) )
 2253.                         else
 2253.                            $es3_S13 = 6.3600000000000002e-3 * _expn( ( 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S12 ) * 25.600000000000001 ) )
 2253.                         endif
 2254.                         qspar(1 + $I_L2249_110) = ( 1.0/( press(1 + $I_L2249_110, ki + $I_L2248_102) + -3.78e-1 * $es3_S13 ) * $es3_S13 * 6.22e-1 )
 2256.                         qexces(1 + $I_L2249_110) = qpar(1 + $I_L2249_110) + -qspar(1 + $I_L2249_110)
 2260.                         if ( qexces(1 + $I_L2249_110) < 0.0 ) then
 2261.                            qex1(1 + $I_L2249_110) = qexces(1 + $I_L2249_110)
 2266.                         else if ( -$I_L2248_102 == 0 ) then
 2267.                            plcl(1 + $I_L2249_110) = press(1 + $I_L2249_110, ki + $I_L2248_102)
 2268.                            tlcl(1 + $I_L2249_110) = tpar(1 + $I_L2249_110)
 2269.                            tlcl(1 + $I_L2249_110) = 1.0 + tlcl(1 + $I_L2249_110)
 2270.                            slcl(1 + $I_L2249_110) = ( plcl(1 + $I_L2249_110) * 1.0/ps(1 + $I_L2249_110) )
 2271.                            ll(1 + $I_L2249_110) = ( ki + $I_L2248_102 )
 2272.                            kkbot(1 + $I_L2249_110) = ( ki + $I_L2248_102 )
 2273.                            $SCA_llift_I1 = .true.
 2273.                         else
 2275.                            $LD_SPLT_P0 = qex1(1 + $I_L2249_110)
 2275.                            dqdp(1 + $I_L2249_110) = ( ( qexces(1 + $I_L2249_110) + -$LD_SPLT_P0 ) * 1.0/( press(1 + $I_L2249_110, ki + $I_L2248_102 + -1) + -press(1 + $I_L2249_110, ki + $I_L2248_102) ) )
 2277.                            deltap(1 + $I_L2249_110) = ( qexces(1 + $I_L2249_110) * 1.0/dqdp(1 + $I_L2249_110) )
 2278.                            plcl(1 + $I_L2249_110) = press(1 + $I_L2249_110, ki + $I_L2248_102) + deltap(1 + $I_L2249_110)
 2279.                            tlcl(1 + $I_L2249_110) = tpar(1 + $I_L2249_110) * ( 1.0 + ( 1.0/( press(1 + $I_L2249_110, ki + $I_L2248_102) + press(1 + $I_L2249_110, ki + $I_L2248_102 + -1) ) * deltap(1 + $I_L2249_110) * 5.7147123233127617e-1 ) )
 2281.                            $LD_SPLT_P2 = tlcl(1 + $I_L2249_110)
 2281.                            tlcl(1 + $I_L2249_110) = 1.0 + $LD_SPLT_P2
 2282.                            $LD_SPLT_P1 = plcl(1 + $I_L2249_110)
 2282.                            slcl(1 + $I_L2249_110) = ( $LD_SPLT_P1 * 1.0/ps(1 + $I_L2249_110) )
 2283.                            ll(1 + $I_L2249_110) = ( ki + $I_L2248_102 )
 2284.                            kkbot(1 + $I_L2249_110) = ( ki + $I_L2248_102 )
 2285.                            $SCA_llift_I1 = .true.
 2285.                         endif
 2285.                      endif
 2295.                      $I_L2248_102 = 1 + $I_L2248_102
 2293.                      if ( $I_L2248_102 >= kthick + -ki + 1 ) exit
 2293.                   enddo
 2248.                   llift(1 + $I_L2249_110) = $SCA_llift_I1
 2294.                   $I_L2249_110 = 1 + $I_L2249_110
 2294.                   if ( $I_L2249_110 >= ncols ) exit
 2294.                enddo
 2294.             endif
 2294.          endif
 2300.          if ( ncols > 0 ) then
 2300.             $I_L2300_104 = 0
 2300. !dir$ ivdep
 2300.             do
 2301.                if ( llift(1 + $I_L2300_104) == 0 ) then
 2302.                   plcl(1 + $I_L2300_104) = 1.0
 2303.                   kuo(1 + $I_L2300_104) = 5
 2303.                endif
 2305.                $I_L2300_104 = 1 + $I_L2300_104
 2304.                if ( $I_L2300_104 >= ncols ) exit
 2304.             enddo
 2304.          endif
 2306.          call mstad2( hnew(1), sl(1), tin(1, 1), tmst(1, 1), qmst(1, 1), kktop(1), ier(1), slcl(1), ll(1), qin(1, 1), tlcl(1), llift(1), ncols, kmax )
 2312.          if ( ncols > 0 ) then
 2312.             $I_L2312_106 = 0
 2312. !dir$ ivdep
 2312.             do
 2313.                if ( llift(1 + $I_L2312_106) ) then
 2314.                   if ( ier(1 + $I_L2312_106) /= 0 ) then
 2315.                      kuo(1 + $I_L2312_106) = 6
 2316.                      kktop(1 + $I_L2312_106) = 1
 2317.                      plcl(1 + $I_L2312_106) = 10.0
 2317.                   endif
 2317.                endif
 2323.                $I_L2312_106 = 1 + $I_L2312_106
 2322.                if ( $I_L2312_106 >= ncols ) exit
 2322.             enddo
 2322.          endif
 2103.          _free( t$316 )
 2103.       endif
 2324.       return
 2324.       end
 2324.       
    6.       
    6.       module modconras
 2326.       return
 2326.       end
 2326.       
