       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Rad_COLA.f90
       !        File                  :  Rad_COLA.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   42.       
   42.       subroutine initradcola
   45.       $I_L45_0 = 0
   45. !dir$ ivdep
   45.       do
   45.          b2501(1 + $I_L45_0) = t$546(1 + $I_L45_0)
   55.          b2502(1 + $I_L45_0) = t$547(1 + $I_L45_0)
   65.          blkwin(1 + $I_L45_0) = t$548(1 + $I_L45_0)
   75.          blkco2(1 + $I_L45_0) = t$549(1 + $I_L45_0)
   45.          $I_L45_0 = 1 + $I_L45_0
   45.          if ( $I_L45_0 >= 32 ) exit
   45.       enddo
   90.       $I_L90_2 = 0
   90. !dir$ ivdep
   90.       do
   90.          xk(1 + $I_L90_2) = t$550(1 + $I_L90_2)
   94.          fk(1 + $I_L90_2) = t$551(1 + $I_L90_2)
   90.          $I_L90_2 = 1 + $I_L90_2
   90.          if ( $I_L90_2 >= 10 ) exit
   90.       enddo
  101.       return
  101.       end
  101.       
  111.       
  111.       subroutine crunch( indx1, indx2, ncols, kmax, h0p, h1p, ozone, txuf, tv1, tv2, tui, tui2, x1, x2, cc, rawi, x3, x4, ch, css, ccu, shi, shu, wdel, fw, pai, tai, ozai, ubar, vbar, wbar, ubarm, vbarm, wbarm, fluxu, fluxd )
  111.       t$2 = ncols
  111.       t$3 = ( 2 + kmax )
  176.       t$36 = _zla( 0, ncols )
  111.       t$37 = _zla( 0, ncols )
  176.       t$38 = _zla( 0, ( 2 + kmax ) )
  111.       t$39 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
  111.       t$40 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, ( 2 + kmax ) )
  111.       t$4 = ( 3 + kmax )
  177.       t$41 = _zla( 0, ( 3 + kmax ) )
  111.       t$42 = _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
  111.       t$43 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
  111.       t$5 = ( 1 + kmax )
  191.       t$44 = _zla( 0, ( 1 + kmax ) )
  111.       t$45 = _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  209.       t$48 = 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  210.       t$49 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  210.       t$51 = t$49 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  214.       t$52 = 8 * ( 7 + t$49 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  214.       t$54 = t$52 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  213.       t$55 = 8 * ( 7 + t$52 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  213.       t$57 = t$55 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  217.       t$58 = 8 * ( 7 + t$55 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  217.       t$60 = t$58 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  211.       t$61 = 8 * ( 7 + t$58 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  211.       t$63 = t$61 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  215.       t$64 = 8 * ( 7 + t$61 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  215.       t$66 = t$64 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  212.       t$67 = 8 * ( 7 + t$64 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  212.       t$69 = t$67 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  216.       t$70 = 8 * ( 7 + t$67 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  216.       t$72 = t$70 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  111.       t$46 = int( _alloc( t$70 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ), 8 )
  209.       t$47 = t$46
  210.       t$50 = t$49 + t$46
  214.       t$53 = t$52 + t$46
  213.       t$56 = t$55 + t$46
  217.       t$59 = t$58 + t$46
  211.       t$62 = t$61 + t$46
  215.       t$65 = t$64 + t$46
  212.       t$68 = t$67 + t$46
  216.       t$71 = t$70 + t$46
  265.       if ( ozone /= .false. ) then
  266.          if ( indx2 + -indx1 == 0 ) then
  267.             if ( indx2 == 1 ) then
  268.                if ( kmax >= 0 ) then
  269.                   if ( ncols > 0 ) then
  268.                      $I_L268_488 = 0
  268.                      do
  269.                         $I_L269_464 = 0
  269. !dir$ ivdep
  269.                         do
  270.                            x1(1 + $I_L269_464, 1 + $I_L268_488) = abs( ubar(1 + $I_L269_464, 2 + $I_L268_488) )
  271.                            x2(1 + $I_L269_464, 1 + $I_L268_488) = abs( vbar(1 + $I_L269_464, 2 + $I_L268_488) )
  272.                            x3(1 + $I_L269_464, 1 + $I_L268_488) = abs( wbar(1 + $I_L269_464, 2 + $I_L268_488) )
  273.                            adel(1 + $I_L269_464, 1 + $I_L268_488) = abs( tai(1 + $I_L269_464, 2 + $I_L268_488) )
  274.                            bdel(1 + $I_L269_464, 1 + $I_L268_488) = abs( ch(1 + $I_L269_464, 2 + $I_L268_488) )
  275.                            $I_L269_464 = 1 + $I_L269_464
  269.                            if ( $I_L269_464 >= ncols ) exit
  269.                         enddo
  276.                         $I_L268_488 = 1 + $I_L268_488
  275.                         if ( $I_L268_488 >= 1 + kmax ) exit
  275.                      enddo
  275.                   endif
  275.                endif
  277.             else if ( kmax >= 0 ) then
  279.                if ( ncols > 0 ) then
  278.                   $I_L278_486 = 0
  278. !dir$ blocking_size( 1, 1 )
  278.                   do
  279.                      $I_L279_462 = 0
  279. !dir$ ivdep
  279. !dir$ blocking_size( 256, 256 )
  279.                      do
  280.                         $x1_WR0_R0 = ubar(1 + $I_L279_462, 2 + kmax) + -ubar(1 + $I_L279_462, 1 + $I_L278_486)
  281.                         $x2_WR0_R1 = vbar(1 + $I_L279_462, 2 + kmax) + -vbar(1 + $I_L279_462, 1 + $I_L278_486)
  282.                         $x3_WR0_R2 = wbar(1 + $I_L279_462, 2 + kmax) + -wbar(1 + $I_L279_462, 1 + $I_L278_486)
  283.                         $adel_WR0_R3 = tai(1 + $I_L279_462, 2 + kmax) + -tai(1 + $I_L279_462, 1 + $I_L278_486)
  284.                         $bdel_WR0_R4 = ch(1 + $I_L279_462, 2 + kmax) + -ch(1 + $I_L279_462, 1 + $I_L278_486)
  285.                         $wdel_WR0_R5 = fluxu(1 + $I_L279_462, 2 + kmax) + -fluxu(1 + $I_L279_462, 1 + $I_L278_486)
  286.                         $fw_WR0_R6 = fluxd(1 + $I_L279_462, 2 + kmax) + -fluxd(1 + $I_L279_462, 1 + $I_L278_486)
  287.                         $x1_WR0_R0 = abs( $x1_WR0_R0 )
  287.                         x1(1 + $I_L279_462, 1 + $I_L278_486) = $x1_WR0_R0
  288.                         $x2_WR0_R1 = abs( $x2_WR0_R1 )
  288.                         x2(1 + $I_L279_462, 1 + $I_L278_486) = $x2_WR0_R1
  289.                         $x3_WR0_R2 = abs( $x3_WR0_R2 )
  289.                         x3(1 + $I_L279_462, 1 + $I_L278_486) = $x3_WR0_R2
  290.                         $adel_WR0_R3 = abs( $adel_WR0_R3 )
  290.                         adel(1 + $I_L279_462, 1 + $I_L278_486) = $adel_WR0_R3
  291.                         $bdel_WR0_R4 = abs( $bdel_WR0_R4 )
  291.                         bdel(1 + $I_L279_462, 1 + $I_L278_486) = $bdel_WR0_R4
  292.                         $wdel_WR0_R5 = abs( $wdel_WR0_R5 )
  292.                         wdel(1 + $I_L279_462, 1 + $I_L278_486) = $wdel_WR0_R5
  293.                         $fw_WR0_R6 = abs( $fw_WR0_R6 )
  293.                         fw(1 + $I_L279_462, 1 + $I_L278_486) = $fw_WR0_R6
  294.                         $I_L279_462 = 1 + $I_L279_462
  279.                         if ( $I_L279_462 >= ncols ) exit
  279.                      enddo
  295.                      $I_L278_486 = 1 + $I_L278_486
  294.                      if ( $I_L278_486 >= 1 + kmax ) exit
  294.                   enddo
  294.                endif
  294.             endif
  298.             if ( kmax >= 0 ) then
  299.                if ( ncols > 0 ) then
  298.                   $I_L298_490 = 0
  298.                   do
  299.                      $I_L299_466 = 0
  299. !dir$ ivdep
  299.                      do
  300.                         $fu_S18 = -9.7899999999999991 * x1(1 + $I_L299_466, 1 + $I_L298_490)
  301.                         $yw_S6 = _expn( 8.2999999999999996e-1 * log( 1.0e-100 + x1(1 + $I_L299_466, 1 + $I_L298_490) ) )
  302.                         $ww_S7 = _expn( 5.9999999999999998e-1 * log( 1.0e-100 + x3(1 + $I_L299_466, 1 + $I_L298_490) ) )
  305.                         $ww_S14 = ( -6.7000000000000002 * x3(1 + $I_L299_466, 1 + $I_L298_490) * 1.0/( h1p + 16.0 * $ww_S7 ) ) + -27.0 * $yw_S6
  306.                         $yw_S8 = _expn( 5.6000000000000005e-1 * log( 1.0e-100 + adel(1 + $I_L299_466, 1 + $I_L298_490) ) )
  308.                         $yv_S13 = ( -3.1000000000000001 * adel(1 + $I_L299_466, 1 + $I_L298_490) * 1.0/( h1p + 15.1 * $yw_S8 ) )
  310.                         $yw_S10 = _expn( 5.6999999999999995e-1 * log( 1.0e-100 + bdel(1 + $I_L299_466, 1 + $I_L298_490) ) )
  312.                         $wv_S16 = ( -4.0000000000000001e-2 * bdel(1 + $I_L299_466, 1 + $I_L298_490) * 1.0/( h1p + 9.0000000000000002e-1 * $yw_S10 ) )
  314.                         $fw_S12 = ( 9.8692326671601278e-4 * fw(1 + $I_L299_466, 1 + $I_L298_490) * 1.0/wdel(1 + $I_L299_466, 1 + $I_L298_490) )
  315.                         $zv_S29 = ( 1570.1682582992269 * wdel(1 + $I_L299_466, 1 + $I_L298_490) * 1.0/$fw_S12 )
  321.                         $adel_S33 = _expn( ( $yv_S13 + $ww_S14 ) )
  322.                         $bdel_S32 = _expn( ( $ww_S14 + $wv_S16 ) )
  323.                         $wdel_S31 = _expn( $fu_S18 )
  324.                         $yw_S20 = _sqrt( x2(1 + $I_L299_466, 1 + $I_L298_490) )
  325.                         $zw_S19 = _sqrt( x3(1 + $I_L299_466, 1 + $I_L298_490) )
  326.                         $ww_S24 = ( 1.0/( h1p + $zw_S19 * ( ( h1p + 74.144000000000005 * x1(1 + $I_L299_466, 1 + $I_L298_490) ) * 1.0/( 4.3368000000000001e-1 + 24.744199999999999 * x1(1 + $I_L299_466, 1 + $I_L298_490) ) ) ) * ( ( ( h1p + 32.209499999999998 * x1(1 + $I_L299_466, 1 + $I_L298_490) ) * 1.0/( h1p + 52.850000000000001 * x1(1 + $I_L299_466, 1 + $I_L298_490) ) ) + ( $zw_S19 * ( 5.3487399999999996e-1 + 199.0 * x1(1 + $I_L299_466, 1 + $I_L298_490) + -1990.6300000000001 * x1(1 + $I_L299_466, 1 + $I_L298_490) * x1(1 + $I_L299_466, 1 + $I_L298_490) ) * 1.0/( h1p + 333.24400000000003 * x1(1 + $I_L299_466, 1 + $I_L298_490) ) ) ) )
  335.                         $wv_S27 = ( h1p + 33.123600000000003 * x2(1 + $I_L299_466, 1 + $I_L298_490) + 9.2241099999999996 * $yw_S20 + 176.39599999999999 * x2(1 + $I_L299_466, 1 + $I_L298_490) * x2(1 + $I_L299_466, 1 + $I_L298_490) )
  341.                         $x1_S21 = min( 5.9999999999999998e-2, x1(1 + $I_L299_466, 1 + $I_L298_490) )
  342.                         $x2_S26 = min( 2.0, x2(1 + $I_L299_466, 1 + $I_L298_490) )
  343.                         $x3_S22 = min( 8.0, x3(1 + $I_L299_466, 1 + $I_L298_490) )
  367.                         $yw_S23 = 1.0000000000000001e-1 * ( ( ( 5.6382999999999997e-4 + -39.072200000000002 * ( $x1_S21 * $x1_S21 ) + 1.0517300000000001 * $x1_S21 ) * 1.0/( h1p + 202.357 * $x1_S21 ) ) + ( $x3_S22 * ( -3.8130499999999998e-2 + 7.9895100000000001 * ( $x1_S21 * $x1_S21 ) + -3.6368399999999999 * $x1_S21 ) * 1.0/( h1p + 62.569200000000002 * $x1_S21 ) ) + ( ( 7.7955499999999997e-2 + 3.1585100000000002 * ( $x1_S21 * $x1_S21 ) + 4.4071999999999996 * $x1_S21 ) * 1.0/( h1p + 40.229799999999997 * $x1_S21 ) * _sqrt( $x3_S22 ) ) + _sqrt( $x3_S22 ) * ( $x3_S22 * ( 6.2103899999999997e-3 + -2.8524099999999999 * ( $x1_S21 * $x1_S21 ) + 7.1006100000000005e-1 * $x1_S21 ) * 1.0/( h1p + 70.291200000000003 * $x1_S21 ) ) )
  385.                         yw(1 + $I_L299_466, 1 + $I_L298_490) = $yw_S23
  386.                         ww(1 + $I_L299_466, 1 + $I_L298_490) = ( max( h0p, $ww_S24 ) )
  387.                         yv(1 + $I_L299_466, 1 + $I_L298_490) = ( 1.0000000000000001e-1 * ( 8.5106899999999999e-2 * _sqrt( $x2_S26 ) + -1.8709600000000001e-1 * $x2_S26 * _sqrt( $x2_S26 ) + 3.2310499999999998e-1 * $x2_S26 ) )
  388.                         wv(1 + $I_L299_466, 1 + $I_L298_490) = ( max( h0p, ( h1p * 1.0/$wv_S27 ) ) )
  319.                         $zv_S30 = _expn( ( -4.3979999999999997 * $fw_S12 * ( -h1p + _sqrt( h1p + $zv_S29 ) ) ) )
  389.                         fw(1 + $I_L299_466, 1 + $I_L298_490) = ( $wdel_S31 * ( h1p + -6.7674999999999996e-1 * ( h1p + -$zv_S30 ) ) )
  390.                         zv(1 + $I_L299_466, 1 + $I_L298_490) = ( 1.0e-3 * ( -9.2228900000000003e-2 * $x2_S26 * _sqrt( $x2_S26 ) + -1.6741300000000001e-2 * $x2_S26 * $x2_S26 + 2.3918600000000001e-1 * $x2_S26 ) )
  391.                         adel(1 + $I_L299_466, 1 + $I_L298_490) = ( 6.1538461499999997e-1 * $bdel_S32 + 3.84615384e-1 * $adel_S33 )
  381.                         $zw_S35 = 1.0e-3 * ( ( ( -2.9954200000000003e-4 + 5.1926399999999995e-1 * ( $x1_S21 * $x1_S21 ) + 2.3821899999999999e-1 * $x1_S21 ) * 1.0/( h1p + 10.7775 * $x1_S21 ) ) + ( $x3_S22 * ( 1.43812e-2 + -10.1311 * ( $x1_S21 * $x1_S21 ) + 1.8026500000000001 * $x1_S21 ) * 1.0/( h1p + 98.475800000000007 * $x1_S21 ) ) + ( ( -2.9132499999999999e-2 + 10.946 * ( $x1_S21 * $x1_S21 ) + -2.3000699999999998 * $x1_S21 ) * 1.0/( h1p + 63.518999999999998 * $x1_S21 ) * _sqrt( $x3_S22 ) ) + ( $x3_S22 * ( -2.3901600000000001e-3 + 2.3544299999999998 * ( $x1_S21 * $x1_S21 ) + -3.7142700000000001e-1 * $x1_S21 ) * 1.0/( h1p + 120.22799999999999 * $x1_S21 ) ) * _sqrt( $x3_S22 ) )
  392.                         zw(1 + $I_L299_466, 1 + $I_L298_490) = $zw_S35
  393.                         x1(1 + $I_L299_466, 1 + $I_L298_490) = $x1_S21
  394.                         x2(1 + $I_L299_466, 1 + $I_L298_490) = $x2_S26
  395.                         x3(1 + $I_L299_466, 1 + $I_L298_490) = $x3_S22
  396.                         $I_L299_466 = 1 + $I_L299_466
  299.                         if ( $I_L299_466 >= ncols ) exit
  299.                      enddo
  397.                      $I_L298_490 = 1 + $I_L298_490
  396.                      if ( $I_L298_490 >= 1 + kmax ) exit
  396.                   enddo
  396.                endif
  396.             endif
  399.             if ( indx2 == 1 ) then
  400.                if ( kmax >= 0 ) then
  401.                   if ( ncols > 0 ) then
  400.                      $I_L400_494 = 0
  400.                      do
  401.                         $I_L401_470 = 0
  401. !dir$ ivdep
  401.                         do
  402.                            x1(1 + $I_L401_470, 2 + $I_L400_494) = tv1(1 + $I_L401_470, 1) * wv(1 + $I_L401_470, 1 + $I_L400_494)
  403.                            x2(1 + $I_L401_470, 2 + $I_L400_494) = h1p + tui(1 + $I_L401_470, 1) * yv(1 + $I_L401_470, 1 + $I_L400_494) + tui2(1 + $I_L401_470, 1) * zv(1 + $I_L401_470, 1 + $I_L400_494)
  405.                            x3(1 + $I_L401_470, 2 + $I_L400_494) = tv2(1 + $I_L401_470, 1) * ww(1 + $I_L401_470, 1 + $I_L400_494)
  406.                            x4(1 + $I_L401_470, 2 + $I_L400_494) = h1p + tui(1 + $I_L401_470, 1) * yw(1 + $I_L401_470, 1 + $I_L400_494) + tui2(1 + $I_L401_470, 1) * zw(1 + $I_L401_470, 1 + $I_L400_494)
  408.                            fw(1 + $I_L401_470, 1 + $I_L400_494) = cc(1 + $I_L401_470, 1) * adel(1 + $I_L401_470, 1 + $I_L400_494) + rawi(1 + $I_L401_470, 1) * fw(1 + $I_L401_470, 1 + $I_L400_494)
  410.                            $I_L401_470 = 1 + $I_L401_470
  401.                            if ( $I_L401_470 >= ncols ) exit
  401.                         enddo
  414.                         $I_L414_472 = 0
  414. !dir$ ivdep
  414.                         do
  415.                            shi(1 + $I_L414_472, 2 + $I_L400_494) = fw(1 + $I_L414_472, 1 + $I_L400_494) + x4(1 + $I_L414_472, 2 + $I_L400_494) * x3(1 + $I_L414_472, 2 + $I_L400_494) + x2(1 + $I_L414_472, 2 + $I_L400_494) * x1(1 + $I_L414_472, 2 + $I_L400_494)
  416.                            $I_L414_472 = 1 + $I_L414_472
  414.                            if ( $I_L414_472 >= ncols ) exit
  414.                         enddo
  411.                         $I_L400_494 = 1 + $I_L400_494
  410.                         if ( $I_L400_494 >= 1 + kmax ) exit
  410.                      enddo
  410.                   endif
  410.                endif
  419.             else if ( kmax >= 0 ) then
  422.                if ( ncols > 0 ) then
  421.                   $I_L421_492 = 0
  421. !dir$ blocking_size( 1, 1 )
  421.                   do
  422.                      $I_L422_468 = 0
  422. !dir$ ivdep
  422. !dir$ blocking_size( 256, 256 )
  422.                      do
  423.                         $x1_WR0_R7 = tv1(1 + $I_L422_468, 3 + kmax) * wv(1 + $I_L422_468, 1 + $I_L421_492) * ( h1p + tui(1 + $I_L422_468, 3 + kmax) * yv(1 + $I_L422_468, 1 + $I_L421_492) + tui2(1 + $I_L422_468, 3 + kmax) * zv(1 + $I_L422_468, 1 + $I_L421_492) )
  423.                         x1(1 + $I_L422_468, 1 + $I_L421_492) = $x1_WR0_R7
  426.                         $x2_WR0_R8 = tv2(1 + $I_L422_468, 3 + kmax) * ww(1 + $I_L422_468, 1 + $I_L421_492) * ( h1p + tui(1 + $I_L422_468, 3 + kmax) * yw(1 + $I_L422_468, 1 + $I_L421_492) + tui2(1 + $I_L422_468, 3 + kmax) * zw(1 + $I_L422_468, 1 + $I_L421_492) )
  426.                         x2(1 + $I_L422_468, 1 + $I_L421_492) = $x2_WR0_R8
  429.                         $x3_WR0_R9 = tv1(1 + $I_L422_468, 2 + kmax) * wv(1 + $I_L422_468, 1 + $I_L421_492) * ( h1p + tui(1 + $I_L422_468, 2 + kmax) * yv(1 + $I_L422_468, 1 + $I_L421_492) + tui2(1 + $I_L422_468, 2 + kmax) * zv(1 + $I_L422_468, 1 + $I_L421_492) )
  429.                         x3(1 + $I_L422_468, 1 + $I_L421_492) = $x3_WR0_R9
  432.                         $x4_WR0_R10 = tv2(1 + $I_L422_468, 2 + kmax) * ww(1 + $I_L422_468, 1 + $I_L421_492) * ( h1p + tui(1 + $I_L422_468, 2 + kmax) * yw(1 + $I_L422_468, 1 + $I_L421_492) + tui2(1 + $I_L422_468, 2 + kmax) * zw(1 + $I_L422_468, 1 + $I_L421_492) )
  432.                         x4(1 + $I_L422_468, 1 + $I_L421_492) = $x4_WR0_R10
  435.                         $shu_WR0_R11 = adel(1 + $I_L422_468, 1 + $I_L421_492) * ( cc(1 + $I_L422_468, 3 + kmax) + -cc(1 + $I_L422_468, 2 + kmax) ) + fw(1 + $I_L422_468, 1 + $I_L421_492) * ( rawi(1 + $I_L422_468, 3 + kmax) + -rawi(1 + $I_L422_468, 2 + kmax) )
  437.                         $shu_WR0_R11 = $x1_WR0_R7 + $x2_WR0_R8 + $shu_WR0_R11 + -$x3_WR0_R9 + -$x4_WR0_R10
  437.                         shu(1 + $I_L422_468, 1 + $I_L421_492) = $shu_WR0_R11
  439.                         $I_L422_468 = 1 + $I_L422_468
  422.                         if ( $I_L422_468 >= ncols ) exit
  422.                      enddo
  440.                      $I_L421_492 = 1 + $I_L421_492
  439.                      if ( $I_L421_492 >= 1 + kmax ) exit
  439.                   enddo
  439.                endif
  439.             endif
  443.          else if ( kmax + -indx2 == -2 ) then
  445.             if ( indx2 + -indx1 >= 0 ) then
  445.                $I_L445_506 = 0
  445.                do
  447.                   if ( ncols > 0 ) then
  446.                      $I_L446_496 = 0
  446. !dir$ blocking_size( 1, 1 )
  446.                      do
  447.                         $I_L447_474 = 0
  447. !dir$ ivdep
  447. !dir$ blocking_size( 256, 256 )
  447.                         do
  448.                            x1(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = ubar(1 + $I_L447_474, indx1 + $I_L445_506) + -ubarm(1 + $I_L447_474, indx1 + $I_L446_496)
  449.                            x2(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = vbar(1 + $I_L447_474, indx1 + $I_L445_506) + -vbarm(1 + $I_L447_474, indx1 + $I_L446_496)
  450.                            x3(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = wbar(1 + $I_L447_474, indx1 + $I_L445_506) + -wbarm(1 + $I_L447_474, indx1 + $I_L446_496)
  451.                            adel(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = tai(1 + $I_L447_474, indx1 + $I_L445_506) + -css(1 + $I_L447_474, indx1 + $I_L446_496)
  452.                            bdel(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = ch(1 + $I_L447_474, indx1 + $I_L445_506) + -ccu(1 + $I_L447_474, indx1 + $I_L446_496)
  453.                            wdel(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = fluxu(1 + $I_L447_474, indx1 + $I_L445_506) + -ozai(1 + $I_L447_474, indx1 + $I_L446_496)
  454.                            fw(1 + $I_L447_474, -1 + indx1 + $I_L446_496) = fluxd(1 + $I_L447_474, indx1 + $I_L445_506) + -pai(1 + $I_L447_474, indx1 + $I_L446_496)
  455.                            $I_L447_474 = 1 + $I_L447_474
  447.                            if ( $I_L447_474 >= ncols ) exit
  447.                         enddo
  456.                         $I_L446_496 = 1 + $I_L446_496
  455.                         if ( $I_L446_496 >= 1 + $I_L445_506 ) exit
  455.                      enddo
  455.                   endif
  457.                   if ( ( -1 + indx1 + $I_L445_506 ) > 0 ) then
  458.                      if ( ncols > 0 ) then
  457.                         $I_L457_498 = 0
  457.                         do
  458.                            $I_L458_476 = 0
  458. !dir$ ivdep
  458.                            do
  459.                               $x1_S47 = abs( x1(1 + $I_L458_476, 1 + $I_L457_498) )
  460.                               $x2_S60 = abs( x2(1 + $I_L458_476, 1 + $I_L457_498) )
  461.                               $x3_S48 = abs( x3(1 + $I_L458_476, 1 + $I_L457_498) )
  462.                               $adel_S51 = abs( adel(1 + $I_L458_476, 1 + $I_L457_498) )
  463.                               $bdel_S55 = abs( bdel(1 + $I_L458_476, 1 + $I_L457_498) )
  464.                               $wdel_S56 = abs( wdel(1 + $I_L458_476, 1 + $I_L457_498) )
  465.                               $fw_S57 = abs( fw(1 + $I_L458_476, 1 + $I_L457_498) )
  467.                               $yw_S49 = _expn( 8.2999999999999996e-1 * log( 1.0e-100 + $x1_S47 ) )
  468.                               $ww_S50 = _expn( 5.9999999999999998e-1 * log( 1.0e-100 + $x3_S48 ) )
  472.                               $yw_S52 = _expn( 5.6000000000000005e-1 * log( 1.0e-100 + $adel_S51 ) )
  476.                               $yw_S61 = _expn( 5.6999999999999995e-1 * log( 1.0e-100 + $bdel_S55 ) )
  485.                               $zv_S68 = _expn( ( -4.3979999999999997 * ( 9.8692326671601278e-4 * $fw_S57 * 1.0/$wdel_S56 ) * ( -h1p + _sqrt( h1p + ( 1570.1682582992269 * $wdel_S56 * 1.0/( 9.8692326671601278e-4 * $fw_S57 * 1.0/$wdel_S56 ) ) ) ) ) )
  487.                               $adel_S65 = _expn( ( ( ( -6.7000000000000002 * $x3_S48 * 1.0/( h1p + 16.0 * $ww_S50 ) ) + -27.0 * $yw_S49 ) + ( -3.1000000000000001 * $adel_S51 * 1.0/( h1p + 15.1 * $yw_S52 ) ) ) )
  489.                               $wdel_S67 = _expn( ( -9.7899999999999991 * $x1_S47 ) )
  488.                               $bdel_S66 = _expn( ( ( ( -6.7000000000000002 * $x3_S48 * 1.0/( h1p + 16.0 * $ww_S50 ) ) + -27.0 * $yw_S49 ) + ( -4.0000000000000001e-2 * $bdel_S55 * 1.0/( h1p + 9.0000000000000002e-1 * $yw_S61 ) ) ) )
  509.                               $x3_S64 = min( 8.0, $x3_S48 )
  507.                               $x1_S63 = min( 5.9999999999999998e-2, $x1_S47 )
  533.                               $yw_S69 = 1.0000000000000001e-1 * ( ( ( 5.6382999999999997e-4 + -39.072200000000002 * ( $x1_S63 * $x1_S63 ) + 1.0517300000000001 * $x1_S63 ) * 1.0/( h1p + 202.357 * $x1_S63 ) ) + ( $x3_S64 * ( -3.8130499999999998e-2 + 7.9895100000000001 * ( $x1_S63 * $x1_S63 ) + -3.6368399999999999 * $x1_S63 ) * 1.0/( h1p + 62.569200000000002 * $x1_S63 ) ) + ( ( 7.7955499999999997e-2 + 3.1585100000000002 * ( $x1_S63 * $x1_S63 ) + 4.4071999999999996 * $x1_S63 ) * 1.0/( h1p + 40.229799999999997 * $x1_S63 ) * _sqrt( $x3_S64 ) ) + _sqrt( $x3_S64 ) * ( $x3_S64 * ( 6.2103899999999997e-3 + -2.8524099999999999 * ( $x1_S63 * $x1_S63 ) + 7.1006100000000005e-1 * $x1_S63 ) * 1.0/( h1p + 70.291200000000003 * $x1_S63 ) ) )
  534.                               $zw_S74 = ( _sqrt( min( 8.0, $x3_S48 ) ) * 1.0/( h1p + 63.518999999999998 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) * ( -2.9132499999999999e-2 + -2.3000699999999998 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) + 10.946 * ( ( min( 5.9999999999999998e-2, $x1_S47 ) ) * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) ) ) + ( ( min( 8.0, $x3_S48 ) ) * 1.0/( h1p + 98.475800000000007 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) * ( 1.43812e-2 + 1.8026500000000001 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) + -10.1311 * ( ( min( 5.9999999999999998e-2, $x1_S47 ) ) * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) ) ) + ( 1.0/( h1p + 10.7775 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) * ( -2.9954200000000003e-4 + 2.3821899999999999e-1 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) + 5.1926399999999995e-1 * ( ( min( 5.9999999999999998e-2, $x1_S47 ) ) * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) ) ) + _sqrt( min( 8.0, $x3_S48 ) ) * ( ( min( 8.0, $x3_S48 ) ) * 1.0/( h1p + 120.22799999999999 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) * ( -2.3901600000000001e-3 + -3.7142700000000001e-1 * ( min( 5.9999999999999998e-2, $x1_S47 ) ) + 2.3544299999999998 * ( ( min( 5.9999999999999998e-2, $x1_S47 ) ) * ( min( 5.9999999999999998e-2, $x1_S47 ) ) ) ) )
  549.                               adel(1 + $I_L458_476, 1 + $I_L457_498) = $adel_S65
  550.                               bdel(1 + $I_L458_476, 1 + $I_L457_498) = $bdel_S66
  551.                               wdel(1 + $I_L458_476, 1 + $I_L457_498) = $wdel_S67
  552.                               fw(1 + $I_L458_476, 1 + $I_L457_498) = ( h1p + -6.7674999999999996e-1 * ( h1p + -$zv_S68 ) )
  555.                               yw(1 + $I_L458_476, 1 + $I_L457_498) = $yw_S69
  556.                               ww(1 + $I_L458_476, 1 + $I_L457_498) = ( max( h0p, ( 1.0/( h1p + ( 1.0/( 4.3368000000000001e-1 + 24.744199999999999 * $x1_S47 ) * ( h1p + 74.144000000000005 * $x1_S47 ) ) * _sqrt( $x3_S48 ) ) * ( ( 1.0/( h1p + 52.850000000000001 * $x1_S47 ) * ( h1p + 32.209499999999998 * $x1_S47 ) ) + ( 1.0/( h1p + 333.24400000000003 * $x1_S47 ) * ( 5.3487399999999996e-1 + -1990.6300000000001 * $x1_S47 * $x1_S47 + 199.0 * $x1_S47 ) * _sqrt( $x3_S48 ) ) ) ) ) )
  557.                               yv(1 + $I_L458_476, 1 + $I_L457_498) = ( 1.0000000000000001e-1 * ( 3.2310499999999998e-1 * ( min( 2.0, $x2_S60 ) ) + -1.8709600000000001e-1 * ( min( 2.0, $x2_S60 ) ) * _sqrt( min( 2.0, $x2_S60 ) ) + 8.5106899999999999e-2 * _sqrt( min( 2.0, $x2_S60 ) ) ) )
  558.                               wv(1 + $I_L458_476, 1 + $I_L457_498) = ( max( h0p, ( h1p * 1.0/( h1p + 9.2241099999999996 * _sqrt( $x2_S60 ) + 176.39599999999999 * $x2_S60 * $x2_S60 + 33.123600000000003 * $x2_S60 ) ) ) )
  559.                               zv(1 + $I_L458_476, 1 + $I_L457_498) = ( 1.0e-3 * ( 2.3918600000000001e-1 * ( min( 2.0, $x2_S60 ) ) + -1.6741300000000001e-2 * ( min( 2.0, $x2_S60 ) ) * ( min( 2.0, $x2_S60 ) ) + -9.2228900000000003e-2 * ( min( 2.0, $x2_S60 ) ) * _sqrt( min( 2.0, $x2_S60 ) ) ) )
  560.                               zw(1 + $I_L458_476, 1 + $I_L457_498) = ( 1.0e-3 * $zw_S74 )
  561.                               $I_L458_476 = 1 + $I_L458_476
  458.                               if ( $I_L458_476 >= ncols ) exit
  458.                            enddo
  564.                            $I_L564_478 = 0
  564. !dir$ ivdep
  564. !dir$ loop_info (automatic) cache_nt( txuf )
  564.                            do
  565.                               $x1_S80 = wv(1 + $I_L564_478, 1 + $I_L457_498) * tv1(1 + $I_L564_478, 1 + $I_L457_498) * ( h1p + tui2(1 + $I_L564_478, 1 + $I_L457_498) * zv(1 + $I_L564_478, 1 + $I_L457_498) + tui(1 + $I_L564_478, 1 + $I_L457_498) * yv(1 + $I_L564_478, 1 + $I_L457_498) )
  568.                               $x2_S79 = ww(1 + $I_L564_478, 1 + $I_L457_498) * tv2(1 + $I_L564_478, 1 + $I_L457_498) * ( h1p + tui2(1 + $I_L564_478, 1 + $I_L457_498) * zw(1 + $I_L564_478, 1 + $I_L457_498) + tui(1 + $I_L564_478, 1 + $I_L457_498) * yw(1 + $I_L564_478, 1 + $I_L457_498) )
  571.                               $x3_S78 = wv(1 + $I_L564_478, 1 + $I_L457_498) * tv1(1 + $I_L564_478, 2 + $I_L457_498) * ( h1p + zv(1 + $I_L564_478, 1 + $I_L457_498) * tui2(1 + $I_L564_478, 2 + $I_L457_498) + yv(1 + $I_L564_478, 1 + $I_L457_498) * tui(1 + $I_L564_478, 2 + $I_L457_498) )
  574.                               $x4_WR0_R12 = ww(1 + $I_L564_478, 1 + $I_L457_498) * tv2(1 + $I_L564_478, 2 + $I_L457_498) * ( h1p + zw(1 + $I_L564_478, 1 + $I_L457_498) * tui2(1 + $I_L564_478, 2 + $I_L457_498) + yw(1 + $I_L564_478, 1 + $I_L457_498) * tui(1 + $I_L564_478, 2 + $I_L457_498) )
  574.                               x4(1 + $I_L564_478, 1 + $I_L457_498) = $x4_WR0_R12
  577.                               txuf(1 + $I_L564_478, 1 + $I_L457_498, indx1 + $I_L445_506) = $x2_S79 + $x1_S80 + -$x4_WR0_R12 + -$x3_S78 + wdel(1 + $I_L564_478, 1 + $I_L457_498) * fw(1 + $I_L564_478, 1 + $I_L457_498) * ( rawi(1 + $I_L564_478, 1 + $I_L457_498) + -rawi(1 + $I_L564_478, 2 + $I_L457_498) ) + ( 6.1538461499999997e-1 * bdel(1 + $I_L564_478, 1 + $I_L457_498) + 3.84615384e-1 * adel(1 + $I_L564_478, 1 + $I_L457_498) ) * ( cc(1 + $I_L564_478, 1 + $I_L457_498) + -cc(1 + $I_L564_478, 2 + $I_L457_498) )
  585.                               x1(1 + $I_L564_478, 1 + $I_L457_498) = $x1_S80
  586.                               x2(1 + $I_L564_478, 1 + $I_L457_498) = $x2_S79
  587.                               x3(1 + $I_L564_478, 1 + $I_L457_498) = $x3_S78
  588.                               $I_L564_478 = 1 + $I_L564_478
  564.                               if ( $I_L564_478 >= ncols ) exit
  564.                            enddo
  562.                            $I_L457_498 = 1 + $I_L457_498
  561.                            if ( $I_L457_498 >= -1 + indx1 + $I_L445_506 ) exit
  561.                         enddo
  561.                      endif
  561.                   endif
  590.                   $I_L445_506 = 1 + $I_L445_506
  589.                   if ( $I_L445_506 >= 1 + indx2 + -indx1 ) exit
  589.                enddo
  589.             endif
  589.          else if ( indx2 + -indx1 >= 0 ) then
  595.             $I_L595_508 = 0
  595.             do
  596.                if ( ( 2 + kmax + -$I_L595_508 + -2 * indx1 ) >= 0 ) then
  597.                   if ( ncols > 0 ) then
  596.                      $I_L596_500 = 0
  596. !dir$ blocking_size( 1, 1 )
  596.                      do
  597.                         $I_L597_480 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 256, 256 )
  597.                         do
  598.                            x1(1 + $I_L597_480, indx1 + $I_L596_500) = ubar(1 + $I_L597_480, indx1 + $I_L595_508) + -ubarm(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  599.                            x2(1 + $I_L597_480, indx1 + $I_L596_500) = vbar(1 + $I_L597_480, indx1 + $I_L595_508) + -vbarm(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  600.                            x3(1 + $I_L597_480, indx1 + $I_L596_500) = wbar(1 + $I_L597_480, indx1 + $I_L595_508) + -wbarm(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  601.                            adel(1 + $I_L597_480, indx1 + $I_L596_500) = tai(1 + $I_L597_480, indx1 + $I_L595_508) + -css(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  602.                            bdel(1 + $I_L597_480, indx1 + $I_L596_500) = ch(1 + $I_L597_480, indx1 + $I_L595_508) + -ccu(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  603.                            wdel(1 + $I_L597_480, indx1 + $I_L596_500) = fluxu(1 + $I_L597_480, indx1 + $I_L595_508) + -ozai(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  604.                            fw(1 + $I_L597_480, indx1 + $I_L596_500) = fluxd(1 + $I_L597_480, indx1 + $I_L595_508) + -pai(1 + $I_L597_480, $I_L596_500 + $I_L595_508 + 2 * indx1)
  605.                            $I_L597_480 = 1 + $I_L597_480
  597.                            if ( $I_L597_480 >= ncols ) exit
  597.                         enddo
  606.                         $I_L596_500 = 1 + $I_L596_500
  605.                         if ( $I_L596_500 >= 3 + kmax + -$I_L595_508 + -2 * indx1 ) exit
  605.                      enddo
  605.                   endif
  605.                endif
  608.                if ( ( 2 + kmax + -indx1 + -$I_L595_508 ) > 0 ) then
  609.                   if ( ncols > 0 ) then
  608.                      $I_L608_502 = 0
  608.                      do
  609.                         $I_L609_482 = 0
  609. !dir$ ivdep
  609.                         do
  610.                            x1(1 + $I_L609_482, 1 + $I_L608_502) = abs( x1(1 + $I_L609_482, 1 + $I_L608_502) )
  617.                            $LD_SPLT_P0 = x1(1 + $I_L609_482, 1 + $I_L608_502)
  618.                            $yw_WR0_R14 = _expn( 8.2999999999999996e-1 * log( 1.0e-100 + $LD_SPLT_P0 ) )
  612.                            x3(1 + $I_L609_482, 1 + $I_L608_502) = abs( x3(1 + $I_L609_482, 1 + $I_L608_502) )
  619.                            $LD_SPLT_P11 = x3(1 + $I_L609_482, 1 + $I_L608_502)
  619.                            $ww_WR0_R15 = _expn( 5.9999999999999998e-1 * log( 1.0e-100 + $LD_SPLT_P11 ) )
  613.                            adel(1 + $I_L609_482, 1 + $I_L608_502) = abs( adel(1 + $I_L609_482, 1 + $I_L608_502) )
  623.                            $LD_SPLT_P15 = adel(1 + $I_L609_482, 1 + $I_L608_502)
  622.                            $ww_WR0_R15 = ( -6.7000000000000002 * $LD_SPLT_P11 * 1.0/( h1p + 16.0 * $ww_WR0_R15 ) ) + -27.0 * $yw_WR0_R14
  623.                            $yw_WR0_R14 = _expn( 5.6000000000000005e-1 * log( 1.0e-100 + $LD_SPLT_P15 ) )
  624.                            $yw_WR0_R14 = h1p + 15.1 * $yw_WR0_R14
  625.                            $yv_WR0_R16 = ( -3.1000000000000001 * $LD_SPLT_P15 * 1.0/$yw_WR0_R14 )
  614.                            bdel(1 + $I_L609_482, 1 + $I_L608_502) = abs( bdel(1 + $I_L609_482, 1 + $I_L608_502) )
  627.                            $LD_SPLT_P17 = bdel(1 + $I_L609_482, 1 + $I_L608_502)
  627.                            $yw_WR0_R14 = _expn( 5.6999999999999995e-1 * log( 1.0e-100 + $LD_SPLT_P17 ) )
  615.                            wdel(1 + $I_L609_482, 1 + $I_L608_502) = abs( wdel(1 + $I_L609_482, 1 + $I_L608_502) )
  631.                            $LD_SPLT_P19 = wdel(1 + $I_L609_482, 1 + $I_L608_502)
  631.                            fw(1 + $I_L609_482, 1 + $I_L608_502) = ( 9.8692326671601278e-4 * 1.0/$LD_SPLT_P19 * abs( fw(1 + $I_L609_482, 1 + $I_L608_502) ) )
  632.                            $LD_SPLT_P21 = fw(1 + $I_L609_482, 1 + $I_L608_502)
  633.                            adel(1 + $I_L609_482, 1 + $I_L608_502) = h1p + ( 1570.1682582992269 * $LD_SPLT_P19 * 1.0/$LD_SPLT_P21 )
  635.                            adel(1 + $I_L609_482, 1 + $I_L608_502) = -4.3979999999999997 * $LD_SPLT_P21 * ( -h1p + _sqrt( h1p + ( 1570.1682582992269 * $LD_SPLT_P19 * 1.0/$LD_SPLT_P21 ) ) )
  636.                            $zv_WR0_R18 = _expn( ( -4.3979999999999997 * $LD_SPLT_P21 * ( -h1p + _sqrt( h1p + ( 1570.1682582992269 * $LD_SPLT_P19 * 1.0/$LD_SPLT_P21 ) ) ) ) )
  637.                            fw(1 + $I_L609_482, 1 + $I_L608_502) = h1p + -6.7674999999999996e-1 * ( h1p + -$zv_WR0_R18 )
  626.                            $yv_WR0_R16 = $ww_WR0_R15 + $yv_WR0_R16
  638.                            adel(1 + $I_L609_482, 1 + $I_L608_502) = _expn( $yv_WR0_R16 )
  628.                            $yw_WR0_R14 = h1p + 9.0000000000000002e-1 * $yw_WR0_R14
  639.                            bdel(1 + $I_L609_482, 1 + $I_L608_502) = _expn( ( $ww_WR0_R15 + ( -4.0000000000000001e-2 * $LD_SPLT_P17 * 1.0/$yw_WR0_R14 ) ) )
  640.                            wdel(1 + $I_L609_482, 1 + $I_L608_502) = _expn( ( -9.7899999999999991 * $LD_SPLT_P0 ) )
  611.                            x2(1 + $I_L609_482, 1 + $I_L608_502) = abs( x2(1 + $I_L609_482, 1 + $I_L608_502) )
  641.                            $LD_SPLT_P25 = x2(1 + $I_L609_482, 1 + $I_L608_502)
  659.                            x2(1 + $I_L609_482, 1 + $I_L608_502) = min( 2.0, $LD_SPLT_P25 )
  660.                            x3(1 + $I_L609_482, 1 + $I_L608_502) = min( 8.0, $LD_SPLT_P11 )
  662.                            $LD_SPLT_P37 = ( min( 8.0, $LD_SPLT_P11 ) )
  658.                            x1(1 + $I_L609_482, 1 + $I_L608_502) = min( 5.9999999999999998e-2, $LD_SPLT_P0 )
  663.                            $LD_SPLT_P43 = ( min( 5.9999999999999998e-2, $LD_SPLT_P0 ) )
  664.                            yv(1 + $I_L609_482, 1 + $I_L608_502) = ( 1.0000000000000001e-1 * ( 8.5106899999999999e-2 * _sqrt( min( 2.0, $LD_SPLT_P25 ) ) + 3.2310499999999998e-1 * ( min( 2.0, $LD_SPLT_P25 ) ) + -1.8709600000000001e-1 * ( min( 2.0, $LD_SPLT_P25 ) ) * _sqrt( min( 2.0, $LD_SPLT_P25 ) ) ) )
  672.                            $LD_SPLT_P51 = ( min( 5.9999999999999998e-2, $LD_SPLT_P0 ) )
  672.                            $yw_WR0_R14 = ( ( 5.6382999999999997e-4 + -39.072200000000002 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + 1.0517300000000001 * $LD_SPLT_P51 ) * 1.0/( h1p + 202.357 * $LD_SPLT_P51 ) ) + ( _sqrt( min( 8.0, $LD_SPLT_P11 ) ) * ( 7.7955499999999997e-2 + 3.1585100000000002 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + 4.4071999999999996 * $LD_SPLT_P51 ) * 1.0/( h1p + 40.229799999999997 * $LD_SPLT_P51 ) ) + ( ( min( 8.0, $LD_SPLT_P11 ) ) * ( -3.8130499999999998e-2 + 7.9895100000000001 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + -3.6368399999999999 * $LD_SPLT_P51 ) * 1.0/( h1p + 62.569200000000002 * $LD_SPLT_P51 ) ) + _sqrt( min( 8.0, $LD_SPLT_P11 ) ) * ( ( min( 8.0, $LD_SPLT_P11 ) ) * ( 6.2103899999999997e-3 + -2.8524099999999999 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + 7.1006100000000005e-1 * $LD_SPLT_P51 ) * 1.0/( h1p + 70.291200000000003 * $LD_SPLT_P51 ) )
  699.                            $LD_SPLT_P41 = ( min( 8.0, $LD_SPLT_P11 ) )
  699.                            $LD_SPLT_P59 = ( min( 5.9999999999999998e-2, $LD_SPLT_P0 ) )
  699.                            $zw_WR0_R19 = 1.0e-3 * ( ( ( -2.9954200000000003e-4 + 5.1926399999999995e-1 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + 2.3821899999999999e-1 * $LD_SPLT_P59 ) * 1.0/( h1p + 10.7775 * $LD_SPLT_P59 ) ) + ( _sqrt( $LD_SPLT_P37 ) * ( -2.9132500290870667e-2 + 10.946 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + -2.3000699999999998 * $LD_SPLT_P59 ) * 1.0/( h1p + 63.518999999999998 * $LD_SPLT_P59 ) ) + ( $LD_SPLT_P41 * ( 1.43812e-2 + -10.1311 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + 1.8026500000000001 * $LD_SPLT_P59 ) * 1.0/( h1p + 98.475800000000007 * $LD_SPLT_P59 ) ) + _sqrt( $LD_SPLT_P37 ) * ( $LD_SPLT_P41 * ( -2.3901600000000001e-3 + 2.3544299999999998 * ( $LD_SPLT_P43 * $LD_SPLT_P43 ) + -3.7142700000000001e-1 * $LD_SPLT_P59 ) * 1.0/( h1p + 120.22799999999999 * $LD_SPLT_P59 ) ) )
  699.                            zw(1 + $I_L609_482, 1 + $I_L608_502) = $zw_WR0_R19
  656.                            ww(1 + $I_L609_482, 1 + $I_L608_502) = ( max( h0p, ( 1.0/( h1p + _sqrt( $LD_SPLT_P11 ) * ( ( h1p + 74.144000000000005 * $LD_SPLT_P0 ) * 1.0/( 4.3368000000000001e-1 + 24.744199999999999 * $LD_SPLT_P0 ) ) ) * ( ( _sqrt( $LD_SPLT_P11 ) * ( 5.3487399999999996e-1 + 199.0 * $LD_SPLT_P0 + -1990.6300000000001 * $LD_SPLT_P0 * $LD_SPLT_P0 ) * 1.0/( h1p + 333.24400000000003 * $LD_SPLT_P0 ) ) + ( ( h1p + 32.209499999999998 * $LD_SPLT_P0 ) * 1.0/( h1p + 52.850000000000001 * $LD_SPLT_P0 ) ) ) ) ) )
  657.                            wv(1 + $I_L609_482, 1 + $I_L608_502) = ( max( h0p, ( h1p * 1.0/( h1p + 33.123600000000003 * $LD_SPLT_P25 + 9.2241099999999996 * _sqrt( $LD_SPLT_P25 ) + 176.39599999999999 * $LD_SPLT_P25 * $LD_SPLT_P25 ) ) ) )
  670.                            zv(1 + $I_L609_482, 1 + $I_L608_502) = ( 1.0e-3 * ( 2.3918600000000001e-1 * ( min( 2.0, $LD_SPLT_P25 ) ) + -1.6741300000000001e-2 * ( min( 2.0, $LD_SPLT_P25 ) ) * ( min( 2.0, $LD_SPLT_P25 ) ) + -9.2228900000000003e-2 * ( min( 2.0, $LD_SPLT_P25 ) ) * _sqrt( min( 2.0, $LD_SPLT_P25 ) ) ) )
  685.                            $yw_WR0_R14 = 1.0000000000000001e-1 * $yw_WR0_R14
  685.                            yw(1 + $I_L609_482, 1 + $I_L608_502) = $yw_WR0_R14
  700.                            $I_L609_482 = 1 + $I_L609_482
  609.                            if ( $I_L609_482 >= ncols ) exit
  609.                         enddo
  701.                         $I_L608_502 = 1 + $I_L608_502
  700.                         if ( $I_L608_502 >= 2 + kmax + -indx1 + -$I_L595_508 ) exit
  700.                      enddo
  703.                      $I_L703_504 = 0
  703. !dir$ blocking_size( 1, 1 )
  703.                      do
  704.                         $I_L704_484 = 0
  704. !dir$ ivdep
  704. !dir$ blocking_size( 256, 256 )
  704.                         do
  705.                            x1(1 + $I_L704_484, 1 + $I_L703_504) = wv(1 + $I_L704_484, 1 + $I_L703_504) * tv1(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) * ( h1p + zv(1 + $I_L704_484, 1 + $I_L703_504) * tui2(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) + yv(1 + $I_L704_484, 1 + $I_L703_504) * tui(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) )
  708.                            x2(1 + $I_L704_484, 1 + $I_L703_504) = ww(1 + $I_L704_484, 1 + $I_L703_504) * tv2(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) * ( h1p + zw(1 + $I_L704_484, 1 + $I_L703_504) * tui2(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) + yw(1 + $I_L704_484, 1 + $I_L703_504) * tui(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) )
  711.                            x3(1 + $I_L704_484, 1 + $I_L703_504) = wv(1 + $I_L704_484, 1 + $I_L703_504) * tv1(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) * ( h1p + zv(1 + $I_L704_484, 1 + $I_L703_504) * tui2(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) + yv(1 + $I_L704_484, 1 + $I_L703_504) * tui(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) )
  714.                            $x4_WR0_R20 = ww(1 + $I_L704_484, 1 + $I_L703_504) * tv2(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) * ( h1p + zw(1 + $I_L704_484, 1 + $I_L703_504) * tui2(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) + yw(1 + $I_L704_484, 1 + $I_L703_504) * tui(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) )
  714.                            x4(1 + $I_L704_484, 1 + $I_L703_504) = $x4_WR0_R20
  717.                            $LD_SPLT_P60 = x1(1 + $I_L704_484, 1 + $I_L703_504)
  717.                            $LD_SPLT_P61 = x2(1 + $I_L704_484, 1 + $I_L703_504)
  717.                            $LD_SPLT_P62 = x3(1 + $I_L704_484, 1 + $I_L703_504)
  717.                            txuf(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508, indx1 + $I_L595_508) = $LD_SPLT_P60 + $LD_SPLT_P61 + -$LD_SPLT_P62 + -$x4_WR0_R20 + wdel(1 + $I_L704_484, 1 + $I_L703_504) * fw(1 + $I_L704_484, 1 + $I_L703_504) * ( rawi(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) + -rawi(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) ) + ( 3.84615384e-1 * adel(1 + $I_L704_484, 1 + $I_L703_504) + 6.1538461499999997e-1 * bdel(1 + $I_L704_484, 1 + $I_L703_504) ) * ( cc(1 + $I_L704_484, 1 + indx1 + $I_L703_504 + $I_L595_508) + -cc(1 + $I_L704_484, indx1 + $I_L703_504 + $I_L595_508) )
  724.                            $I_L704_484 = 1 + $I_L704_484
  704.                            if ( $I_L704_484 >= ncols ) exit
  704.                         enddo
  725.                         $I_L703_504 = 1 + $I_L703_504
  724.                         if ( $I_L703_504 >= 2 + kmax + -indx1 + -$I_L595_508 ) exit
  724.                      enddo
  724.                   endif
  724.                endif
  726.                $I_L595_508 = 1 + $I_L595_508
  725.                if ( $I_L595_508 >= 1 + indx2 + -indx1 ) exit
  725.             enddo
  725.          endif
  725.       else
  733.          if ( indx2 + -indx1 == 0 ) then
  734.             if ( indx2 == 1 ) then
  735.                if ( kmax >= 0 ) then
  736.                   if ( ncols > 0 ) then
  735.                      $I_L735_554 = 0
  735.                      do
  736.                         $I_L736_514 = 0
  736. !dir$ ivdep
  736.                         do
  737.                            x1(1 + $I_L736_514, 1 + $I_L735_554) = abs( ubar(1 + $I_L736_514, 2 + $I_L735_554) )
  738.                            x2(1 + $I_L736_514, 1 + $I_L735_554) = abs( vbar(1 + $I_L736_514, 2 + $I_L735_554) )
  739.                            x3(1 + $I_L736_514, 1 + $I_L735_554) = abs( wbar(1 + $I_L736_514, 2 + $I_L735_554) )
  740.                            adel(1 + $I_L736_514, 1 + $I_L735_554) = abs( tai(1 + $I_L736_514, 2 + $I_L735_554) )
  741.                            bdel(1 + $I_L736_514, 1 + $I_L735_554) = abs( ch(1 + $I_L736_514, 2 + $I_L735_554) )
  742.                            $I_L736_514 = 1 + $I_L736_514
  736.                            if ( $I_L736_514 >= ncols ) exit
  736.                         enddo
  743.                         $I_L735_554 = 1 + $I_L735_554
  742.                         if ( $I_L735_554 >= 1 + kmax ) exit
  742.                      enddo
  742.                   endif
  742.                endif
  744.             else if ( kmax >= 0 ) then
  746.                if ( ncols > 0 ) then
  745.                   $I_L745_552 = 0
  745.                   do
  746.                      $I_L746_510 = 0
  746. !dir$ ivdep
  746.                      do
  747.                         x1(1 + $I_L746_510, 1 + $I_L745_552) = ubar(1 + $I_L746_510, 2 + kmax) + -ubar(1 + $I_L746_510, 1 + $I_L745_552)
  748.                         x2(1 + $I_L746_510, 1 + $I_L745_552) = vbar(1 + $I_L746_510, 2 + kmax) + -vbar(1 + $I_L746_510, 1 + $I_L745_552)
  749.                         x3(1 + $I_L746_510, 1 + $I_L745_552) = wbar(1 + $I_L746_510, 2 + kmax) + -wbar(1 + $I_L746_510, 1 + $I_L745_552)
  750.                         adel(1 + $I_L746_510, 1 + $I_L745_552) = tai(1 + $I_L746_510, 2 + kmax) + -tai(1 + $I_L746_510, 1 + $I_L745_552)
  751.                         bdel(1 + $I_L746_510, 1 + $I_L745_552) = ch(1 + $I_L746_510, 2 + kmax) + -ch(1 + $I_L746_510, 1 + $I_L745_552)
  752.                         $I_L746_510 = 1 + $I_L746_510
  746.                         if ( $I_L746_510 >= ncols ) exit
  746.                      enddo
  756.                      $I_L756_512 = 0
  756. !dir$ ivdep
  756.                      do
  757.                         x1(1 + $I_L756_512, 1 + $I_L745_552) = abs( x1(1 + $I_L756_512, 1 + $I_L745_552) )
  758.                         x2(1 + $I_L756_512, 1 + $I_L745_552) = abs( x2(1 + $I_L756_512, 1 + $I_L745_552) )
  759.                         x3(1 + $I_L756_512, 1 + $I_L745_552) = abs( x3(1 + $I_L756_512, 1 + $I_L745_552) )
  760.                         adel(1 + $I_L756_512, 1 + $I_L745_552) = abs( adel(1 + $I_L756_512, 1 + $I_L745_552) )
  761.                         bdel(1 + $I_L756_512, 1 + $I_L745_552) = abs( bdel(1 + $I_L756_512, 1 + $I_L745_552) )
  762.                         $I_L756_512 = 1 + $I_L756_512
  756.                         if ( $I_L756_512 >= ncols ) exit
  756.                      enddo
  753.                      $I_L745_552 = 1 + $I_L745_552
  752.                      if ( $I_L745_552 >= 1 + kmax ) exit
  752.                   enddo
  752.                endif
  752.             endif
  767.             if ( kmax >= 0 ) then
  768.                if ( ncols > 0 ) then
  767.                   $I_L767_556 = 0
  767.                   do
  768.                      $I_L768_516 = 0
  768. !dir$ ivdep
  768.                      do
  769.                         fu(1 + $I_L768_516, 1 + $I_L767_556) = -9.7899999999999991 * x1(1 + $I_L768_516, 1 + $I_L767_556)
  770.                         $yw_WR0_R21 = _expn( 8.2999999999999996e-1 * log( 1.0e-100 + x1(1 + $I_L768_516, 1 + $I_L767_556) ) )
  771.                         $ww_WR0_R22 = _expn( 5.9999999999999998e-1 * log( 1.0e-100 + x3(1 + $I_L768_516, 1 + $I_L767_556) ) )
  774.                         $ww_WR0_R22 = ( -6.7000000000000002 * x3(1 + $I_L768_516, 1 + $I_L767_556) * 1.0/( h1p + 16.0 * $ww_WR0_R22 ) ) + -27.0 * $yw_WR0_R21
  774.                         ww(1 + $I_L768_516, 1 + $I_L767_556) = $ww_WR0_R22
  775.                         $yw_WR0_R21 = _expn( 5.6000000000000005e-1 * log( 1.0e-100 + adel(1 + $I_L768_516, 1 + $I_L767_556) ) )
  776.                         $yw_WR0_R21 = h1p + 15.1 * $yw_WR0_R21
  777.                         $yv_WR0_R23 = ( -3.1000000000000001 * adel(1 + $I_L768_516, 1 + $I_L767_556) * 1.0/$yw_WR0_R21 )
  779.                         $yw_WR0_R21 = _expn( 5.6999999999999995e-1 * log( 1.0e-100 + bdel(1 + $I_L768_516, 1 + $I_L767_556) ) )
  780.                         $yw_WR0_R21 = h1p + 9.0000000000000002e-1 * $yw_WR0_R21
  780.                         yw(1 + $I_L768_516, 1 + $I_L767_556) = $yw_WR0_R21
  781.                         $wv_WR0_R24 = ( -4.0000000000000001e-2 * bdel(1 + $I_L768_516, 1 + $I_L767_556) * 1.0/$yw_WR0_R21 )
  778.                         $yv_WR0_R23 = $ww_WR0_R22 + $yv_WR0_R23
  778.                         yv(1 + $I_L768_516, 1 + $I_L767_556) = $yv_WR0_R23
  782.                         $wv_WR0_R24 = $ww_WR0_R22 + $wv_WR0_R24
  782.                         wv(1 + $I_L768_516, 1 + $I_L767_556) = $wv_WR0_R24
  788.                         fw(1 + $I_L768_516, 1 + $I_L767_556) = h1p
  783.                         $I_L768_516 = 1 + $I_L768_516
  768.                         if ( $I_L768_516 >= ncols ) exit
  768.                      enddo
  794.                      $I_L794_518 = 0
  794. !dir$ ivdep
  794.                      do
  795.                         adel(1 + $I_L794_518, 1 + $I_L767_556) = _expn( yv(1 + $I_L794_518, 1 + $I_L767_556) )
  796.                         bdel(1 + $I_L794_518, 1 + $I_L767_556) = _expn( wv(1 + $I_L794_518, 1 + $I_L767_556) )
  797.                         wdel(1 + $I_L794_518, 1 + $I_L767_556) = _expn( fu(1 + $I_L794_518, 1 + $I_L767_556) )
  803.                         yw(1 + $I_L794_518, 1 + $I_L767_556) = _sqrt( x2(1 + $I_L794_518, 1 + $I_L767_556) )
  804.                         zw(1 + $I_L794_518, 1 + $I_L767_556) = _sqrt( x3(1 + $I_L794_518, 1 + $I_L767_556) )
  798.                         $I_L794_518 = 1 + $I_L794_518
  794.                         if ( $I_L794_518 >= ncols ) exit
  794.                      enddo
  809.                      $I_L809_520 = 0
  809. !dir$ ivdep
  809.                      do
  810.                         ww(1 + $I_L809_520, 1 + $I_L767_556) = ( 1.0/( h1p + zw(1 + $I_L809_520, 1 + $I_L767_556) * ( 1.0/( 4.3368000000000001e-1 + 24.744199999999999 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) * ( h1p + 74.144000000000005 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) ) ) * ( ( zw(1 + $I_L809_520, 1 + $I_L767_556) * 1.0/( h1p + 333.24400000000003 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) * ( 5.3487399999999996e-1 + -1990.6300000000001 * x1(1 + $I_L809_520, 1 + $I_L767_556) * x1(1 + $I_L809_520, 1 + $I_L767_556) + 199.0 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) ) + ( 1.0/( h1p + 52.850000000000001 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) * ( h1p + 32.209499999999998 * x1(1 + $I_L809_520, 1 + $I_L767_556) ) ) ) )
  819.                         $wv_WR0_R25 = ( h1p + 33.123600000000003 * x2(1 + $I_L809_520, 1 + $I_L767_556) + 9.2241099999999996 * yw(1 + $I_L809_520, 1 + $I_L767_556) + 176.39599999999999 * x2(1 + $I_L809_520, 1 + $I_L767_556) * x2(1 + $I_L809_520, 1 + $I_L767_556) )
  822.                         $wv_WR0_R25 = ( h1p * 1.0/$wv_WR0_R25 )
  822.                         wv(1 + $I_L809_520, 1 + $I_L767_556) = $wv_WR0_R25
  823.                         $I_L809_520 = 1 + $I_L809_520
  809.                         if ( $I_L809_520 >= ncols ) exit
  809.                      enddo
  784.                      $I_L767_556 = 1 + $I_L767_556
  783.                      if ( $I_L767_556 >= 1 + kmax ) exit
  783.                   enddo
  826.                   $I_L826_558 = 0
  826.                   do
  827.                      $I_L827_522 = 0
  827. !dir$ ivdep
  827.                      do
  831.                         $x2_WR0_R26 = min( 2.0, x2(1 + $I_L827_522, 1 + $I_L826_558) )
  831.                         x2(1 + $I_L827_522, 1 + $I_L826_558) = $x2_WR0_R26
  833.                         yw(1 + $I_L827_522, 1 + $I_L826_558) = _sqrt( $x2_WR0_R26 )
  832.                         $x3_WR0_R27 = min( 8.0, x3(1 + $I_L827_522, 1 + $I_L826_558) )
  832.                         x3(1 + $I_L827_522, 1 + $I_L826_558) = $x3_WR0_R27
  834.                         zw(1 + $I_L827_522, 1 + $I_L826_558) = _sqrt( $x3_WR0_R27 )
  828.                         ww(1 + $I_L827_522, 1 + $I_L826_558) = max( h0p, ww(1 + $I_L827_522, 1 + $I_L826_558) )
  829.                         wv(1 + $I_L827_522, 1 + $I_L826_558) = max( h0p, wv(1 + $I_L827_522, 1 + $I_L826_558) )
  830.                         x1(1 + $I_L827_522, 1 + $I_L826_558) = min( 5.9999999999999998e-2, x1(1 + $I_L827_522, 1 + $I_L826_558) )
  835.                         $I_L827_522 = 1 + $I_L827_522
  827.                         if ( $I_L827_522 >= ncols ) exit
  827.                      enddo
  838.                      $I_L838_524 = 0
  838. !dir$ ivdep
  838.                      do
  839.                         $fu_WR0_R28 = x1(1 + $I_L838_524, 1 + $I_L826_558) * x1(1 + $I_L838_524, 1 + $I_L826_558)
  840.                         yv(1 + $I_L838_524, 1 + $I_L826_558) = 1.0000000000000001e-1 * ( 8.5106899999999999e-2 * yw(1 + $I_L838_524, 1 + $I_L826_558) + 3.2310499999999998e-1 * x2(1 + $I_L838_524, 1 + $I_L826_558) + -1.8709600000000001e-1 * x2(1 + $I_L838_524, 1 + $I_L826_558) * yw(1 + $I_L838_524, 1 + $I_L826_558) )
  843.                         $zv_WR0_R30 = 2.3918600000000001e-1 * x2(1 + $I_L838_524, 1 + $I_L826_558) + -1.6741300000000001e-2 * x2(1 + $I_L838_524, 1 + $I_L826_558) * x2(1 + $I_L838_524, 1 + $I_L826_558) + -9.2228900000000003e-2 * x2(1 + $I_L838_524, 1 + $I_L826_558) * yw(1 + $I_L838_524, 1 + $I_L826_558)
  847.                         $yw_WR0_R29 = ( 1.0/( h1p + 202.357 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( 5.6382999999999997e-4 + -39.072200000000002 * $fu_WR0_R28 + 1.0517300000000001 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + ( zw(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 40.229799999999997 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( 7.7955499999999997e-2 + 3.1585100000000002 * $fu_WR0_R28 + 4.4071999999999996 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + ( x3(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 62.569200000000002 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( -3.8130499999999998e-2 + 7.9895100000000001 * $fu_WR0_R28 + -3.6368399999999999 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + zw(1 + $I_L838_524, 1 + $I_L826_558) * ( x3(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 70.291200000000003 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( 6.2103899999999997e-3 + -2.8524099999999999 * $fu_WR0_R28 + 7.1006100000000005e-1 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) )
  846.                         $zv_WR0_R30 = 1.0e-3 * $zv_WR0_R30
  846.                         zv(1 + $I_L838_524, 1 + $I_L826_558) = $zv_WR0_R30
  860.                         $yw_WR0_R29 = 1.0000000000000001e-1 * $yw_WR0_R29
  860.                         yw(1 + $I_L838_524, 1 + $I_L826_558) = $yw_WR0_R29
  874.                         zw(1 + $I_L838_524, 1 + $I_L826_558) = 1.0e-3 * ( ( 1.0/( h1p + 10.7775 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( -2.9954200000000003e-4 + 5.1926399999999995e-1 * $fu_WR0_R28 + 2.3821899999999999e-1 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + ( x3(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 98.475800000000007 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( 1.43812e-2 + -10.1311 * $fu_WR0_R28 + 1.8026500000000001 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + ( zw(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 63.518999999999998 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( -2.9132499999999999e-2 + 10.946 * $fu_WR0_R28 + -2.3000699999999998 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) + zw(1 + $I_L838_524, 1 + $I_L826_558) * ( x3(1 + $I_L838_524, 1 + $I_L826_558) * 1.0/( h1p + 120.22799999999999 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) * ( -2.3901600000000001e-3 + 2.3544299999999998 * $fu_WR0_R28 + -3.7142700000000001e-1 * x1(1 + $I_L838_524, 1 + $I_L826_558) ) ) )
  875.                         $I_L838_524 = 1 + $I_L838_524
  838.                         if ( $I_L838_524 >= ncols ) exit
  838.                      enddo
  836.                      $I_L826_558 = 1 + $I_L826_558
  835.                      if ( $I_L826_558 >= 1 + kmax ) exit
  835.                   enddo
  877.                   $I_L877_560 = 0
  877.                   do
  878.                      $I_L878_526 = 0
  878. !dir$ ivdep
  878.                      do
  879.                         adel(1 + $I_L878_526, 1 + $I_L877_560) = 3.84615384e-1 * adel(1 + $I_L878_526, 1 + $I_L877_560) + 6.1538461499999997e-1 * bdel(1 + $I_L878_526, 1 + $I_L877_560)
  880.                         fw(1 + $I_L878_526, 1 + $I_L877_560) = fw(1 + $I_L878_526, 1 + $I_L877_560) * wdel(1 + $I_L878_526, 1 + $I_L877_560)
  881.                         $I_L878_526 = 1 + $I_L878_526
  878.                         if ( $I_L878_526 >= ncols ) exit
  878.                      enddo
  882.                      $I_L877_560 = 1 + $I_L877_560
  881.                      if ( $I_L877_560 >= 1 + kmax ) exit
  881.                   enddo
  881.                endif
  881.             endif
  884.             if ( indx2 == 1 ) then
  886.                if ( kmax >= 0 ) then
  887.                   if ( ncols > 0 ) then
  886.                      $I_L886_564 = 0
  886.                      do
  887.                         $I_L887_532 = 0
  887. !dir$ ivdep
  887.                         do
  888.                            x1(1 + $I_L887_532, 2 + $I_L886_564) = tv1(1 + $I_L887_532, 1) * wv(1 + $I_L887_532, 1 + $I_L886_564)
  889.                            x2(1 + $I_L887_532, 2 + $I_L886_564) = h1p + tui(1 + $I_L887_532, 1) * yv(1 + $I_L887_532, 1 + $I_L886_564) + tui2(1 + $I_L887_532, 1) * zv(1 + $I_L887_532, 1 + $I_L886_564)
  891.                            x3(1 + $I_L887_532, 2 + $I_L886_564) = tv2(1 + $I_L887_532, 1) * ww(1 + $I_L887_532, 1 + $I_L886_564)
  892.                            x4(1 + $I_L887_532, 2 + $I_L886_564) = h1p + tui(1 + $I_L887_532, 1) * yw(1 + $I_L887_532, 1 + $I_L886_564) + tui2(1 + $I_L887_532, 1) * zw(1 + $I_L887_532, 1 + $I_L886_564)
  894.                            fw(1 + $I_L887_532, 1 + $I_L886_564) = cc(1 + $I_L887_532, 1) * adel(1 + $I_L887_532, 1 + $I_L886_564) + rawi(1 + $I_L887_532, 1) * fw(1 + $I_L887_532, 1 + $I_L886_564)
  896.                            $I_L887_532 = 1 + $I_L887_532
  887.                            if ( $I_L887_532 >= ncols ) exit
  887.                         enddo
  900.                         $I_L900_534 = 0
  900. !dir$ ivdep
  900.                         do
  901.                            shi(1 + $I_L900_534, 2 + $I_L886_564) = fw(1 + $I_L900_534, 1 + $I_L886_564) + x4(1 + $I_L900_534, 2 + $I_L886_564) * x3(1 + $I_L900_534, 2 + $I_L886_564) + x2(1 + $I_L900_534, 2 + $I_L886_564) * x1(1 + $I_L900_534, 2 + $I_L886_564)
  902.                            $I_L900_534 = 1 + $I_L900_534
  900.                            if ( $I_L900_534 >= ncols ) exit
  900.                         enddo
  897.                         $I_L886_564 = 1 + $I_L886_564
  896.                         if ( $I_L886_564 >= 1 + kmax ) exit
  896.                      enddo
  896.                   endif
  896.                endif
  905.             else if ( kmax >= 0 ) then
  908.                if ( ncols > 0 ) then
  907.                   $I_L907_562 = 0
  907.                   do
  908.                      $I_L908_528 = 0
  908. !dir$ ivdep
  908.                      do
  909.                         x1(1 + $I_L908_528, 1 + $I_L907_562) = tv1(1 + $I_L908_528, 3 + kmax) * wv(1 + $I_L908_528, 1 + $I_L907_562) * ( h1p + tui(1 + $I_L908_528, 3 + kmax) * yv(1 + $I_L908_528, 1 + $I_L907_562) + tui2(1 + $I_L908_528, 3 + kmax) * zv(1 + $I_L908_528, 1 + $I_L907_562) )
  912.                         x2(1 + $I_L908_528, 1 + $I_L907_562) = tv2(1 + $I_L908_528, 3 + kmax) * ww(1 + $I_L908_528, 1 + $I_L907_562) * ( h1p + tui(1 + $I_L908_528, 3 + kmax) * yw(1 + $I_L908_528, 1 + $I_L907_562) + tui2(1 + $I_L908_528, 3 + kmax) * zw(1 + $I_L908_528, 1 + $I_L907_562) )
  915.                         x3(1 + $I_L908_528, 1 + $I_L907_562) = tv1(1 + $I_L908_528, 2 + kmax) * wv(1 + $I_L908_528, 1 + $I_L907_562) * ( h1p + tui(1 + $I_L908_528, 2 + kmax) * yv(1 + $I_L908_528, 1 + $I_L907_562) + tui2(1 + $I_L908_528, 2 + kmax) * zv(1 + $I_L908_528, 1 + $I_L907_562) )
  918.                         x4(1 + $I_L908_528, 1 + $I_L907_562) = tv2(1 + $I_L908_528, 2 + kmax) * ww(1 + $I_L908_528, 1 + $I_L907_562) * ( h1p + tui(1 + $I_L908_528, 2 + kmax) * yw(1 + $I_L908_528, 1 + $I_L907_562) + tui2(1 + $I_L908_528, 2 + kmax) * zw(1 + $I_L908_528, 1 + $I_L907_562) )
  921.                         shu(1 + $I_L908_528, 1 + $I_L907_562) = adel(1 + $I_L908_528, 1 + $I_L907_562) * ( cc(1 + $I_L908_528, 3 + kmax) + -cc(1 + $I_L908_528, 2 + kmax) ) + fw(1 + $I_L908_528, 1 + $I_L907_562) * ( rawi(1 + $I_L908_528, 3 + kmax) + -rawi(1 + $I_L908_528, 2 + kmax) )
  923.                         $I_L908_528 = 1 + $I_L908_528
  908.                         if ( $I_L908_528 >= ncols ) exit
  908.                      enddo
  926.                      $I_L926_530 = 0
  926. !dir$ ivdep
  926.                      do
  927.                         shu(1 + $I_L926_530, 1 + $I_L907_562) = shu(1 + $I_L926_530, 1 + $I_L907_562) + x1(1 + $I_L926_530, 1 + $I_L907_562) + x2(1 + $I_L926_530, 1 + $I_L907_562) + -x4(1 + $I_L926_530, 1 + $I_L907_562) + -x3(1 + $I_L926_530, 1 + $I_L907_562)
  929.                         $I_L926_530 = 1 + $I_L926_530
  926.                         if ( $I_L926_530 >= ncols ) exit
  926.                      enddo
  924.                      $I_L907_562 = 1 + $I_L907_562
  923.                      if ( $I_L907_562 >= 1 + kmax ) exit
  923.                   enddo
  923.                endif
  923.             endif
  933.          else if ( indx2 + -indx1 >= 0 ) then
  934.             $I_L934_574 = 0
  934.             do
  936.                if ( kmax + -indx2 == -2 ) then
  937.                   $ip1_S119 = ( indx1 + $I_L934_574 )
  938.                   $n_S124 = ( -1 + indx1 + $I_L934_574 )
  939.                   $i0_S122 = 0
  940.                   $i1_S123 = 1
  941.                   $i2_S143 = 2
  941.                else
  943.                   $ip1_S119 = ( 2 + kmax + -indx1 + -$I_L934_574 )
  944.                   $n_S124 = ( 2 + kmax + -indx1 + -$I_L934_574 )
  945.                   $i0_S122 = ( indx1 + $I_L934_574 )
  946.                   $i1_S123 = 0
  947.                   $i2_S143 = 0
  947.                endif
  950.                if ( $ip1_S119 + -indx1 >= 0 ) then
  951.                   if ( ncols > 0 ) then
  950.                      $I_L950_566 = 0
  950. !dir$ blocking_size( 1, 1 )
  950.                      do
  951.                         $I_L951_536 = 0
  951. !dir$ ivdep
  951. !dir$ loop_info (automatic) cache_nt( wbarm, vbarm, ubarm, ccu, css )
  951. !dir$ blocking_size( 256, 256 )
  951.                         do
  952.                            x1(1 + $I_L951_536, indx1 + $I_L950_566 + -$i1_S123) = ubar(1 + $I_L951_536, indx1 + $I_L934_574) + -ubarm(1 + $I_L951_536, indx1 + $i0_S122 + $I_L950_566)
  953.                            x2(1 + $I_L951_536, indx1 + $I_L950_566 + -$i1_S123) = vbar(1 + $I_L951_536, indx1 + $I_L934_574) + -vbarm(1 + $I_L951_536, indx1 + $i0_S122 + $I_L950_566)
  954.                            x3(1 + $I_L951_536, indx1 + $I_L950_566 + -$i1_S123) = wbar(1 + $I_L951_536, indx1 + $I_L934_574) + -wbarm(1 + $I_L951_536, indx1 + $i0_S122 + $I_L950_566)
  955.                            adel(1 + $I_L951_536, indx1 + $I_L950_566 + -$i1_S123) = tai(1 + $I_L951_536, indx1 + $I_L934_574) + -css(1 + $I_L951_536, indx1 + $i0_S122 + $I_L950_566)
  956.                            bdel(1 + $I_L951_536, indx1 + $I_L950_566 + -$i1_S123) = ch(1 + $I_L951_536, indx1 + $I_L934_574) + -ccu(1 + $I_L951_536, indx1 + $i0_S122 + $I_L950_566)
  957.                            $I_L951_536 = 1 + $I_L951_536
  951.                            if ( $I_L951_536 >= ncols ) exit
  951.                         enddo
  958.                         $I_L950_566 = 1 + $I_L950_566
  957.                         if ( $I_L950_566 >= 1 + $ip1_S119 + -indx1 ) exit
  957.                      enddo
  957.                   endif
  957.                endif
  961.                if ( $n_S124 > 0 ) then
  962.                   if ( ncols > 0 ) then
  961.                      $I_L961_568 = 0
  961.                      do
  962.                         $I_L962_538 = 0
  962. !dir$ ivdep
  962.                         do
  963.                            x1(1 + $I_L962_538, 1 + $I_L961_568) = abs( x1(1 + $I_L962_538, 1 + $I_L961_568) )
  964.                            x2(1 + $I_L962_538, 1 + $I_L961_568) = abs( x2(1 + $I_L962_538, 1 + $I_L961_568) )
  965.                            x3(1 + $I_L962_538, 1 + $I_L961_568) = abs( x3(1 + $I_L962_538, 1 + $I_L961_568) )
  966.                            adel(1 + $I_L962_538, 1 + $I_L961_568) = abs( adel(1 + $I_L962_538, 1 + $I_L961_568) )
  967.                            bdel(1 + $I_L962_538, 1 + $I_L961_568) = abs( bdel(1 + $I_L962_538, 1 + $I_L961_568) )
  968.                            $I_L962_538 = 1 + $I_L962_538
  962.                            if ( $I_L962_538 >= ncols ) exit
  962.                         enddo
  972.                         $I_L972_540 = 0
  972. !dir$ ivdep
  972.                         do
  973.                            fu(1 + $I_L972_540, 1 + $I_L961_568) = -9.7899999999999991 * x1(1 + $I_L972_540, 1 + $I_L961_568)
  974.                            $yw_WR0_R31 = _expn( 8.2999999999999996e-1 * log( 1.0e-100 + x1(1 + $I_L972_540, 1 + $I_L961_568) ) )
  975.                            $ww_WR0_R32 = _expn( 5.9999999999999998e-1 * log( 1.0e-100 + x3(1 + $I_L972_540, 1 + $I_L961_568) ) )
  978.                            $ww_WR0_R32 = ( -6.7000000000000002 * x3(1 + $I_L972_540, 1 + $I_L961_568) * 1.0/( h1p + 16.0 * $ww_WR0_R32 ) ) + -27.0 * $yw_WR0_R31
  978.                            ww(1 + $I_L972_540, 1 + $I_L961_568) = $ww_WR0_R32
  979.                            $yw_WR0_R31 = _expn( 5.6000000000000005e-1 * log( 1.0e-100 + adel(1 + $I_L972_540, 1 + $I_L961_568) ) )
  980.                            $yw_WR0_R31 = h1p + 15.1 * $yw_WR0_R31
  981.                            $yv_WR0_R33 = ( -3.1000000000000001 * adel(1 + $I_L972_540, 1 + $I_L961_568) * 1.0/$yw_WR0_R31 )
  983.                            $yw_WR0_R31 = _expn( 5.6999999999999995e-1 * log( 1.0e-100 + bdel(1 + $I_L972_540, 1 + $I_L961_568) ) )
  984.                            $yw_WR0_R31 = h1p + 9.0000000000000002e-1 * $yw_WR0_R31
  984.                            yw(1 + $I_L972_540, 1 + $I_L961_568) = $yw_WR0_R31
  985.                            $wv_WR0_R34 = ( -4.0000000000000001e-2 * bdel(1 + $I_L972_540, 1 + $I_L961_568) * 1.0/$yw_WR0_R31 )
  982.                            $yv_WR0_R33 = $ww_WR0_R32 + $yv_WR0_R33
  982.                            yv(1 + $I_L972_540, 1 + $I_L961_568) = $yv_WR0_R33
  986.                            $wv_WR0_R34 = $ww_WR0_R32 + $wv_WR0_R34
  986.                            wv(1 + $I_L972_540, 1 + $I_L961_568) = $wv_WR0_R34
  993.                            fw(1 + $I_L972_540, 1 + $I_L961_568) = h1p
  987.                            $I_L972_540 = 1 + $I_L972_540
  972.                            if ( $I_L972_540 >= ncols ) exit
  972.                         enddo
  998.                         $I_L998_542 = 0
  998. !dir$ ivdep
  998.                         do
  999.                            adel(1 + $I_L998_542, 1 + $I_L961_568) = _expn( yv(1 + $I_L998_542, 1 + $I_L961_568) )
 1000.                            bdel(1 + $I_L998_542, 1 + $I_L961_568) = _expn( wv(1 + $I_L998_542, 1 + $I_L961_568) )
 1001.                            wdel(1 + $I_L998_542, 1 + $I_L961_568) = _expn( fu(1 + $I_L998_542, 1 + $I_L961_568) )
 1006.                            yw(1 + $I_L998_542, 1 + $I_L961_568) = _sqrt( x2(1 + $I_L998_542, 1 + $I_L961_568) )
 1007.                            zw(1 + $I_L998_542, 1 + $I_L961_568) = _sqrt( x3(1 + $I_L998_542, 1 + $I_L961_568) )
 1002.                            $I_L998_542 = 1 + $I_L998_542
  998.                            if ( $I_L998_542 >= ncols ) exit
  998.                         enddo
  969.                         $I_L961_568 = 1 + $I_L961_568
  968.                         if ( $I_L961_568 >= $n_S124 ) exit
  968.                      enddo
 1011.                      $I_L1011_570 = 0
 1011.                      do
 1012.                         $I_L1012_544 = 0
 1012. !dir$ ivdep
 1012.                         do
 1013.                            ww(1 + $I_L1012_544, 1 + $I_L1011_570) = ( ( ( ( h1p + 32.209499999999998 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) * 1.0/( h1p + 52.850000000000001 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) ) + ( zw(1 + $I_L1012_544, 1 + $I_L1011_570) * ( 5.3487399999999996e-1 + 199.0 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) + -1990.6300000000001 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) * 1.0/( h1p + 333.24400000000003 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) ) ) * 1.0/( h1p + zw(1 + $I_L1012_544, 1 + $I_L1011_570) * ( ( h1p + 74.144000000000005 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) * 1.0/( 4.3368000000000001e-1 + 24.744199999999999 * x1(1 + $I_L1012_544, 1 + $I_L1011_570) ) ) ) )
 1022.                            wv(1 + $I_L1012_544, 1 + $I_L1011_570) = ( h1p + 33.123600000000003 * x2(1 + $I_L1012_544, 1 + $I_L1011_570) + 176.39599999999999 * x2(1 + $I_L1012_544, 1 + $I_L1011_570) * x2(1 + $I_L1012_544, 1 + $I_L1011_570) + 9.2241099999999996 * yw(1 + $I_L1012_544, 1 + $I_L1011_570) )
 1025.                            $LD_SPLT_P63 = wv(1 + $I_L1012_544, 1 + $I_L1011_570)
 1025.                            wv(1 + $I_L1012_544, 1 + $I_L1011_570) = ( h1p * 1.0/$LD_SPLT_P63 )
 1026.                            $I_L1012_544 = 1 + $I_L1012_544
 1012.                            if ( $I_L1012_544 >= ncols ) exit
 1012.                         enddo
 1030.                         $I_L1030_546 = 0
 1030. !dir$ ivdep
 1030.                         do
 1034.                            x2(1 + $I_L1030_546, 1 + $I_L1011_570) = min( 2.0, x2(1 + $I_L1030_546, 1 + $I_L1011_570) )
 1036.                            $LD_SPLT_P64 = x2(1 + $I_L1030_546, 1 + $I_L1011_570)
 1036.                            yw(1 + $I_L1030_546, 1 + $I_L1011_570) = _sqrt( $LD_SPLT_P64 )
 1035.                            x3(1 + $I_L1030_546, 1 + $I_L1011_570) = min( 8.0, x3(1 + $I_L1030_546, 1 + $I_L1011_570) )
 1037.                            $LD_SPLT_P65 = x3(1 + $I_L1030_546, 1 + $I_L1011_570)
 1037.                            zw(1 + $I_L1030_546, 1 + $I_L1011_570) = _sqrt( $LD_SPLT_P65 )
 1031.                            ww(1 + $I_L1030_546, 1 + $I_L1011_570) = max( h0p, ww(1 + $I_L1030_546, 1 + $I_L1011_570) )
 1032.                            wv(1 + $I_L1030_546, 1 + $I_L1011_570) = max( h0p, wv(1 + $I_L1030_546, 1 + $I_L1011_570) )
 1033.                            x1(1 + $I_L1030_546, 1 + $I_L1011_570) = min( 5.9999999999999998e-2, x1(1 + $I_L1030_546, 1 + $I_L1011_570) )
 1038.                            $I_L1030_546 = 1 + $I_L1030_546
 1030.                            if ( $I_L1030_546 >= ncols ) exit
 1030.                         enddo
 1042.                         $I_L1042_548 = 0
 1042. !dir$ ivdep
 1042.                         do
 1043.                            fu(1 + $I_L1042_548, 1 + $I_L1011_570) = x1(1 + $I_L1042_548, 1 + $I_L1011_570) * x1(1 + $I_L1042_548, 1 + $I_L1011_570)
 1044.                            yv(1 + $I_L1042_548, 1 + $I_L1011_570) = 1.0000000000000001e-1 * ( 8.5106899999999999e-2 * yw(1 + $I_L1042_548, 1 + $I_L1011_570) + 3.2310499999999998e-1 * x2(1 + $I_L1042_548, 1 + $I_L1011_570) + -1.8709600000000001e-1 * x2(1 + $I_L1042_548, 1 + $I_L1011_570) * yw(1 + $I_L1042_548, 1 + $I_L1011_570) )
 1047.                            $zv_WR0_R35 = 2.3918600000000001e-1 * x2(1 + $I_L1042_548, 1 + $I_L1011_570) + -1.6741300000000001e-2 * x2(1 + $I_L1042_548, 1 + $I_L1011_570) * x2(1 + $I_L1042_548, 1 + $I_L1011_570) + -9.2228900000000003e-2 * x2(1 + $I_L1042_548, 1 + $I_L1011_570) * yw(1 + $I_L1042_548, 1 + $I_L1011_570)
 1052.                            $LD_SPLT_P69 = fu(1 + $I_L1042_548, 1 + $I_L1011_570)
 1052.                            yw(1 + $I_L1042_548, 1 + $I_L1011_570) = ( 1.0/( h1p + 202.357 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( 5.6382999999999997e-4 + -39.072200000000002 * $LD_SPLT_P69 + 1.0517300000000001 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + ( zw(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 40.229799999999997 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( 7.7955499999999997e-2 + 3.1585100000000002 * $LD_SPLT_P69 + 4.4071999999999996 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + ( x3(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 62.569200000000002 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( -3.8130499999999998e-2 + 7.9895100000000001 * $LD_SPLT_P69 + -3.6368399999999999 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + zw(1 + $I_L1042_548, 1 + $I_L1011_570) * ( x3(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 70.291200000000003 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( 6.2103899999999997e-3 + -2.8524099999999999 * $LD_SPLT_P69 + 7.1006100000000005e-1 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) )
 1050.                            $zv_WR0_R35 = 1.0e-3 * $zv_WR0_R35
 1050.                            zv(1 + $I_L1042_548, 1 + $I_L1011_570) = $zv_WR0_R35
 1065.                            $LD_SPLT_P74 = yw(1 + $I_L1042_548, 1 + $I_L1011_570)
 1065.                            yw(1 + $I_L1042_548, 1 + $I_L1011_570) = 1.0000000000000001e-1 * $LD_SPLT_P74
 1079.                            zw(1 + $I_L1042_548, 1 + $I_L1011_570) = 1.0e-3 * ( ( 1.0/( h1p + 10.7775 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( -2.9954200000000003e-4 + 5.1926399999999995e-1 * $LD_SPLT_P69 + 2.3821899999999999e-1 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + ( x3(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 98.475800000000007 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( 1.43812e-2 + -10.1311 * $LD_SPLT_P69 + 1.8026500000000001 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + ( zw(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 63.518999999999998 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( -2.9132499999999999e-2 + 10.946 * $LD_SPLT_P69 + -2.3000699999999998 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) + zw(1 + $I_L1042_548, 1 + $I_L1011_570) * ( x3(1 + $I_L1042_548, 1 + $I_L1011_570) * 1.0/( h1p + 120.22799999999999 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) * ( -2.3901600000000001e-3 + 2.3544299999999998 * $LD_SPLT_P69 + -3.7142700000000001e-1 * x1(1 + $I_L1042_548, 1 + $I_L1011_570) ) ) )
 1080.                            $I_L1042_548 = 1 + $I_L1042_548
 1042.                            if ( $I_L1042_548 >= ncols ) exit
 1042.                         enddo
 1027.                         $I_L1011_570 = 1 + $I_L1011_570
 1026.                         if ( $I_L1011_570 >= $n_S124 ) exit
 1026.                      enddo
 1083.                      $I_L1083_572 = 0
 1083.                      do
 1084.                         $I_L1084_550 = 0
 1084. !dir$ ivdep
 1084. !dir$ loop_info (automatic) cache_nt( txuf )
 1084.                         do
 1085.                            x1(1 + $I_L1084_550, 1 + $I_L1083_572) = wv(1 + $I_L1084_550, 1 + $I_L1083_572) * tv1(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) * ( h1p + zv(1 + $I_L1084_550, 1 + $I_L1083_572) * tui2(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) + yv(1 + $I_L1084_550, 1 + $I_L1083_572) * tui(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) )
 1088.                            x2(1 + $I_L1084_550, 1 + $I_L1083_572) = ww(1 + $I_L1084_550, 1 + $I_L1083_572) * tv2(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) * ( h1p + tui2(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) * zw(1 + $I_L1084_550, 1 + $I_L1083_572) + tui(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) * yw(1 + $I_L1084_550, 1 + $I_L1083_572) )
 1091.                            x3(1 + $I_L1084_550, 1 + $I_L1083_572) = wv(1 + $I_L1084_550, 1 + $I_L1083_572) * tv1(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) * ( h1p + yv(1 + $I_L1084_550, 1 + $I_L1083_572) * tui(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) + zv(1 + $I_L1084_550, 1 + $I_L1083_572) * tui2(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) )
 1094.                            $x4_WR0_R36 = ww(1 + $I_L1084_550, 1 + $I_L1083_572) * tv2(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) * ( h1p + yw(1 + $I_L1084_550, 1 + $I_L1083_572) * tui(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) + zw(1 + $I_L1084_550, 1 + $I_L1083_572) * tui2(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) )
 1094.                            x4(1 + $I_L1084_550, 1 + $I_L1083_572) = $x4_WR0_R36
 1097.                            $LD_SPLT_P75 = x1(1 + $I_L1084_550, 1 + $I_L1083_572)
 1097.                            $LD_SPLT_P76 = x2(1 + $I_L1084_550, 1 + $I_L1083_572)
 1097.                            $LD_SPLT_P77 = x3(1 + $I_L1084_550, 1 + $I_L1083_572)
 1097.                            txuf(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572, indx1 + $I_L934_574) = $LD_SPLT_P75 + $LD_SPLT_P76 + -$LD_SPLT_P77 + -$x4_WR0_R36 + ( 3.84615384e-1 * adel(1 + $I_L1084_550, 1 + $I_L1083_572) + 6.1538461499999997e-1 * bdel(1 + $I_L1084_550, 1 + $I_L1083_572) ) * ( cc(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) + -cc(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) ) + wdel(1 + $I_L1084_550, 1 + $I_L1083_572) * fw(1 + $I_L1084_550, 1 + $I_L1083_572) * ( rawi(1 + $I_L1084_550, 1 + $i0_S122 + $I_L1083_572) + -rawi(1 + $I_L1084_550, $i0_S122 + $i2_S143 + $I_L1083_572) )
 1104.                            $I_L1084_550 = 1 + $I_L1084_550
 1084.                            if ( $I_L1084_550 >= ncols ) exit
 1084.                         enddo
 1105.                         $I_L1083_572 = 1 + $I_L1083_572
 1104.                         if ( $I_L1083_572 >= $n_S124 ) exit
 1104.                      enddo
 1104.                   endif
 1104.                endif
 1106.                $I_L934_574 = 1 + $I_L934_574
 1105.                if ( $I_L934_574 >= 1 + indx2 + -indx1 ) exit
 1105.             enddo
 1105.          endif
 1105.       endif
  111.       _free( t$46 )
 1109.       return
 1109.       end
 1109.       
 1115.       
 1115.       subroutine lwflux( pai, tai, ozai, ubar, vbar, wbar, ubarm, vbarm, wbarm, fluxu, fluxd, txuf, tv1, tv2, tui, x1, x2, cc, rawi, x3, x4, ch, dp, css, ccu, shi, shh, shu, sumsav, h0p, h1p, h1p5, hp5, dtb, dtbinv, pr, ntm1, ozone, co2val, ncols, kmax )
 1115.       t$6 = ncols
 1115.       t$7 = ( 2 + kmax )
 1210.       t$73 = _zla( 0, ncols )
 1115.       t$74 = _zla( 0, ncols )
 1210.       t$75 = _zla( 0, ( 2 + kmax ) )
 1115.       t$76 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1115.       t$77 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1115.       t$78 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, ( 2 + kmax ) )
 1115.       t$8 = ( 3 + kmax )
 1192.       t$79 = _zla( 0, ( 3 + kmax ) )
 1115.       t$80 = _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1115.       t$9 = ( 1 + kmax )
 1207.       t$81 = _zla( 0, ( 1 + kmax ) )
 1115.       t$82 = _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1226.       t$85 = 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1227.       t$87 = 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1224.       t$88 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1224.       t$90 = t$88 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1225.       t$91 = 8 * ( 7 + t$88 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1225.       t$93 = t$91 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1115.       t$83 = int( _alloc( t$91 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ), 8 )
 1226.       t$84 = t$83
 1227.       t$86 = t$83 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1224.       t$89 = t$88 + t$83
 1225.       t$92 = t$91 + t$83
 1246.       if ( ncols > 0 ) then
 1246.          $I_L1246_490 = 0
 1246. !dir$ ivdep
 1246.          do
 1247.             shi(1 + $I_L1246_490, 1) = h0p
 1248.             $I_L1246_490 = 1 + $I_L1246_490
 1246.             if ( $I_L1246_490 >= ncols ) exit
 1246.          enddo
 1246.       endif
 1250.       if ( 2 + kmax > 0 ) then
 1252.          if ( ncols > 0 ) then
 1250.             $I_L1250_584 = 0
 1250.             do
 1251.                $I_L1251_549 = 0
 1251.                do
 1252.                   $I_L1252_492 = 0
 1252. !dir$ ivdep
 1252.                   do
 1253.                      txuf(1 + $I_L1252_492, 1 + $I_L1251_549, 1 + $I_L1250_584) = h0p
 1254.                      $I_L1252_492 = 1 + $I_L1252_492
 1252.                      if ( $I_L1252_492 >= ncols ) exit
 1252.                   enddo
 1255.                   $I_L1251_549 = 1 + $I_L1251_549
 1254.                   if ( $I_L1251_549 >= 2 + kmax ) exit
 1254.                enddo
 1256.                $I_L1250_584 = 1 + $I_L1250_584
 1255.                if ( $I_L1250_584 >= 2 + kmax ) exit
 1255.             enddo
 1255.          endif
 1255.       endif
 1258.       if ( 3 + kmax > 0 ) then
 1259.          if ( ncols > 0 ) then
 1258.             $I_L1258_551 = 0
 1258.             do
 1259.                $I_L1259_494 = 0
 1259. !dir$ ivdep
 1259.                do
 1260.                   $rawi_WR0_R0 = h1p5 + dtbinv * ( -165.0 + tui(1 + $I_L1259_494, 1 + $I_L1258_551) )
 1267.                   it(1 + $I_L1259_494, 1 + $I_L1258_551) = ( max( 1, min( ntm1, int( $rawi_WR0_R0 ) ) ) )
 1275.                   $rawi_WR0_R0 = dtbinv * ( -165.0 + tui(1 + $I_L1259_494, 1 + $I_L1258_551) + -( dtb * ( -h1p + ( max( 1, min( ntm1, int( $rawi_WR0_R0 ) ) ) ) ) ) )
 1275.                   rawi(1 + $I_L1259_494, 1 + $I_L1258_551) = $rawi_WR0_R0
 1262.                   $I_L1259_494 = 1 + $I_L1259_494
 1259.                   if ( $I_L1259_494 >= ncols ) exit
 1259.                enddo
 1280.                $I_L1280_496 = 0
 1280. !dir$ ivdep
 1280.                do
 1281.                   if ( it(1 + $I_L1280_496, 1 + $I_L1258_551) <= ntm1 ) then
 1282.                      x1(1 + $I_L1280_496, 1 + $I_L1258_551) = b2501(it(1 + $I_L1280_496, 1 + $I_L1258_551))
 1283.                      x2(1 + $I_L1280_496, 1 + $I_L1258_551) = b2501(1 + it(1 + $I_L1280_496, 1 + $I_L1258_551))
 1283.                   endif
 1285.                   $I_L1280_496 = 1 + $I_L1280_496
 1284.                   if ( $I_L1280_496 >= ncols ) exit
 1284.                enddo
 1289.                $I_L1289_498 = 0
 1289. !dir$ ivdep
 1289.                do
 1290.                   tv1(1 + $I_L1289_498, 1 + $I_L1258_551) = x1(1 + $I_L1289_498, 1 + $I_L1258_551) + rawi(1 + $I_L1289_498, 1 + $I_L1258_551) * ( x2(1 + $I_L1289_498, 1 + $I_L1258_551) + -x1(1 + $I_L1289_498, 1 + $I_L1258_551) )
 1291.                   $I_L1289_498 = 1 + $I_L1289_498
 1289.                   if ( $I_L1289_498 >= ncols ) exit
 1289.                enddo
 1295.                $I_L1295_500 = 0
 1295. !dir$ ivdep
 1295.                do
 1296.                   if ( it(1 + $I_L1295_500, 1 + $I_L1258_551) <= ntm1 ) then
 1297.                      x2(1 + $I_L1295_500, 1 + $I_L1258_551) = b2502(1 + it(1 + $I_L1295_500, 1 + $I_L1258_551))
 1298.                      x1(1 + $I_L1295_500, 1 + $I_L1258_551) = b2502(it(1 + $I_L1295_500, 1 + $I_L1258_551))
 1298.                   endif
 1300.                   $I_L1295_500 = 1 + $I_L1295_500
 1299.                   if ( $I_L1295_500 >= ncols ) exit
 1299.                enddo
 1304.                $I_L1304_502 = 0
 1304. !dir$ ivdep
 1304.                do
 1305.                   tv2(1 + $I_L1304_502, 1 + $I_L1258_551) = x1(1 + $I_L1304_502, 1 + $I_L1258_551) + rawi(1 + $I_L1304_502, 1 + $I_L1258_551) * ( x2(1 + $I_L1304_502, 1 + $I_L1258_551) + -x1(1 + $I_L1304_502, 1 + $I_L1258_551) )
 1321.                   $tui_WR0_R2 = -250.0 + tui(1 + $I_L1304_502, 1 + $I_L1258_551)
 1321.                   tui(1 + $I_L1304_502, 1 + $I_L1258_551) = $tui_WR0_R2
 1322.                   tui2(1 + $I_L1304_502, 1 + $I_L1258_551) = $tui_WR0_R2 * $tui_WR0_R2
 1306.                   $I_L1304_502 = 1 + $I_L1304_502
 1304.                   if ( $I_L1304_502 >= ncols ) exit
 1304.                enddo
 1329.                $I_L1329_508 = 0
 1329. !dir$ ivdep
 1329.                do
 1330.                   if ( it(1 + $I_L1329_508, 1 + $I_L1258_551) <= ntm1 ) then
 1331.                      x1(1 + $I_L1329_508, 1 + $I_L1258_551) = blkco2(1 + it(1 + $I_L1329_508, 1 + $I_L1258_551))
 1332.                      x2(1 + $I_L1329_508, 1 + $I_L1258_551) = blkco2(it(1 + $I_L1329_508, 1 + $I_L1258_551))
 1332.                   endif
 1334.                   $I_L1329_508 = 1 + $I_L1329_508
 1333.                   if ( $I_L1329_508 >= ncols ) exit
 1333.                enddo
 1338.                $I_L1338_510 = 0
 1338. !dir$ ivdep
 1338.                do
 1339.                   cc(1 + $I_L1338_510, 1 + $I_L1258_551) = x2(1 + $I_L1338_510, 1 + $I_L1258_551) + rawi(1 + $I_L1338_510, 1 + $I_L1258_551) * ( x1(1 + $I_L1338_510, 1 + $I_L1258_551) + -x2(1 + $I_L1338_510, 1 + $I_L1258_551) )
 1340.                   $I_L1338_510 = 1 + $I_L1338_510
 1338.                   if ( $I_L1338_510 >= ncols ) exit
 1338.                enddo
 1344.                $I_L1344_512 = 0
 1344. !dir$ ivdep
 1344.                do
 1345.                   if ( it(1 + $I_L1344_512, 1 + $I_L1258_551) <= ntm1 ) then
 1346.                      x2(1 + $I_L1344_512, 1 + $I_L1258_551) = blkwin(it(1 + $I_L1344_512, 1 + $I_L1258_551))
 1347.                      x1(1 + $I_L1344_512, 1 + $I_L1258_551) = blkwin(1 + it(1 + $I_L1344_512, 1 + $I_L1258_551))
 1347.                   endif
 1349.                   $I_L1344_512 = 1 + $I_L1344_512
 1348.                   if ( $I_L1344_512 >= ncols ) exit
 1348.                enddo
 1263.                $I_L1258_551 = 1 + $I_L1258_551
 1262.                if ( $I_L1258_551 >= 3 + kmax ) exit
 1262.             enddo
 1352.             $I_L1352_555 = 0
 1352.             do
 1353.                $I_L1353_514 = 0
 1353. !dir$ ivdep
 1353.                do
 1354.                   rawi(1 + $I_L1353_514, 1 + $I_L1352_555) = x2(1 + $I_L1353_514, 1 + $I_L1352_555) + rawi(1 + $I_L1353_514, 1 + $I_L1352_555) * ( x1(1 + $I_L1353_514, 1 + $I_L1352_555) + -x2(1 + $I_L1353_514, 1 + $I_L1352_555) )
 1355.                   $I_L1353_514 = 1 + $I_L1353_514
 1353.                   if ( $I_L1353_514 >= ncols ) exit
 1353.                enddo
 1356.                $I_L1352_555 = 1 + $I_L1352_555
 1355.                if ( $I_L1352_555 >= 3 + kmax ) exit
 1355.             enddo
 1355.          endif
 1355.       endif
 1309.       if ( 2 + kmax > 0 ) then
 1310.          if ( ncols > 0 ) then
 1309.             $I_L1309_553 = 0
 1309.             do
 1310.                $I_L1310_504 = 0
 1310. !dir$ ivdep
 1310.                do
 1311.                   shh(1 + $I_L1310_504, 1 + $I_L1309_553) = tv1(1 + $I_L1310_504, 1 + $I_L1309_553) + tv2(1 + $I_L1310_504, 1 + $I_L1309_553)
 1312.                   $I_L1310_504 = 1 + $I_L1310_504
 1310.                   if ( $I_L1310_504 >= ncols ) exit
 1310.                enddo
 1313.                $I_L1309_553 = 1 + $I_L1309_553
 1312.                if ( $I_L1309_553 >= 2 + kmax ) exit
 1312.             enddo
 1312.          endif
 1312.       endif
 1315.       if ( ncols > 0 ) then
 1315.          $I_L1315_506 = 0
 1315. !dir$ ivdep
 1315.          do
 1316.             sumsav(1 + $I_L1315_506) = tv1(1 + $I_L1315_506, 3 + kmax) + tv2(1 + $I_L1315_506, 3 + kmax)
 1317.             $I_L1315_506 = 1 + $I_L1315_506
 1315.             if ( $I_L1315_506 >= ncols ) exit
 1315.          enddo
 1315.       endif
 1360.       if ( kmax >= 0 ) then
 1361.          if ( ncols > 0 ) then
 1360.             $I_L1360_557 = 0
 1360.             do
 1361.                $I_L1361_516 = 0
 1361. !dir$ ivdep
 1361.                do
 1362.                   x1(1 + $I_L1361_516, 1 + $I_L1360_557) = 2.5000000000000001e-2 * ( -240.0 + tai(1 + $I_L1361_516, 2 + $I_L1360_557) )
 1363.                   $I_L1361_516 = 1 + $I_L1361_516
 1361.                   if ( $I_L1361_516 >= ncols ) exit
 1361.                enddo
 1364.                $I_L1360_557 = 1 + $I_L1360_557
 1363.                if ( $I_L1360_557 >= 1 + kmax ) exit
 1363.             enddo
 1363.          endif
 1363.       endif
 1366.       $F_A33 = ( 1 + kmax )
 1366.       $F_A34 = ncols
 1366.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1366.          $I_L1366_575 = 0
 1366.          do
 1366.             $I_L1366_543 = 0
 1366. !dir$ ivdep
 1366.             do
 1366.                ch(1 + $I_L1366_543, 2 + $I_L1366_575) = _expn( x1(1 + $I_L1366_543, 1 + $I_L1366_575) )
 1366.                $I_L1366_543 = 1 + $I_L1366_543
 1366.                if ( $I_L1366_543 >= $F_A34 ) exit
 1366.             enddo
 1366.             $I_L1366_575 = 1 + $I_L1366_575
 1366.             if ( $I_L1366_575 >= $F_A33 ) exit
 1366.          enddo
 1366.       endif
 1368.       if ( kmax >= 0 ) then
 1369.          if ( ncols > 0 ) then
 1368.             $I_L1368_559 = 0
 1368.             do
 1369.                $I_L1369_518 = 0
 1369. !dir$ ivdep
 1369.                do
 1370.                   x1(1 + $I_L1369_518, 1 + $I_L1368_559) = 8.8999999999999999e-3 * ( -240.0 + tai(1 + $I_L1369_518, 2 + $I_L1368_559) )
 1371.                   $I_L1369_518 = 1 + $I_L1369_518
 1369.                   if ( $I_L1369_518 >= ncols ) exit
 1369.                enddo
 1372.                $I_L1368_559 = 1 + $I_L1368_559
 1371.                if ( $I_L1368_559 >= 1 + kmax ) exit
 1371.             enddo
 1371.          endif
 1371.       endif
 1374.       $F_A35 = ( 1 + kmax )
 1374.       $F_A36 = ncols
 1374.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1374.          $I_L1374_577 = 0
 1374.          do
 1374.             $I_L1374_545 = 0
 1374. !dir$ ivdep
 1374.             do
 1374.                tai(1 + $I_L1374_545, 2 + $I_L1374_577) = _expn( x1(1 + $I_L1374_545, 1 + $I_L1374_577) )
 1374.                $I_L1374_545 = 1 + $I_L1374_545
 1374.                if ( $I_L1374_545 >= $F_A36 ) exit
 1374.             enddo
 1374.             $I_L1374_577 = 1 + $I_L1374_577
 1374.             if ( $I_L1374_577 >= $F_A35 ) exit
 1374.          enddo
 1374.       endif
 1376.       if ( ncols > 0 ) then
 1376.          $I_L1376_520 = 0
 1376. !dir$ ivdep
 1376.          do
 1377.             tai(1 + $I_L1376_520, 1) = h0p
 1378.             ch(1 + $I_L1376_520, 1) = h0p
 1379.             $I_L1376_520 = 1 + $I_L1376_520
 1376.             if ( $I_L1376_520 >= ncols ) exit
 1376.          enddo
 1376.       endif
 1381.       if ( kmax >= 0 ) then
 1382.          if ( ncols > 0 ) then
 1381.             $I_L1381_561 = 0
 1381.             do
 1382.                $I_L1382_522 = 0
 1382. !dir$ ivdep
 1382.                do
 1383.                   $x1_WR0_R3 = pai(1 + $I_L1382_522, 1 + $I_L1381_561)
 1389.                   $x1_WR0_R3 = max( 1.0, $x1_WR0_R3 )
 1389.                   x1(1 + $I_L1382_522, 1 + $I_L1381_561) = $x1_WR0_R3
 1384.                   $I_L1382_522 = 1 + $I_L1382_522
 1382.                   if ( $I_L1382_522 >= ncols ) exit
 1382.                enddo
 1385.                $I_L1381_561 = 1 + $I_L1381_561
 1384.                if ( $I_L1381_561 >= 1 + kmax ) exit
 1384.             enddo
 1384.          endif
 1395.          $SC_pr_I0 = pr(1)
 1394.          if ( ncols > 0 ) then
 1393.             $I_L1393_563 = 0
 1393.             do
 1394.                $I_L1394_524 = 0
 1394. !dir$ ivdep
 1394.                do
 1395.                   $fw_WR0_R4 = $SC_pr_I0 * x1(1 + $I_L1394_524, 1 + $I_L1393_563)
 1395.                   fw(1 + $I_L1394_524, 1 + $I_L1393_563) = $fw_WR0_R4
 1401.                   x2(1 + $I_L1394_524, 1 + $I_L1393_563) = _expn( 8.4999999999999998e-1 * log( $fw_WR0_R4 ) )
 1396.                   $I_L1394_524 = 1 + $I_L1394_524
 1394.                   if ( $I_L1394_524 >= ncols ) exit
 1394.                enddo
 1397.                $I_L1393_563 = 1 + $I_L1393_563
 1396.                if ( $I_L1393_563 >= 1 + kmax ) exit
 1396.             enddo
 1396.          endif
 1408.          $SC_pr_I1 = pr(2)
 1406.          if ( ncols > 0 ) then
 1405.             $I_L1405_565 = 0
 1405.             do
 1406.                $I_L1406_526 = 0
 1406. !dir$ ivdep
 1406.                do
 1407.                   tai(1 + $I_L1406_526, 2 + $I_L1405_565) = tai(1 + $I_L1406_526, 2 + $I_L1405_565) * x2(1 + $I_L1406_526, 1 + $I_L1405_565)
 1408.                   x1(1 + $I_L1406_526, 1 + $I_L1405_565) = $SC_pr_I1 * x1(1 + $I_L1406_526, 1 + $I_L1405_565)
 1409.                   $I_L1406_526 = 1 + $I_L1406_526
 1406.                   if ( $I_L1406_526 >= ncols ) exit
 1406.                enddo
 1410.                $I_L1405_565 = 1 + $I_L1405_565
 1409.                if ( $I_L1405_565 >= 1 + kmax ) exit
 1409.             enddo
 1409.          endif
 1409.       endif
 1412.       $F_A37 = ( 1 + kmax )
 1412.       $F_A38 = ncols
 1412.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1412.          $I_L1412_579 = 0
 1412.          do
 1412.             $I_L1412_547 = 0
 1412. !dir$ ivdep
 1412.             do
 1412.                x1(1 + $I_L1412_547, 1 + $I_L1412_579) = _sqrt( x1(1 + $I_L1412_547, 1 + $I_L1412_579) )
 1412.                $I_L1412_547 = 1 + $I_L1412_547
 1412.                if ( $I_L1412_547 >= $F_A38 ) exit
 1412.             enddo
 1412.             $I_L1412_579 = 1 + $I_L1412_579
 1412.             if ( $I_L1412_579 >= $F_A37 ) exit
 1412.          enddo
 1412.       endif
 1414.       if ( kmax >= 0 ) then
 1415.          if ( ncols > 0 ) then
 1414.             $I_L1414_567 = 0
 1414.             if ( kmax > 0 ) then
 1414.                $I_L1414_593 = 0
 1414. !dir$ blocking_size( 1, 1 )
 1414.                do
 1415.                   $I_L1415_528 = 0
 1415. !dir$ ivdep
 1415. !dir$ blocking_size( 256, 256 )
 1415.                   do
 1420.                      $tai_WR0_R5 = 7.8787878787878792e-4 * co2val * tai(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) * dp(1 + $I_L1415_528, 2 + 2 * $I_L1414_593)
 1420.                      tai(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = $tai_WR0_R5
 1421.                      $ch_WR0_R6 = 7.8787878787878792e-4 * co2val * ch(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) * dp(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) * x1(1 + $I_L1415_528, 1 + 2 * $I_L1414_593)
 1421.                      ch(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = $ch_WR0_R6
 1427.                      $tai_WR0_R5 = $tai_WR0_R5 + tai(1 + $I_L1415_528, 1 + 2 * $I_L1414_593)
 1427.                      tai(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = $tai_WR0_R5
 1428.                      $ch_WR0_R6 = $ch_WR0_R6 + ch(1 + $I_L1415_528, 1 + 2 * $I_L1414_593)
 1428.                      ch(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = $ch_WR0_R6
 1434.                      css(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = hp5 * ( $tai_WR0_R5 + tai(1 + $I_L1415_528, 1 + 2 * $I_L1414_593) )
 1435.                      ccu(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) = hp5 * ( $ch_WR0_R6 + ch(1 + $I_L1415_528, 1 + 2 * $I_L1414_593) )
 1420.                      $tai_WR0_R5 = 7.8787878787878792e-4 * co2val * dp(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) * tai(1 + $I_L1415_528, 3 + 2 * $I_L1414_593)
 1420.                      tai(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = $tai_WR0_R5
 1421.                      $ch_WR0_R6 = 7.8787878787878792e-4 * co2val * ch(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) * dp(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) * x1(1 + $I_L1415_528, 2 + 2 * $I_L1414_593)
 1421.                      ch(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = $ch_WR0_R6
 1427.                      $tai_WR0_R5 = $tai_WR0_R5 + tai(1 + $I_L1415_528, 2 + 2 * $I_L1414_593)
 1427.                      tai(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = $tai_WR0_R5
 1428.                      $ch_WR0_R6 = $ch_WR0_R6 + ch(1 + $I_L1415_528, 2 + 2 * $I_L1414_593)
 1428.                      ch(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = $ch_WR0_R6
 1434.                      css(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = hp5 * ( $tai_WR0_R5 + tai(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) )
 1435.                      ccu(1 + $I_L1415_528, 3 + 2 * $I_L1414_593) = hp5 * ( $ch_WR0_R6 + ch(1 + $I_L1415_528, 2 + 2 * $I_L1414_593) )
 1422.                      $I_L1415_528 = 1 + $I_L1415_528
 1415.                      if ( $I_L1415_528 >= ncols ) exit
 1415.                   enddo
 1423.                   $I_L1414_593 = 1 + $I_L1414_593
 1422.                   if ( $I_L1414_593 >= _rsh( 1 + kmax, 1 ) ) exit
 1422.                enddo
 1423.                $I_L1414_567 = and( 0xfffffffffffffffeUL, 1 + kmax )
 1423.             endif
 1414.             if ( $I_L1414_567 < 1 + kmax ) then
 1415.                $I_L1415_528 = 0
 1415. !dir$ ivdep
 1415. !dir$ blocking_size( 256, 256 )
 1415.                do
 1420.                   $tai_WR0_R5 = 7.8787878787878792e-4 * co2val * dp(1 + $I_L1415_528, 2 + $I_L1414_567) * tai(1 + $I_L1415_528, 2 + $I_L1414_567)
 1420.                   tai(1 + $I_L1415_528, 2 + $I_L1414_567) = $tai_WR0_R5
 1421.                   $ch_WR0_R6 = 7.8787878787878792e-4 * co2val * ch(1 + $I_L1415_528, 2 + $I_L1414_567) * dp(1 + $I_L1415_528, 2 + $I_L1414_567) * x1(1 + $I_L1415_528, 1 + $I_L1414_567)
 1421.                   ch(1 + $I_L1415_528, 2 + $I_L1414_567) = $ch_WR0_R6
 1427.                   $tai_WR0_R5 = $tai_WR0_R5 + tai(1 + $I_L1415_528, 1 + $I_L1414_567)
 1427.                   tai(1 + $I_L1415_528, 2 + $I_L1414_567) = $tai_WR0_R5
 1428.                   $ch_WR0_R6 = $ch_WR0_R6 + ch(1 + $I_L1415_528, 1 + $I_L1414_567)
 1428.                   ch(1 + $I_L1415_528, 2 + $I_L1414_567) = $ch_WR0_R6
 1434.                   css(1 + $I_L1415_528, 2 + $I_L1414_567) = hp5 * ( $tai_WR0_R5 + tai(1 + $I_L1415_528, 1 + $I_L1414_567) )
 1435.                   ccu(1 + $I_L1415_528, 2 + $I_L1414_567) = hp5 * ( $ch_WR0_R6 + ch(1 + $I_L1415_528, 1 + $I_L1414_567) )
 1422.                   $I_L1415_528 = 1 + $I_L1415_528
 1415.                   if ( $I_L1415_528 >= ncols ) exit
 1415.                enddo
 1415.             endif
 1415.          endif
 1415.       endif
 1439.       if ( ozone /= .false. ) then
 1441.          if ( ncols > 0 ) then
 1441.             $I_L1441_530 = 0
 1441. !dir$ ivdep
 1441.             do
 1442.                fluxd(1 + $I_L1441_530, 1) = h0p
 1443.                $I_L1441_530 = 1 + $I_L1441_530
 1441.                if ( $I_L1441_530 >= ncols ) exit
 1441.             enddo
 1441.          endif
 1445.          if ( 2 + kmax > 0 ) then
 1446.             if ( ncols > 0 ) then
 1445.                $I_L1445_569 = 0
 1445.                do
 1446.                   $I_L1446_532 = 0
 1446. !dir$ ivdep
 1446.                   do
 1447.                      fluxu(1 + $I_L1446_532, 1 + $I_L1445_569) = h0p
 1448.                      $I_L1446_532 = 1 + $I_L1446_532
 1446.                      if ( $I_L1446_532 >= ncols ) exit
 1446.                   enddo
 1449.                   $I_L1445_569 = 1 + $I_L1445_569
 1448.                   if ( $I_L1445_569 >= 2 + kmax ) exit
 1448.                enddo
 1448.             endif
 1448.          endif
 1451.          if ( kmax >= 0 ) then
 1452.             if ( ncols > 0 ) then
 1451.                $I_L1451_588 = 0
 1451.                do
 1452.                   $I_L1452_586 = 0
 1452.                   do
 1451.                      $I_L1451_581 = 0
 1451.                      if ( min( 1 + kmax, 2 + 2 * $I_L1451_588 ) + -2 * $I_L1451_588 >= 2 ) then
 1451.                         $I_L1451_595 = 0
 1451. !dir$ shortloop16
 1451. !dir$ blocking_size( 2, 2 )
 1451.                         do
 1452.                            $I_L1452_534 = 0
 1452. !dir$ ivdep
 1452. !dir$ blocking_size( 256, 256 )
 1452.                            do
 1453.                               $fluxd_WR0_R7 = ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) * pai(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1453.                               fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = $fluxd_WR0_R7
 1460.                               fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) + fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1459.                               $fluxd_WR0_R7 = $fluxd_WR0_R7 + fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1459.                               fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = $fluxd_WR0_R7
 1453.                               $fluxd_WR0_R7 = pai(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) * ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 3 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1453.                               fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 3 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = $fluxd_WR0_R7
 1460.                               fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 3 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595) + ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 3 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1459.                               $fluxd_WR0_R7 = $fluxd_WR0_R7 + fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + 2 * $I_L1451_588 + 2 * $I_L1451_595)
 1459.                               fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 3 + 2 * $I_L1451_588 + 2 * $I_L1451_595) = $fluxd_WR0_R7
 1452.                               $I_L1452_534 = 1 + $I_L1452_534
 1452.                               if ( $I_L1452_534 >= min( ncols, 256 + 256 * $I_L1452_586 ) + -256 * $I_L1452_586 ) exit
 1452.                            enddo
 1451.                            $I_L1451_595 = 1 + $I_L1451_595
 1451.                            if ( $I_L1451_595 >= _rsh( min( 1 + kmax, 2 + 2 * $I_L1451_588 ) + -2 * $I_L1451_588, 1 ) ) exit
 1451.                         enddo
 1451.                         $I_L1451_581 = and( 0xfffffffffffffffeUL, min( 1 + kmax, 2 + 2 * $I_L1451_588 ) + -2 * $I_L1451_588 )
 1451.                      endif
 1451.                      if ( $I_L1451_581 < min( 1 + kmax, 2 + 2 * $I_L1451_588 ) + -2 * $I_L1451_588 ) then
 1452.                         $I_L1452_534 = 0
 1452. !dir$ ivdep
 1452. !dir$ blocking_size( 256, 256 )
 1452.                         do
 1453.                            $fluxd_WR0_R7 = pai(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + $I_L1451_581 + 2 * $I_L1451_588) * ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + $I_L1451_581 + 2 * $I_L1451_588)
 1453.                            fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + $I_L1451_581 + 2 * $I_L1451_588) = $fluxd_WR0_R7
 1460.                            fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + $I_L1451_581 + 2 * $I_L1451_588) = ozai(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + $I_L1451_581 + 2 * $I_L1451_588) + fluxu(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + $I_L1451_581 + 2 * $I_L1451_588)
 1459.                            $fluxd_WR0_R7 = $fluxd_WR0_R7 + fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 1 + $I_L1451_581 + 2 * $I_L1451_588)
 1459.                            fluxd(1 + $I_L1452_534 + 256 * $I_L1452_586, 2 + $I_L1451_581 + 2 * $I_L1451_588) = $fluxd_WR0_R7
 1452.                            $I_L1452_534 = 1 + $I_L1452_534
 1452.                            if ( $I_L1452_534 >= min( ncols, 256 + 256 * $I_L1452_586 ) + -256 * $I_L1452_586 ) exit
 1452.                         enddo
 1452.                      endif
 1452.                      $I_L1452_586 = 1 + $I_L1452_586
 1454.                      if ( $I_L1452_586 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 1454.                   enddo
 1451.                   $I_L1451_588 = 1 + $I_L1451_588
 1451.                   if ( $I_L1451_588 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 1 ) ) ) exit
 1451.                enddo
 1464.                $I_L1464_571 = 0
 1464.                if ( -3 + kmax >= 0 ) then
 1464.                   $I_L1464_597 = 0
 1464. !dir$ blocking_size( 1, 1 )
 1464.                   do
 1465.                      $I_L1465_537 = 0
 1465. !dir$ ivdep
 1465. !dir$ blocking_size( 256, 256 )
 1465.                      do
 1466.                         pai(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) = hp5 * ( fluxd(1 + $I_L1465_537, 1 + 4 * $I_L1464_597) + fluxd(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) )
 1467.                         ozai(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) = hp5 * ( fluxu(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) + fluxu(1 + $I_L1465_537, 1 + 4 * $I_L1464_597) )
 1473.                         wdel(1 + $I_L1465_537, 1 + 4 * $I_L1464_597) = abs( fluxu(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) )
 1474.                         fw(1 + $I_L1465_537, 1 + 4 * $I_L1464_597) = abs( fluxd(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) )
 1466.                         pai(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) = hp5 * ( fluxd(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) + fluxd(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) )
 1467.                         ozai(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) = hp5 * ( fluxu(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) + fluxu(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) )
 1473.                         wdel(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) = abs( fluxu(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) )
 1474.                         fw(1 + $I_L1465_537, 2 + 4 * $I_L1464_597) = abs( fluxd(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) )
 1466.                         pai(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) = hp5 * ( fluxd(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) + fluxd(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) )
 1467.                         ozai(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) = hp5 * ( fluxu(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) + fluxu(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) )
 1473.                         wdel(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) = abs( fluxu(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) )
 1474.                         fw(1 + $I_L1465_537, 3 + 4 * $I_L1464_597) = abs( fluxd(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) )
 1466.                         pai(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) = hp5 * ( fluxd(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) + fluxd(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) )
 1467.                         ozai(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) = hp5 * ( fluxu(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) + fluxu(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) )
 1473.                         wdel(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) = abs( fluxu(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) )
 1474.                         fw(1 + $I_L1465_537, 4 + 4 * $I_L1464_597) = abs( fluxd(1 + $I_L1465_537, 5 + 4 * $I_L1464_597) )
 1468.                         $I_L1465_537 = 1 + $I_L1465_537
 1465.                         if ( $I_L1465_537 >= ncols ) exit
 1465.                      enddo
 1469.                      $I_L1464_597 = 1 + $I_L1464_597
 1468.                      if ( $I_L1464_597 >= _rsh( 1 + kmax, 2 ) ) exit
 1468.                   enddo
 1469.                   $I_L1464_571 = and( 0xfffffffffffffffcUL, 1 + kmax )
 1469.                endif
 1464.                if ( $I_L1464_571 < 1 + kmax ) then
 1464.                   $I_L1464_590 = 0
 1464. !dir$ blocking_size( 1, 1 )
 1464.                   do
 1465.                      $I_L1465_537 = 0
 1465. !dir$ ivdep
 1465. !dir$ blocking_size( 256, 256 )
 1465.                      do
 1466.                         pai(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) = hp5 * ( fluxd(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) + fluxd(1 + $I_L1465_537, 1 + $I_L1464_571 + $I_L1464_590) )
 1467.                         ozai(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) = hp5 * ( fluxu(1 + $I_L1465_537, 1 + $I_L1464_571 + $I_L1464_590) + fluxu(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) )
 1473.                         wdel(1 + $I_L1465_537, 1 + $I_L1464_571 + $I_L1464_590) = abs( fluxu(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) )
 1474.                         fw(1 + $I_L1465_537, 1 + $I_L1464_571 + $I_L1464_590) = abs( fluxd(1 + $I_L1465_537, 2 + $I_L1464_571 + $I_L1464_590) )
 1468.                         $I_L1465_537 = 1 + $I_L1465_537
 1465.                         if ( $I_L1465_537 >= ncols ) exit
 1465.                      enddo
 1469.                      $I_L1464_590 = 1 + $I_L1464_590
 1468.                      if ( $I_L1464_590 >= 1 + kmax + -$I_L1464_571 ) exit
 1468.                   enddo
 1468.                endif
 1468.             endif
 1468.          endif
 1468.       endif
 1478.       indx1 = 1
 1479.       indx2 = 1
 1480.       call crunch( indx1, indx2, ncols, kmax, h0p, h1p, ozone, txuf(1, 1, 1), tv1(1, 1), tv2(1, 1), tui(1, 1), tui2(1, 1), x1(1, 1), x2(1, 1), cc(1, 1), rawi(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), css(1, 1), ccu(1, 1), shi(1, 1), shu(1, 1), wdel(1, 1), fw(1, 1), pai(1, 1), tai(1, 1), ozai(1, 1), ubar(1, 1), vbar(1, 1), wbar(1, 1), ubarm(1, 1), vbarm(1, 1), wbarm(1, 1), fluxu(1, 1), fluxd(1, 1) )
 1485.       indx1 = 2
 1486.       indx2 = 2
 1487.       call crunch( indx1, indx2, ncols, kmax, h0p, h1p, ozone, txuf(1, 1, 1), tv1(1, 1), tv2(1, 1), tui(1, 1), tui2(1, 1), x1(1, 1), x2(1, 1), cc(1, 1), rawi(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), css(1, 1), ccu(1, 1), shi(1, 1), shu(1, 1), wdel(1, 1), fw(1, 1), pai(1, 1), tai(1, 1), ozai(1, 1), ubar(1, 1), vbar(1, 1), wbar(1, 1), ubarm(1, 1), vbarm(1, 1), wbarm(1, 1), fluxu(1, 1), fluxd(1, 1) )
 1497.       indx1 = 2
 1498.       indx2 = 2 + kmax
 1499.       call crunch( indx1, indx2, ncols, kmax, h0p, h1p, ozone, txuf(1, 1, 1), tv1(1, 1), tv2(1, 1), tui(1, 1), tui2(1, 1), x1(1, 1), x2(1, 1), cc(1, 1), rawi(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), css(1, 1), ccu(1, 1), shi(1, 1), shu(1, 1), wdel(1, 1), fw(1, 1), pai(1, 1), tai(1, 1), ozai(1, 1), ubar(1, 1), vbar(1, 1), wbar(1, 1), ubarm(1, 1), vbarm(1, 1), wbarm(1, 1), fluxu(1, 1), fluxd(1, 1) )
 1507.       indx1 = 1
 1508.       indx2 = 1 + kmax
 1510.       call crunch( indx1, indx2, ncols, kmax, h0p, h1p, ozone, txuf(1, 1, 1), tv1(1, 1), tv2(1, 1), tui(1, 1), tui2(1, 1), x1(1, 1), x2(1, 1), cc(1, 1), rawi(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), css(1, 1), ccu(1, 1), shi(1, 1), shu(1, 1), wdel(1, 1), fw(1, 1), pai(1, 1), tai(1, 1), ozai(1, 1), ubar(1, 1), vbar(1, 1), wbar(1, 1), ubarm(1, 1), vbarm(1, 1), wbarm(1, 1), fluxu(1, 1), fluxd(1, 1) )
 1516.       if ( 2 + kmax > 0 ) then
 1517.          if ( ncols > 0 ) then
 1516.             $I_L1516_573 = 0
 1516.             do
 1517.                $I_L1517_539 = 0
 1517. !dir$ ivdep
 1517.                do
 1518.                   shh(1 + $I_L1517_539, 1 + $I_L1516_573) = shh(1 + $I_L1517_539, 1 + $I_L1516_573) + rawi(1 + $I_L1517_539, 1 + $I_L1516_573) + cc(1 + $I_L1517_539, 1 + $I_L1516_573)
 1519.                   $I_L1517_539 = 1 + $I_L1517_539
 1517.                   if ( $I_L1517_539 >= ncols ) exit
 1517.                enddo
 1520.                $I_L1516_573 = 1 + $I_L1516_573
 1519.                if ( $I_L1516_573 >= 2 + kmax ) exit
 1519.             enddo
 1519.          endif
 1519.       endif
 1522.       if ( ncols > 0 ) then
 1522.          $I_L1522_541 = 0
 1522. !dir$ ivdep
 1522.          do
 1523.             sumsav(1 + $I_L1522_541) = cc(1 + $I_L1522_541, 3 + kmax) + sumsav(1 + $I_L1522_541) + rawi(1 + $I_L1522_541, 3 + kmax)
 1524.             $I_L1522_541 = 1 + $I_L1522_541
 1522.             if ( $I_L1522_541 >= ncols ) exit
 1522.          enddo
 1522.       endif
 1115.       _free( t$83 )
 1525.       return
 1525.       end
 1525.       
 1531.       
 1531.       subroutine cldslw( ncols, kmax, nlcs, h1p, cs, x1, x2, cc, x3, x4, ch, css, ccu )
 1531.       t$10 = ncols
 1531.       t$11 = ( 2 + kmax )
 1531.       t$12 = nlcs
 1570.       t$94 = _zla( 0, ncols )
 1531.       t$95 = _zla( 0, ncols )
 1570.       t$96 = _zla( 0, ( 2 + kmax ) )
 1531.       t$97 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1570.       t$98 = _zla( 0, nlcs )
 1531.       t$99 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, nlcs )
 1531.       t$13 = ( 3 + kmax )
 1571.       t$100 = _zla( 0, ( 3 + kmax ) )
 1531.       t$101 = _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1531.       t$102 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1589.       if ( 2 + kmax > 0 ) then
 1590.          if ( ncols > 0 ) then
 1589.             $I_L1589_342 = 0
 1589.             do
 1590.                $I_L1590_282 = 0
 1590. !dir$ ivdep
 1590. !dir$ loop_info (automatic) cache_nt( x3, x2, cc )
 1590.                do
 1591.                   ch(1 + $I_L1590_282, 1 + $I_L1589_342) = h1p
 1592.                   cc(1 + $I_L1590_282, 1 + $I_L1589_342) = h1p
 1593.                   x1(1 + $I_L1590_282, 1 + $I_L1589_342) = h1p
 1594.                   x2(1 + $I_L1590_282, 1 + $I_L1589_342) = h1p
 1595.                   x3(1 + $I_L1590_282, 1 + $I_L1589_342) = h1p
 1596.                   $I_L1590_282 = 1 + $I_L1590_282
 1590.                   if ( $I_L1590_282 >= ncols ) exit
 1590.                enddo
 1600.                $I_L1600_313 = 0
 1600.                do
 1601.                   $I_L1601_284 = 0
 1601. !dir$ ivdep
 1601.                   do
 1602.                      cs(1 + $I_L1601_284, 1 + $I_L1600_313, 1 + $I_L1589_342) = h1p
 1603.                      $I_L1601_284 = 1 + $I_L1601_284
 1601.                      if ( $I_L1601_284 >= ncols ) exit
 1601.                   enddo
 1604.                   $I_L1600_313 = 1 + $I_L1600_313
 1603.                   if ( $I_L1600_313 >= 2 + kmax ) exit
 1603.                enddo
 1597.                $I_L1589_342 = 1 + $I_L1589_342
 1596.                if ( $I_L1589_342 >= 2 + kmax ) exit
 1596.             enddo
 1596.          endif
 1596.       endif
 1607.       if ( kmax >= 0 ) then
 1608.          if ( ncols > 0 ) then
 1607.             $I_L1607_350 = 0
 1607.             do
 1608.                $I_L1608_344 = 0
 1608.                do
 1607.                   $I_L1607_333 = 0
 1607.                   if ( min( 1 + kmax, 2 + 2 * $I_L1607_350 ) + -2 * $I_L1607_350 >= 2 ) then
 1607.                      $I_L1607_362 = 0
 1607. !dir$ shortloop16
 1607. !dir$ blocking_size( 2, 2 )
 1607.                      do
 1608.                         $I_L1608_286 = 0
 1608. !dir$ ivdep
 1608. !dir$ blocking_size( 256, 256 )
 1608.                         do
 1609.                            $x1_WR0_R0 = h1p + -ccu(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + 2 * $I_L1607_350 + 2 * $I_L1607_362)
 1609.                            x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = $x1_WR0_R0
 1613.                            $x1_WR0_R0 = min( $x1_WR0_R0, x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + 2 * $I_L1607_350 + 2 * $I_L1607_362) )
 1613.                            x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = $x1_WR0_R0
 1616.                            ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + 2 * $I_L1607_350 + 2 * $I_L1607_362) * ( h1p + -css(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + 2 * $I_L1607_350 + 2 * $I_L1607_362) )
 1609.                            $x1_WR0_R0 = h1p + -ccu(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362)
 1609.                            x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 3 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = $x1_WR0_R0
 1613.                            $x1_WR0_R0 = min( $x1_WR0_R0, x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) )
 1613.                            x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 3 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = $x1_WR0_R0
 1616.                            ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 3 + 2 * $I_L1607_350 + 2 * $I_L1607_362) = ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) * ( h1p + -css(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + 2 * $I_L1607_350 + 2 * $I_L1607_362) )
 1608.                            $I_L1608_286 = 1 + $I_L1608_286
 1608.                            if ( $I_L1608_286 >= min( ncols, 256 + 256 * $I_L1608_344 ) + -256 * $I_L1608_344 ) exit
 1608.                         enddo
 1607.                         $I_L1607_362 = 1 + $I_L1607_362
 1607.                         if ( $I_L1607_362 >= _rsh( min( 1 + kmax, 2 + 2 * $I_L1607_350 ) + -2 * $I_L1607_350, 1 ) ) exit
 1607.                      enddo
 1607.                      $I_L1607_333 = and( 0xfffffffffffffffeUL, min( 1 + kmax, 2 + 2 * $I_L1607_350 ) + -2 * $I_L1607_350 )
 1607.                   endif
 1607.                   if ( $I_L1607_333 < min( 1 + kmax, 2 + 2 * $I_L1607_350 ) + -2 * $I_L1607_350 ) then
 1608.                      $I_L1608_286 = 0
 1608. !dir$ ivdep
 1608. !dir$ blocking_size( 256, 256 )
 1608.                      do
 1609.                         $x1_WR0_R0 = h1p + -ccu(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + $I_L1607_333 + 2 * $I_L1607_350)
 1609.                         x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + $I_L1607_333 + 2 * $I_L1607_350) = $x1_WR0_R0
 1613.                         $x1_WR0_R0 = min( $x1_WR0_R0, x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + $I_L1607_333 + 2 * $I_L1607_350) )
 1613.                         x1(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + $I_L1607_333 + 2 * $I_L1607_350) = $x1_WR0_R0
 1616.                         ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 2 + $I_L1607_333 + 2 * $I_L1607_350) = ch(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + $I_L1607_333 + 2 * $I_L1607_350) * ( h1p + -css(1 + $I_L1608_286 + 256 * $I_L1608_344, 1 + $I_L1607_333 + 2 * $I_L1607_350) )
 1608.                         $I_L1608_286 = 1 + $I_L1608_286
 1608.                         if ( $I_L1608_286 >= min( ncols, 256 + 256 * $I_L1608_344 ) + -256 * $I_L1608_344 ) exit
 1608.                      enddo
 1608.                   endif
 1608.                   $I_L1608_344 = 1 + $I_L1608_344
 1617.                   if ( $I_L1608_344 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 1617.                enddo
 1607.                $I_L1607_350 = 1 + $I_L1607_350
 1607.                if ( $I_L1607_350 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 1 ) ) ) exit
 1607.             enddo
 1620.             $I_L1620_315 = 0
 1620.             if ( kmax > 0 ) then
 1620.                $I_L1620_364 = 0
 1620. !dir$ blocking_size( 1, 1 )
 1620.                do
 1621.                   $I_L1621_289 = 0
 1621. !dir$ ivdep
 1621. !dir$ loop_info (automatic) cache_nt( ccu, css )
 1621. !dir$ blocking_size( 256, 256 )
 1621.                   do
 1629.                      $x2_WR0_R1 = h1p + -ccu(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364)
 1633.                      $x2_WR0_R1 = min( $x2_WR0_R1, x1(1 + $I_L1621_289, 2 + kmax + -2 * $I_L1620_364) )
 1633.                      x2(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364) = $x2_WR0_R1
 1637.                      cc(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364) = cc(1 + $I_L1621_289, 2 + kmax + -2 * $I_L1620_364) * ( h1p + -css(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364) )
 1629.                      $x2_WR0_R1 = h1p + -ccu(1 + $I_L1621_289, kmax + -2 * $I_L1620_364)
 1633.                      $x2_WR0_R1 = min( $x2_WR0_R1, x1(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364) )
 1633.                      x2(1 + $I_L1621_289, kmax + -2 * $I_L1620_364) = $x2_WR0_R1
 1637.                      cc(1 + $I_L1621_289, kmax + -2 * $I_L1620_364) = cc(1 + $I_L1621_289, 1 + kmax + -2 * $I_L1620_364) * ( h1p + -css(1 + $I_L1621_289, kmax + -2 * $I_L1620_364) )
 1622.                      ch(1 + $I_L1621_289, 2 + 2 * $I_L1620_364) = ch(1 + $I_L1621_289, 2 + 2 * $I_L1620_364) * x1(1 + $I_L1621_289, 2 + 2 * $I_L1620_364)
 1622.                      ch(1 + $I_L1621_289, 3 + 2 * $I_L1620_364) = ch(1 + $I_L1621_289, 3 + 2 * $I_L1620_364) * x1(1 + $I_L1621_289, 3 + 2 * $I_L1620_364)
 1623.                      $I_L1621_289 = 1 + $I_L1621_289
 1621.                      if ( $I_L1621_289 >= ncols ) exit
 1621.                   enddo
 1624.                   $I_L1620_364 = 1 + $I_L1620_364
 1623.                   if ( $I_L1620_364 >= _rsh( 1 + kmax, 1 ) ) exit
 1623.                enddo
 1624.                $I_L1620_315 = and( 0xfffffffffffffffeUL, 1 + kmax )
 1624.             endif
 1620.             if ( $I_L1620_315 < 1 + kmax ) then
 1621.                $I_L1621_289 = 0
 1621. !dir$ ivdep
 1621. !dir$ loop_info (automatic) cache_nt( ccu, css )
 1621. !dir$ blocking_size( 256, 256 )
 1621.                do
 1629.                   $x2_WR0_R1 = h1p + -ccu(1 + $I_L1621_289, 1 + kmax + -$I_L1620_315)
 1633.                   $x2_WR0_R1 = min( $x2_WR0_R1, x1(1 + $I_L1621_289, 2 + kmax + -$I_L1620_315) )
 1633.                   x2(1 + $I_L1621_289, 1 + kmax + -$I_L1620_315) = $x2_WR0_R1
 1637.                   cc(1 + $I_L1621_289, 1 + kmax + -$I_L1620_315) = cc(1 + $I_L1621_289, 2 + kmax + -$I_L1620_315) * ( h1p + -css(1 + $I_L1621_289, 1 + kmax + -$I_L1620_315) )
 1622.                   ch(1 + $I_L1621_289, 2 + $I_L1620_315) = ch(1 + $I_L1621_289, 2 + $I_L1620_315) * x1(1 + $I_L1621_289, 2 + $I_L1620_315)
 1623.                   $I_L1621_289 = 1 + $I_L1621_289
 1621.                   if ( $I_L1621_289 >= ncols ) exit
 1621.                enddo
 1621.             endif
 1641.             $I_L1641_317 = 0
 1641.             do
 1642.                $I_L1642_291 = 0
 1642. !dir$ ivdep
 1642.                do
 1643.                   cc(1 + $I_L1642_291, 1 + $I_L1641_317) = cc(1 + $I_L1642_291, 1 + $I_L1641_317) * x2(1 + $I_L1642_291, 1 + $I_L1641_317)
 1644.                   $I_L1642_291 = 1 + $I_L1642_291
 1642.                   if ( $I_L1642_291 >= ncols ) exit
 1642.                enddo
 1645.                $I_L1641_317 = 1 + $I_L1641_317
 1644.                if ( $I_L1641_317 >= 1 + kmax ) exit
 1644.             enddo
 1644.          endif
 1644.       endif
 1647.       $ip_S36 = 2
 1647.       if ( kmax >= 0 ) then
 1647.          $I_L1647_356 = 0
 1647.          do
 1651.             if ( ncols > 0 ) then
 1650.                $I_L1650_352 = 0
 1650.                do
 1651.                   $I_L1651_346 = 0
 1651.                   do
 1650.                      $I_L1650_360 = 0
 1650. !dir$ shortloop16
 1650. !dir$ blocking_size( 2, 2 )
 1650.                      do
 1651.                         $I_L1651_293 = 0
 1651. !dir$ ivdep
 1651. !dir$ blocking_size( 256, 256 )
 1651.                         do
 1652.                            x4(1 + $I_L1651_293 + 256 * $I_L1651_346, 1 + $I_L1650_360 + 2 * $I_L1650_352) = h1p + -ccu(1 + $I_L1651_293 + 256 * $I_L1651_346, 1 + $I_L1647_356)
 1653.                            cs(1 + $I_L1651_293 + 256 * $I_L1651_346, 1 + $I_L1650_360 + 2 * $I_L1650_352, 2 + $I_L1647_356) = cs(1 + $I_L1651_293 + 256 * $I_L1651_346, 1 + $I_L1650_360 + 2 * $I_L1650_352, 1 + $I_L1647_356) * ( h1p + -css(1 + $I_L1651_293 + 256 * $I_L1651_346, 1 + $I_L1647_356) )
 1651.                            $I_L1651_293 = 1 + $I_L1651_293
 1651.                            if ( $I_L1651_293 >= min( ncols, 256 + 256 * $I_L1651_346 ) + -256 * $I_L1651_346 ) exit
 1651.                         enddo
 1650.                         $I_L1650_360 = 1 + $I_L1650_360
 1650.                         if ( $I_L1650_360 >= min( 2 + 2 * $I_L1650_352, 1 + $I_L1647_356 ) + -2 * $I_L1650_352 ) exit
 1650.                      enddo
 1651.                      $I_L1651_346 = 1 + $I_L1651_346
 1654.                      if ( $I_L1651_346 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 1654.                   enddo
 1650.                   $I_L1650_352 = 1 + $I_L1650_352
 1650.                   if ( $I_L1650_352 >= 1 + max( 0, -1 + _rsh( 2 + $I_L1647_356, 1 ) ) ) exit
 1650.                enddo
 1650.             endif
 1657.             if ( ( 2 + $I_L1647_356 ) > 2 ) then
 1659.                if ( ncols > 0 ) then
 1658.                   $I_L1658_319 = 0
 1658.                   do
 1659.                      $I_L1659_296 = 0
 1659. !dir$ ivdep
 1659.                      do
 1660.                         cs(1 + $I_L1659_296, 1 + $I_L1658_319, 1 + $I_L1647_356) = x3(1 + $I_L1659_296, 1 + $I_L1658_319) * cs(1 + $I_L1659_296, 1 + $I_L1658_319, 1 + $I_L1647_356)
 1661.                         $I_L1659_296 = 1 + $I_L1659_296
 1659.                         if ( $I_L1659_296 >= ncols ) exit
 1659.                      enddo
 1662.                      $I_L1658_319 = 1 + $I_L1658_319
 1661.                      if ( $I_L1658_319 >= 1 + $I_L1647_356 ) exit
 1661.                   enddo
 1661.                endif
 1661.             endif
 1666.             if ( ncols > 0 ) then
 1665.                $I_L1665_321 = 0
 1665.                do
 1666.                   $I_L1666_298 = 0
 1666. !dir$ ivdep
 1666.                   do
 1667.                      x4(1 + $I_L1666_298, 1 + $I_L1665_321) = min( x4(1 + $I_L1666_298, 1 + $I_L1665_321), x3(1 + $I_L1666_298, 1 + $I_L1665_321) )
 1668.                      x3(1 + $I_L1666_298, 1 + $I_L1665_321) = x4(1 + $I_L1666_298, 1 + $I_L1665_321)
 1669.                      $I_L1666_298 = 1 + $I_L1666_298
 1666.                      if ( $I_L1666_298 >= ncols ) exit
 1666.                   enddo
 1670.                   $I_L1665_321 = 1 + $I_L1665_321
 1669.                   if ( $I_L1665_321 >= 1 + $I_L1647_356 ) exit
 1669.                enddo
 1669.             endif
 1672.             $I_L1647_356 = 1 + $I_L1647_356
 1670.             if ( $I_L1647_356 >= 1 + kmax ) exit
 1670.          enddo
 1648.          ipm1 = ( 1 + kmax )
 1672.          $ip_S36 = ( 3 + kmax )
 1672.       endif
 1674.       $j_S34 = 1
 1674.       if ( ipm1 > 0 ) then
 1675.          if ( ncols > 0 ) then
 1674.             $I_L1674_323 = 0
 1674.             do
 1675.                $I_L1675_300 = 0
 1675. !dir$ ivdep
 1675. !dir$ loop_info (automatic) cache_nt( x4, cs )
 1675.                do
 1676.                   cs(1 + $I_L1675_300, 1 + $I_L1674_323, 2 + kmax) = cs(1 + $I_L1675_300, 1 + $I_L1674_323, 2 + kmax) * x4(1 + $I_L1675_300, 1 + $I_L1674_323)
 1677.                   $I_L1675_300 = 1 + $I_L1675_300
 1675.                   if ( $I_L1675_300 >= ncols ) exit
 1675.                enddo
 1678.                $I_L1674_323 = 1 + $I_L1674_323
 1677.                if ( $I_L1674_323 >= ipm1 ) exit
 1677.             enddo
 1677.          endif
 1678.          $j_S34 = ( 1 + ipm1 )
 1678.       endif
 1680.       if ( 2 + kmax > 0 ) then
 1681.          if ( ncols > 0 ) then
 1680.             $I_L1680_325 = 0
 1680.             do
 1681.                $I_L1681_302 = 0
 1681. !dir$ ivdep
 1681. !dir$ loop_info (automatic) cache_nt( x3 )
 1681.                do
 1682.                   x3(1 + $I_L1681_302, 1 + $I_L1680_325) = h1p
 1683.                   $I_L1681_302 = 1 + $I_L1681_302
 1681.                   if ( $I_L1681_302 >= ncols ) exit
 1681.                enddo
 1684.                $I_L1680_325 = 1 + $I_L1680_325
 1683.                if ( $I_L1680_325 >= 2 + kmax ) exit
 1683.             enddo
 1683.          endif
 1683.       endif
 1686.       if ( kmax >= 0 ) then
 1686.          $I_L1686_358 = 0
 1686.          do
 1691.             if ( ncols > 0 ) then
 1690.                $I_L1690_327 = 0
 1690.                do
 1691.                   $I_L1691_304 = 0
 1691. !dir$ ivdep
 1691.                   do
 1692.                      x4(1 + $I_L1691_304, 2 + kmax + $I_L1690_327 + -$I_L1686_358) = h1p + -ccu(1 + $I_L1691_304, 1 + kmax + -$I_L1686_358)
 1693.                      cs(1 + $I_L1691_304, 2 + kmax + $I_L1690_327 + -$I_L1686_358, 1 + kmax + -$I_L1686_358) = cs(1 + $I_L1691_304, 2 + kmax + $I_L1690_327 + -$I_L1686_358, 2 + kmax + -$I_L1686_358) * ( h1p + -css(1 + $I_L1691_304, 1 + kmax + -$I_L1686_358) )
 1694.                      $I_L1691_304 = 1 + $I_L1691_304
 1691.                      if ( $I_L1691_304 >= ncols ) exit
 1691.                   enddo
 1695.                   $I_L1690_327 = 1 + $I_L1690_327
 1694.                   if ( $I_L1690_327 >= 1 + $I_L1686_358 ) exit
 1694.                enddo
 1694.             endif
 1697.             if ( ( 1 + $I_L1686_358 ) > 1 ) then
 1698.                if ( ( -1 + -kmax + 2 * $I_L1686_358 ) >= 0 ) then
 1699.                   if ( ncols > 0 ) then
 1698.                      $I_L1698_329 = 0
 1698.                      do
 1699.                         $I_L1699_306 = 0
 1699. !dir$ ivdep
 1699.                         do
 1700.                            cs(1 + $I_L1699_306, 3 + kmax + $I_L1698_329 + -$I_L1686_358, 2 + kmax + -$I_L1686_358) = cs(1 + $I_L1699_306, 3 + kmax + $I_L1698_329 + -$I_L1686_358, 2 + kmax + -$I_L1686_358) * x3(1 + $I_L1699_306, 3 + kmax + $I_L1698_329 + -$I_L1686_358)
 1701.                            $I_L1699_306 = 1 + $I_L1699_306
 1699.                            if ( $I_L1699_306 >= ncols ) exit
 1699.                         enddo
 1702.                         $I_L1698_329 = 1 + $I_L1698_329
 1701.                         if ( $I_L1698_329 >= -kmax + 2 * $I_L1686_358 ) exit
 1701.                      enddo
 1701.                   endif
 1701.                endif
 1701.             endif
 1705.             if ( ( -1 + -kmax + 2 * $I_L1686_358 ) >= 0 ) then
 1706.                if ( ncols > 0 ) then
 1705.                   $I_L1705_354 = 0
 1705.                   do
 1706.                      $I_L1706_348 = 0
 1706.                      do
 1705.                         $I_L1705_339 = 0
 1705. !dir$ shortloop16
 1705. !dir$ blocking_size( 2, 2 )
 1705.                         do
 1706.                            $I_L1706_308 = 0
 1706. !dir$ ivdep
 1706. !dir$ blocking_size( 256, 256 )
 1706.                            do
 1707.                               x4(1 + $I_L1706_308 + 256 * $I_L1706_348, $j_S34) = min( x4(1 + $I_L1706_308 + 256 * $I_L1706_348, $j_S34), x3(1 + $I_L1706_308 + 256 * $I_L1706_348, $j_S34) )
 1708.                               x3(1 + $I_L1706_308 + 256 * $I_L1706_348, 2 + kmax + $I_L1705_339 + -$I_L1686_358 + 2 * $I_L1705_354) = x4(1 + $I_L1706_308 + 256 * $I_L1706_348, 2 + kmax + $I_L1705_339 + -$I_L1686_358 + 2 * $I_L1705_354)
 1706.                               $I_L1706_308 = 1 + $I_L1706_308
 1706.                               if ( $I_L1706_308 >= min( ncols, 256 + 256 * $I_L1706_348 ) + -256 * $I_L1706_348 ) exit
 1706.                            enddo
 1705.                            $I_L1705_339 = 1 + $I_L1705_339
 1705.                            if ( $I_L1705_339 >= min( 2 + 2 * $I_L1705_354, -kmax + 2 * $I_L1686_358 ) + -2 * $I_L1705_354 ) exit
 1705.                         enddo
 1706.                         $I_L1706_348 = 1 + $I_L1706_348
 1709.                         if ( $I_L1706_348 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 1709.                      enddo
 1705.                      $I_L1705_354 = 1 + $I_L1705_354
 1705.                      if ( $I_L1705_354 >= 1 + max( 0, -1 + _rsh( 1 + -kmax + 2 * $I_L1686_358, 1 ) ) ) exit
 1705.                   enddo
 1705.                endif
 1705.             endif
 1712.             $I_L1686_358 = 1 + $I_L1686_358
 1710.             if ( $I_L1686_358 >= 1 + kmax ) exit
 1710.          enddo
 1687.          $ip_S36 = 1
 1688.          ipp1 = 2
 1688.       endif
 1714.       if ( 2 + kmax + -ipp1 + -$ip_S36 >= 0 ) then
 1715.          if ( ncols > 0 ) then
 1714.             $I_L1714_331 = 0
 1714.             do
 1715.                $I_L1715_311 = 0
 1715. !dir$ ivdep
 1715.                do
 1716.                   cs(1 + $I_L1715_311, ipp1 + $I_L1714_331, $ip_S36) = cs(1 + $I_L1715_311, ipp1 + $I_L1714_331, $ip_S36) * x4(1 + $I_L1715_311, ipp1 + $I_L1714_331)
 1717.                   $I_L1715_311 = 1 + $I_L1715_311
 1715.                   if ( $I_L1715_311 >= ncols ) exit
 1715.                enddo
 1718.                $I_L1714_331 = 1 + $I_L1714_331
 1717.                if ( $I_L1714_331 >= 3 + kmax + -ipp1 + -$ip_S36 ) exit
 1717.             enddo
 1717.          endif
 1717.       endif
 1720.       return
 1720.       end
 1720.       
 1724.       
 1724.       subroutine lwrad( ncols, kmax, nls, nlcs, noz, icld, pl20, pl, tl, ql, o3l, tg, co2val, ulwclr, ulwtop, atlclr, atl, rsclr, rs, dlwclr, dlwbot, cld, clu, clwp, fice, rei, emisd )
 1724.       t$14 = ncols
 1724.       t$15 = kmax
 1857.       t$103 = _zla( 0, ncols )
 1724.       t$104 = _zla( 0, ncols )
 1857.       t$105 = _zla( 0, kmax )
 1724.       t$106 = _zla( 0, ncols ) * _zla( 0, kmax )
 1724.       t$20 = ( 3 * ncols + ncols * kmax )
 1903.       t$107 = _zla( 0, ( 3 * ncols + ncols * kmax ) )
 1903.       t$110 = 4 * _zla( 0, ( 3 * ncols + ncols * kmax ) )
 1724.       t$18 = ( 3 + kmax )
 1890.       t$111 = _zla( 0, ( 3 + kmax ) )
 1724.       t$112 = _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1890.       t$113 = 8 * ( 7 + 4 * _zla( 0, ( 3 * ncols + ncols * kmax ) ) ) / 8
 1890.       t$115 = t$113 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1724.       t$16 = ( 2 + kmax )
 1897.       t$116 = _zla( 0, ( 2 + kmax ) )
 1724.       t$117 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1897.       t$118 = 8 * ( 7 + t$113 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1897.       t$120 = t$118 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1894.       t$121 = 8 * ( 7 + t$118 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1894.       t$123 = t$121 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1724.       t$17 = nlcs
 1724.       t$124 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1884.       t$125 = _zla( 0, nlcs )
 1724.       t$126 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, nlcs )
 1884.       t$127 = 8 * ( 7 + t$121 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1884.       t$129 = t$127 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, nlcs )
 1896.       t$130 = 8 * ( 7 + t$127 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, nlcs ) ) / 8
 1896.       t$132 = t$130 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1895.       t$133 = 8 * ( 7 + t$130 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1895.       t$135 = t$133 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1930.       t$136 = 8 * ( 7 + t$133 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1930.       t$138 = t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1931.       t$139 = 8 * ( 7 + t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1931.       t$141 = t$139 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1916.       t$142 = 8 * ( 7 + t$139 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1916.       t$144 = t$142 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1915.       t$145 = 8 * ( 7 + t$142 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1915.       t$147 = t$145 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1908.       t$148 = 8 * ( 7 + t$145 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1908.       t$150 = t$148 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1906.       t$151 = 8 * ( 7 + t$148 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1906.       t$153 = t$151 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1891.       t$154 = 8 * ( 7 + t$151 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1891.       t$156 = t$154 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1932.       t$157 = 8 * ( 7 + t$154 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1932.       t$159 = t$157 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1899.       t$160 = 8 * ( 7 + t$157 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1899.       t$162 = t$160 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1898.       t$163 = 8 * ( 7 + t$160 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1898.       t$165 = t$163 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1724.       t$19 = ( 1 + kmax )
 1900.       t$166 = _zla( 0, ( 1 + kmax ) )
 1724.       t$167 = _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1900.       t$168 = 8 * ( 7 + t$163 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1900.       t$170 = t$168 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 1901.       t$171 = 8 * ( 7 + t$168 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
 1901.       t$173 = t$171 + 8 * _zla( 0, ncols )
 1902.       t$174 = 8 * ( 7 + t$171 + 8 * _zla( 0, ncols ) ) / 8
 1902.       t$176 = t$174 + 8 * _zla( 0, ncols )
 1907.       t$177 = 8 * ( 7 + t$174 + 8 * _zla( 0, ncols ) ) / 8
 1907.       t$179 = t$177 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1887.       t$180 = 8 * ( 7 + t$177 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1887.       t$182 = t$180 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1885.       t$183 = 8 * ( 7 + t$180 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1885.       t$185 = t$183 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1886.       t$186 = 8 * ( 7 + t$183 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1886.       t$188 = t$186 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1724.       t$189 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, ( 2 + kmax ) )
 1883.       t$190 = 8 * ( 7 + t$186 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1883.       t$192 = t$190 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, ( 2 + kmax ) )
 1909.       t$193 = 8 * ( 7 + t$190 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1909.       t$195 = t$193 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1912.       t$196 = 8 * ( 7 + t$193 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1912.       t$198 = t$196 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1910.       t$199 = 8 * ( 7 + t$196 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1910.       t$201 = t$199 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1913.       t$202 = 8 * ( 7 + t$199 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1913.       t$204 = t$202 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1911.       t$205 = 8 * ( 7 + t$202 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1911.       t$207 = t$205 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1914.       t$208 = 8 * ( 7 + t$205 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1914.       t$210 = t$208 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1888.       t$211 = 8 * ( 7 + t$208 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1888.       t$213 = t$211 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1889.       t$214 = 8 * ( 7 + t$211 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1889.       t$216 = t$214 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) )
 1892.       t$217 = 8 * ( 7 + t$214 + 8 * _zla( 0, ncols ) * _zla( 0, ( 3 + kmax ) ) ) / 8
 1892.       t$219 = t$217 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1893.       t$220 = 8 * ( 7 + t$217 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
 1893.       t$222 = t$220 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
 1724.       t$108 = int( _alloc( t$220 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ), 8 )
 1903.       t$109 = t$108
 1890.       t$114 = t$113 + t$108
 1897.       t$119 = t$118 + t$108
 1894.       t$122 = t$121 + t$108
 1884.       t$128 = t$127 + t$108
 1896.       t$131 = t$130 + t$108
 1895.       t$134 = t$133 + t$108
 1930.       t$137 = t$136 + t$108
 1931.       t$140 = t$139 + t$108
 1916.       t$143 = t$142 + t$108
 1915.       t$146 = t$145 + t$108
 1908.       t$149 = t$148 + t$108
 1906.       t$152 = t$151 + t$108
 1891.       t$155 = t$154 + t$108
 1932.       t$158 = t$157 + t$108
 1899.       t$161 = t$160 + t$108
 1898.       t$164 = t$163 + t$108
 1900.       t$169 = t$168 + t$108
 1901.       t$172 = t$171 + t$108
 1902.       t$175 = t$174 + t$108
 1907.       t$178 = t$177 + t$108
 1887.       t$181 = t$180 + t$108
 1885.       t$184 = t$183 + t$108
 1886.       t$187 = t$186 + t$108
 1883.       t$191 = t$190 + t$108
 1909.       t$194 = t$193 + t$108
 1912.       t$197 = t$196 + t$108
 1910.       t$200 = t$199 + t$108
 1913.       t$203 = t$202 + t$108
 1911.       t$206 = t$205 + t$108
 1914.       t$209 = t$208 + t$108
 1888.       t$212 = t$211 + t$108
 1889.       t$215 = t$214 + t$108
 1892.       t$218 = t$217 + t$108
 1893.       t$221 = t$220 + t$108
 1980.       h1p = 1.0
 1981.       h0p = 0.0
 1982.       h1p5 = 1.5
 1983.       hp5 = 5.0e-1
 1987.       ntm1 = 31
 1988.       dtb = 5.0
 1989.       dtbinv = 2.0000000000000001e-1
 1990.       pre(1) = 3.6363636363636364e-3
 1991.       pre(2) = 1.8181818181818182e-3
 1993.       pr(1) = 3.3333333333333333e-2
 1994.       pr(2) = 3.3333333333333335e-3
 1995.       $F_A33 = 2 + kmax
 1995.       $F_A34 = ncols
 1995.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1995.          $I_L1995_1083 = 0
 1995.          do
 1995.             $I_L1995_1023 = 0
 1995. !dir$ ivdep
 1995.             do
 1995.                emis1(1 + $I_L1995_1023, 1 + $I_L1995_1083) = 0.0
 1995.                $I_L1995_1023 = 1 + $I_L1995_1023
 1995.                if ( $I_L1995_1023 >= $F_A34 ) exit
 1995.             enddo
 1995.             $I_L1995_1083 = 1 + $I_L1995_1083
 1995.             if ( $I_L1995_1083 >= $F_A33 ) exit
 1995.          enddo
 1995.       endif
 1999.       ozone = noz == .false.
 2003.       if ( ncols > 0 ) then
 2003.          $I_L2003_914 = 0
 2003. !dir$ ivdep
 2003.          do
 2004.             dp(1 + $I_L2003_914, 1) = 0.0
 2005.             x1(1 + $I_L2003_914, 1) = 1.0
 2006.             dp(1 + $I_L2003_914, 2) = 1.0
 2007.             pai(1 + $I_L2003_914, 1) = 5.0e-1
 2130.             ubar(1 + $I_L2003_914, 1) = 0.0
 2131.             vbar(1 + $I_L2003_914, 1) = 0.0
 2132.             wbar(1 + $I_L2003_914, 1) = 0.0
 2008.             $I_L2003_914 = 1 + $I_L2003_914
 2003.             if ( $I_L2003_914 >= ncols ) exit
 2003.          enddo
 2003.       endif
 2010.       if ( kmax + -nls >= 0 ) then
 2011.          if ( ncols > 0 ) then
 2010.             $I_L2010_1035 = 0
 2010.             do
 2011.                $I_L2011_916 = 0
 2011. !dir$ ivdep
 2011.                do
 2012.                   rawi(1 + $I_L2011_916, 2 + nls + $I_L2010_1035) = ql(1 + $I_L2011_916, nls + $I_L2010_1035)
 2013.                   $I_L2011_916 = 1 + $I_L2011_916
 2011.                   if ( $I_L2011_916 >= ncols ) exit
 2011.                enddo
 2014.                $I_L2010_1035 = 1 + $I_L2010_1035
 2013.                if ( $I_L2010_1035 >= 1 + kmax + -nls ) exit
 2013.             enddo
 2013.          endif
 2013.       endif
 2016.       if ( nls > 1 ) then
 2018.          if ( ncols > 0 ) then
 2017.             $I_L2017_1037 = 0
 2017.             do
 2018.                $I_L2018_918 = 0
 2018. !dir$ ivdep
 2018.                do
 2019.                   rawi(1 + $I_L2018_918, 3 + $I_L2017_1037) = 3.0000000000000001e-6
 2020.                   $I_L2018_918 = 1 + $I_L2018_918
 2018.                   if ( $I_L2018_918 >= ncols ) exit
 2018.                enddo
 2021.                $I_L2017_1037 = 1 + $I_L2017_1037
 2020.                if ( $I_L2017_1037 >= -1 + nls ) exit
 2020.             enddo
 2020.          endif
 2020.       endif
 2024.       if ( kmax > 0 ) then
 2025.          if ( ncols > 0 ) then
 2024.             $I_L2024_1039 = 0
 2024. !dir$ blocking_size( 1, 1 )
 2024.             do
 2025.                $I_L2025_920 = 0
 2025. !dir$ ivdep
 2025. !dir$ blocking_size( 256, 256 )
 2025.                do
 2026.                   pai(1 + $I_L2025_920, 2 + $I_L2024_1039) = pl(1 + $I_L2025_920, 1 + $I_L2024_1039)
 2027.                   tai(1 + $I_L2025_920, 3 + $I_L2024_1039) = tl(1 + $I_L2025_920, 1 + $I_L2024_1039)
 2028.                   $x1_WR0_R0 = pl20(1 + $I_L2025_920, 1 + $I_L2024_1039)
 2028.                   x1(1 + $I_L2025_920, 2 + $I_L2024_1039) = $x1_WR0_R0
 2046.                   dp(1 + $I_L2025_920, 3 + $I_L2024_1039) = $x1_WR0_R0 + -x1(1 + $I_L2025_920, 1 + $I_L2024_1039)
 2054.                   rawi(1 + $I_L2025_920, 3 + $I_L2024_1039) = max( 9.9999999999999996e-24, rawi(1 + $I_L2025_920, 3 + $I_L2024_1039) )
 2029.                   $I_L2025_920 = 1 + $I_L2025_920
 2025.                   if ( $I_L2025_920 >= ncols ) exit
 2025.                enddo
 2030.                $I_L2024_1039 = 1 + $I_L2024_1039
 2029.                if ( $I_L2024_1039 >= kmax ) exit
 2029.             enddo
 2029.          endif
 2029.       endif
 2032.       if ( ncols > 0 ) then
 2032.          $I_L2032_922 = 0
 2032. !dir$ ivdep
 2032.          do
 2033.             pai(1 + $I_L2032_922, 2 + kmax) = pl20(1 + $I_L2032_922, kmax)
 2082.             rawi(1 + $I_L2032_922, 1) = 0.0
 2083.             rawi(1 + $I_L2032_922, 2) = 3.0599999999999999e-6 * dp(1 + $I_L2032_922, 2)
 2034.             $I_L2032_922 = 1 + $I_L2032_922
 2032.             if ( $I_L2032_922 >= ncols ) exit
 2032.          enddo
 2032.       endif
 2036.       if ( noz == .false. ) then
 2037.          if ( kmax > 0 ) then
 2038.             if ( ncols > 0 ) then
 2037.                $I_L2037_1041 = 0
 2037.                do
 2038.                   $I_L2038_924 = 0
 2038. !dir$ ivdep
 2038.                   do
 2039.                      $ozai_WR0_R1 = o3l(1 + $I_L2038_924, 1 + $I_L2037_1041)
 2062.                      $ozai_WR0_R1 = max( 1.0e-10, $ozai_WR0_R1 )
 2062.                      ozai(1 + $I_L2038_924, 3 + $I_L2037_1041) = $ozai_WR0_R1
 2040.                      $I_L2038_924 = 1 + $I_L2038_924
 2038.                      if ( $I_L2038_924 >= ncols ) exit
 2038.                   enddo
 2041.                   $I_L2037_1041 = 1 + $I_L2037_1041
 2040.                   if ( $I_L2037_1041 >= kmax ) exit
 2040.                enddo
 2040.             endif
 2040.          endif
 2066.          if ( ncols > 0 ) then
 2066.             $I_L2066_926 = 0
 2066. !dir$ ivdep
 2066.             do
 2067.                ozai(1 + $I_L2066_926, 1) = 0.0
 2068.                ozai(1 + $I_L2066_926, 2) = 1.02 * dp(1 + $I_L2066_926, 2) * ozai(1 + $I_L2066_926, 3)
 2069.                $I_L2066_926 = 1 + $I_L2066_926
 2066.                if ( $I_L2066_926 >= ncols ) exit
 2066.             enddo
 2066.          endif
 2071.          if ( kmax > 0 ) then
 2072.             if ( ncols > 0 ) then
 2071.                $I_L2071_1043 = 0
 2071.                do
 2072.                   $I_L2072_928 = 0
 2072. !dir$ ivdep
 2072.                   do
 2073.                      ozai(1 + $I_L2072_928, 3 + $I_L2071_1043) = 1.02 * ozai(1 + $I_L2072_928, 3 + $I_L2071_1043) * dp(1 + $I_L2072_928, 3 + $I_L2071_1043)
 2074.                      $I_L2072_928 = 1 + $I_L2072_928
 2072.                      if ( $I_L2072_928 >= ncols ) exit
 2072.                   enddo
 2075.                   $I_L2071_1043 = 1 + $I_L2071_1043
 2074.                   if ( $I_L2071_1043 >= kmax ) exit
 2074.                enddo
 2074.             endif
 2074.          endif
 2074.       endif
 2086.       if ( kmax > 0 ) then
 2087.          if ( ncols > 0 ) then
 2086.             $I_L2086_1045 = 0
 2086.             do
 2087.                $I_L2087_930 = 0
 2087. !dir$ ivdep
 2087.                do
 2089.                   x1(1 + $I_L2087_930, 1 + $I_L2086_1045) = ( x1(1 + $I_L2087_930, 2 + $I_L2086_1045) * 1.0/pai(1 + $I_L2087_930, 2 + $I_L2086_1045) )
 2088.                   rawi(1 + $I_L2087_930, 3 + $I_L2086_1045) = 1.02 * rawi(1 + $I_L2087_930, 3 + $I_L2086_1045) * dp(1 + $I_L2087_930, 3 + $I_L2086_1045)
 2090.                   $I_L2087_930 = 1 + $I_L2087_930
 2087.                   if ( $I_L2087_930 >= ncols ) exit
 2087.                enddo
 2091.                $I_L2086_1045 = 1 + $I_L2086_1045
 2090.                if ( $I_L2086_1045 >= kmax ) exit
 2090.             enddo
 2090.          endif
 2090.       endif
 2093.       $F_A35 = kmax
 2093.       $F_A36 = ncols
 2093.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 2093.          $I_L2093_1085 = 0
 2093.          do
 2093.             $I_L2093_1025 = 0
 2093. !dir$ ivdep
 2093.             do
 2093.                x2(1 + $I_L2093_1025, 1 + $I_L2093_1085) = log( x1(1 + $I_L2093_1025, 1 + $I_L2093_1085) )
 2093.                $I_L2093_1025 = 1 + $I_L2093_1025
 2093.                if ( $I_L2093_1025 >= $F_A36 ) exit
 2093.             enddo
 2093.             $I_L2093_1085 = 1 + $I_L2093_1085
 2093.             if ( $I_L2093_1085 >= $F_A35 ) exit
 2093.          enddo
 2093.       endif
 2095.       if ( kmax > 0 ) then
 2096.          if ( ncols > 0 ) then
 2095.             $I_L2095_1132 = 0
 2095.             do
 2096.                $I_L2096_1116 = 0
 2096.                do
 2095.                   $I_L2095_1095 = 0
 2095.                   if ( min( kmax, 4 + 4 * $I_L2095_1132 ) + -4 * $I_L2095_1132 >= 4 ) then
 2095.                      $I_L2095_1164 = 0
 2095. !dir$ shortloop16
 2095. !dir$ blocking_size( 4, 4 )
 2095.                      do
 2096.                         $I_L2096_932 = 0
 2096. !dir$ ivdep
 2096. !dir$ blocking_size( 256, 256 )
 2096.                         do
 2097.                            x1(1 + $I_L2096_932 + 256 * $I_L2096_1116, 1 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) = ( pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 3 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) * 1.0/pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 2 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) )
 2097.                            x1(1 + $I_L2096_932 + 256 * $I_L2096_1116, 2 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) = ( pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 4 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) * 1.0/pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 3 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) )
 2097.                            x1(1 + $I_L2096_932 + 256 * $I_L2096_1116, 3 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) = ( pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 5 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) * 1.0/pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 4 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) )
 2097.                            x1(1 + $I_L2096_932 + 256 * $I_L2096_1116, 4 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) = ( pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 6 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) * 1.0/pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 5 + 4 * $I_L2095_1132 + 4 * $I_L2095_1164) )
 2096.                            $I_L2096_932 = 1 + $I_L2096_932
 2096.                            if ( $I_L2096_932 >= min( ncols, 256 + 256 * $I_L2096_1116 ) + -256 * $I_L2096_1116 ) exit
 2096.                         enddo
 2095.                         $I_L2095_1164 = 1 + $I_L2095_1164
 2095.                         if ( $I_L2095_1164 >= _rsh( min( kmax, 4 + 4 * $I_L2095_1132 ) + -4 * $I_L2095_1132, 2 ) ) exit
 2095.                      enddo
 2095.                      $I_L2095_1095 = and( 0xfffffffffffffffcUL, min( kmax, 4 + 4 * $I_L2095_1132 ) + -4 * $I_L2095_1132 )
 2095.                   endif
 2095.                   if ( $I_L2095_1095 < min( kmax, 4 + 4 * $I_L2095_1132 ) + -4 * $I_L2095_1132 ) then
 2095.                      $I_L2095_1157 = 0
 2095. !dir$ shortloop16
 2095. !dir$ blocking_size( 4, 4 )
 2095.                      do
 2096.                         $I_L2096_932 = 0
 2096. !dir$ ivdep
 2096. !dir$ blocking_size( 256, 256 )
 2096.                         do
 2097.                            x1(1 + $I_L2096_932 + 256 * $I_L2096_1116, 1 + $I_L2095_1095 + $I_L2095_1157 + 4 * $I_L2095_1132) = ( pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 3 + $I_L2095_1095 + $I_L2095_1157 + 4 * $I_L2095_1132) * 1.0/pai(1 + $I_L2096_932 + 256 * $I_L2096_1116, 2 + $I_L2095_1095 + $I_L2095_1157 + 4 * $I_L2095_1132) )
 2096.                            $I_L2096_932 = 1 + $I_L2096_932
 2096.                            if ( $I_L2096_932 >= min( ncols, 256 + 256 * $I_L2096_1116 ) + -256 * $I_L2096_1116 ) exit
 2096.                         enddo
 2095.                         $I_L2095_1157 = 1 + $I_L2095_1157
 2095.                         if ( $I_L2095_1157 >= min( kmax, 4 + 4 * $I_L2095_1132 ) + -$I_L2095_1095 + -4 * $I_L2095_1132 ) exit
 2095.                      enddo
 2095.                   endif
 2096.                   $I_L2096_1116 = 1 + $I_L2096_1116
 2098.                   if ( $I_L2096_1116 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2098.                enddo
 2095.                $I_L2095_1132 = 1 + $I_L2095_1132
 2095.                if ( $I_L2095_1132 >= 1 + max( 0, -1 + _rsh( 3 + kmax, 2 ) ) ) exit
 2095.             enddo
 2095.          endif
 2095.       endif
 2101.       $F_A37 = kmax
 2101.       $F_A38 = ncols
 2101.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 2101.          $I_L2101_1087 = 0
 2101.          do
 2101.             $I_L2101_1027 = 0
 2101. !dir$ ivdep
 2101.             do
 2101.                x4(1 + $I_L2101_1027, 1 + $I_L2101_1087) = log( x1(1 + $I_L2101_1027, 1 + $I_L2101_1087) )
 2101.                $I_L2101_1027 = 1 + $I_L2101_1027
 2101.                if ( $I_L2101_1027 >= $F_A38 ) exit
 2101.             enddo
 2101.             $I_L2101_1087 = 1 + $I_L2101_1087
 2101.             if ( $I_L2101_1087 >= $F_A37 ) exit
 2101.          enddo
 2101.       endif
 2103.       if ( -1 + kmax > 0 ) then
 2104.          if ( ncols > 0 ) then
 2103.             $I_L2103_1134 = 0
 2103.             do
 2104.                $I_L2104_1118 = 0
 2104.                do
 2103.                   $I_L2103_1160 = 0
 2103. !dir$ shortloop16
 2103. !dir$ blocking_size( 2, 2 )
 2103.                   do
 2104.                      $I_L2104_935 = 0
 2104. !dir$ ivdep
 2104. !dir$ blocking_size( 256, 256 )
 2104.                      do
 2105.                         tui(1 + $I_L2104_935 + 256 * $I_L2104_1118, 3 + $I_L2103_1160 + 2 * $I_L2103_1134) = tai(1 + $I_L2104_935 + 256 * $I_L2104_1118, 3 + $I_L2103_1160 + 2 * $I_L2103_1134) + ( tai(1 + $I_L2104_935 + 256 * $I_L2104_1118, 4 + $I_L2103_1160 + 2 * $I_L2103_1134) + -tai(1 + $I_L2104_935 + 256 * $I_L2104_1118, 3 + $I_L2103_1160 + 2 * $I_L2103_1134) ) * ( x2(1 + $I_L2104_935 + 256 * $I_L2104_1118, 1 + $I_L2103_1160 + 2 * $I_L2103_1134) * 1.0/x4(1 + $I_L2104_935 + 256 * $I_L2104_1118, 1 + $I_L2103_1160 + 2 * $I_L2103_1134) )
 2104.                         $I_L2104_935 = 1 + $I_L2104_935
 2104.                         if ( $I_L2104_935 >= min( ncols, 256 + 256 * $I_L2104_1118 ) + -256 * $I_L2104_1118 ) exit
 2104.                      enddo
 2103.                      $I_L2103_1160 = 1 + $I_L2103_1160
 2103.                      if ( $I_L2103_1160 >= min( -1 + kmax, 2 + 2 * $I_L2103_1134 ) + -2 * $I_L2103_1134 ) exit
 2103.                   enddo
 2104.                   $I_L2104_1118 = 1 + $I_L2104_1118
 2107.                   if ( $I_L2104_1118 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2107.                enddo
 2103.                $I_L2103_1134 = 1 + $I_L2103_1134
 2103.                if ( $I_L2103_1134 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 2103.             enddo
 2103.          endif
 2103.       endif
 2112.       if ( ncols > 0 ) then
 2112.          $I_L2112_938 = 0
 2112. !dir$ ivdep
 2112.          do
 2113.             tui(1 + $I_L2112_938, 2 + kmax) = 5.0e-1 * ( tai(1 + $I_L2112_938, 2 + kmax) + tg(1 + $I_L2112_938) )
 2114.             tui(1 + $I_L2112_938, 3 + kmax) = tg(1 + $I_L2112_938)
 2115.             tai(1 + $I_L2112_938, 1) = tai(1 + $I_L2112_938, 3)
 2116.             tai(1 + $I_L2112_938, 2) = tai(1 + $I_L2112_938, 3)
 2117.             $I_L2112_938 = 1 + $I_L2112_938
 2112.             if ( $I_L2112_938 >= ncols ) exit
 2112.          enddo
 2119.          $I_L2119_1047 = 0
 2119.          do
 2120.             $I_L2120_940 = 0
 2120. !dir$ ivdep
 2120.             do
 2121.                tui(1 + $I_L2120_940, 1 + $I_L2119_1047) = tai(1 + $I_L2120_940, 1 + $I_L2119_1047)
 2122.                $I_L2120_940 = 1 + $I_L2120_940
 2120.                if ( $I_L2120_940 >= ncols ) exit
 2120.             enddo
 2123.             $I_L2119_1047 = 1 + $I_L2119_1047
 2122.             if ( $I_L2119_1047 >= 2 ) exit
 2122.          enddo
 2122.       endif
 2135.       if ( kmax >= 0 ) then
 2136.          if ( ncols > 0 ) then
 2135.             $I_L2135_1049 = 0
 2135.             do
 2136.                $I_L2136_942 = 0
 2136. !dir$ ivdep
 2136.                do
 2137.                   x3(1 + $I_L2136_942, 1 + $I_L2135_1049) = 5.0000000000000001e-3 * ( -225.0 + tai(1 + $I_L2136_942, 2 + $I_L2135_1049) )
 2138.                   $I_L2136_942 = 1 + $I_L2136_942
 2136.                   if ( $I_L2136_942 >= ncols ) exit
 2136.                enddo
 2139.                $I_L2135_1049 = 1 + $I_L2135_1049
 2138.                if ( $I_L2135_1049 >= 1 + kmax ) exit
 2138.             enddo
 2138.          endif
 2138.       endif
 2141.       $F_A39 = ( 1 + kmax )
 2141.       $F_A40 = ncols
 2141.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2141.          $I_L2141_1089 = 0
 2141.          do
 2141.             $I_L2141_1029 = 0
 2141. !dir$ ivdep
 2141.             do
 2141.                x2(1 + $I_L2141_1029, 1 + $I_L2141_1089) = _expn( x3(1 + $I_L2141_1029, 1 + $I_L2141_1089) )
 2141.                $I_L2141_1029 = 1 + $I_L2141_1029
 2141.                if ( $I_L2141_1029 >= $F_A40 ) exit
 2141.             enddo
 2141.             $I_L2141_1089 = 1 + $I_L2141_1089
 2141.             if ( $I_L2141_1089 >= $F_A39 ) exit
 2141.          enddo
 2141.       endif
 2143.       if ( kmax >= 0 ) then
 2145.          $SC_pre_I0 = pre(1)
 2144.          if ( ncols > 0 ) then
 2143.             $I_L2143_1051 = 0
 2143.             do
 2144.                $I_L2144_944 = 0
 2144. !dir$ ivdep
 2144.                do
 2145.                   vbar(1 + $I_L2144_944, 2 + $I_L2143_1051) = x2(1 + $I_L2144_944, 1 + $I_L2143_1051) * rawi(1 + $I_L2144_944, 2 + $I_L2143_1051) * ( $SC_pre_I0 * pai(1 + $I_L2144_944, 1 + $I_L2143_1051) )
 2147.                   x3(1 + $I_L2144_944, 1 + $I_L2143_1051) = 1.6e-2 * ( -256.0 + tai(1 + $I_L2144_944, 2 + $I_L2143_1051) )
 2148.                   $I_L2144_944 = 1 + $I_L2144_944
 2144.                   if ( $I_L2144_944 >= ncols ) exit
 2144.                enddo
 2149.                $I_L2143_1051 = 1 + $I_L2143_1051
 2148.                if ( $I_L2143_1051 >= 1 + kmax ) exit
 2148.             enddo
 2148.          endif
 2148.       endif
 2151.       $F_A41 = ( 1 + kmax )
 2151.       $F_A42 = ncols
 2151.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 2151.          $I_L2151_1091 = 0
 2151.          do
 2151.             $I_L2151_1031 = 0
 2151. !dir$ ivdep
 2151.             do
 2151.                x2(1 + $I_L2151_1031, 1 + $I_L2151_1091) = _expn( x3(1 + $I_L2151_1031, 1 + $I_L2151_1091) )
 2151.                $I_L2151_1031 = 1 + $I_L2151_1031
 2151.                if ( $I_L2151_1031 >= $F_A42 ) exit
 2151.             enddo
 2151.             $I_L2151_1091 = 1 + $I_L2151_1091
 2151.             if ( $I_L2151_1091 >= $F_A41 ) exit
 2151.          enddo
 2151.       endif
 2153.       if ( kmax >= 0 ) then
 2154.          if ( ncols > 0 ) then
 2153.             $I_L2153_1053 = 0
 2153.             do
 2154.                $I_L2154_946 = 0
 2154. !dir$ ivdep
 2154.                do
 2155.                   wbar(1 + $I_L2154_946, 2 + $I_L2153_1053) = x2(1 + $I_L2154_946, 1 + $I_L2153_1053) * rawi(1 + $I_L2154_946, 2 + $I_L2153_1053) * ( 1.8181818181818182e-3 * pai(1 + $I_L2154_946, 1 + $I_L2153_1053) )
 2157.                   x1(1 + $I_L2154_946, 1 + $I_L2153_1053) = -6.0811000000000002 + ( 1800.0 * 1.0/tai(1 + $I_L2154_946, 2 + $I_L2153_1053) )
 2158.                   $I_L2154_946 = 1 + $I_L2154_946
 2154.                   if ( $I_L2154_946 >= ncols ) exit
 2154.                enddo
 2159.                $I_L2153_1053 = 1 + $I_L2153_1053
 2158.                if ( $I_L2153_1053 >= 1 + kmax ) exit
 2158.             enddo
 2158.          endif
 2158.       endif
 2161.       $F_A43 = ( 1 + kmax )
 2161.       $F_A44 = ncols
 2161.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 2161.          $I_L2161_1093 = 0
 2161.          do
 2161.             $I_L2161_1033 = 0
 2161. !dir$ ivdep
 2161.             do
 2161.                x2(1 + $I_L2161_1033, 1 + $I_L2161_1093) = _expn( x1(1 + $I_L2161_1033, 1 + $I_L2161_1093) )
 2161.                $I_L2161_1033 = 1 + $I_L2161_1033
 2161.                if ( $I_L2161_1033 >= $F_A44 ) exit
 2161.             enddo
 2161.             $I_L2161_1093 = 1 + $I_L2161_1093
 2161.             if ( $I_L2161_1093 >= $F_A43 ) exit
 2161.          enddo
 2161.       endif
 2163.       if ( kmax >= 0 ) then
 2164.          if ( ncols > 0 ) then
 2163.             $I_L2163_1055 = 0
 2163.             do
 2164.                $I_L2164_948 = 0
 2164. !dir$ ivdep
 2164.                do
 2166.                   $x2_WR0_R2 = ( 1.556178026766262e-3 * x2(1 + $I_L2164_948, 1 + $I_L2163_1055) * rawi(1 + $I_L2164_948, 2 + $I_L2163_1055) * rawi(1 + $I_L2164_948, 2 + $I_L2163_1055) * pai(1 + $I_L2164_948, 1 + $I_L2163_1055) * 1.0/dp(1 + $I_L2164_948, 2 + $I_L2163_1055) )
 2166.                   x2(1 + $I_L2164_948, 1 + $I_L2163_1055) = $x2_WR0_R2
 2173.                   ubar(1 + $I_L2164_948, 2 + $I_L2163_1055) = $x2_WR0_R2 + ubar(1 + $I_L2164_948, 1 + $I_L2163_1055)
 2174.                   vbar(1 + $I_L2164_948, 2 + $I_L2163_1055) = vbar(1 + $I_L2164_948, 2 + $I_L2163_1055) + vbar(1 + $I_L2164_948, 1 + $I_L2163_1055)
 2175.                   wbar(1 + $I_L2164_948, 2 + $I_L2163_1055) = wbar(1 + $I_L2164_948, 2 + $I_L2163_1055) + wbar(1 + $I_L2164_948, 1 + $I_L2163_1055)
 2168.                   $I_L2164_948 = 1 + $I_L2164_948
 2164.                   if ( $I_L2164_948 >= ncols ) exit
 2164.                enddo
 2180.                $I_L2180_950 = 0
 2180. !dir$ ivdep
 2180.                do
 2181.                   ubarm(1 + $I_L2180_950, 2 + $I_L2163_1055) = 5.0e-1 * ( ubar(1 + $I_L2180_950, 1 + $I_L2163_1055) + ubar(1 + $I_L2180_950, 2 + $I_L2163_1055) )
 2182.                   vbarm(1 + $I_L2180_950, 2 + $I_L2163_1055) = 5.0e-1 * ( vbar(1 + $I_L2180_950, 1 + $I_L2163_1055) + vbar(1 + $I_L2180_950, 2 + $I_L2163_1055) )
 2183.                   wbarm(1 + $I_L2180_950, 2 + $I_L2163_1055) = 5.0e-1 * ( wbar(1 + $I_L2180_950, 1 + $I_L2163_1055) + wbar(1 + $I_L2180_950, 2 + $I_L2163_1055) )
 2184.                   $I_L2180_950 = 1 + $I_L2180_950
 2180.                   if ( $I_L2180_950 >= ncols ) exit
 2180.                enddo
 2169.                $I_L2163_1055 = 1 + $I_L2163_1055
 2168.                if ( $I_L2163_1055 >= 1 + kmax ) exit
 2168.             enddo
 2168.          endif
 2168.       endif
 2187.       call lwflux( pai(1, 1), tai(1, 1), ozai(1, 1), ubar(1, 1), vbar(1, 1), wbar(1, 1), ubarm(1, 1), vbarm(1, 1), wbarm(1, 1), fluxu(1, 1), fluxd(1, 1), txuf(1, 1, 1), tv1(1, 1), tv2(1, 1), tui(1, 1), x1(1, 1), x2(1, 1), cc(1, 1), rawi(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), dp(1, 1), css(1, 1), ccu(1, 1), shi(1, 1), shh(1, 1), shu(1, 1), sumsav(1), h0p, h1p, h1p5, hp5, dtb, dtbinv, pr(1), ntm1, ozone, co2val, ncols, kmax )
 2197.       if ( ncols > 0 ) then
 2197.          $I_L2197_952 = 0
 2197. !dir$ ivdep
 2197.          do
 2198.             fluxd(1 + $I_L2197_952, 1) = h0p
 2202.             fluxu(1 + $I_L2197_952, 2 + kmax) = sumsav(1 + $I_L2197_952)
 2203.             $I_L2197_952 = 1 + $I_L2197_952
 2197.             if ( $I_L2197_952 >= ncols ) exit
 2197.          enddo
 2197.       endif
 2207.       if ( kmax >= 0 ) then
 2208.          if ( ncols > 0 ) then
 2207.             $I_L2207_1146 = 0
 2207.             do
 2208.                $I_L2208_954 = 0
 2208. !dir$ ivdep
 2208.                do
 2209.                   suma(1 + $I_L2208_954) = h0p
 2210.                   $I_L2208_954 = 1 + $I_L2208_954
 2208.                   if ( $I_L2208_954 >= ncols ) exit
 2208.                enddo
 2212.                $I_L2212_1136 = 0
 2212.                do
 2213.                   $I_L2213_1120 = 0
 2213.                   do
 2212.                      $I_L2212_1101 = 0
 2212. !dir$ shortloop16
 2212. !dir$ blocking_size( 4, 4 )
 2212.                      do
 2213.                         $I_L2213_956 = 0
 2213. !dir$ ivdep
 2213. !dir$ blocking_size( 256, 256 )
 2213.                         do
 2214.                            suma(1 + $I_L2213_956 + 256 * $I_L2213_1120) = suma(1 + $I_L2213_956 + 256 * $I_L2213_1120) + txuf(1 + $I_L2213_956 + 256 * $I_L2213_1120, 1 + $I_L2212_1101 + 4 * $I_L2212_1136, 2 + $I_L2207_1146)
 2213.                            $I_L2213_956 = 1 + $I_L2213_956
 2213.                            if ( $I_L2213_956 >= min( ncols, 256 + 256 * $I_L2213_1120 ) + -256 * $I_L2213_1120 ) exit
 2213.                         enddo
 2212.                         $I_L2212_1101 = 1 + $I_L2212_1101
 2212.                         if ( $I_L2212_1101 >= min( 4 + 4 * $I_L2212_1136, 1 + $I_L2207_1146 ) + -4 * $I_L2212_1136 ) exit
 2212.                      enddo
 2213.                      $I_L2213_1120 = 1 + $I_L2213_1120
 2215.                      if ( $I_L2213_1120 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2215.                   enddo
 2212.                   $I_L2212_1136 = 1 + $I_L2212_1136
 2212.                   if ( $I_L2212_1136 >= 1 + max( 0, -1 + _rsh( 4 + $I_L2207_1146, 2 ) ) ) exit
 2212.                enddo
 2217.                $I_L2217_959 = 0
 2217. !dir$ ivdep
 2217.                do
 2218.                   fluxd(1 + $I_L2217_959, 2 + $I_L2207_1146) = shh(1 + $I_L2217_959, 2 + $I_L2207_1146) + suma(1 + $I_L2217_959) + -shi(1 + $I_L2217_959, 2 + $I_L2207_1146)
 2219.                   $I_L2217_959 = 1 + $I_L2217_959
 2217.                   if ( $I_L2217_959 >= ncols ) exit
 2217.                enddo
 2220.                $I_L2207_1146 = 1 + $I_L2207_1146
 2219.                if ( $I_L2207_1146 >= 1 + kmax ) exit
 2219.             enddo
 2219.          endif
 2224.          $I_L2224_1148 = 0
 2224.          do
 2226.             if ( ncols > 0 ) then
 2226.                $I_L2226_961 = 0
 2226. !dir$ ivdep
 2226.                do
 2227.                   suma(1 + $I_L2226_961) = h0p
 2228.                   $I_L2226_961 = 1 + $I_L2226_961
 2226.                   if ( $I_L2226_961 >= ncols ) exit
 2226.                enddo
 2229.                $I_L2229_1138 = 0
 2229.                do
 2230.                   $I_L2230_1122 = 0
 2230.                   do
 2229.                      $I_L2229_1104 = 0
 2229. !dir$ shortloop16
 2229. !dir$ blocking_size( 4, 4 )
 2229.                      do
 2230.                         $I_L2230_963 = 0
 2230. !dir$ ivdep
 2230. !dir$ blocking_size( 256, 256 )
 2230.                         do
 2231.                            suma(1 + $I_L2230_963 + 256 * $I_L2230_1122) = suma(1 + $I_L2230_963 + 256 * $I_L2230_1122) + txuf(1 + $I_L2230_963 + 256 * $I_L2230_1122, 2 + $I_L2229_1104 + $I_L2224_1148 + 4 * $I_L2229_1138, 1 + $I_L2224_1148)
 2230.                            $I_L2230_963 = 1 + $I_L2230_963
 2230.                            if ( $I_L2230_963 >= min( ncols, 256 + 256 * $I_L2230_1122 ) + -256 * $I_L2230_1122 ) exit
 2230.                         enddo
 2229.                         $I_L2229_1104 = 1 + $I_L2229_1104
 2229.                         if ( $I_L2229_1104 >= min( 4 + 4 * $I_L2229_1138, 1 + kmax + -$I_L2224_1148 ) + -4 * $I_L2229_1138 ) exit
 2229.                      enddo
 2230.                      $I_L2230_1122 = 1 + $I_L2230_1122
 2232.                      if ( $I_L2230_1122 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2232.                   enddo
 2229.                   $I_L2229_1138 = 1 + $I_L2229_1138
 2229.                   if ( $I_L2229_1138 >= 1 + max( 0, -1 + _rsh( 4 + kmax + -$I_L2224_1148, 2 ) ) ) exit
 2229.                enddo
 2234.                $I_L2234_966 = 0
 2234. !dir$ ivdep
 2234.                do
 2235.                   fluxu(1 + $I_L2234_966, 1 + $I_L2224_1148) = shh(1 + $I_L2234_966, 1 + $I_L2224_1148) + suma(1 + $I_L2234_966) + shu(1 + $I_L2234_966, 1 + $I_L2224_1148)
 2236.                   $I_L2234_966 = 1 + $I_L2234_966
 2234.                   if ( $I_L2234_966 >= ncols ) exit
 2234.                enddo
 2234.             endif
 2237.             $I_L2224_1148 = 1 + $I_L2224_1148
 2236.             if ( $I_L2224_1148 >= 1 + kmax ) exit
 2236.          enddo
 2236.       endif
 2239.       if ( 2 + kmax > 0 ) then
 2240.          if ( ncols > 0 ) then
 2239.             $I_L2239_1057 = 0
 2239.             do
 2240.                $I_L2240_968 = 0
 2240. !dir$ ivdep
 2240.                do
 2241.                   x1(1 + $I_L2240_968, 1 + $I_L2239_1057) = fluxd(1 + $I_L2240_968, 1 + $I_L2239_1057) + -fluxu(1 + $I_L2240_968, 1 + $I_L2239_1057)
 2242.                   $I_L2240_968 = 1 + $I_L2240_968
 2240.                   if ( $I_L2240_968 >= ncols ) exit
 2240.                enddo
 2243.                $I_L2239_1057 = 1 + $I_L2239_1057
 2242.                if ( $I_L2239_1057 >= 2 + kmax ) exit
 2242.             enddo
 2242.          endif
 2242.       endif
 2245.       if ( ncols > 0 ) then
 2245.          $I_L2245_970 = 0
 2245. !dir$ ivdep
 2245.          do
 2246.             ulwclr(1 + $I_L2245_970) = -x1(1 + $I_L2245_970, 2)
 2247.             rsclr(1 + $I_L2245_970) = -x1(1 + $I_L2245_970, 2 + kmax)
 2248.             dlwclr(1 + $I_L2245_970) = fluxd(1 + $I_L2245_970, 2 + kmax)
 2249.             $I_L2245_970 = 1 + $I_L2245_970
 2245.             if ( $I_L2245_970 >= ncols ) exit
 2245.          enddo
 2245.       endif
 2251.       if ( kmax > 0 ) then
 2252.          if ( ncols > 0 ) then
 2251.             $I_L2251_1059 = 0
 2251.             if ( kmax >= 4 ) then
 2251.                $I_L2251_1166 = 0
 2251. !dir$ blocking_size( 1, 1 )
 2251.                do
 2252.                   $I_L2252_972 = 0
 2252. !dir$ ivdep
 2252. !dir$ blocking_size( 256, 256 )
 2252.                   do
 2253.                      atlclr(1 + $I_L2252_972, 1 + 4 * $I_L2251_1166) = ( 9.7706879361914262e-5 * 1.0/dp(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) * ( x1(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166) + -x1(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) ) )
 2263.                      css(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166) = cld(1 + $I_L2252_972, 1 + 4 * $I_L2251_1166)
 2264.                      ccu(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166) = clu(1 + $I_L2252_972, 1 + 4 * $I_L2251_1166)
 2253.                      atlclr(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166) = ( 9.7706879361914262e-5 * ( x1(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) + -x1(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) ) * 1.0/dp(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) )
 2263.                      css(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) = cld(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166)
 2264.                      ccu(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) = clu(1 + $I_L2252_972, 2 + 4 * $I_L2251_1166)
 2253.                      atlclr(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166) = ( 9.7706879361914262e-5 * ( x1(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) + -x1(1 + $I_L2252_972, 5 + 4 * $I_L2251_1166) ) * 1.0/dp(1 + $I_L2252_972, 5 + 4 * $I_L2251_1166) )
 2263.                      css(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) = cld(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166)
 2264.                      ccu(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) = clu(1 + $I_L2252_972, 3 + 4 * $I_L2251_1166)
 2253.                      atlclr(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166) = ( 9.7706879361914262e-5 * ( x1(1 + $I_L2252_972, 5 + 4 * $I_L2251_1166) + -x1(1 + $I_L2252_972, 6 + 4 * $I_L2251_1166) ) * 1.0/dp(1 + $I_L2252_972, 6 + 4 * $I_L2251_1166) )
 2263.                      css(1 + $I_L2252_972, 5 + 4 * $I_L2251_1166) = cld(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166)
 2264.                      ccu(1 + $I_L2252_972, 5 + 4 * $I_L2251_1166) = clu(1 + $I_L2252_972, 4 + 4 * $I_L2251_1166)
 2254.                      $I_L2252_972 = 1 + $I_L2252_972
 2252.                      if ( $I_L2252_972 >= ncols ) exit
 2252.                   enddo
 2255.                   $I_L2251_1166 = 1 + $I_L2251_1166
 2254.                   if ( $I_L2251_1166 >= _rsh( kmax, 2 ) ) exit
 2254.                enddo
 2255.                $I_L2251_1059 = and( 0xfffffffffffffffcUL, kmax )
 2255.             endif
 2251.             if ( $I_L2251_1059 < kmax ) then
 2251.                $I_L2251_1154 = 0
 2251. !dir$ blocking_size( 1, 1 )
 2251.                do
 2252.                   $I_L2252_972 = 0
 2252. !dir$ ivdep
 2252. !dir$ blocking_size( 256, 256 )
 2252.                   do
 2253.                      atlclr(1 + $I_L2252_972, 1 + $I_L2251_1059 + $I_L2251_1154) = ( 9.7706879361914262e-5 * ( x1(1 + $I_L2252_972, 2 + $I_L2251_1059 + $I_L2251_1154) + -x1(1 + $I_L2252_972, 3 + $I_L2251_1059 + $I_L2251_1154) ) * 1.0/dp(1 + $I_L2252_972, 3 + $I_L2251_1059 + $I_L2251_1154) )
 2263.                      css(1 + $I_L2252_972, 2 + $I_L2251_1059 + $I_L2251_1154) = cld(1 + $I_L2252_972, 1 + $I_L2251_1059 + $I_L2251_1154)
 2264.                      ccu(1 + $I_L2252_972, 2 + $I_L2251_1059 + $I_L2251_1154) = clu(1 + $I_L2252_972, 1 + $I_L2251_1059 + $I_L2251_1154)
 2254.                      $I_L2252_972 = 1 + $I_L2252_972
 2252.                      if ( $I_L2252_972 >= ncols ) exit
 2252.                   enddo
 2255.                   $I_L2251_1154 = 1 + $I_L2251_1154
 2254.                   if ( $I_L2251_1154 >= kmax + -$I_L2251_1059 ) exit
 2254.                enddo
 2254.             endif
 2254.          endif
 2254.       endif
 2268.       if ( nls >= 0 ) then
 2269.          if ( ncols > 0 ) then
 2268.             $I_L2268_1061 = 0
 2268.             do
 2269.                $I_L2269_974 = 0
 2269. !dir$ ivdep
 2269.                do
 2270.                   css(1 + $I_L2269_974, 1 + $I_L2268_1061) = h0p
 2271.                   ccu(1 + $I_L2269_974, 1 + $I_L2268_1061) = h0p
 2272.                   $I_L2269_974 = 1 + $I_L2269_974
 2269.                   if ( $I_L2269_974 >= ncols ) exit
 2269.                enddo
 2273.                $I_L2268_1061 = 1 + $I_L2268_1061
 2272.                if ( $I_L2268_1061 >= 1 + nls ) exit
 2272.             enddo
 2272.          endif
 2272.       endif
 2278.       if ( icld == 1 ) then
 2280.          if ( kmax + -nls > 0 ) then
 2281.             if ( ncols > 0 ) then
 2280.                $I_L2280_1071 = 0
 2280.                do
 2281.                   $I_L2281_984 = 0
 2281. !dir$ ivdep
 2281.                   do
 2282.                      $tv1_WR0_R3 = -5.0000000000000003e-2 * dp(1 + $I_L2281_984, 3 + nls + $I_L2280_1071)
 2282.                      tv1(1 + $I_L2281_984, 2 + nls + $I_L2280_1071) = $tv1_WR0_R3
 2288.                      $tv2_WR0_R4 = _expn( $tv1_WR0_R3 )
 2289.                      ccu(1 + $I_L2281_984, 2 + nls + $I_L2280_1071) = ccu(1 + $I_L2281_984, 2 + nls + $I_L2280_1071) * ( h1p + -$tv2_WR0_R4 )
 2283.                      $I_L2281_984 = 1 + $I_L2281_984
 2281.                      if ( $I_L2281_984 >= ncols ) exit
 2281.                   enddo
 2294.                   $I_L2294_986 = 0
 2294. !dir$ ivdep
 2294.                   do
 2298.                      if ( tl(1 + $I_L2294_986, 1 + nls + $I_L2280_1071) < 253.0 ) then
 2299.                         tv1(1 + $I_L2294_986, 2 + nls + $I_L2280_1071) = -1.0e-2 * dp(1 + $I_L2294_986, 3 + nls + $I_L2280_1071)
 2299.                      endif
 2301.                      $I_L2294_986 = 1 + $I_L2294_986
 2300.                      if ( $I_L2294_986 >= ncols ) exit
 2300.                   enddo
 2305.                   $I_L2305_988 = 0
 2305. !dir$ ivdep
 2305.                   do
 2306.                      $tv2_WR0_R5 = _expn( tv1(1 + $I_L2305_988, 2 + nls + $I_L2280_1071) )
 2307.                      css(1 + $I_L2305_988, 2 + nls + $I_L2280_1071) = css(1 + $I_L2305_988, 2 + nls + $I_L2280_1071) * ( h1p + -$tv2_WR0_R5 )
 2308.                      $I_L2305_988 = 1 + $I_L2305_988
 2305.                      if ( $I_L2305_988 >= ncols ) exit
 2305.                   enddo
 2284.                   $I_L2280_1071 = 1 + $I_L2280_1071
 2283.                   if ( $I_L2280_1071 >= ( kmax + -nls ) ) exit
 2283.                enddo
 2283.             endif
 2283.          endif
 2311.       else if ( icld == 2 ) then
 2313.          if ( kmax + -nls > 0 ) then
 2314.             if ( ncols > 0 ) then
 2313.                $I_L2313_1069 = 0
 2313.                do
 2314.                   $I_L2314_982 = 0
 2314. !dir$ ivdep
 2314.                   do
 2315.                      $tv1_WR0_R6 = -1.2e-1 * dp(1 + $I_L2314_982, 3 + nls + $I_L2313_1069) * ccu(1 + $I_L2314_982, 2 + nls + $I_L2313_1069)
 2321.                      $tv2_WR0_R7 = _expn( $tv1_WR0_R6 )
 2322.                      ccu(1 + $I_L2314_982, 2 + nls + $I_L2313_1069) = h1p + -$tv2_WR0_R7
 2328.                      $tv2_WR0_R7 = -190.66000000000003 + tl(1 + $I_L2314_982, 1 + nls + $I_L2313_1069)
 2334.                      $tv2_WR0_R7 = max( h0p, $tv2_WR0_R7 )
 2335.                      tv1(1 + $I_L2314_982, 2 + nls + $I_L2313_1069) = ( min( 7.8843750000000008e-3, 1.5e-6 * $tv2_WR0_R7 * $tv2_WR0_R7 ) )
 2341.                      $tv2_WR0_R7 = -273.16000000000003 + tl(1 + $I_L2314_982, 1 + nls + $I_L2313_1069)
 2341.                      tv2(1 + $I_L2314_982, 2 + nls + $I_L2313_1069) = $tv2_WR0_R7
 2316.                      $I_L2314_982 = 1 + $I_L2314_982
 2314.                      if ( $I_L2314_982 >= ncols ) exit
 2314.                   enddo
 2317.                   $I_L2313_1069 = 1 + $I_L2313_1069
 2316.                   if ( $I_L2313_1069 >= ( kmax + -nls ) ) exit
 2316.                enddo
 2345.                $I_L2345_1073 = 0
 2345.                do
 2346.                   $I_L2346_990 = 0
 2346. !dir$ ivdep
 2346.                   do
 2348.                      $SCA_bitx_I1 = tv1(1 + $I_L2346_990, 1 + $I_L2345_1073) == 7.8843750000000008e-3
 2347.                      tv2(1 + $I_L2346_990, 2 + nls + $I_L2345_1073) = min( 5.9999999999999998e-2, max( 7.8843750000000008e-3, 5.9999999999999998e-2 + 5.2115625e-3 * tv2(1 + $I_L2346_990, 2 + nls + $I_L2345_1073) ) )
 2349.                      if ( $SCA_bitx_I1 /= .false. ) then
 2349.                         tv1(1 + $I_L2346_990, 1 + $I_L2345_1073) = tv2(1 + $I_L2346_990, 1 + $I_L2345_1073)
 2349.                      endif
 2350.                      $I_L2346_990 = 1 + $I_L2346_990
 2349.                      if ( $I_L2346_990 >= ncols ) exit
 2349.                   enddo
 2351.                   $I_L2345_1073 = 1 + $I_L2345_1073
 2350.                   if ( $I_L2345_1073 >= ( kmax + -nls ) ) exit
 2350.                enddo
 2353.                $I_L2353_1075 = 0
 2353.                do
 2354.                   $I_L2354_992 = 0
 2354. !dir$ ivdep
 2354.                   do
 2355.                      $tv1_WR0_R8 = -( tv1(1 + $I_L2354_992, 2 + nls + $I_L2353_1075) * dp(1 + $I_L2354_992, 3 + nls + $I_L2353_1075) * css(1 + $I_L2354_992, 2 + nls + $I_L2353_1075) )
 2355.                      tv1(1 + $I_L2354_992, 2 + nls + $I_L2353_1075) = $tv1_WR0_R8
 2361.                      $tv2_WR0_R9 = _expn( $tv1_WR0_R8 )
 2362.                      css(1 + $I_L2354_992, 2 + nls + $I_L2353_1075) = h1p + -$tv2_WR0_R9
 2356.                      $I_L2354_992 = 1 + $I_L2354_992
 2354.                      if ( $I_L2354_992 >= ncols ) exit
 2354.                   enddo
 2357.                   $I_L2353_1075 = 1 + $I_L2353_1075
 2356.                   if ( $I_L2353_1075 >= ( kmax + -nls ) ) exit
 2356.                enddo
 2356.             endif
 2356.          endif
 2356.       else if ( icld == 3 ) then
 2368.          if ( kmax > 0 ) then
 2370.             if ( ncols > 0 ) then
 2368.                $I_L2368_1063 = 0
 2368.                do
 2370.                   $I_L2370_976 = 0
 2370. !dir$ ivdep
 2370.                   do
 2371.                      $rkabs_WR0_R10 = 9.0360999999999997e-2 * ( 1.0 + -fice(1 + $I_L2370_976, 1 + $I_L2368_1063) ) + fice(1 + $I_L2370_976, 1 + $I_L2368_1063) * ( 5.0000000000000001e-3 + 1.0/rei(1 + $I_L2370_976, 1 + $I_L2368_1063) )
 2373.                      $emis_WR0_R11 = 1.0 + -_expn( -1.6599999999999999 * $rkabs_WR0_R10 * clwp(1 + $I_L2370_976, 1 + $I_L2368_1063) )
 2373.                      emis(1 + $I_L2370_976, 1 + $I_L2368_1063) = $emis_WR0_R11
 2374.                      emisd(1 + $I_L2370_976, 1 + $I_L2368_1063) = emis(1 + $I_L2370_976, kmax + -$I_L2368_1063)
 2380.                      emis1(1 + $I_L2370_976, 2 + $I_L2368_1063) = $emis_WR0_R11
 2375.                      $I_L2370_976 = 1 + $I_L2370_976
 2370.                      if ( $I_L2370_976 >= ncols ) exit
 2370.                   enddo
 2376.                   $I_L2368_1063 = 1 + $I_L2368_1063
 2375.                   if ( $I_L2368_1063 >= kmax ) exit
 2375.                enddo
 2375.             endif
 2375.          endif
 2384.          if ( nls >= 0 ) then
 2385.             if ( ncols > 0 ) then
 2384.                $I_L2384_1065 = 0
 2384.                do
 2385.                   $I_L2385_978 = 0
 2385. !dir$ ivdep
 2385.                   do
 2386.                      emis1(1 + $I_L2385_978, 1 + $I_L2384_1065) = h0p
 2387.                      $I_L2385_978 = 1 + $I_L2385_978
 2385.                      if ( $I_L2385_978 >= ncols ) exit
 2385.                   enddo
 2388.                   $I_L2384_1065 = 1 + $I_L2384_1065
 2387.                   if ( $I_L2384_1065 >= 1 + nls ) exit
 2387.                enddo
 2387.             endif
 2387.          endif
 2390.          if ( kmax + -nls > 0 ) then
 2391.             if ( ncols > 0 ) then
 2390.                $I_L2390_1067 = 0
 2390.                do
 2391.                   $I_L2391_980 = 0
 2391. !dir$ ivdep
 2391.                   do
 2392.                      css(1 + $I_L2391_980, 2 + nls + $I_L2390_1067) = css(1 + $I_L2391_980, 2 + nls + $I_L2390_1067) * emis1(1 + $I_L2391_980, 2 + nls + $I_L2390_1067)
 2393.                      ccu(1 + $I_L2391_980, 2 + nls + $I_L2390_1067) = emis1(1 + $I_L2391_980, 2 + nls + $I_L2390_1067) * ccu(1 + $I_L2391_980, 2 + nls + $I_L2390_1067)
 2394.                      $I_L2391_980 = 1 + $I_L2391_980
 2391.                      if ( $I_L2391_980 >= ncols ) exit
 2391.                   enddo
 2395.                   $I_L2390_1067 = 1 + $I_L2390_1067
 2394.                   if ( $I_L2390_1067 >= ( kmax + -nls ) ) exit
 2394.                enddo
 2394.             endif
 2394.          endif
 2394.       endif
 2401.       call cldslw( ncols, kmax, nlcs, h1p, cs(1, 1, 1), x1(1, 1), x2(1, 1), cc(1, 1), x3(1, 1), x4(1, 1), ch(1, 1), css(1, 1), ccu(1, 1) )
 2404.       if ( 2 + kmax > 0 ) then
 2406.          if ( ncols > 0 ) then
 2404.             $I_L2404_1124 = 0
 2404.             do
 2405.                $I_L2405_1077 = 0
 2405.                do
 2406.                   $I_L2406_994 = 0
 2406. !dir$ ivdep
 2406. !dir$ loop_info (automatic) cache_nt( txuf )
 2406.                   do
 2407.                      txuf(1 + $I_L2406_994, 1 + $I_L2405_1077, 1 + $I_L2404_1124) = txuf(1 + $I_L2406_994, 1 + $I_L2405_1077, 1 + $I_L2404_1124) * cs(1 + $I_L2406_994, 1 + $I_L2405_1077, 1 + $I_L2404_1124)
 2408.                      $I_L2406_994 = 1 + $I_L2406_994
 2406.                      if ( $I_L2406_994 >= ncols ) exit
 2406.                   enddo
 2409.                   $I_L2405_1077 = 1 + $I_L2405_1077
 2408.                   if ( $I_L2405_1077 >= 2 + kmax ) exit
 2408.                enddo
 2413.                $I_L2413_996 = 0
 2413. !dir$ ivdep
 2413.                do
 2414.                   shi(1 + $I_L2413_996, 1 + $I_L2404_1124) = shi(1 + $I_L2413_996, 1 + $I_L2404_1124) * ch(1 + $I_L2413_996, 1 + $I_L2404_1124)
 2415.                   $I_L2413_996 = 1 + $I_L2413_996
 2413.                   if ( $I_L2413_996 >= ncols ) exit
 2413.                enddo
 2410.                $I_L2404_1124 = 1 + $I_L2404_1124
 2409.                if ( $I_L2404_1124 >= 2 + kmax ) exit
 2409.             enddo
 2409.          endif
 2409.       endif
 2418.       if ( kmax >= 0 ) then
 2419.          if ( ncols > 0 ) then
 2418.             $I_L2418_1079 = 0
 2418.             do
 2419.                $I_L2419_998 = 0
 2419. !dir$ ivdep
 2419.                do
 2421.                   shu(1 + $I_L2419_998, 1 + $I_L2418_1079) = shh(1 + $I_L2419_998, 1 + $I_L2418_1079) + shu(1 + $I_L2419_998, 1 + $I_L2418_1079) * cc(1 + $I_L2419_998, 1 + $I_L2418_1079)
 2422.                   $I_L2419_998 = 1 + $I_L2419_998
 2419.                   if ( $I_L2419_998 >= ncols ) exit
 2419.                enddo
 2423.                $I_L2418_1079 = 1 + $I_L2418_1079
 2422.                if ( $I_L2418_1079 >= 1 + kmax ) exit
 2422.             enddo
 2422.          endif
 2422.       endif
 2427.       if ( ncols > 0 ) then
 2427.          $I_L2427_1000 = 0
 2427. !dir$ ivdep
 2427.          do
 2428.             fluxd(1 + $I_L2427_1000, 1) = h0p
 2434.             fluxu(1 + $I_L2427_1000, 2 + kmax) = sumsav(1 + $I_L2427_1000)
 2429.             $I_L2427_1000 = 1 + $I_L2427_1000
 2427.             if ( $I_L2427_1000 >= ncols ) exit
 2427.          enddo
 2427.       endif
 2440.       if ( kmax >= 0 ) then
 2442.          if ( ncols > 0 ) then
 2440.             $I_L2440_1150 = 0
 2440.             do
 2442.                $I_L2442_1002 = 0
 2442. !dir$ ivdep
 2442.                do
 2443.                   suma(1 + $I_L2442_1002) = h0p
 2444.                   $I_L2442_1002 = 1 + $I_L2442_1002
 2442.                   if ( $I_L2442_1002 >= ncols ) exit
 2442.                enddo
 2448.                $I_L2448_1140 = 0
 2448.                do
 2449.                   $I_L2449_1126 = 0
 2449.                   do
 2448.                      $I_L2448_1107 = 0
 2448. !dir$ shortloop16
 2448. !dir$ blocking_size( 4, 4 )
 2448.                      do
 2449.                         $I_L2449_1004 = 0
 2449. !dir$ ivdep
 2449. !dir$ blocking_size( 256, 256 )
 2449.                         do
 2450.                            suma(1 + $I_L2449_1004 + 256 * $I_L2449_1126) = suma(1 + $I_L2449_1004 + 256 * $I_L2449_1126) + txuf(1 + $I_L2449_1004 + 256 * $I_L2449_1126, 1 + $I_L2448_1107 + 4 * $I_L2448_1140, 2 + $I_L2440_1150)
 2449.                            $I_L2449_1004 = 1 + $I_L2449_1004
 2449.                            if ( $I_L2449_1004 >= min( ncols, 256 + 256 * $I_L2449_1126 ) + -256 * $I_L2449_1126 ) exit
 2449.                         enddo
 2448.                         $I_L2448_1107 = 1 + $I_L2448_1107
 2448.                         if ( $I_L2448_1107 >= min( 4 + 4 * $I_L2448_1140, 1 + $I_L2440_1150 ) + -4 * $I_L2448_1140 ) exit
 2448.                      enddo
 2449.                      $I_L2449_1126 = 1 + $I_L2449_1126
 2451.                      if ( $I_L2449_1126 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2451.                   enddo
 2448.                   $I_L2448_1140 = 1 + $I_L2448_1140
 2448.                   if ( $I_L2448_1140 >= 1 + max( 0, -1 + _rsh( 4 + $I_L2440_1150, 2 ) ) ) exit
 2448.                enddo
 2454.                $I_L2454_1007 = 0
 2454. !dir$ ivdep
 2454.                do
 2455.                   fluxd(1 + $I_L2454_1007, 2 + $I_L2440_1150) = shh(1 + $I_L2454_1007, 2 + $I_L2440_1150) + suma(1 + $I_L2454_1007) + -shi(1 + $I_L2454_1007, 2 + $I_L2440_1150)
 2456.                   $I_L2454_1007 = 1 + $I_L2454_1007
 2454.                   if ( $I_L2454_1007 >= ncols ) exit
 2454.                enddo
 2458.                $I_L2440_1150 = 1 + $I_L2440_1150
 2456.                if ( $I_L2440_1150 >= 1 + kmax ) exit
 2456.             enddo
 2456.          endif
 2462.          $I_L2462_1152 = 0
 2462.          do
 2465.             if ( ncols > 0 ) then
 2465.                $I_L2465_1009 = 0
 2465. !dir$ ivdep
 2465.                do
 2466.                   suma(1 + $I_L2465_1009) = h0p
 2467.                   $I_L2465_1009 = 1 + $I_L2465_1009
 2465.                   if ( $I_L2465_1009 >= ncols ) exit
 2465.                enddo
 2469.                $I_L2469_1142 = 0
 2469.                do
 2470.                   $I_L2470_1128 = 0
 2470.                   do
 2469.                      $I_L2469_1110 = 0
 2469. !dir$ shortloop16
 2469. !dir$ blocking_size( 4, 4 )
 2469.                      do
 2470.                         $I_L2470_1011 = 0
 2470. !dir$ ivdep
 2470. !dir$ blocking_size( 256, 256 )
 2470.                         do
 2471.                            suma(1 + $I_L2470_1011 + 256 * $I_L2470_1128) = suma(1 + $I_L2470_1011 + 256 * $I_L2470_1128) + txuf(1 + $I_L2470_1011 + 256 * $I_L2470_1128, 2 + $I_L2469_1110 + $I_L2462_1152 + 4 * $I_L2469_1142, 1 + $I_L2462_1152)
 2470.                            $I_L2470_1011 = 1 + $I_L2470_1011
 2470.                            if ( $I_L2470_1011 >= min( ncols, 256 + 256 * $I_L2470_1128 ) + -256 * $I_L2470_1128 ) exit
 2470.                         enddo
 2469.                         $I_L2469_1110 = 1 + $I_L2469_1110
 2469.                         if ( $I_L2469_1110 >= min( 4 + 4 * $I_L2469_1142, 1 + kmax + -$I_L2462_1152 ) + -4 * $I_L2469_1142 ) exit
 2469.                      enddo
 2470.                      $I_L2470_1128 = 1 + $I_L2470_1128
 2472.                      if ( $I_L2470_1128 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2472.                   enddo
 2469.                   $I_L2469_1142 = 1 + $I_L2469_1142
 2469.                   if ( $I_L2469_1142 >= 1 + max( 0, -1 + _rsh( 4 + kmax + -$I_L2462_1152, 2 ) ) ) exit
 2469.                enddo
 2475.                $I_L2475_1014 = 0
 2475. !dir$ ivdep
 2475.                do
 2476.                   fluxu(1 + $I_L2475_1014, 1 + $I_L2462_1152) = suma(1 + $I_L2475_1014) + shu(1 + $I_L2475_1014, 1 + $I_L2462_1152)
 2477.                   $I_L2475_1014 = 1 + $I_L2475_1014
 2475.                   if ( $I_L2475_1014 >= ncols ) exit
 2475.                enddo
 2475.             endif
 2479.             $I_L2462_1152 = 1 + $I_L2462_1152
 2477.             if ( $I_L2462_1152 >= 1 + kmax ) exit
 2477.          enddo
 2477.       endif
 2481.       if ( 2 + kmax > 0 ) then
 2482.          if ( ncols > 0 ) then
 2481.             $I_L2481_1081 = 0
 2481.             do
 2482.                $I_L2482_1016 = 0
 2482. !dir$ ivdep
 2482.                do
 2483.                   x1(1 + $I_L2482_1016, 1 + $I_L2481_1081) = fluxd(1 + $I_L2482_1016, 1 + $I_L2481_1081) + -fluxu(1 + $I_L2482_1016, 1 + $I_L2481_1081)
 2484.                   $I_L2482_1016 = 1 + $I_L2482_1016
 2482.                   if ( $I_L2482_1016 >= ncols ) exit
 2482.                enddo
 2485.                $I_L2481_1081 = 1 + $I_L2481_1081
 2484.                if ( $I_L2481_1081 >= 2 + kmax ) exit
 2484.             enddo
 2484.          endif
 2484.       endif
 2487.       if ( ncols > 0 ) then
 2487.          $I_L2487_1018 = 0
 2487. !dir$ ivdep
 2487.          do
 2488.             ulwtop(1 + $I_L2487_1018) = -x1(1 + $I_L2487_1018, 2)
 2489.             rs(1 + $I_L2487_1018) = -x1(1 + $I_L2487_1018, 2 + kmax)
 2490.             dlwbot(1 + $I_L2487_1018) = fluxd(1 + $I_L2487_1018, 2 + kmax)
 2491.             $I_L2487_1018 = 1 + $I_L2487_1018
 2487.             if ( $I_L2487_1018 >= ncols ) exit
 2487.          enddo
 2487.       endif
 2493.       if ( kmax > 0 ) then
 2494.          if ( ncols > 0 ) then
 2493.             $I_L2493_1144 = 0
 2493.             do
 2494.                $I_L2494_1130 = 0
 2494.                do
 2493.                   $I_L2493_1162 = 0
 2493. !dir$ shortloop16
 2493. !dir$ blocking_size( 2, 2 )
 2493.                   do
 2494.                      $I_L2494_1020 = 0
 2494. !dir$ ivdep
 2494. !dir$ blocking_size( 256, 256 )
 2494.                      do
 2495.                         atl(1 + $I_L2494_1020 + 256 * $I_L2494_1130, 1 + $I_L2493_1162 + 2 * $I_L2493_1144) = ( 9.7706879361914262e-5 * 1.0/dp(1 + $I_L2494_1020 + 256 * $I_L2494_1130, 3 + $I_L2493_1162 + 2 * $I_L2493_1144) * ( x1(1 + $I_L2494_1020 + 256 * $I_L2494_1130, 2 + $I_L2493_1162 + 2 * $I_L2493_1144) + -x1(1 + $I_L2494_1020 + 256 * $I_L2494_1130, 3 + $I_L2493_1162 + 2 * $I_L2493_1144) ) )
 2494.                         $I_L2494_1020 = 1 + $I_L2494_1020
 2494.                         if ( $I_L2494_1020 >= min( ncols, 256 + 256 * $I_L2494_1130 ) + -256 * $I_L2494_1130 ) exit
 2494.                      enddo
 2493.                      $I_L2493_1162 = 1 + $I_L2493_1162
 2493.                      if ( $I_L2493_1162 >= min( kmax, 2 + 2 * $I_L2493_1144 ) + -2 * $I_L2493_1144 ) exit
 2493.                   enddo
 2494.                   $I_L2494_1130 = 1 + $I_L2494_1130
 2496.                   if ( $I_L2494_1130 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2496.                enddo
 2493.                $I_L2493_1144 = 1 + $I_L2493_1144
 2493.                if ( $I_L2493_1144 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
 2493.             enddo
 2493.          endif
 2493.       endif
 1724.       _free( t$108 )
 2499.       return
 2499.       end
 2499.       
 2524.       
 2524.       subroutine cloudy( ncols, kmax, scosc, cmuc, csmcld, dscld, rvbc, rvdc, rnbc, rndc, agvcd, agncd, rsvcd, rsncd, sc, rco, rcg, taut, rc2, tr1, tr2, tr3, ta, wa, oa, e0, pu, ozcd, swale, swil, css, acld, dpc, swilc, ccu, tauc, litd, sqrt3, gg, ggp, ggsq, np, lmp1, nsol, ncld, nclmp1, ncldnp, dooz )
 2524.       t$21 = ncols
 2589.       t$223 = _zla( 0, ncols )
 2524.       t$22 = ( ncols + ncols * kmax )
 2609.       t$224 = _zla( 0, ( ncols + ncols * kmax ) )
 2524.       t$23 = ( ncols * kmax + 2 * ncols )
 2613.       t$225 = _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2652.       t$228 = 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2655.       t$229 = 8 * ( 7 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2655.       t$231 = t$229 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2656.       t$232 = 8 * ( 7 + t$229 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2656.       t$234 = t$232 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2660.       t$235 = 8 * ( 7 + t$232 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2660.       t$237 = t$235 + 8 * _zla( 0, ncols )
 2659.       t$238 = 8 * ( 7 + t$235 + 8 * _zla( 0, ncols ) ) / 8
 2659.       t$240 = t$238 + 8 * _zla( 0, ncols )
 2643.       t$241 = 8 * ( 7 + t$238 + 8 * _zla( 0, ncols ) ) / 8
 2643.       t$243 = t$241 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2648.       t$244 = 8 * ( 7 + t$241 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2648.       t$246 = t$244 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2653.       t$247 = 8 * ( 7 + t$244 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2653.       t$249 = t$247 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2654.       t$250 = 8 * ( 7 + t$247 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2654.       t$252 = t$250 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2645.       t$253 = 8 * ( 7 + t$250 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2645.       t$255 = t$253 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2644.       t$256 = 8 * ( 7 + t$253 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2644.       t$258 = t$256 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2639.       t$259 = 8 * ( 7 + t$256 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2639.       t$261 = t$259 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2649.       t$262 = 8 * ( 7 + t$259 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2649.       t$264 = t$262 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2647.       t$265 = 8 * ( 7 + t$262 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2647.       t$267 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2524.       t$24 = lmp1
 2671.       t$268 = _zla( 0, lmp1 )
 2671.       t$270 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, lmp1 )
 2524.       t$25 = np
 2672.       t$271 = _zla( 0, np )
 2672.       t$273 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, lmp1 ) + 4 * _zla( 0, np )
 2673.       t$275 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, np ) + 8 * _zla( 0, lmp1 )
 2674.       t$277 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, np ) + 12 * _zla( 0, lmp1 )
 2675.       t$279 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 12 * _zla( 0, lmp1 ) + 8 * _zla( 0, np )
 2676.       t$281 = t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 8 * _zla( 0, np ) + 16 * _zla( 0, lmp1 )
 2661.       t$282 = 8 * ( 7 + t$265 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 8 * _zla( 0, np ) + 16 * _zla( 0, lmp1 ) ) / 8
 2661.       t$284 = t$282 + 8 * _zla( 0, ncols )
 2657.       t$285 = 8 * ( 7 + t$282 + 8 * _zla( 0, ncols ) ) / 8
 2657.       t$287 = t$285 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2651.       t$288 = 8 * ( 7 + t$285 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2651.       t$290 = t$288 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2650.       t$291 = 8 * ( 7 + t$288 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 2650.       t$293 = t$291 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2640.       t$294 = 8 * ( 7 + t$291 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2640.       t$296 = t$294 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2641.       t$297 = 8 * ( 7 + t$294 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2641.       t$299 = t$297 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2642.       t$300 = 8 * ( 7 + t$297 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2642.       t$302 = t$300 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2638.       t$303 = 8 * ( 7 + t$300 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 2638.       t$305 = t$303 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 2524.       t$226 = int( _alloc( t$303 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ), 8 )
 2652.       t$227 = t$226
 2655.       t$230 = t$229 + t$226
 2656.       t$233 = t$232 + t$226
 2660.       t$236 = t$235 + t$226
 2659.       t$239 = t$238 + t$226
 2643.       t$242 = t$241 + t$226
 2648.       t$245 = t$244 + t$226
 2653.       t$248 = t$247 + t$226
 2654.       t$251 = t$250 + t$226
 2645.       t$254 = t$253 + t$226
 2644.       t$257 = t$256 + t$226
 2639.       t$260 = t$259 + t$226
 2649.       t$263 = t$262 + t$226
 2647.       t$266 = t$265 + t$226
 2671.       t$269 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 2672.       t$272 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, lmp1 )
 2673.       t$274 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, lmp1 ) + 4 * _zla( 0, np )
 2674.       t$276 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, np ) + 8 * _zla( 0, lmp1 )
 2675.       t$278 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 4 * _zla( 0, np ) + 12 * _zla( 0, lmp1 )
 2676.       t$280 = t$265 + t$226 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) + 12 * _zla( 0, lmp1 ) + 8 * _zla( 0, np )
 2661.       t$283 = t$282 + t$226
 2657.       t$286 = t$285 + t$226
 2651.       t$289 = t$288 + t$226
 2650.       t$292 = t$291 + t$226
 2640.       t$295 = t$294 + t$226
 2641.       t$298 = t$297 + t$226
 2642.       t$301 = t$300 + t$226
 2638.       t$304 = t$303 + t$226
 2685.       $ggpp1_S30 = 1.0 + ggp
 2686.       $ggpm1_S31 = -1.0 + ggp
 2687.       $gsqm1_S28 = 1.0 + -ggsq
 2689.       lp = lmp1 * ncld
 2690.       if ( ncld > 0 ) then
 2690.          $I_L2690_452 = 0
 2690. !dir$ ivdep
 2690. !dir$ loop_info (automatic) cache_nt( rvnbc, tr1 )
 2690.          do
 2691.             dn(1 + $I_L2690_452) = 0.0
 2692.             tr1(1 + $I_L2690_452) = 0.0
 2693.             rvnbc(1 + $I_L2690_452) = 0.0
 2694.             $I_L2690_452 = 1 + $I_L2690_452
 2690.             if ( $I_L2690_452 >= ncld ) exit
 2690.          enddo
 2690.       endif
 2698.       if ( dooz /= .false. ) then
 2700.          if ( lmp1 > 0 ) then
 2700.             $I_L2700_454 = 0
 2700. !dir$ ivdep
 2700. !dir$ loop_info (automatic) cache_nt( l1c, l0c, l1a )
 2700.             do
 2701.                l0a(1 + $I_L2700_454) = ( ncld * $I_L2700_454 )
 2702.                l1a(1 + $I_L2700_454) = ( ncld + ncld * $I_L2700_454 )
 2710.                l0c(1 + $I_L2700_454) = -( ncld * $I_L2700_454 ) + -2 * ncld + np * ncld
 2711.                l1c(1 + $I_L2700_454) = -ncld + -( ncld * $I_L2700_454 ) + np * ncld
 2703.                $I_L2700_454 = 1 + $I_L2700_454
 2700.                if ( $I_L2700_454 >= lmp1 ) exit
 2700.             enddo
 2700.          endif
 2704.          if ( -2 + np >= 0 ) then
 2704.             $I_L2704_456 = 0
 2704. !dir$ ivdep
 2704.             do
 2705.                l0b(2 + $I_L2704_456) = ( ncld * $I_L2704_456 )
 2706.                l1b(2 + $I_L2704_456) = ( ncld + ncld * $I_L2704_456 )
 2707.                $I_L2704_456 = 1 + $I_L2704_456
 2704.                if ( $I_L2704_456 >= -1 + np ) exit
 2704.             enddo
 2714.             if ( ncld > 0 ) then
 2713.                $I_L2713_556 = 0
 2713. !dir$ loop_info (automatic) cache_nt( l1b, l0b )
 2713.                do
 2714.                   $SCA_l1b_I0 = l1b(2 + $I_L2713_556)
 2714.                   $SCA_l0b_I1 = l0b(2 + $I_L2713_556)
 2714.                   $I_L2714_460 = 0
 2714. !dir$ ivdep
 2714.                   do
 2715.                      w(1 + $SCA_l0b_I1 + $I_L2714_460) = csmcld(1 + $I_L2714_460) * ozcd(1 + $SCA_l1b_I0 + $I_L2714_460)
 2716.                      $I_L2714_460 = 1 + $I_L2714_460
 2714.                      if ( $I_L2714_460 >= ncld ) exit
 2714.                   enddo
 2717.                   $I_L2713_556 = 1 + $I_L2713_556
 2716.                   if ( $I_L2713_556 >= -1 + np ) exit
 2716.                enddo
 2716.             endif
 2716.          endif
 2723.          if ( nclmp1 > 0 ) then
 2723.             $I_L2723_462 = 0
 2723. !dir$ ivdep
 2723.             do
 2724.                $e0_WR0_R0 = 103.63 * w(1 + $I_L2723_462)
 2726.                $vp_WR0_R1 = 1.0 + 138.56999999999999 * w(1 + $I_L2723_462)
 2726.                vp(1 + $I_L2723_462) = $vp_WR0_R1
 2727.                $cm_WR0_R2 = _exp3( log( abs( $vp_WR0_R1 ) ), $vp_WR0_R1, 8.0500000000000005e-1 )
 2727.                cm(1 + $I_L2723_462) = $cm_WR0_R2
 2725.                $e0_WR0_R0 = $e0_WR0_R0 * $e0_WR0_R0 * $e0_WR0_R0
 2725.                e0(1 + $I_L2723_462) = $e0_WR0_R0
 2728.                dn(1 + ncld + $I_L2723_462) = ( 6.5799999999999997e-2 * w(1 + $I_L2723_462) * 1.0/( 1.0 + $e0_WR0_R0 ) ) + ( 1.0817300000000001 * w(1 + $I_L2723_462) * 1.0/$cm_WR0_R2 ) + ( 2.1180000000000001e-2 * w(1 + $I_L2723_462) * 1.0/( 1.0 + 3.2299999999999999e-4 * w(1 + $I_L2723_462) * w(1 + $I_L2723_462) + 4.2000000000000003e-2 * w(1 + $I_L2723_462) ) )
 2734.                $I_L2723_462 = 1 + $I_L2723_462
 2723.                if ( $I_L2723_462 >= nclmp1 ) exit
 2723.             enddo
 2742.             $I_L2742_464 = 0
 2742. !dir$ ivdep
 2742.             do
 2743.                acld(1 + $I_L2742_464) = dn(1 + ncld + $I_L2742_464) + -dn(1 + $I_L2742_464)
 2744.                $I_L2742_464 = 1 + $I_L2742_464
 2742.                if ( $I_L2742_464 >= nclmp1 ) exit
 2742.             enddo
 2742.          endif
 2746.          if ( lmp1 > 0 ) then
 2747.             if ( ncld > 0 ) then
 2746.                $I_L2746_558 = 0
 2746.                do
 2747.                   $SCA_l0a_I2 = l0a(1 + $I_L2746_558)
 2747.                   $I_L2747_466 = 0
 2747. !dir$ ivdep
 2747.                   do
 2748.                      acld(1 + $SCA_l0a_I2 + $I_L2747_466) = acld(1 + $SCA_l0a_I2 + $I_L2747_466) * scosc(1 + $I_L2747_466)
 2749.                      $I_L2747_466 = 1 + $I_L2747_466
 2747.                      if ( $I_L2747_466 >= ncld ) exit
 2747.                   enddo
 2750.                   $I_L2746_558 = 1 + $I_L2746_558
 2749.                   if ( $I_L2746_558 >= lmp1 ) exit
 2749.                enddo
 2749.             endif
 2749.          endif
 2820.          if ( ncld > 0 ) then
 2820.             $I_L2820_474 = 0
 2820. !dir$ ivdep
 2820. !dir$ loop_info (automatic) cache_nt( csmcld )
 2820.             do
 2821.                up(1 + $I_L2820_474 + lmp1 * ncld) = dn(1 + $I_L2820_474 + lmp1 * ncld)
 2822.                w(1 + $I_L2820_474 + lmp1 * ncld) = ozcd(1 + $I_L2820_474 + lmp1 * ncld) * ( 1.8999999999999999 + csmcld(1 + $I_L2820_474) )
 2823.                $I_L2820_474 = 1 + $I_L2820_474
 2820.                if ( $I_L2820_474 >= ncld ) exit
 2820.             enddo
 2820.          endif
 2824.          if ( nclmp1 > 0 ) then
 2824.             $I_L2824_476 = 0
 2824. !dir$ ivdep
 2824. !dir$ loop_info (automatic) cache_nt( ozcd )
 2824.             do
 2825.                w(1 + $I_L2824_476) = 1.8999999999999999 * ozcd(1 + $I_L2824_476)
 2826.                $I_L2824_476 = 1 + $I_L2824_476
 2824.                if ( $I_L2824_476 >= nclmp1 ) exit
 2824.             enddo
 2824.          endif
 2828.          if ( lmp1 > 0 ) then
 2830.             if ( ncld > 0 ) then
 2828.                $I_L2828_560 = 0
 2828.                do
 2830.                   $SCA_l0a_I3 = l0a(1 + $I_L2828_560)
 2830.                   $CSVL_V0 = cvmg( ( $SCA_l0a_I3 + -( lmp1 * ncld ) ), 4, and( ( $SCA_l0a_I3 + -( lmp1 * ncld ) ) <= -1 + ncld, and( ( $SCA_l0a_I3 + -( lmp1 * ncld ) ) <= 4, $SCA_l0a_I3 + -( lmp1 * ncld ) > 0 ) ) )
 2830.                   if ( $CSVL_V0 <= 4 ) then
 2830.                      $I_L2830_595 = 0
 2830.                      do
 2831.                         w(1 + $SCA_l0a_I3 + $I_L2830_595) = w(1 + lp + $I_L2830_595) + -w(1 + $SCA_l0a_I3 + $I_L2830_595)
 2832.                         $I_L2830_595 = 1 + $I_L2830_595
 2830.                         if ( $I_L2830_595 >= ncld ) exit
 2830.                      enddo
 2830.                   else
 2830.                      $I_L2830_580 = 0
 2830. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 2830.                      do
 2831.                         w(1 + $SCA_l0a_I3 + $I_L2830_580) = w(1 + lp + $I_L2830_580) + -w(1 + $SCA_l0a_I3 + $I_L2830_580)
 2832.                         $I_L2830_580 = 1 + $I_L2830_580
 2830.                         if ( $I_L2830_580 >= ncld ) exit
 2830.                      enddo
 2830.                   endif
 2833.                   $I_L2828_560 = 1 + $I_L2828_560
 2832.                   if ( $I_L2828_560 >= lmp1 ) exit
 2832.                enddo
 2832.             endif
 2832.          endif
 2838.          if ( nclmp1 > 0 ) then
 2838.             $I_L2838_480 = 0
 2838. !dir$ ivdep
 2838. !dir$ loop_info (automatic) cache_nt( e0, cm, vp )
 2838.             do
 2839.                $e0_WR0_R3 = 103.63 * w(1 + $I_L2838_480)
 2841.                $vp_WR0_R4 = 1.0 + 138.56999999999999 * w(1 + $I_L2838_480)
 2841.                vp(1 + $I_L2838_480) = $vp_WR0_R4
 2842.                $cm_WR0_R5 = _exp3( log( abs( $vp_WR0_R4 ) ), $vp_WR0_R4, 8.0500000000000005e-1 )
 2842.                cm(1 + $I_L2838_480) = $cm_WR0_R5
 2840.                $e0_WR0_R3 = $e0_WR0_R3 * $e0_WR0_R3 * $e0_WR0_R3
 2840.                e0(1 + $I_L2838_480) = $e0_WR0_R3
 2843.                up(1 + $I_L2838_480) = ( 6.5799999999999997e-2 * w(1 + $I_L2838_480) * 1.0/( 1.0 + $e0_WR0_R3 ) ) + ( 1.0817300000000001 * w(1 + $I_L2838_480) * 1.0/$cm_WR0_R5 ) + ( 2.1180000000000001e-2 * w(1 + $I_L2838_480) * 1.0/( 1.0 + 3.2299999999999999e-4 * w(1 + $I_L2838_480) * w(1 + $I_L2838_480) + 4.2000000000000003e-2 * w(1 + $I_L2838_480) ) )
 2849.                $I_L2838_480 = 1 + $I_L2838_480
 2838.                if ( $I_L2838_480 >= nclmp1 ) exit
 2838.             enddo
 2858.             $I_L2858_482 = 0
 2858. !dir$ ivdep
 2858. !dir$ loop_info (automatic) cache_nt( up )
 2858.             do
 2859.                w(1 + $I_L2858_482) = up(1 + $I_L2858_482) + -up(1 + ncld + $I_L2858_482)
 2860.                $I_L2858_482 = 1 + $I_L2858_482
 2858.                if ( $I_L2858_482 >= nclmp1 ) exit
 2858.             enddo
 2858.          endif
 2861.          if ( lmp1 > 0 ) then
 2862.             if ( ncld > 0 ) then
 2861.                $I_L2861_562 = 0
 2861.                do
 2862.                   $SCA_l0a_I4 = l0a(1 + $I_L2861_562)
 2862.                   $I_L2862_484 = 0
 2862. !dir$ ivdep
 2862. !dir$ loop_info (automatic) cache_nt( w )
 2862.                   do
 2863.                      acld(1 + $SCA_l0a_I4 + $I_L2862_484) = acld(1 + $SCA_l0a_I4 + $I_L2862_484) + rco(1 + $I_L2862_484) * scosc(1 + $I_L2862_484) * w(1 + $SCA_l0a_I4 + $I_L2862_484)
 2865.                      $I_L2862_484 = 1 + $I_L2862_484
 2862.                      if ( $I_L2862_484 >= ncld ) exit
 2862.                   enddo
 2866.                   $I_L2861_562 = 1 + $I_L2861_562
 2865.                   if ( $I_L2861_562 >= lmp1 ) exit
 2865.                enddo
 2865.             endif
 2865.          endif
 2867.          $F_A33 = nclmp1
 2867.          if ( nclmp1 > 0 ) then
 2867.             $I_L2867_554 = 0
 2867. !dir$ ivdep
 2867. !dir$ loop_info (automatic) cache_nt( acld )
 2867.             do
 2867.                acld(1 + $I_L2867_554) = max( 0.0, acld(1 + $I_L2867_554) )
 2867.                $I_L2867_554 = 1 + $I_L2867_554
 2867.                if ( $I_L2867_554 >= $F_A33 ) exit
 2867.             enddo
 2867.          endif
 2751.       else if ( ncld > 0 ) then
 2752.          $I_L2752_458 = 0
 2752. !dir$ ivdep
 2752.          do
 2753.             dn(1 + $I_L2752_458 + lmp1 * ncld) = 0.0
 2754.             $I_L2752_458 = 1 + $I_L2752_458
 2752.             if ( $I_L2752_458 >= ncld ) exit
 2752.          enddo
 2752.       endif
 2785.       if ( ncld > 0 ) then
 2785.          $I_L2785_468 = 0
 2785. !dir$ ivdep
 2785. !dir$ loop_info (automatic) cache_nt( dn, tr3, rsvcd, rvbc )
 2785.          do
 2786.             $sc_WR0_R6 = 5.0e-1 + -dn(1 + $I_L2785_468 + lmp1 * ncld)
 2786.             sc(1 + $I_L2785_468) = $sc_WR0_R6
 2787.             $taut_WR0_R7 = tr3(1 + $I_L2785_468) * $sc_WR0_R6 * scosc(1 + $I_L2785_468)
 2787.             taut(1 + $I_L2785_468) = $taut_WR0_R7
 2788.             avbc(1 + $I_L2785_468) = $taut_WR0_R7 * ( 1.0 + -rsvcd(1 + $I_L2785_468) )
 2789.             rvbc(litd(1 + $I_L2785_468)) = $taut_WR0_R7
 2790.             $I_L2785_468 = 1 + $I_L2785_468
 2785.             if ( $I_L2785_468 >= ncld ) exit
 2785.          enddo
 2791.          $I_L2791_470 = 0
 2791. !dir$ ivdep
 2791. !dir$ loop_info (automatic) cache_nt( avbc, litd, rcg, agvcd, rvdc, taut )
 2791.          do
 2792.             $sc_WR0_R8 = sc(1 + $I_L2791_470) * scosc(1 + $I_L2791_470) * ( 1.0 + -rcg(1 + $I_L2791_470) )
 2792.             sc(1 + $I_L2791_470) = $sc_WR0_R8
 2793.             $taut_WR0_R9 = ( ( $sc_WR0_R8 + -avbc(1 + $I_L2791_470) ) * 1.0/( 1.0 + -agvcd(1 + $I_L2791_470) ) )
 2793.             taut(1 + $I_L2791_470) = $taut_WR0_R9
 2795.             rvdc(litd(1 + $I_L2791_470)) = $taut_WR0_R9
 2796.             $I_L2791_470 = 1 + $I_L2791_470
 2791.             if ( $I_L2791_470 >= ncld ) exit
 2791.          enddo
 2797.          $I_L2797_472 = 0
 2797. !dir$ ivdep
 2797. !dir$ loop_info (automatic) cache_nt( tr2, rc2, rsncd, agncd, scosc, sc, rndc, rnbc )
 2797.          do
 2806.             $rnbc_WR0_R10 = 1.2139999999999999e-1 * scosc(1 + $I_L2797_472) * tr2(1 + $I_L2797_472)
 2806.             rnbc(1 + $I_L2797_472) = $rnbc_WR0_R10
 2807.             $anbc_WR0_R11 = $rnbc_WR0_R10 * ( 1.0 + -rsncd(1 + $I_L2797_472) )
 2808.             rndc(1 + $I_L2797_472) = ( ( -$anbc_WR0_R11 + 1.2139999999999999e-1 * scosc(1 + $I_L2797_472) * ( 1.0 + -rc2(1 + $I_L2797_472) ) ) * 1.0/( 1.0 + -agncd(1 + $I_L2797_472) ) )
 2810.             sc(1 + $I_L2797_472) = sc(1 + $I_L2797_472) + 1.2139999999999999e-1 * scosc(1 + $I_L2797_472) * ( 1.0 + -rc2(1 + $I_L2797_472) )
 2812.             $I_L2797_472 = 1 + $I_L2797_472
 2797.             if ( $I_L2797_472 >= ncld ) exit
 2797.          enddo
 2797.       endif
 2869.       if ( lmp1 > 0 ) then
 2870.          if ( ncld > 0 ) then
 2869.             $I_L2869_564 = 0
 2869. !dir$ loop_info (automatic) cache_nt( l0a )
 2869.             do
 2870.                $SCA_l0a_I5 = l0a(1 + $I_L2869_564)
 2870.                $I_L2870_486 = 0
 2870. !dir$ ivdep
 2870.                do
 2871.                   oa(1 + $SCA_l0a_I5 + $I_L2870_486) = cmuc(1 + $I_L2870_486)
 2872.                   $I_L2870_486 = 1 + $I_L2870_486
 2870.                   if ( $I_L2870_486 >= ncld ) exit
 2870.                enddo
 2873.                $I_L2869_564 = 1 + $I_L2869_564
 2872.                if ( $I_L2869_564 >= lmp1 ) exit
 2872.             enddo
 2872.          endif
 2872.       endif
 2874.       if ( nclmp1 > 0 ) then
 2874.          $I_L2874_488 = 0
 2874. !dir$ ivdep
 2874. !dir$ loop_info (automatic) cache_nt( oa, wa, ta )
 2874.          do
 2875.             $ta_WR0_R12 = 5.0e-1 + -( ggp * oa(1 + $I_L2874_488) )
 2875.             ta(1 + $I_L2874_488) = $ta_WR0_R12
 2876.             wa(1 + $I_L2874_488) = 1.0 + -$ta_WR0_R12
 2877.             $I_L2874_488 = 1 + $I_L2874_488
 2874.             if ( $I_L2874_488 >= nclmp1 ) exit
 2874.          enddo
 2874.       endif
 2883.       $I_L2883_578 = 0
 2883. !dir$ loop_info (automatic) cache_nt( xk, fk )
 2883.       do
 2889.          if ( nclmp1 > 0 ) then
 2889.             $SCA_xk_I6 = xk(1 + $I_L2883_578)
 2889.             $I_L2889_490 = 0
 2889. !dir$ ivdep
 2889.             do
 2890.                $ccu_WR0_R13 = tauc(1 + $I_L2889_490) + $SCA_xk_I6 * swilc(1 + $I_L2889_490)
 2890.                ccu(1 + $I_L2889_490) = $ccu_WR0_R13
 2891.                $cr_WR0_R14 = 9.8999999999999999e-1 * ( tauc(1 + $I_L2889_490) * 1.0/$ccu_WR0_R13 )
 2891.                cr(1 + $I_L2889_490) = $cr_WR0_R14
 2897.                vp(1 + $I_L2889_490) = 1.0 + -( gg * $cr_WR0_R14 )
 2898.                vm(1 + $I_L2889_490) = 1.0 + -$cr_WR0_R14
 2899.                $I_L2889_490 = 1 + $I_L2889_490
 2889.                if ( $I_L2889_490 >= nclmp1 ) exit
 2889.             enddo
 2910.             if ( ( 1 + $I_L2883_578 ) >= 4 ) then
 2900.                $I_L2900_492 = 0
 2900. !dir$ ivdep
 2900.                do
 2901.                   $vp_WR0_R15 = _sqrt( vp(1 + $I_L2900_492) )
 2902.                   $vm_WR0_R16 = _sqrt( vm(1 + $I_L2900_492) )
 2902.                   vm(1 + $I_L2900_492) = $vm_WR0_R16
 2903.                   u1(1 + $I_L2900_492) = ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 )
 2908.                   $dpc_WR0_R20 = sqrt3 * ccu(1 + $I_L2900_492) * $vp_WR0_R15 * $vm_WR0_R16
 2908.                   dpc(1 + $I_L2900_492) = $dpc_WR0_R20
 2911.                   $e2_WR0_R21 = _expn( ( max( -122.03700992868443, -$dpc_WR0_R20 ) ) )
 2911.                   e2(1 + $I_L2900_492) = $e2_WR0_R21
 2912.                   cm(1 + $I_L2900_492) = ( -( ( ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) * $e2_WR0_R21 * $e2_WR0_R21 ) + ( ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) )
 2913.                   pu(1 + $I_L2900_492) = ( ( 1.0 + -( $e2_WR0_R21 * $e2_WR0_R21 ) ) * ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) * ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * 1.0/( -( ( ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) * $e2_WR0_R21 * $e2_WR0_R21 ) + ( ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) ) )
 2915.                   css(1 + $I_L2900_492) = ( 4.0 * $e2_WR0_R21 * ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) * 1.0/( -( ( ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( -1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) * $e2_WR0_R21 * $e2_WR0_R21 ) + ( ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) * ( 1.0 + ( $vp_WR0_R15 * 1.0/$vm_WR0_R16 ) ) ) ) )
 2919.                   $vp_WR0_R15 = 1.0 + -( ggsq * cr(1 + $I_L2900_492) )
 2919.                   vp(1 + $I_L2900_492) = $vp_WR0_R15
 2920.                   ccu(1 + $I_L2900_492) = $vp_WR0_R15 * ccu(1 + $I_L2900_492)
 2921.                   cr(1 + $I_L2900_492) = ( $gsqm1_S28 * cr(1 + $I_L2900_492) * 1.0/$vp_WR0_R15 )
 2922.                   $I_L2900_492 = 1 + $I_L2900_492
 2910.                   if ( $I_L2900_492 >= nclmp1 ) exit
 2910.                enddo
 2910.             else
 2900.                $I_L2900_548 = 0
 2900. !dir$ ivdep
 2900.                do
 2901.                   $vp_WR0_R22 = _sqrt( vp(1 + $I_L2900_548) )
 2902.                   $vm_WR0_R23 = _sqrt( vm(1 + $I_L2900_548) )
 2902.                   vm(1 + $I_L2900_548) = $vm_WR0_R23
 2903.                   u1(1 + $I_L2900_548) = ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 )
 2908.                   $dpc_WR0_R26 = sqrt3 * ccu(1 + $I_L2900_548) * $vp_WR0_R22 * $vm_WR0_R23
 2908.                   dpc(1 + $I_L2900_548) = $dpc_WR0_R26
 2911.                   $e2_WR0_R27 = _expn( -$dpc_WR0_R26 )
 2911.                   e2(1 + $I_L2900_548) = $e2_WR0_R27
 2912.                   cm(1 + $I_L2900_548) = ( -( ( ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) * $e2_WR0_R27 * $e2_WR0_R27 ) + ( ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) )
 2913.                   pu(1 + $I_L2900_548) = ( ( 1.0 + -( $e2_WR0_R27 * $e2_WR0_R27 ) ) * 1.0/( -( ( ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) * $e2_WR0_R27 * $e2_WR0_R27 ) + ( ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) ) * ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) * ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) )
 2915.                   css(1 + $I_L2900_548) = ( 4.0 * $e2_WR0_R27 * ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) * 1.0/( -( ( ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( -1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) * $e2_WR0_R27 * $e2_WR0_R27 ) + ( ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) * ( 1.0 + ( $vp_WR0_R22 * 1.0/$vm_WR0_R23 ) ) ) ) )
 2919.                   $vp_WR0_R22 = 1.0 + -( ggsq * cr(1 + $I_L2900_548) )
 2919.                   vp(1 + $I_L2900_548) = $vp_WR0_R22
 2920.                   ccu(1 + $I_L2900_548) = $vp_WR0_R22 * ccu(1 + $I_L2900_548)
 2921.                   cr(1 + $I_L2900_548) = ( $gsqm1_S28 * cr(1 + $I_L2900_548) * 1.0/$vp_WR0_R22 )
 2922.                   $I_L2900_548 = 1 + $I_L2900_548
 2910.                   if ( $I_L2900_548 >= nclmp1 ) exit
 2910.                enddo
 2910.             endif
 2953.             $I_L2953_504 = 0
 2953. !dir$ ivdep
 2953.             do
 2954.                $swil_WR0_R28 = 1.75 + -( $ggpp1_S30 * cr(1 + $I_L2953_504) )
 2954.                swil(1 + $I_L2953_504) = $swil_WR0_R28
 2955.                $swale_WR0_R29 = -2.5e-1 + -( $ggpm1_S31 * cr(1 + $I_L2953_504) )
 2955.                swale(1 + $I_L2953_504) = $swale_WR0_R29
 2956.                ak(1 + $I_L2953_504) = -( $swale_WR0_R29 * $swale_WR0_R29 ) + $swil_WR0_R28 * $swil_WR0_R28
 2958.                $I_L2953_504 = 1 + $I_L2953_504
 2953.                if ( $I_L2953_504 >= nclmp1 ) exit
 2953.             enddo
 2959.             $I_L2959_506 = 0
 2959. !dir$ ivdep
 2959.             do
 2961.                $alf1_WR0_R30 = ta(1 + $I_L2959_506) * swale(1 + $I_L2959_506) + wa(1 + $I_L2959_506) * swil(1 + $I_L2959_506)
 2963.                $alf2_WR0_R31 = swale(1 + $I_L2959_506) * wa(1 + $I_L2959_506) + ta(1 + $I_L2959_506) * swil(1 + $I_L2959_506)
 2960.                $ak_WR0_R32 = _sqrt( ak(1 + $I_L2959_506) )
 2960.                ak(1 + $I_L2959_506) = $ak_WR0_R32
 2965.                vp(1 + $I_L2959_506) = 1.0 + -( $ak_WR0_R32 * oa(1 + $I_L2959_506) )
 2966.                vm(1 + $I_L2959_506) = 1.0 + $ak_WR0_R32 * oa(1 + $I_L2959_506)
 2967.                ul(1 + $I_L2959_506) = ta(1 + $I_L2959_506) + -( $alf2_WR0_R31 * oa(1 + $I_L2959_506) )
 2968.                u1(1 + $I_L2959_506) = wa(1 + $I_L2959_506) + $alf1_WR0_R30 * oa(1 + $I_L2959_506)
 2969.                cm(1 + $I_L2959_506) = $alf2_WR0_R31 + $ak_WR0_R32 * ta(1 + $I_L2959_506)
 2970.                dl(1 + $I_L2959_506) = $alf2_WR0_R31 + -( $ak_WR0_R32 * ta(1 + $I_L2959_506) )
 2971.                e2(1 + $I_L2959_506) = $alf1_WR0_R30 + -( $ak_WR0_R32 * wa(1 + $I_L2959_506) )
 2972.                f2(1 + $I_L2959_506) = $alf1_WR0_R30 + $ak_WR0_R32 * wa(1 + $I_L2959_506)
 2973.                den(1 + $I_L2959_506) = 1.0 + -( oa(1 + $I_L2959_506) * oa(1 + $I_L2959_506) * $ak_WR0_R32 * $ak_WR0_R32 )
 2975.                $I_L2959_506 = 1 + $I_L2959_506
 2959.                if ( $I_L2959_506 >= nclmp1 ) exit
 2959.             enddo
 2959.          endif
 2926.          if ( ncld > 0 ) then
 2926.             $SCA_fk_I7 = fk(1 + $I_L2883_578)
 2926.             $I_L2926_494 = 0
 2926. !dir$ ivdep
 2926.             do
 2927.                sol(1 + $I_L2926_494) = $SCA_fk_I7 * scosc(1 + $I_L2926_494)
 2928.                $I_L2926_494 = 1 + $I_L2926_494
 2926.                if ( $I_L2926_494 >= ncld ) exit
 2926.             enddo
 2926.          endif
 2929.          if ( lmp1 > 0 ) then
 2930.             if ( ncld > 0 ) then
 2929.                $I_L2929_566 = 0
 2929.                do
 2930.                   $SCA_l0a_I8 = l0a(1 + $I_L2929_566)
 2930.                   $I_L2930_496 = 0
 2930. !dir$ ivdep
 2930.                   do
 2931.                      dpc(1 + $SCA_l0a_I8 + $I_L2930_496) = csmcld(1 + $I_L2930_496) * ccu(1 + $SCA_l0a_I8 + $I_L2930_496)
 2932.                      $I_L2930_496 = 1 + $I_L2930_496
 2930.                      if ( $I_L2930_496 >= ncld ) exit
 2930.                   enddo
 2933.                   $I_L2929_566 = 1 + $I_L2929_566
 2932.                   if ( $I_L2929_566 >= lmp1 ) exit
 2932.                enddo
 2932.             endif
 2932.          endif
 2934.          if ( nclmp1 > 0 ) then
 2936.             if ( ( 1 + $I_L2883_578 ) >= 4 ) then
 2934.                $I_L2934_498 = 0
 2934. !dir$ ivdep
 2934.                do
 2935.                   $e0_WR0_R33 = -dpc(1 + $I_L2934_498)
 2936.                   $e0_WR0_R33 = max( -122.03700992868443, $e0_WR0_R33 )
 2937.                   $e0_WR0_R33 = _expn( $e0_WR0_R33 )
 2937.                   e0(1 + $I_L2934_498) = $e0_WR0_R33
 2938.                   $I_L2934_498 = 1 + $I_L2934_498
 2936.                   if ( $I_L2934_498 >= nclmp1 ) exit
 2936.                enddo
 2936.             else
 2934.                $I_L2934_550 = 0
 2934. !dir$ ivdep
 2934.                do
 2935.                   $e0_WR0_R34 = -dpc(1 + $I_L2934_550)
 2937.                   $e0_WR0_R34 = _expn( $e0_WR0_R34 )
 2937.                   e0(1 + $I_L2934_550) = $e0_WR0_R34
 2938.                   $I_L2934_550 = 1 + $I_L2934_550
 2936.                   if ( $I_L2934_550 >= nclmp1 ) exit
 2936.                enddo
 2936.             endif
 2936.          endif
 2943.          if ( lmp1 > 0 ) then
 2945.             if ( ncld > 0 ) then
 2943.                $I_L2943_568 = 0
 2943.                do
 2945.                   $SCA_l0a_I9 = l0a(1 + $I_L2943_568)
 2945.                   $SCA_l1a_I10 = l1a(1 + $I_L2943_568)
 2945.                   $CSVL_V1 = cvmg( ( $SCA_l1a_I10 + -$SCA_l0a_I9 ), 4, and( $SCA_l1a_I10 + -$SCA_l0a_I9 > 0, and( ( $SCA_l1a_I10 + -$SCA_l0a_I9 ) <= 4, ( $SCA_l1a_I10 + -$SCA_l0a_I9 ) <= -1 + ncld ) ) )
 2945.                   if ( $CSVL_V1 <= 4 ) then
 2945.                      $I_L2945_597 = 0
 2945.                      do
 2946.                         sol(1 + $SCA_l1a_I10 + $I_L2945_597) = sol(1 + $SCA_l0a_I9 + $I_L2945_597) * e0(1 + $SCA_l0a_I9 + $I_L2945_597)
 2947.                         $I_L2945_597 = 1 + $I_L2945_597
 2945.                         if ( $I_L2945_597 >= ncld ) exit
 2945.                      enddo
 2945.                   else
 2945.                      $I_L2945_582 = 0
 2945. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 4
 2945.                      do
 2946.                         sol(1 + $SCA_l1a_I10 + $I_L2945_582) = sol(1 + $SCA_l0a_I9 + $I_L2945_582) * e0(1 + $SCA_l0a_I9 + $I_L2945_582)
 2947.                         $I_L2945_582 = 1 + $I_L2945_582
 2945.                         if ( $I_L2945_582 >= ncld ) exit
 2945.                      enddo
 2945.                   endif
 2948.                   $I_L2943_568 = 1 + $I_L2943_568
 2947.                   if ( $I_L2943_568 >= lmp1 ) exit
 2947.                enddo
 2947.             endif
 2947.          endif
 2949.          if ( ncld > 0 ) then
 2949.             $I_L2949_502 = 0
 2949. !dir$ ivdep
 2949.             do
 2950.                rvnbc(1 + $I_L2949_502) = rvnbc(1 + $I_L2949_502) + sol(1 + $I_L2949_502 + lmp1 * ncld)
 2951.                $I_L2949_502 = 1 + $I_L2949_502
 2949.                if ( $I_L2949_502 >= ncld ) exit
 2949.             enddo
 2949.          endif
 2976.          if ( nclmp1 > 0 ) then
 2980.             if ( ( 1 + $I_L2883_578 ) >= 4 ) then
 2976.                $I_L2976_508 = 0
 2976. !dir$ ivdep
 2976.                do
 2978.                   $dpc_WR0_R35 = ak(1 + $I_L2976_508) * ccu(1 + $I_L2976_508)
 2982.                   dpc(1 + $I_L2976_508) = ( 2.0 * $dpc_WR0_R35 )
 2977.                   $den_WR0_R38 = max( 9.9999999999999995e-7, den(1 + $I_L2976_508) )
 2977.                   den(1 + $I_L2976_508) = $den_WR0_R38
 2985.                   $db_WR0_R37 = _expn( ( max( -122.03700992868443, -( 2.0 * $dpc_WR0_R35 ) ) ) )
 2985.                   db(1 + $I_L2976_508) = $db_WR0_R37
 2986.                   $den_WR0_R38 = $den_WR0_R38 * ( ak(1 + $I_L2976_508) + swil(1 + $I_L2976_508) + $db_WR0_R37 * ( ak(1 + $I_L2976_508) + -swil(1 + $I_L2976_508) ) )
 2986.                   den(1 + $I_L2976_508) = $den_WR0_R38
 2981.                   $da_WR0_R36 = _expn( ( max( -122.03700992868443, -$dpc_WR0_R35 ) ) )
 2991.                   $up_WR0_R39 = ( cr(1 + $I_L2976_508) * 1.0/$den_WR0_R38 * ( -( $db_WR0_R37 * dl(1 + $I_L2976_508) * vm(1 + $I_L2976_508) ) + -2.0 * $da_WR0_R36 * ak(1 + $I_L2976_508) * ul(1 + $I_L2976_508) * e0(1 + $I_L2976_508) + cm(1 + $I_L2976_508) * vp(1 + $I_L2976_508) ) )
 2996.                   $dn_WR0_R40 = -( cr(1 + $I_L2976_508) * 1.0/$den_WR0_R38 * ( -( $db_WR0_R37 * e0(1 + $I_L2976_508) * vp(1 + $I_L2976_508) * e2(1 + $I_L2976_508) ) + -2.0 * $da_WR0_R36 * ak(1 + $I_L2976_508) * u1(1 + $I_L2976_508) + e0(1 + $I_L2976_508) * vm(1 + $I_L2976_508) * f2(1 + $I_L2976_508) ) )
 2995.                   $up_WR0_R39 = $up_WR0_R39 * sol(1 + $I_L2976_508)
 2995.                   up(1 + $I_L2976_508) = $up_WR0_R39
 3001.                   $dn_WR0_R40 = $dn_WR0_R40 * sol(1 + $I_L2976_508)
 3001.                   dn(1 + ncld + $I_L2976_508) = $dn_WR0_R40
 3002.                   $I_L2976_508 = 1 + $I_L2976_508
 2984.                   if ( $I_L2976_508 >= nclmp1 ) exit
 2984.                enddo
 2984.             else
 2976.                $I_L2976_552 = 0
 2976. !dir$ ivdep
 2976.                do
 2978.                   $dpc_WR0_R41 = ak(1 + $I_L2976_552) * ccu(1 + $I_L2976_552)
 2982.                   dpc(1 + $I_L2976_552) = ( 2.0 * $dpc_WR0_R41 )
 2985.                   $db_WR0_R43 = _expn( -( 2.0 * $dpc_WR0_R41 ) )
 2985.                   db(1 + $I_L2976_552) = $db_WR0_R43
 2977.                   $den_WR0_R44 = max( 9.9999999999999995e-7, den(1 + $I_L2976_552) )
 2977.                   den(1 + $I_L2976_552) = $den_WR0_R44
 2986.                   $den_WR0_R44 = $den_WR0_R44 * ( ak(1 + $I_L2976_552) + swil(1 + $I_L2976_552) + $db_WR0_R43 * ( ak(1 + $I_L2976_552) + -swil(1 + $I_L2976_552) ) )
 2986.                   den(1 + $I_L2976_552) = $den_WR0_R44
 2981.                   $da_WR0_R42 = _expn( -$dpc_WR0_R41 )
 2991.                   $up_WR0_R45 = ( cr(1 + $I_L2976_552) * 1.0/$den_WR0_R44 * ( -( $db_WR0_R43 * dl(1 + $I_L2976_552) * vm(1 + $I_L2976_552) ) + -2.0 * $da_WR0_R42 * ak(1 + $I_L2976_552) * ul(1 + $I_L2976_552) * e0(1 + $I_L2976_552) + cm(1 + $I_L2976_552) * vp(1 + $I_L2976_552) ) )
 2996.                   $dn_WR0_R46 = -( cr(1 + $I_L2976_552) * 1.0/$den_WR0_R44 * ( -( $db_WR0_R43 * e0(1 + $I_L2976_552) * vp(1 + $I_L2976_552) * e2(1 + $I_L2976_552) ) + -2.0 * $da_WR0_R42 * ak(1 + $I_L2976_552) * u1(1 + $I_L2976_552) + e0(1 + $I_L2976_552) * vm(1 + $I_L2976_552) * f2(1 + $I_L2976_552) ) )
 2995.                   $up_WR0_R45 = $up_WR0_R45 * sol(1 + $I_L2976_552)
 2995.                   up(1 + $I_L2976_552) = $up_WR0_R45
 3001.                   $dn_WR0_R46 = $dn_WR0_R46 * sol(1 + $I_L2976_552)
 3001.                   dn(1 + ncld + $I_L2976_552) = $dn_WR0_R46
 3002.                   $I_L2976_552 = 1 + $I_L2976_552
 2984.                   if ( $I_L2976_552 >= nclmp1 ) exit
 2984.                enddo
 2984.             endif
 2984.          endif
 3006.          if ( ncld > 0 ) then
 3006.             $CSVL_V2 = cvmg( -( lmp1 * ncld ), 2, and( lmp1 * ncld < 0, and( -( lmp1 * ncld ) <= 2, -( lmp1 * ncld ) <= -1 + ncld ) ) )
 3006.             if ( $CSVL_V2 <= 4 ) then
 3006.                $I_L3006_599 = 0
 3006.                do
 3007.                   up(1 + $I_L3006_599 + lmp1 * ncld) = rsncd(1 + $I_L3006_599) * sol(1 + $I_L3006_599 + lmp1 * ncld)
 3008.                   pu(1 + $I_L3006_599 + lmp1 * ncld) = agncd(1 + $I_L3006_599)
 3009.                   dn(1 + $I_L3006_599) = 0.0
 3010.                   cr(1 + $I_L3006_599) = 0.0
 3011.                   cm(1 + $I_L3006_599) = 1.0
 3012.                   vp(1 + $I_L3006_599) = 0.0
 3013.                   vm(1 + $I_L3006_599) = up(1 + $I_L3006_599)
 3014.                   $I_L3006_599 = 1 + $I_L3006_599
 3006.                   if ( $I_L3006_599 >= ncld ) exit
 3006.                enddo
 3006.             else
 3006.                $I_L3006_584 = 0
 3006. !dir$ ivdep safevl = $CSVL_V2 !   Guaranteed minimum :: 4
 3006.                do
 3007.                   up(1 + $I_L3006_584 + lmp1 * ncld) = rsncd(1 + $I_L3006_584) * sol(1 + $I_L3006_584 + lmp1 * ncld)
 3008.                   pu(1 + $I_L3006_584 + lmp1 * ncld) = agncd(1 + $I_L3006_584)
 3009.                   dn(1 + $I_L3006_584) = 0.0
 3010.                   cr(1 + $I_L3006_584) = 0.0
 3011.                   cm(1 + $I_L3006_584) = 1.0
 3012.                   vp(1 + $I_L3006_584) = 0.0
 3013.                   vm(1 + $I_L3006_584) = up(1 + $I_L3006_584)
 3014.                   $I_L3006_584 = 1 + $I_L3006_584
 3006.                   if ( $I_L3006_584 >= ncld ) exit
 3006.                enddo
 3006.             endif
 3006.          endif
 3018.          if ( ncldnp > 0 ) then
 3018.             $I_L3018_512 = 0
 3018. !dir$ ivdep
 3018.             do
 3019.                up(1 + $I_L3018_512) = max( 0.0, up(1 + $I_L3018_512) )
 3020.                dn(1 + $I_L3018_512) = max( 0.0, dn(1 + $I_L3018_512) )
 3021.                sol(1 + $I_L3018_512) = max( 0.0, sol(1 + $I_L3018_512) )
 3022.                $I_L3018_512 = 1 + $I_L3018_512
 3018.                if ( $I_L3018_512 >= ncldnp ) exit
 3018.             enddo
 3018.          endif
 3023.          if ( nclmp1 > 0 ) then
 3023.             $I_L3023_514 = 0
 3023. !dir$ ivdep
 3023.             do
 3025.                $css_WR0_R47 = max( 0.0, css(1 + $I_L3023_514) )
 3025.                css(1 + $I_L3023_514) = $css_WR0_R47
 3033.                e0(1 + $I_L3023_514) = $css_WR0_R47 * $css_WR0_R47
 3024.                pu(1 + $I_L3023_514) = max( 0.0, pu(1 + $I_L3023_514) )
 3026.                $I_L3023_514 = 1 + $I_L3023_514
 3023.                if ( $I_L3023_514 >= nclmp1 ) exit
 3023.             enddo
 3023.          endif
 3035.          if ( lmp1 > 0 ) then
 3037.             if ( ncld > 0 ) then
 3035.                $I_L3035_570 = 0
 3035.                do
 3037.                   $SCA_l0a_I11 = l0a(1 + $I_L3035_570)
 3037.                   $SCA_l1a_I12 = l1a(1 + $I_L3035_570)
 3037.                   $CSVL_V3 = cvmg( ( $SCA_l1a_I12 + -$SCA_l0a_I11 ), 4, and( $SCA_l1a_I12 + -$SCA_l0a_I11 > 0, and( ( $SCA_l1a_I12 + -$SCA_l0a_I11 ) <= 4, ( $SCA_l1a_I12 + -$SCA_l0a_I11 ) <= -1 + ncld ) ) )
 3037.                   if ( $CSVL_V3 <= 4 ) then
 3037.                      $I_L3037_601 = 0
 3037.                      do
 3038.                         cr(1 + $SCA_l1a_I12 + $I_L3037_601) = pu(1 + $SCA_l0a_I11 + $I_L3037_601) + e0(1 + $SCA_l0a_I11 + $I_L3037_601) * cr(1 + $SCA_l0a_I11 + $I_L3037_601) * cm(1 + $SCA_l0a_I11 + $I_L3037_601)
 3040.                         $LD_SPLT_P62 = cr(1 + $SCA_l1a_I12 + $I_L3037_601)
 3040.                         cm(1 + $SCA_l1a_I12 + $I_L3037_601) = 1.0 + -( $LD_SPLT_P62 * pu(1 + $SCA_l1a_I12 + $I_L3037_601) )
 3041.                         $LD_SPLT_P63 = cm(1 + $SCA_l1a_I12 + $I_L3037_601)
 3041.                         cm(1 + $SCA_l1a_I12 + $I_L3037_601) = 1.0/$LD_SPLT_P63
 3042.                         $I_L3037_601 = 1 + $I_L3037_601
 3037.                         if ( $I_L3037_601 >= ncld ) exit
 3037.                      enddo
 3037.                   else
 3037.                      $I_L3037_586 = 0
 3037. !dir$ ivdep safevl = $CSVL_V3 !   Guaranteed minimum :: 4
 3037.                      do
 3038.                         cr(1 + $SCA_l1a_I12 + $I_L3037_586) = pu(1 + $SCA_l0a_I11 + $I_L3037_586) + e0(1 + $SCA_l0a_I11 + $I_L3037_586) * cr(1 + $SCA_l0a_I11 + $I_L3037_586) * cm(1 + $SCA_l0a_I11 + $I_L3037_586)
 3040.                         $LD_SPLT_P62 = cr(1 + $SCA_l1a_I12 + $I_L3037_586)
 3040.                         cm(1 + $SCA_l1a_I12 + $I_L3037_586) = 1.0 + -( $LD_SPLT_P62 * pu(1 + $SCA_l1a_I12 + $I_L3037_586) )
 3041.                         $LD_SPLT_P63 = cm(1 + $SCA_l1a_I12 + $I_L3037_586)
 3041.                         cm(1 + $SCA_l1a_I12 + $I_L3037_586) = 1.0/$LD_SPLT_P63
 3042.                         $I_L3037_586 = 1 + $I_L3037_586
 3037.                         if ( $I_L3037_586 >= ncld ) exit
 3037.                      enddo
 3037.                   endif
 3043.                   $I_L3035_570 = 1 + $I_L3035_570
 3042.                   if ( $I_L3035_570 >= lmp1 ) exit
 3042.                enddo
 3042.             endif
 3042.          endif
 3047.          if ( nclmp1 > 0 ) then
 3047.             $I_L3047_518 = 0
 3047. !dir$ ivdep
 3047.             do
 3048.                db(1 + $I_L3047_518) = cr(1 + $I_L3047_518) * up(1 + $I_L3047_518)
 3049.                e0(1 + $I_L3047_518) = css(1 + $I_L3047_518) * cm(1 + $I_L3047_518)
 3050.                $I_L3047_518 = 1 + $I_L3047_518
 3047.                if ( $I_L3047_518 >= nclmp1 ) exit
 3047.             enddo
 3047.          endif
 3051.          if ( lmp1 > 0 ) then
 3053.             if ( ncld > 0 ) then
 3051.                $I_L3051_572 = 0
 3051.                do
 3053.                   $SCA_l0a_I13 = l0a(1 + $I_L3051_572)
 3053.                   $SCA_l1a_I14 = l1a(1 + $I_L3051_572)
 3053.                   $CSVL_V4 = cvmg( ( $SCA_l1a_I14 + -$SCA_l0a_I13 ), 4, and( $SCA_l1a_I14 + -$SCA_l0a_I13 > 0, and( ( $SCA_l1a_I14 + -$SCA_l0a_I13 ) <= 4, ( $SCA_l1a_I14 + -$SCA_l0a_I13 ) <= -1 + ncld ) ) )
 3053.                   if ( $CSVL_V4 <= 4 ) then
 3053.                      $I_L3053_603 = 0
 3053.                      do
 3054.                         vp(1 + $SCA_l1a_I14 + $I_L3053_603) = dn(1 + $SCA_l1a_I14 + $I_L3053_603) + e0(1 + $SCA_l0a_I13 + $I_L3053_603) * ( vp(1 + $SCA_l0a_I13 + $I_L3053_603) + db(1 + $SCA_l0a_I13 + $I_L3053_603) )
 3056.                         $I_L3053_603 = 1 + $I_L3053_603
 3053.                         if ( $I_L3053_603 >= ncld ) exit
 3053.                      enddo
 3053.                   else
 3053.                      $I_L3053_588 = 0
 3053. !dir$ ivdep safevl = $CSVL_V4 !   Guaranteed minimum :: 4
 3053.                      do
 3054.                         vp(1 + $SCA_l1a_I14 + $I_L3053_588) = dn(1 + $SCA_l1a_I14 + $I_L3053_588) + e0(1 + $SCA_l0a_I13 + $I_L3053_588) * ( vp(1 + $SCA_l0a_I13 + $I_L3053_588) + db(1 + $SCA_l0a_I13 + $I_L3053_588) )
 3056.                         $I_L3053_588 = 1 + $I_L3053_588
 3053.                         if ( $I_L3053_588 >= ncld ) exit
 3053.                      enddo
 3053.                   endif
 3057.                   $I_L3051_572 = 1 + $I_L3051_572
 3056.                   if ( $I_L3051_572 >= lmp1 ) exit
 3056.                enddo
 3056.             endif
 3056.          endif
 3058.          if ( nclmp1 > 0 ) then
 3058.             $I_L3058_522 = 0
 3058. !dir$ ivdep
 3058.             do
 3059.                vm(1 + ncld + $I_L3058_522) = cm(1 + ncld + $I_L3058_522) * ( up(1 + ncld + $I_L3058_522) + pu(1 + ncld + $I_L3058_522) * vp(1 + ncld + $I_L3058_522) )
 3074.                e0(1 + $I_L3058_522) = cm(1 + $I_L3058_522) * css(1 + $I_L3058_522)
 3061.                $I_L3058_522 = 1 + $I_L3058_522
 3058.                if ( $I_L3058_522 >= nclmp1 ) exit
 3058.             enddo
 3058.          endif
 3065.          if ( ncld > 0 ) then
 3065.             $I_L3065_524 = 0
 3065. !dir$ ivdep
 3065.             do
 3066.                $ul_WR0_R48 = vm(1 + $I_L3065_524 + lmp1 * ncld)
 3066.                ul(1 + $I_L3065_524 + lmp1 * ncld) = $ul_WR0_R48
 3067.                $dl_WR0_R49 = vp(1 + $I_L3065_524 + lmp1 * ncld) + sol(1 + $I_L3065_524 + lmp1 * ncld) + $ul_WR0_R48 * cr(1 + $I_L3065_524 + lmp1 * ncld)
 3067.                dl(1 + $I_L3065_524 + lmp1 * ncld) = $dl_WR0_R49
 3068.                tr1(1 + $I_L3065_524) = tr1(1 + $I_L3065_524) + $dl_WR0_R49 + -$ul_WR0_R48
 3069.                $I_L3065_524 = 1 + $I_L3065_524
 3065.                if ( $I_L3065_524 >= ncld ) exit
 3065.             enddo
 3065.          endif
 3077.          if ( lmp1 > 0 ) then
 3079.             if ( ncld > 0 ) then
 3077.                $I_L3077_574 = 0
 3077.                do
 3079.                   $SCA_l0c_I15 = l0c(1 + $I_L3077_574)
 3079.                   $SCA_l1c_I16 = l1c(1 + $I_L3077_574)
 3079.                   $CSVL_V5 = cvmg( ( $SCA_l0c_I15 + -$SCA_l1c_I16 ), 4, and( $SCA_l0c_I15 + -$SCA_l1c_I16 > 0, and( ( $SCA_l0c_I15 + -$SCA_l1c_I16 ) <= 4, ( $SCA_l0c_I15 + -$SCA_l1c_I16 ) <= -1 + ncld ) ) )
 3079.                   if ( $CSVL_V5 <= 4 ) then
 3079.                      $I_L3079_605 = 0
 3079.                      do
 3080.                         ul(1 + $SCA_l0c_I15 + $I_L3079_605) = vm(1 + $SCA_l0c_I15 + $I_L3079_605) + ul(1 + $SCA_l1c_I16 + $I_L3079_605) * e0(1 + $SCA_l0c_I15 + $I_L3079_605)
 3081.                         $I_L3079_605 = 1 + $I_L3079_605
 3079.                         if ( $I_L3079_605 >= ncld ) exit
 3079.                      enddo
 3079.                   else
 3079.                      $I_L3079_590 = 0
 3079. !dir$ ivdep safevl = $CSVL_V5 !   Guaranteed minimum :: 4
 3079.                      do
 3080.                         ul(1 + $SCA_l0c_I15 + $I_L3079_590) = vm(1 + $SCA_l0c_I15 + $I_L3079_590) + ul(1 + $SCA_l1c_I16 + $I_L3079_590) * e0(1 + $SCA_l0c_I15 + $I_L3079_590)
 3081.                         $I_L3079_590 = 1 + $I_L3079_590
 3079.                         if ( $I_L3079_590 >= ncld ) exit
 3079.                      enddo
 3079.                   endif
 3082.                   $I_L3077_574 = 1 + $I_L3077_574
 3081.                   if ( $I_L3077_574 >= lmp1 ) exit
 3081.                enddo
 3081.             endif
 3081.          endif
 3083.          if ( nclmp1 > 0 ) then
 3083.             $I_L3083_528 = 0
 3083. !dir$ ivdep
 3083.             do
 3084.                dl(1 + $I_L3083_528) = sol(1 + $I_L3083_528) + vp(1 + $I_L3083_528) + ul(1 + $I_L3083_528) * cr(1 + $I_L3083_528)
 3085.                $I_L3083_528 = 1 + $I_L3083_528
 3083.                if ( $I_L3083_528 >= nclmp1 ) exit
 3083.             enddo
 3086.             $I_L3086_530 = 0
 3086. !dir$ ivdep
 3086.             do
 3087.                acld(1 + $I_L3086_530) = dl(1 + $I_L3086_530) + acld(1 + $I_L3086_530) + -( dl(1 + ncld + $I_L3086_530) + -ul(1 + ncld + $I_L3086_530) ) + -ul(1 + $I_L3086_530)
 3089.                $I_L3086_530 = 1 + $I_L3086_530
 3086.                if ( $I_L3086_530 >= nclmp1 ) exit
 3086.             enddo
 3086.          endif
 3090.          $I_L2883_578 = 1 + $I_L2883_578
 3089.          if ( $I_L2883_578 >= 10 ) exit
 3089.       enddo
 3094.       if ( ncld > 0 ) then
 3094.          $I_L3094_532 = 0
 3094. !dir$ ivdep
 3094.          do
 3095.             taut(1 + $I_L3094_532) = rnbc(1 + $I_L3094_532) + rvnbc(1 + $I_L3094_532)
 3096.             $I_L3094_532 = 1 + $I_L3094_532
 3094.             if ( $I_L3094_532 >= ncld ) exit
 3094.          enddo
 3100.          $I_L3100_534 = 0
 3100. !dir$ ivdep
 3100. !dir$ loop_info (automatic) cache_nt( rnbc )
 3100.          do
 3101.             rnbc(litd(1 + $I_L3100_534)) = taut(1 + $I_L3100_534)
 3104.             taut(1 + $I_L3100_534) = rndc(1 + $I_L3100_534) + ( 1.0/( 1.0 + -agncd(1 + $I_L3100_534) ) * ( tr1(1 + $I_L3100_534) + -( rvnbc(1 + $I_L3100_534) * ( 1.0 + -rsncd(1 + $I_L3100_534) ) ) ) )
 3102.             $I_L3100_534 = 1 + $I_L3100_534
 3100.             if ( $I_L3100_534 >= ncld ) exit
 3100.          enddo
 3110.          $I_L3110_536 = 0
 3110. !dir$ ivdep
 3110. !dir$ loop_info (automatic) cache_nt( rndc )
 3110.          do
 3111.             rndc(litd(1 + $I_L3110_536)) = taut(1 + $I_L3110_536)
 3114.             taut(1 + $I_L3110_536) = tr1(1 + $I_L3110_536) + sc(1 + $I_L3110_536)
 3112.             $I_L3110_536 = 1 + $I_L3110_536
 3110.             if ( $I_L3110_536 >= ncld ) exit
 3110.          enddo
 3119.          $I_L3119_538 = 0
 3119. !dir$ ivdep
 3119.          do
 3120.             sc(litd(1 + $I_L3119_538)) = taut(1 + $I_L3119_538)
 3121.             $I_L3119_538 = 1 + $I_L3119_538
 3119.             if ( $I_L3119_538 >= ncld ) exit
 3119.          enddo
 3119.       endif
 3125.       if ( nclmp1 > 0 ) then
 3125.          $I_L3125_540 = 0
 3125. !dir$ ivdep
 3125.          do
 3126.             e0(1 + $I_L3125_540) = acld(1 + $I_L3125_540)
 3127.             $I_L3125_540 = 1 + $I_L3125_540
 3125.             if ( $I_L3125_540 >= nclmp1 ) exit
 3125.          enddo
 3128.          $I_L3128_542 = 0
 3128. !dir$ ivdep
 3128.          do
 3129.             acld(litd(1 + $I_L3128_542)) = e0(1 + $I_L3128_542)
 3130.             $I_L3128_542 = 1 + $I_L3128_542
 3128.             if ( $I_L3128_542 >= nclmp1 ) exit
 3128.          enddo
 3128.       endif
 3134.       if ( nsol > 0 ) then
 3134.          $I_L3134_544 = 0
 3134. !dir$ ivdep
 3134.          do
 3135.             dscld(1 + $I_L3134_544) = sc(1 + $I_L3134_544)
 3136.             $I_L3134_544 = 1 + $I_L3134_544
 3134.             if ( $I_L3134_544 >= nsol ) exit
 3134.          enddo
 3134.       endif
 3137.       if ( lmp1 > 0 ) then
 3138.          if ( nsol > 0 ) then
 3137.             $SI_L3137_576_G1 = 0
 3137.             do
 3138.                $SI_L3138_546_G4 = 0
 3138.                do
 3137.                   $I_L3137_607 = 0
 3137. !dir$ shortloop16
 3137. !dir$ blocking_size( 4, 4 )
 3137.                   do
 3138.                      $SCA_l0a_I17 = l0a(1 + $I_L3137_607 + 4 * $SI_L3137_576_G1)
 3138.                      $I_L3138_592 = 0
 3138. !dir$ ivdep
 3138. !dir$ blocking_size( 256, 256 )
 3138.                      do
 3139.                         dscld(1 + $I_L3138_592 + 256 * $SI_L3138_546_G4) = dscld(1 + $I_L3138_592 + 256 * $SI_L3138_546_G4) + acld(1 + $SCA_l0a_I17 + $I_L3138_592 + 256 * $SI_L3138_546_G4)
 3138.                         $I_L3138_592 = 1 + $I_L3138_592
 3138.                         if ( $I_L3138_592 >= min( nsol, 256 + 256 * $SI_L3138_546_G4 ) + -256 * $SI_L3138_546_G4 ) exit
 3138.                      enddo
 3137.                      $I_L3137_607 = 1 + $I_L3137_607
 3137.                      if ( $I_L3137_607 >= min( lmp1, 4 + 4 * $SI_L3137_576_G1 ) + -4 * $SI_L3137_576_G1 ) exit
 3137.                   enddo
 3138.                   $SI_L3138_546_G4 = 1 + $SI_L3138_546_G4
 3140.                   if ( $SI_L3138_546_G4 >= _rsh( 255 + nsol, 8 ) ) exit
 3140.                enddo
 3137.                $SI_L3137_576_G1 = 1 + $SI_L3137_576_G1
 3137.                if ( $SI_L3137_576_G1 >= _rsh( 3 + lmp1, 2 ) ) exit
 3137.             enddo
 3137.          endif
 3137.       endif
 2524.       _free( t$226 )
 3142.       return
 3142.       end
 3142.       
 3160.       
 3160.       subroutine clear( ncols, kmax, sqrt3, np, lmp1, nsol, nslmp1, nsolnp, dooz, scosz, cosmag, dsclr, rvbl, rvdl, rnbl, rndl, agv, rsurfv, rsurfn, sl, rlo, rlg, tr1, e0, ozale, swale, aclr )
 3160.       t$26 = ncols
 3211.       t$306 = _zla( 0, ncols )
 3160.       t$27 = ( ncols + ncols * kmax )
 3225.       t$307 = _zla( 0, ( ncols + ncols * kmax ) )
 3160.       t$28 = ( ncols * kmax + 2 * ncols )
 3226.       t$308 = _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3237.       t$311 = 8 * _zla( 0, ncols )
 3235.       t$312 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3235.       t$314 = t$312 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3230.       t$315 = 8 * ( 7 + t$312 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3230.       t$317 = t$315 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 3232.       t$318 = 8 * ( 7 + t$315 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 3232.       t$320 = t$318 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3233.       t$321 = 8 * ( 7 + t$318 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3233.       t$323 = t$321 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3234.       t$324 = 8 * ( 7 + t$321 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3234.       t$326 = t$324 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3231.       t$327 = 8 * ( 7 + t$324 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3231.       t$329 = t$327 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3160.       t$309 = int( _alloc( t$327 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ), 8 )
 3237.       t$310 = t$309
 3235.       t$313 = t$312 + t$309
 3230.       t$316 = t$315 + t$309
 3232.       t$319 = t$318 + t$309
 3233.       t$322 = t$321 + t$309
 3234.       t$325 = t$324 + t$309
 3231.       t$328 = t$327 + t$309
 3249.       lp = lmp1 * nsol
 3250.       if ( nsol > 0 ) then
 3250.          $I_L3250_230 = 0
 3250. !dir$ ivdep
 3250.          do
 3251.             sl(1 + $I_L3250_230) = 0.0
 3252.             dn(1 + $I_L3250_230) = 0.0
 3253.             $I_L3250_230 = 1 + $I_L3250_230
 3250.             if ( $I_L3250_230 >= nsol ) exit
 3250.          enddo
 3250.       endif
 3254.       if ( nslmp1 > 0 ) then
 3254.          $I_L3254_232 = 0
 3254. !dir$ ivdep
 3254.          do
 3255.             aclr(1 + $I_L3254_232) = 0.0
 3256.             $I_L3254_232 = 1 + $I_L3254_232
 3254.             if ( $I_L3254_232 >= nslmp1 ) exit
 3254.          enddo
 3254.       endif
 3257.       if ( lmp1 > 0 ) then
 3259.          if ( nsol > 0 ) then
 3257.             $I_L3257_284 = 0
 3257.             do
 3259.                $I_L3259_234 = 0
 3259. !dir$ ivdep
 3259.                do
 3263.                   den(1 + $I_L3259_234 + nsol * $I_L3257_284) = scosz(1 + $I_L3259_234)
 3264.                   $I_L3259_234 = 1 + $I_L3259_234
 3259.                   if ( $I_L3259_234 >= nsol ) exit
 3259.                enddo
 3265.                $I_L3257_284 = 1 + $I_L3257_284
 3264.                if ( $I_L3257_284 >= lmp1 ) exit
 3264.             enddo
 3264.          endif
 3264.       endif
 3269.       if ( dooz /= .false. ) then
 3270.          if ( -2 + np >= 0 ) then
 3273.             if ( nsol > 0 ) then
 3270.                $I_L3270_286 = 0
 3270.                do
 3273.                   $I_L3273_238 = 0
 3273. !dir$ ivdep
 3273.                   do
 3277.                      w(1 + $I_L3273_238 + nsol * $I_L3270_286) = cosmag(1 + $I_L3273_238) * ozale(1 + nsol + $I_L3273_238 + nsol * $I_L3270_286)
 3278.                      $I_L3273_238 = 1 + $I_L3273_238
 3273.                      if ( $I_L3273_238 >= nsol ) exit
 3273.                   enddo
 3279.                   $I_L3270_286 = 1 + $I_L3270_286
 3278.                   if ( $I_L3270_286 >= -1 + np ) exit
 3278.                enddo
 3278.             endif
 3278.          endif
 3284.          if ( nslmp1 > 0 ) then
 3284.             $I_L3284_240 = 0
 3284. !dir$ ivdep
 3284.             do
 3285.                $e0_WR0_R0 = 103.63 * w(1 + $I_L3284_240)
 3287.                $vp_WR0_R1 = 1.0 + 138.56999999999999 * w(1 + $I_L3284_240)
 3288.                $cm_WR0_R2 = _expn( 8.0500000000000005e-1 * log( 1.0e-100 + $vp_WR0_R1 ) )
 3286.                $e0_WR0_R0 = $e0_WR0_R0 * $e0_WR0_R0 * $e0_WR0_R0
 3286.                e0(1 + $I_L3284_240) = $e0_WR0_R0
 3291.                dn(1 + nsol + $I_L3284_240) = ( 6.5799999999999997e-2 * w(1 + $I_L3284_240) * 1.0/( 1.0 + $e0_WR0_R0 ) ) + ( 1.0817300000000001 * w(1 + $I_L3284_240) * 1.0/$cm_WR0_R2 ) + ( 2.1180000000000001e-2 * w(1 + $I_L3284_240) * 1.0/( 1.0 + 4.2000000000000003e-2 * w(1 + $I_L3284_240) + 3.2299999999999999e-4 * w(1 + $I_L3284_240) * w(1 + $I_L3284_240) ) )
 3289.                $I_L3284_240 = 1 + $I_L3284_240
 3284.                if ( $I_L3284_240 >= nslmp1 ) exit
 3284.             enddo
 3301.             $I_L3301_242 = 0
 3301. !dir$ ivdep
 3301.             do
 3302.                aclr(1 + $I_L3301_242) = den(1 + $I_L3301_242) * ( dn(1 + nsol + $I_L3301_242) + -dn(1 + $I_L3301_242) )
 3303.                $I_L3301_242 = 1 + $I_L3301_242
 3301.                if ( $I_L3301_242 >= nslmp1 ) exit
 3301.             enddo
 3301.          endif
 3345.          if ( nsol > 0 ) then
 3345.             $I_L3345_246 = 0
 3345. !dir$ ivdep
 3345.             do
 3346.                up(1 + $I_L3345_246 + lmp1 * nsol) = dn(1 + $I_L3345_246 + lmp1 * nsol)
 3347.                w(1 + $I_L3345_246 + lmp1 * nsol) = ozale(1 + $I_L3345_246 + lmp1 * nsol) * ( 1.8999999999999999 + cosmag(1 + $I_L3345_246) )
 3348.                $I_L3345_246 = 1 + $I_L3345_246
 3345.                if ( $I_L3345_246 >= nsol ) exit
 3345.             enddo
 3345.          endif
 3349.          if ( nslmp1 > 0 ) then
 3349.             $I_L3349_248 = 0
 3349. !dir$ ivdep
 3349.             do
 3350.                w(1 + $I_L3349_248) = 1.8999999999999999 * ozale(1 + $I_L3349_248)
 3351.                $I_L3349_248 = 1 + $I_L3349_248
 3349.                if ( $I_L3349_248 >= nslmp1 ) exit
 3349.             enddo
 3349.          endif
 3352.          if ( lmp1 > 0 ) then
 3355.             if ( nsol > 0 ) then
 3352.                $I_L3352_288 = 0
 3352.                do
 3355.                   $CSVL_V0 = cvmg( -( lmp1 * nsol ) + nsol * $I_L3352_288, 2, and( -( lmp1 * nsol ) + nsol * $I_L3352_288 > 0, and( -( lmp1 * nsol ) + nsol * $I_L3352_288 <= 2, -( lmp1 * nsol ) + nsol * $I_L3352_288 <= -1 + nsol ) ) )
 3355.                   if ( $CSVL_V0 <= 4 ) then
 3355.                      $I_L3355_307 = 0
 3355.                      do
 3356.                         w(1 + $I_L3355_307 + nsol * $I_L3352_288) = w(1 + lp + $I_L3355_307) + -w(1 + $I_L3355_307 + nsol * $I_L3352_288)
 3357.                         $I_L3355_307 = 1 + $I_L3355_307
 3355.                         if ( $I_L3355_307 >= nsol ) exit
 3355.                      enddo
 3355.                   else
 3355.                      $I_L3355_302 = 0
 3355. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 3355.                      do
 3356.                         w(1 + $I_L3355_302 + nsol * $I_L3352_288) = w(1 + lp + $I_L3355_302) + -w(1 + $I_L3355_302 + nsol * $I_L3352_288)
 3357.                         $I_L3355_302 = 1 + $I_L3355_302
 3355.                         if ( $I_L3355_302 >= nsol ) exit
 3355.                      enddo
 3355.                   endif
 3358.                   $I_L3352_288 = 1 + $I_L3352_288
 3357.                   if ( $I_L3352_288 >= lmp1 ) exit
 3357.                enddo
 3357.             endif
 3357.          endif
 3359.          if ( nslmp1 > 0 ) then
 3359.             $I_L3359_252 = 0
 3359. !dir$ ivdep
 3359.             do
 3360.                $e0_WR0_R3 = 103.63 * w(1 + $I_L3359_252)
 3362.                $vp_WR0_R4 = 1.0 + 138.56999999999999 * w(1 + $I_L3359_252)
 3363.                $cm_WR0_R5 = _expn( 8.0500000000000005e-1 * log( 1.0e-100 + $vp_WR0_R4 ) )
 3361.                $e0_WR0_R3 = $e0_WR0_R3 * $e0_WR0_R3 * $e0_WR0_R3
 3361.                e0(1 + $I_L3359_252) = $e0_WR0_R3
 3366.                up(1 + $I_L3359_252) = ( 6.5799999999999997e-2 * w(1 + $I_L3359_252) * 1.0/( 1.0 + $e0_WR0_R3 ) ) + ( 1.0817300000000001 * w(1 + $I_L3359_252) * 1.0/$cm_WR0_R5 ) + ( 2.1180000000000001e-2 * w(1 + $I_L3359_252) * 1.0/( 1.0 + 4.2000000000000003e-2 * w(1 + $I_L3359_252) + 3.2299999999999999e-4 * w(1 + $I_L3359_252) * w(1 + $I_L3359_252) ) )
 3364.                $I_L3359_252 = 1 + $I_L3359_252
 3359.                if ( $I_L3359_252 >= nslmp1 ) exit
 3359.             enddo
 3376.             $I_L3376_254 = 0
 3376. !dir$ ivdep
 3376.             do
 3377.                w(1 + $I_L3376_254) = up(1 + $I_L3376_254) + -up(1 + nsol + $I_L3376_254)
 3378.                $I_L3376_254 = 1 + $I_L3376_254
 3376.                if ( $I_L3376_254 >= nslmp1 ) exit
 3376.             enddo
 3376.          endif
 3383.          if ( lmp1 > 0 ) then
 3385.             if ( nsol > 0 ) then
 3383.                $I_L3383_290 = 0
 3383.                do
 3385.                   $I_L3385_256 = 0
 3385. !dir$ ivdep
 3385.                   do
 3386.                      aclr(1 + $I_L3385_256 + nsol * $I_L3383_290) = aclr(1 + $I_L3385_256 + nsol * $I_L3383_290) + rlo(1 + $I_L3385_256) * scosz(1 + $I_L3385_256) * w(1 + $I_L3385_256 + nsol * $I_L3383_290)
 3388.                      $I_L3385_256 = 1 + $I_L3385_256
 3385.                      if ( $I_L3385_256 >= nsol ) exit
 3385.                   enddo
 3389.                   $I_L3383_290 = 1 + $I_L3383_290
 3388.                   if ( $I_L3383_290 >= lmp1 ) exit
 3388.                enddo
 3388.             endif
 3388.          endif
 3392.          $F_A33 = nslmp1
 3392.          if ( nslmp1 > 0 ) then
 3392.             $I_L3392_280 = 0
 3392. !dir$ ivdep
 3392.             do
 3392.                aclr(1 + $I_L3392_280) = max( 0.0, aclr(1 + $I_L3392_280) )
 3392.                $I_L3392_280 = 1 + $I_L3392_280
 3392.                if ( $I_L3392_280 >= $F_A33 ) exit
 3392.             enddo
 3392.          endif
 3304.       else if ( nsol > 0 ) then
 3305.          $I_L3305_236 = 0
 3305. !dir$ ivdep
 3305.          do
 3306.             dn(1 + $I_L3305_236 + lmp1 * nsol) = 0.0
 3307.             $I_L3305_236 = 1 + $I_L3305_236
 3305.             if ( $I_L3305_236 >= nsol ) exit
 3305.          enddo
 3305.       endif
 3328.       if ( nsol > 0 ) then
 3328.          $I_L3328_244 = 0
 3328. !dir$ ivdep
 3328.          do
 3329.             $sl_WR0_R6 = 5.0e-1 + -dn(1 + $I_L3328_244 + lmp1 * nsol)
 3330.             $rvbl_WR0_R7 = $sl_WR0_R6 * scosz(1 + $I_L3328_244) * tr1(1 + $I_L3328_244)
 3330.             rvbl(1 + $I_L3328_244) = $rvbl_WR0_R7
 3331.             $avbl_WR0_R8 = $rvbl_WR0_R7 * ( 1.0 + -rsurfv(1 + $I_L3328_244) )
 3332.             $sl_WR0_R6 = $sl_WR0_R6 * scosz(1 + $I_L3328_244) * ( 1.0 + -rlg(1 + $I_L3328_244) )
 3333.             rvdl(1 + $I_L3328_244) = ( ( $sl_WR0_R6 + -$avbl_WR0_R8 ) * 1.0/( 1.0 + -agv(1 + $I_L3328_244) ) )
 3337.             $rnbl_WR0_R9 = 1.2139999999999999e-1 * scosz(1 + $I_L3328_244)
 3337.             rnbl(1 + $I_L3328_244) = $rnbl_WR0_R9
 3338.             rndl(1 + $I_L3328_244) = 0.0
 3339.             $sl_WR0_R6 = $sl_WR0_R6 + $rnbl_WR0_R9 * ( 1.0 + -rsurfn(1 + $I_L3328_244) )
 3339.             sl(1 + $I_L3328_244) = $sl_WR0_R6
 3340.             $I_L3328_244 = 1 + $I_L3328_244
 3328.             if ( $I_L3328_244 >= nsol ) exit
 3328.          enddo
 3328.       endif
 3399.       $I_L3399_300 = 0
 3399.       do
 3400.          if ( np > 0 ) then
 3402.             if ( nsol > 0 ) then
 3400.                $I_L3400_292 = 0
 3400.                do
 3402.                   $I_L3402_258 = 0
 3402. !dir$ ivdep
 3402.                   do
 3406.                      w(1 + $I_L3402_258 + nsol * $I_L3400_292) = cosmag(1 + $I_L3402_258) * swale(1 + $I_L3402_258 + nsol * $I_L3400_292)
 3407.                      $I_L3402_258 = 1 + $I_L3402_258
 3402.                      if ( $I_L3402_258 >= nsol ) exit
 3402.                   enddo
 3408.                   $I_L3400_292 = 1 + $I_L3400_292
 3407.                   if ( $I_L3400_292 >= np ) exit
 3407.                enddo
 3407.             endif
 3407.          endif
 3409.          if ( ( 1 + $I_L3399_300 ) >= 4 ) then
 3410.             if ( nsolnp > 0 ) then
 3410.                $SCA_xk_I5 = xk(1 + $I_L3399_300)
 3410.                $I_L3410_260 = 0
 3410. !dir$ ivdep
 3410.                do
 3411.                   $dn_WR0_R10 = -( $SCA_xk_I5 * w(1 + $I_L3410_260) )
 3413.                   $dn_WR0_R10 = _expn( max( -122.03700992868443, $dn_WR0_R10 ) )
 3413.                   dn(1 + $I_L3410_260) = $dn_WR0_R10
 3414.                   $I_L3410_260 = 1 + $I_L3410_260
 3410.                   if ( $I_L3410_260 >= nsolnp ) exit
 3410.                enddo
 3410.             endif
 3415.          else if ( nsolnp > 0 ) then
 3416.             $SCA_xk_I4 = xk(1 + $I_L3399_300)
 3416.             $I_L3416_262 = 0
 3416. !dir$ ivdep
 3416.             do
 3420.                dn(1 + $I_L3416_262) = _expn( -( $SCA_xk_I4 * w(1 + $I_L3416_262) ) )
 3421.                $I_L3416_262 = 1 + $I_L3416_262
 3416.                if ( $I_L3416_262 >= nsolnp ) exit
 3416.             enddo
 3416.          endif
 3428.          if ( nslmp1 > 0 ) then
 3428.             $SCA_fk_I6 = fk(1 + $I_L3399_300)
 3428.             $I_L3428_264 = 0
 3428. !dir$ ivdep
 3428.             do
 3429.                $w_WR0_R11 = $SCA_fk_I6 * ( dn(1 + $I_L3428_264) + -dn(1 + nsol + $I_L3428_264) )
 3430.                $w_WR0_R11 = $w_WR0_R11 * den(1 + $I_L3428_264)
 3430.                w(1 + $I_L3428_264) = $w_WR0_R11
 3431.                aclr(1 + $I_L3428_264) = $w_WR0_R11 + aclr(1 + $I_L3428_264)
 3432.                $I_L3428_264 = 1 + $I_L3428_264
 3428.                if ( $I_L3428_264 >= nslmp1 ) exit
 3428.             enddo
 3428.          endif
 3437.          if ( nsol > 0 ) then
 3437.             $SCA_fk_I1 = fk(1 + $I_L3399_300)
 3437.             $SCA_xk_I3 = xk(1 + $I_L3399_300)
 3437.             $I_L3437_266 = 0
 3437. !dir$ ivdep
 3437.             do
 3445.                up(1 + $I_L3437_266 + lmp1 * nsol) = dn(1 + $I_L3437_266 + lmp1 * nsol)
 3451.                w(1 + $I_L3437_266 + lmp1 * nsol) = $SCA_xk_I3 * swale(1 + $I_L3437_266 + lmp1 * nsol) * ( sqrt3 + cosmag(1 + $I_L3437_266) )
 3438.                sl(1 + $I_L3437_266) = sl(1 + $I_L3437_266) + $SCA_fk_I1 * scosz(1 + $I_L3437_266) * dn(1 + $I_L3437_266 + lmp1 * nsol) * ( 1.0 + -rsurfn(1 + $I_L3437_266) )
 3440.                rnbl(1 + $I_L3437_266) = rnbl(1 + $I_L3437_266) + $SCA_fk_I1 * dn(1 + $I_L3437_266 + lmp1 * nsol) * scosz(1 + $I_L3437_266)
 3452.                $I_L3437_266 = 1 + $I_L3437_266
 3437.                if ( $I_L3437_266 >= nsol ) exit
 3437.             enddo
 3437.          endif
 3453.          if ( nslmp1 > 0 ) then
 3453.             $SCA_xk_I2 = xk(1 + $I_L3399_300)
 3453.             $I_L3453_268 = 0
 3453. !dir$ ivdep
 3453.             do
 3454.                w(1 + $I_L3453_268) = sqrt3 * $SCA_xk_I2 * swale(1 + $I_L3453_268)
 3455.                $I_L3453_268 = 1 + $I_L3453_268
 3453.                if ( $I_L3453_268 >= nslmp1 ) exit
 3453.             enddo
 3453.          endif
 3456.          if ( lmp1 > 0 ) then
 3459.             if ( nsol > 0 ) then
 3456.                $I_L3456_294 = 0
 3456.                do
 3457.                   l0 = ( nsol * $I_L3456_294 )
 3459.                   $I_L3459_270 = 0
 3459. !dir$ ivdep safevl = ( 2 )
 3459.                   do
 3460.                      w(1 + $I_L3459_270 + nsol * $I_L3456_294) = w(1 + l0 + $I_L3459_270) + -w(1 + $I_L3459_270 + lmp1 * nsol)
 3461.                      $I_L3459_270 = 1 + $I_L3459_270
 3459.                      if ( $I_L3459_270 >= nsol ) exit
 3459.                   enddo
 3462.                   $I_L3456_294 = 1 + $I_L3456_294
 3461.                   if ( $I_L3456_294 >= lmp1 ) exit
 3461.                enddo
 3461.             endif
 3461.          endif
 3463.          $F_A34 = nslmp1
 3463.          if ( nslmp1 > 0 ) then
 3463.             $I_L3463_282 = 0
 3463. !dir$ ivdep
 3463.             do
 3463.                up(1 + $I_L3463_282) = _expn( w(1 + $I_L3463_282) )
 3463.                $I_L3463_282 = 1 + $I_L3463_282
 3463.                if ( $I_L3463_282 >= $F_A34 ) exit
 3463.             enddo
 3467.             $SCA_fk_I0 = fk(1 + $I_L3399_300)
 3467.             $I_L3467_272 = 0
 3467. !dir$ ivdep
 3467.             do
 3468.                w(1 + $I_L3467_272) = $SCA_fk_I0 * ( up(1 + nsol + $I_L3467_272) + -up(1 + $I_L3467_272) )
 3469.                $I_L3467_272 = 1 + $I_L3467_272
 3467.                if ( $I_L3467_272 >= nslmp1 ) exit
 3467.             enddo
 3467.          endif
 3470.          if ( lmp1 > 0 ) then
 3473.             if ( nsol > 0 ) then
 3470.                $I_L3470_296 = 0
 3470.                do
 3473.                   $I_L3473_274 = 0
 3473. !dir$ ivdep
 3473.                   do
 3478.                      aclr(1 + $I_L3473_274 + nsol * $I_L3470_296) = aclr(1 + $I_L3473_274 + nsol * $I_L3470_296) + rsurfn(1 + $I_L3473_274) * scosz(1 + $I_L3473_274) * w(1 + $I_L3473_274 + nsol * $I_L3470_296)
 3479.                      $I_L3473_274 = 1 + $I_L3473_274
 3473.                      if ( $I_L3473_274 >= nsol ) exit
 3473.                   enddo
 3480.                   $I_L3470_296 = 1 + $I_L3470_296
 3479.                   if ( $I_L3470_296 >= lmp1 ) exit
 3479.                enddo
 3479.             endif
 3479.          endif
 3481.          $I_L3399_300 = 1 + $I_L3399_300
 3480.          if ( $I_L3399_300 >= 10 ) exit
 3480.       enddo
 3485.       if ( nsol > 0 ) then
 3485.          $I_L3485_276 = 0
 3485. !dir$ ivdep
 3485.          do
 3486.             dsclr(1 + $I_L3485_276) = sl(1 + $I_L3485_276)
 3487.             $I_L3485_276 = 1 + $I_L3485_276
 3485.             if ( $I_L3485_276 >= nsol ) exit
 3485.          enddo
 3485.       endif
 3488.       if ( lmp1 > 0 ) then
 3490.          if ( nsol > 0 ) then
 3488.             $SI_L3488_298_G1 = 0
 3488.             do
 3490.                $SI_L3490_278_G4 = 0
 3490.                do
 3488.                   $I_L3488_309 = 0
 3488. !dir$ shortloop16
 3488. !dir$ blocking_size( 4, 4 )
 3488.                   do
 3490.                      $I_L3490_304 = 0
 3490. !dir$ ivdep
 3490. !dir$ blocking_size( 256, 256 )
 3490.                      do
 3491.                         dsclr(1 + $I_L3490_304 + 256 * $SI_L3490_278_G4) = dsclr(1 + $I_L3490_304 + 256 * $SI_L3490_278_G4) + aclr(1 + $I_L3490_304 + 256 * $SI_L3490_278_G4 + nsol * $I_L3488_309 + 4 * nsol * $SI_L3488_298_G1)
 3490.                         $I_L3490_304 = 1 + $I_L3490_304
 3490.                         if ( $I_L3490_304 >= min( nsol, 256 + 256 * $SI_L3490_278_G4 ) + -256 * $SI_L3490_278_G4 ) exit
 3490.                      enddo
 3488.                      $I_L3488_309 = 1 + $I_L3488_309
 3488.                      if ( $I_L3488_309 >= min( lmp1, 4 + 4 * $SI_L3488_298_G1 ) + -4 * $SI_L3488_298_G1 ) exit
 3488.                   enddo
 3490.                   $SI_L3490_278_G4 = 1 + $SI_L3490_278_G4
 3492.                   if ( $SI_L3490_278_G4 >= _rsh( 255 + nsol, 8 ) ) exit
 3492.                enddo
 3488.                $SI_L3488_298_G1 = 1 + $SI_L3488_298_G1
 3488.                if ( $SI_L3488_298_G1 >= _rsh( 3 + lmp1, 2 ) ) exit
 3488.             enddo
 3488.          endif
 3488.       endif
 3160.       _free( t$309 )
 3494.       return
 3494.       end
 3494.       
 3525.       
 3525.       subroutine setsw( ncols, kmax, tice, icld, tauc, scosz, cmu, cosmag, dsclr, rvbl, scosc, cmuc, csmcld, dscld, rvbc, rvdl, rnbl, rndl, agv, agn, rvdc, rnbc, rndc, agncd, rsurfv, rsurfn, sl, sc, ta, wa, oa, pu, aclr, dp, css, acld, dpc, ccu, listim, bitd, sqrt3, gg, ggp, ggsq, athrd, tthrd, rcn1, rcn2, tcrit, ecrit, np, lmp1, nsol, nslmp1, nsolnp, ncld, ncldp1, nclmp1, ncldnp, dooz )
 3525.       t$29 = ( ncols + ncols * kmax )
 3634.       t$330 = _zla( 0, ( ncols + ncols * kmax ) )
 3525.       t$30 = ncols
 3660.       t$331 = _zla( 0, ncols )
 3525.       t$31 = ( ncols * kmax + 2 * ncols )
 3686.       t$332 = _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3730.       t$335 = 8 * _zla( 0, ncols )
 3698.       t$336 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3698.       t$338 = t$336 + 8 * _zla( 0, ncols )
 3729.       t$339 = 8 * ( 7 + t$336 + 8 * _zla( 0, ncols ) ) / 8
 3729.       t$341 = t$339 + 8 * _zla( 0, ncols )
 3738.       t$342 = 8 * ( 7 + t$339 + 8 * _zla( 0, ncols ) ) / 8
 3738.       t$344 = t$342 + 8 * _zla( 0, ncols )
 3723.       t$346 = t$342 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3739.       t$347 = 8 * ( 7 + t$342 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3739.       t$349 = t$347 + 8 * _zla( 0, ncols )
 3733.       t$350 = 8 * ( 7 + t$347 + 8 * _zla( 0, ncols ) ) / 8
 3733.       t$352 = t$350 + 8 * _zla( 0, ncols )
 3716.       t$353 = 8 * ( 7 + t$350 + 8 * _zla( 0, ncols ) ) / 8
 3716.       t$355 = t$353 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 3731.       t$356 = 8 * ( 7 + t$353 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 3731.       t$358 = t$356 + 8 * _zla( 0, ncols )
 3736.       t$359 = 8 * ( 7 + t$356 + 8 * _zla( 0, ncols ) ) / 8
 3736.       t$361 = t$359 + 8 * _zla( 0, ncols )
 3727.       t$363 = t$359 + 12 * _zla( 0, ncols )
 3726.       t$365 = t$359 + 16 * _zla( 0, ncols )
 3722.       t$367 = t$359 + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 16 * _zla( 0, ncols )
 3717.       t$368 = 8 * ( 7 + t$359 + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 16 * _zla( 0, ncols ) ) / 8
 3717.       t$370 = t$368 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3718.       t$371 = 8 * ( 7 + t$368 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3718.       t$373 = t$371 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3734.       t$374 = 8 * ( 7 + t$371 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3734.       t$376 = t$374 + 8 * _zla( 0, ncols )
 3711.       t$377 = 8 * ( 7 + t$374 + 8 * _zla( 0, ncols ) ) / 8
 3711.       t$379 = t$377 + 8 * _zla( 0, ncols )
 3708.       t$380 = 8 * ( 7 + t$377 + 8 * _zla( 0, ncols ) ) / 8
 3708.       t$382 = t$380 + 8 * _zla( 0, ncols )
 3706.       t$383 = 8 * ( 7 + t$380 + 8 * _zla( 0, ncols ) ) / 8
 3706.       t$385 = t$383 + 8 * _zla( 0, ncols )
 3702.       t$386 = 8 * ( 7 + t$383 + 8 * _zla( 0, ncols ) ) / 8
 3702.       t$388 = t$386 + 8 * _zla( 0, ncols )
 3700.       t$389 = 8 * ( 7 + t$386 + 8 * _zla( 0, ncols ) ) / 8
 3700.       t$391 = t$389 + 8 * _zla( 0, ncols )
 3705.       t$392 = 8 * ( 7 + t$389 + 8 * _zla( 0, ncols ) ) / 8
 3705.       t$394 = t$392 + 8 * _zla( 0, ncols )
 3704.       t$395 = 8 * ( 7 + t$392 + 8 * _zla( 0, ncols ) ) / 8
 3704.       t$397 = t$395 + 8 * _zla( 0, ncols )
 3719.       t$398 = 8 * ( 7 + t$395 + 8 * _zla( 0, ncols ) ) / 8
 3719.       t$400 = t$398 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 3720.       t$401 = 8 * ( 7 + t$398 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 3720.       t$403 = t$401 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 3721.       t$404 = 8 * ( 7 + t$401 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 3721.       t$406 = t$404 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 3737.       t$407 = 8 * ( 7 + t$404 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 3737.       t$409 = t$407 + 8 * _zla( 0, ncols )
 3710.       t$410 = 8 * ( 7 + t$407 + 8 * _zla( 0, ncols ) ) / 8
 3710.       t$412 = t$410 + 8 * _zla( 0, ncols )
 3735.       t$413 = 8 * ( 7 + t$410 + 8 * _zla( 0, ncols ) ) / 8
 3735.       t$415 = t$413 + 8 * _zla( 0, ncols )
 3713.       t$416 = 8 * ( 7 + t$413 + 8 * _zla( 0, ncols ) ) / 8
 3713.       t$418 = t$416 + 8 * _zla( 0, ncols )
 3714.       t$419 = 8 * ( 7 + t$416 + 8 * _zla( 0, ncols ) ) / 8
 3714.       t$421 = t$419 + 8 * _zla( 0, ncols )
 3715.       t$422 = 8 * ( 7 + t$419 + 8 * _zla( 0, ncols ) ) / 8
 3715.       t$424 = t$422 + 8 * _zla( 0, ncols )
 3732.       t$425 = 8 * ( 7 + t$422 + 8 * _zla( 0, ncols ) ) / 8
 3732.       t$427 = t$425 + 8 * _zla( 0, ncols )
 3525.       t$333 = int( _alloc( t$425 + 8 * _zla( 0, ncols ) ), 8 )
 3730.       t$334 = t$333
 3698.       t$337 = t$336 + t$333
 3729.       t$340 = t$339 + t$333
 3738.       t$343 = t$342 + t$333
 3723.       t$345 = t$342 + t$333 + 8 * _zla( 0, ncols )
 3739.       t$348 = t$347 + t$333
 3733.       t$351 = t$350 + t$333
 3716.       t$354 = t$353 + t$333
 3731.       t$357 = t$356 + t$333
 3736.       t$360 = t$359 + t$333
 3727.       t$362 = t$359 + t$333 + 8 * _zla( 0, ncols )
 3726.       t$364 = t$359 + t$333 + 12 * _zla( 0, ncols )
 3722.       t$366 = t$359 + t$333 + 16 * _zla( 0, ncols )
 3717.       t$369 = t$368 + t$333
 3718.       t$372 = t$371 + t$333
 3734.       t$375 = t$374 + t$333
 3711.       t$378 = t$377 + t$333
 3708.       t$381 = t$380 + t$333
 3706.       t$384 = t$383 + t$333
 3702.       t$387 = t$386 + t$333
 3700.       t$390 = t$389 + t$333
 3705.       t$393 = t$392 + t$333
 3704.       t$396 = t$395 + t$333
 3719.       t$399 = t$398 + t$333
 3720.       t$402 = t$401 + t$333
 3721.       t$405 = t$404 + t$333
 3737.       t$408 = t$407 + t$333
 3710.       t$411 = t$410 + t$333
 3735.       t$414 = t$413 + t$333
 3713.       t$417 = t$416 + t$333
 3714.       t$420 = t$419 + t$333
 3715.       t$423 = t$422 + t$333
 3732.       t$426 = t$425 + t$333
 3755.       if ( dooz /= .false. ) then
 3759.          if ( nslmp1 > 0 ) then
 3759.             $I_L3759_258 = 0
 3759. !dir$ ivdep
 3759.             do
 3760.                bitc(1 + $I_L3759_258) = pu(1 + nsol + $I_L3759_258) > 500.0
 3761.                $I_L3759_258 = 1 + $I_L3759_258
 3759.                if ( $I_L3759_258 >= nslmp1 ) exit
 3759.             enddo
 3759.          endif
 3765.          t$1763 = ( max( 0, nslmp1 ) )
 3765.          t$1766 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nslmp1 ) ) ) ) ), 8 )
 3765.          $F_A35 = nslmp1
 3765.          if ( nslmp1 > 0 ) then
 3765.             $I_L3765_320 = 0
 3765. !dir$ ivdep
 3765.             do
 3765.                t$1765(1 + $I_L3765_320) = bitc(1 + $I_L3765_320)
 3765.                $I_L3765_320 = 1 + $I_L3765_320
 3765.                if ( $I_L3765_320 >= $F_A35 ) exit
 3765.             enddo
 3765.          endif
 3765.          $F_A36 = nslmp1
 3765.          if ( nslmp1 > 0 ) then
 3765.             $I_L3765_322 = 0
 3765. !dir$ ivdep
 3765.             do
 3765.                if ( t$1765(1 + $I_L3765_322) /= 0 ) then
 3765.                   oa(1 + $I_L3765_322) = 0.0
 3765.                endif
 3765.                $I_L3765_322 = 1 + $I_L3765_322
 3765.                if ( $I_L3765_322 >= $F_A36 ) exit
 3765.             enddo
 3765.          endif
 3765.          _free( t$1766 )
 3769.          if ( nsol > 0 ) then
 3769.             $I_L3769_260 = 0
 3769. !dir$ ivdep
 3769.             do
 3770.                ozale(1 + $I_L3769_260) = 0.0
 3771.                $I_L3769_260 = 1 + $I_L3769_260
 3769.                if ( $I_L3769_260 >= nsol ) exit
 3769.             enddo
 3769.          endif
 3772.          if ( nslmp1 > 0 ) then
 3772.             $I_L3772_262 = 0
 3772. !dir$ ivdep
 3772.             do
 3773.                oa(1 + $I_L3772_262) = 476.0 * oa(1 + $I_L3772_262) * dp(1 + $I_L3772_262)
 3774.                $I_L3772_262 = 1 + $I_L3772_262
 3772.                if ( $I_L3772_262 >= nslmp1 ) exit
 3772.             enddo
 3772.          endif
 3775.          if ( -2 + np >= 0 ) then
 3779.             if ( nsol > 0 ) then
 3775.                $I_L3775_356 = 0
 3775.                do
 3779.                   $I_L3779_264 = 0
 3779. !dir$ ivdep
 3779.                   do
 3780.                      ozale(1 + nsol + $I_L3779_264 + nsol * $I_L3775_356) = ozale(1 + $I_L3779_264 + nsol * $I_L3775_356) + oa(1 + $I_L3779_264 + nsol * $I_L3775_356)
 3781.                      $I_L3779_264 = 1 + $I_L3779_264
 3779.                      if ( $I_L3779_264 >= nsol ) exit
 3779.                   enddo
 3782.                   $I_L3775_356 = 1 + $I_L3775_356
 3781.                   if ( $I_L3775_356 >= -1 + np ) exit
 3781.                enddo
 3781.             endif
 3781.          endif
 3781.       endif
 3789.       if ( nsol > 0 ) then
 3789.          $I_L3789_266 = 0
 3789. !dir$ ivdep
 3789.          do
 3790.             swale(1 + $I_L3789_266) = 0.0
 3817.             $e1_WR0_R0 = -8.4999999999999998e-1 * cosmag(1 + $I_L3789_266)
 3818.             $e1_WR0_R0 = _expn( $e1_WR0_R0 )
 3818.             e1(1 + $I_L3789_266) = $e1_WR0_R0
 3791.             $I_L3789_266 = 1 + $I_L3789_266
 3789.             if ( $I_L3789_266 >= nsol ) exit
 3789.          enddo
 3820.          $I_L3820_274 = 0
 3820. !dir$ ivdep
 3820.          do
 3821.             $b1_WR0_R1 = 3.0 * cmu(1 + $I_L3820_274)
 3822.             $c1_WR0_R2 = 2.0 + -$b1_WR0_R1
 3822.             c1(1 + $I_L3820_274) = ( 2.0 + -$b1_WR0_R1 )
 3823.             $b1_WR0_R1 = 2.0 + $b1_WR0_R1
 3823.             b1(1 + $I_L3820_274) = $b1_WR0_R1
 3825.             $a1_WR0_R4 = rcn1 * ( $b1_WR0_R1 + $c1_WR0_R2 * e1(1 + $I_L3820_274) )
 3828.             $dnim_WR0_R6 = $a1_WR0_R4 + -e1(1 + $I_L3820_274)
 3830.             $rlo_WR0_R7 = ( 1.0 + -$a1_WR0_R4 ) + ( 5.7600399999999996e-1 * ( $dnim_WR0_R6 * agv(1 + $I_L3820_274) + e1(1 + $I_L3820_274) * rsurfv(1 + $I_L3820_274) ) * 1.0/( 1.0 + -4.2399599999999998e-1 * agv(1 + $I_L3820_274) ) )
 3842.             $e1_WR0_R3 = -1.5745999999999999e-1 * cosmag(1 + $I_L3820_274)
 3843.             $e1_WR0_R3 = _expn( $e1_WR0_R3 )
 3843.             e1(1 + $I_L3820_274) = $e1_WR0_R3
 3834.             $rlo_WR0_R7 = athrd * $rlo_WR0_R7 + tthrd * rsurfv(1 + $I_L3820_274)
 3834.             rlo(1 + $I_L3820_274) = $rlo_WR0_R7
 3844.             $I_L3820_274 = 1 + $I_L3820_274
 3820.             if ( $I_L3820_274 >= nsol ) exit
 3820.          enddo
 3845.          $I_L3845_276 = 0
 3845. !dir$ ivdep
 3845.          do
 3846.             tr1(1 + $I_L3845_276) = e1(1 + $I_L3845_276)
 3847.             $a1_WR0_R8 = rcn2 * ( b1(1 + $I_L3845_276) + e1(1 + $I_L3845_276) * c1(1 + $I_L3845_276) )
 3849.             $dnim_WR0_R10 = $a1_WR0_R8 + -e1(1 + $I_L3845_276)
 3850.             rlg(1 + $I_L3845_276) = ( 1.0 + -$a1_WR0_R8 ) + ( 8.8e-1 * ( $dnim_WR0_R10 * agv(1 + $I_L3845_276) + e1(1 + $I_L3845_276) * rsurfv(1 + $I_L3845_276) ) * 1.0/( 1.0 + -1.2e-1 * agv(1 + $I_L3845_276) ) )
 3853.             $I_L3845_276 = 1 + $I_L3845_276
 3845.             if ( $I_L3845_276 >= nsol ) exit
 3845.          enddo
 3845.       endif
 3792.       if ( nsolnp > 0 ) then
 3792.          $I_L3792_268 = 0
 3792. !dir$ ivdep
 3792.          do
 3793.             pu(1 + $I_L3792_268) = pu(1 + $I_L3792_268) * pu(1 + $I_L3792_268)
 3794.             $I_L3792_268 = 1 + $I_L3792_268
 3792.             if ( $I_L3792_268 >= nsolnp ) exit
 3792.          enddo
 3792.       endif
 3795.       $F_A37 = nslmp1
 3795.       if ( nslmp1 > 0 ) then
 3795.          $I_L3795_324 = 0
 3795. !dir$ ivdep
 3795.          do
 3795.             swil(1 + $I_L3795_324) = _sqrt( ta(1 + $I_L3795_324) )
 3795.             $I_L3795_324 = 1 + $I_L3795_324
 3795.             if ( $I_L3795_324 >= $F_A37 ) exit
 3795.          enddo
 3796.          $I_L3796_270 = 0
 3796. !dir$ ivdep
 3796.          do
 3798.             swil(1 + $I_L3796_270) = ( wa(1 + $I_L3796_270) * ( pu(1 + nsol + $I_L3796_270) + -pu(1 + $I_L3796_270) ) * 8.3221539065854878e-3 * 1.0/swil(1 + $I_L3796_270) )
 3800.             $I_L3796_270 = 1 + $I_L3796_270
 3796.             if ( $I_L3796_270 >= nslmp1 ) exit
 3796.          enddo
 3796.       endif
 3801.       if ( -2 + np >= 0 ) then
 3805.          if ( nsol > 0 ) then
 3801.             $I_L3801_358 = 0
 3801.             do
 3805.                $I_L3805_272 = 0
 3805. !dir$ ivdep
 3805.                do
 3806.                   swale(1 + nsol + $I_L3805_272 + nsol * $I_L3801_358) = swale(1 + $I_L3805_272 + nsol * $I_L3801_358) + swil(1 + $I_L3805_272 + nsol * $I_L3801_358)
 3807.                   $I_L3805_272 = 1 + $I_L3805_272
 3805.                   if ( $I_L3805_272 >= nsol ) exit
 3805.                enddo
 3808.                $I_L3801_358 = 1 + $I_L3801_358
 3807.                if ( $I_L3801_358 >= -1 + np ) exit
 3807.             enddo
 3807.          endif
 3807.       endif
 3859.       call clear( ncols, kmax, sqrt3, np, lmp1, nsol, nslmp1, nsolnp, dooz, scosz(1), cosmag(1), dsclr(1), rvbl(1), rvdl(1), rnbl(1), rndl(1), agv(1), rsurfv(1), rsurfn(1), sl(1), rlo(1), rlg(1), tr1(1), e0(1), ozale(1), swale(1), aclr(1) )
 3868.       if ( nslmp1 > 0 ) then
 3868.          $I_L3868_278 = 0
 3868. !dir$ ivdep
 3868.          do
 3869.             css(1 + $I_L3868_278) = max( css(1 + $I_L3868_278), ccu(1 + $I_L3868_278) )
 3870.             $I_L3868_278 = 1 + $I_L3868_278
 3868.             if ( $I_L3868_278 >= nslmp1 ) exit
 3868.          enddo
 3868.       endif
 3877.       if ( nsol > 0 ) then
 3877.          $I_L3877_280 = 0
 3877. !dir$ ivdep
 3877.          do
 3878.             icc(1 + $I_L3877_280) = np
 3879.             $I_L3877_280 = 1 + $I_L3877_280
 3877.             if ( $I_L3877_280 >= nsol ) exit
 3877.          enddo
 3877.       endif
 3880.       if ( lmp1 > 0 ) then
 3880.          $I_L3880_360 = 0
 3880.          do
 3888.             if ( nsol > 0 ) then
 3888.                $I_L3888_282 = 0
 3888. !dir$ ivdep
 3888.                do
 3889.                   bitc(1 + $I_L3888_282) = css(1 + $I_L3888_282 + -nsol + -nsol + -( nsol * $I_L3880_360 ) + nsol * np) > 0.0
 3890.                   $I_L3888_282 = 1 + $I_L3888_282
 3888.                   if ( $I_L3888_282 >= nsol ) exit
 3888.                enddo
 3888.             endif
 3894.             t$1815 = ( max( 0, nsol ) )
 3894.             t$1818 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nsol ) ) ) ) ), 8 )
 3894.             $F_A38 = nsol
 3894.             if ( nsol > 0 ) then
 3894.                $I_L3894_326 = 0
 3894. !dir$ ivdep
 3894.                do
 3894.                   t$1817(1 + $I_L3894_326) = bitc(1 + $I_L3894_326)
 3894.                   $I_L3894_326 = 1 + $I_L3894_326
 3894.                   if ( $I_L3894_326 >= $F_A38 ) exit
 3894.                enddo
 3894.             endif
 3894.             $F_A39 = nsol
 3894.             if ( nsol > 0 ) then
 3894.                $I_L3894_328 = 0
 3894. !dir$ ivdep
 3894.                do
 3894.                   if ( t$1817(1 + $I_L3894_328) /= 0 ) then
 3894.                      icc(1 + $I_L3894_328) = ( -1 + np + -$I_L3880_360 )
 3894.                   endif
 3894.                   $I_L3894_328 = 1 + $I_L3894_328
 3894.                   if ( $I_L3894_328 >= $F_A39 ) exit
 3894.                enddo
 3894.             endif
 3894.             _free( t$1818 )
 3895.             $I_L3880_360 = 1 + $I_L3880_360
 3895.             if ( $I_L3880_360 >= lmp1 ) exit
 3895.          enddo
 3895.       endif
 3905.       $F_A40 = nsol
 3905.       if ( nsol > 0 ) then
 3905.          $I_L3905_330 = 0
 3905. !dir$ ivdep
 3905.          do
 3905.             bitd(1 + $I_L3905_330) = icc(1 + $I_L3905_330) + -np /= 0
 3905.             $I_L3905_330 = 1 + $I_L3905_330
 3905.             if ( $I_L3905_330 >= $F_A40 ) exit
 3905.          enddo
 3905.       endif
 3906.       $Reduc_A41 = 0
 3906.       $F_A43 = nsol
 3906.       if ( nsol > 0 ) then
 3906.          $I_L3906_332 = 0
 3906. !dir$ ivdep
 3906.          do
 3906.             if ( bitd(1 + $I_L3906_332) /= 0 ) then
 3906.                $Reduc_A41 = 1 + $Reduc_A41
 3906.             endif
 3906.             $I_L3906_332 = 1 + $I_L3906_332
 3906.             if ( $I_L3906_332 >= $F_A43 ) exit
 3906.          enddo
 3906.       endif
 3906.       ncld = $Reduc_A41
 3910.       if ( $Reduc_A41 == 0 ) then
 3911.          if ( nslmp1 > 0 ) then
 3911.             $I_L3911_284 = 0
 3911. !dir$ ivdep
 3911.             do
 3912.                acld(1 + $I_L3911_284) = aclr(1 + $I_L3911_284)
 3913.                $I_L3911_284 = 1 + $I_L3911_284
 3911.                if ( $I_L3911_284 >= nslmp1 ) exit
 3911.             enddo
 3911.          endif
 3914.          if ( nsol > 0 ) then
 3914.             $I_L3914_286 = 0
 3914. !dir$ ivdep
 3914.             do
 3915.                sc(1 + $I_L3914_286) = sl(1 + $I_L3914_286)
 3916.                dscld(1 + $I_L3914_286) = dsclr(1 + $I_L3914_286)
 3917.                rndc(1 + $I_L3914_286) = rndl(1 + $I_L3914_286)
 3918.                rvdc(1 + $I_L3914_286) = rvdl(1 + $I_L3914_286)
 3919.                rnbc(1 + $I_L3914_286) = rnbl(1 + $I_L3914_286)
 3920.                rvbc(1 + $I_L3914_286) = rvbl(1 + $I_L3914_286)
 3921.                $I_L3914_286 = 1 + $I_L3914_286
 3914.                if ( $I_L3914_286 >= nsol ) exit
 3914.             enddo
 3914.          endif
 3525.          _free( t$333 )
 3525.       else
 3927.          ncldp1 = 1 + $Reduc_A41
 3928.          nclmp1 = lmp1 * $Reduc_A41
 3929.          ncldnp = np * $Reduc_A41
 3935.          if ( lmp1 > 0 ) then
 3935.             $I_L3935_362 = 0
 3935.             do
 3937.                $F_A44 = 1 + -1 + nsol
 3937.                if ( -1 + nsol >= 0 ) then
 3937.                   $I_L3937_334 = 0
 3937. !dir$ ivdep
 3937.                   do
 3937.                      bitd(1 + nsol + $I_L3937_334 + nsol * $I_L3935_362) = icc(1 + $I_L3937_334) + -np /= 0
 3937.                      $I_L3937_334 = 1 + $I_L3937_334
 3937.                      if ( $I_L3937_334 >= $F_A44 ) exit
 3937.                   enddo
 3937.                endif
 3938.                $I_L3935_362 = 1 + $I_L3935_362
 3935.                if ( $I_L3935_362 >= lmp1 ) exit
 3935.             enddo
 3935.          endif
 3945.          t$1828 = ( max( 0, nsolnp ) )
 3945.          t$1831 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nsolnp ) ) ) ) ), 8 )
 3945.          $F_A45 = nsolnp
 3945.          if ( nsolnp > 0 ) then
 3945.             $I_L3945_336 = 0
 3945. !dir$ ivdep
 3945.             do
 3945.                t$1830(1 + $I_L3945_336) = listim(1 + $I_L3945_336)
 3945.                $I_L3945_336 = 1 + $I_L3945_336
 3945.                if ( $I_L3945_336 >= $F_A45 ) exit
 3945.             enddo
 3945.          endif
 3945.          t$1832 = ( max( 0, nsolnp ) )
 3945.          t$1835 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nsolnp ) ) ) ) ), 8 )
 3945.          $F_A46 = nsolnp
 3945.          if ( nsolnp > 0 ) then
 3945.             $I_L3945_338 = 0
 3945. !dir$ ivdep
 3945.             do
 3945.                t$1834(1 + $I_L3945_338) = bitd(1 + $I_L3945_338)
 3945.                $I_L3945_338 = 1 + $I_L3945_338
 3945.                if ( $I_L3945_338 >= $F_A46 ) exit
 3945.             enddo
 3945.          endif
 3945.          $PackIdx_A0 = 0
 3945.          if ( nsolnp > 0 ) then
 3945.             $I_L3945_318 = 0
 3945. !dir$ ivdep
 3945.             do
 3945.                if ( t$1834(1 + $I_L3945_318) /= .false. ) then
 3945.                   litd(1 + $PackIdx_A0) = t$1830(1 + $I_L3945_318)
 3945.                   $PackIdx_A0 = 1 + $PackIdx_A0
 3945.                endif
 3945.                $I_L3945_318 = 1 + $I_L3945_318
 3945.                if ( $I_L3945_318 >= max( 0, nsolnp ) ) exit
 3945.             enddo
 3945.          endif
 3945.          _free( t$1835 )
 3945.          _free( t$1831 )
 3946.          if ( $Reduc_A41 > 0 ) then
 3946.             $I_L3946_288 = 0
 3946. !dir$ ivdep
 3946.             do
 3947.                if ( litd(1 + $I_L3946_288) <= nsol ) then
 3948.                   icl(1 + $I_L3946_288) = icc(litd(1 + $I_L3946_288))
 3949.                   cmuc(1 + $I_L3946_288) = cmu(litd(1 + $I_L3946_288))
 3950.                   agvcd(1 + $I_L3946_288) = agv(litd(1 + $I_L3946_288))
 3951.                   agncd(1 + $I_L3946_288) = agn(litd(1 + $I_L3946_288))
 3952.                   rsvcd(1 + $I_L3946_288) = rsurfv(litd(1 + $I_L3946_288))
 3953.                   rsncd(1 + $I_L3946_288) = rsurfn(litd(1 + $I_L3946_288))
 3954.                   scosc(1 + $I_L3946_288) = scosz(litd(1 + $I_L3946_288))
 3955.                   csmcld(1 + $I_L3946_288) = cosmag(litd(1 + $I_L3946_288))
 3955.                endif
 3957.                $I_L3946_288 = 1 + $I_L3946_288
 3956.                if ( $I_L3946_288 >= $Reduc_A41 ) exit
 3956.             enddo
 3956.          endif
 3958.          if ( lmp1 * $Reduc_A41 > 0 ) then
 3958.             $I_L3958_290 = 0
 3958. !dir$ ivdep
 3958.             do
 3959.                if ( litd(1 + $I_L3958_290) <= nslmp1 ) then
 3960.                   swilc(1 + $I_L3958_290) = swil(litd(1 + $I_L3958_290))
 3960.                endif
 3961.                $I_L3958_290 = 1 + $I_L3958_290
 3959.                if ( $I_L3958_290 >= ( lmp1 * $Reduc_A41 ) ) exit
 3959.             enddo
 3959.          endif
 3962.          if ( dooz /= .false. ) then
 3963.             if ( np * $Reduc_A41 > 0 ) then
 3963.                $I_L3963_292 = 0
 3963. !dir$ ivdep
 3963.                do
 3964.                   if ( litd(1 + $I_L3963_292) <= nsolnp ) then
 3964.                      ozcd(1 + $I_L3963_292) = ozale(litd(1 + $I_L3963_292))
 3964.                   endif
 3965.                   $I_L3963_292 = 1 + $I_L3963_292
 3964.                   if ( $I_L3963_292 >= ( np * $Reduc_A41 ) ) exit
 3964.                enddo
 3964.             endif
 3969.             if ( lmp1 > 0 ) then
 3973.                if ( $Reduc_A41 > 0 ) then
 3969.                   $I_L3969_364 = 0
 3969.                   do
 3970.                      $F_A47 = $Reduc_A41
 3970.                      $I_L3970_340 = 0
 3970. !dir$ ivdep
 3970.                      do
 3970.                         bitc(1 + $I_L3970_340) = icl(1 + $I_L3970_340) <= ( 1 + $I_L3969_364 )
 3970.                         $I_L3970_340 = 1 + $I_L3970_340
 3970.                         if ( $I_L3970_340 >= $F_A47 ) exit
 3970.                      enddo
 3973.                      $CSVL_V0 = cvmg( $Reduc_A41, 4, and( $Reduc_A41 > 0, and( $Reduc_A41 <= 4, $Reduc_A41 <= -1 + $Reduc_A41 ) ) )
 3973.                      if ( $CSVL_V0 <= 4 ) then
 3973.                         $I_L3973_373 = 0
 3973.                         do
 3974.                            if ( bitc(1 + $I_L3973_373) /= .false. ) then
 3974.                               ozcd(1 + $I_L3973_373 + $Reduc_A41 + $I_L3969_364 * $Reduc_A41) = ozcd(1 + $I_L3973_373 + $I_L3969_364 * $Reduc_A41)
 3974.                            endif
 3975.                            $I_L3973_373 = 1 + $I_L3973_373
 3974.                            if ( $I_L3973_373 >= $Reduc_A41 ) exit
 3974.                         enddo
 3974.                      else
 3973.                         $I_L3973_368 = 0
 3973. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 3973.                         do
 3974.                            if ( bitc(1 + $I_L3973_368) /= .false. ) then
 3974.                               ozcd(1 + $I_L3973_368 + $Reduc_A41 + $I_L3969_364 * $Reduc_A41) = ozcd(1 + $I_L3973_368 + $I_L3969_364 * $Reduc_A41)
 3974.                            endif
 3975.                            $I_L3973_368 = 1 + $I_L3973_368
 3974.                            if ( $I_L3973_368 >= $Reduc_A41 ) exit
 3974.                         enddo
 3974.                      endif
 3976.                      $I_L3969_364 = 1 + $I_L3969_364
 3975.                      if ( $I_L3969_364 >= lmp1 ) exit
 3975.                   enddo
 3975.                endif
 3975.             endif
 3975.          endif
 3995.          if ( icld == 1 ) then
 3996.             if ( nslmp1 > 0 ) then
 3996.                $I_L3996_296 = 0
 3996. !dir$ ivdep
 3996.                do
 3997.                   e0(1 + $I_L3996_296) = 5.0000000000000003e-2
 3998.                   bitc(1 + $I_L3996_296) = ta(1 + $I_L3996_296) < 253.0 .and. ccu(1 + $I_L3996_296) == 0.0
 4000.                   $I_L3996_296 = 1 + $I_L3996_296
 3996.                   if ( $I_L3996_296 >= nslmp1 ) exit
 3996.                enddo
 3996.             endif
 4001.             t$1854 = ( max( 0, nslmp1 ) )
 4001.             t$1857 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nslmp1 ) ) ) ) ), 8 )
 4001.             $F_A49 = nslmp1
 4001.             if ( nslmp1 > 0 ) then
 4001.                $I_L4001_342 = 0
 4001. !dir$ ivdep
 4001.                do
 4001.                   t$1856(1 + $I_L4001_342) = bitc(1 + $I_L4001_342)
 4001.                   $I_L4001_342 = 1 + $I_L4001_342
 4001.                   if ( $I_L4001_342 >= $F_A49 ) exit
 4001.                enddo
 4001.             endif
 4001.             $F_A50 = nslmp1
 4001.             if ( nslmp1 > 0 ) then
 4001.                $I_L4001_344 = 0
 4001. !dir$ ivdep
 4001.                do
 4001.                   if ( t$1856(1 + $I_L4001_344) /= 0 ) then
 4001.                      e0(1 + $I_L4001_344) = 2.5000000000000001e-2
 4001.                   endif
 4001.                   $I_L4001_344 = 1 + $I_L4001_344
 4001.                   if ( $I_L4001_344 >= $F_A50 ) exit
 4001.                enddo
 4001.             endif
 4001.             _free( t$1857 )
 4003.          else if ( icld == 2 ) then
 4004.             if ( nslmp1 > 0 ) then
 4004.                $I_L4004_298 = 0
 4004. !dir$ ivdep
 4004.                do
 4005.                   $e0_WR0_R11 = ( ta(1 + $I_L4004_298) + -tcrit )
 4008.                   $e0_WR0_R11 = max( 1.0, $e0_WR0_R11 )
 4015.                   tauc(1 + $I_L4004_298) = ( min( ecrit, ( 1.9999999999999999e-6 * $e0_WR0_R11 * $e0_WR0_R11 ) ) )
 4019.                   $e0_WR0_R11 = 8.0000000000000002e-2 + 6.9487500000000001e-3 * ( ta(1 + $I_L4004_298) + -tice )
 4023.                   $e0_WR0_R11 = min( 8.0000000000000002e-2, max( ecrit, $e0_WR0_R11 ) )
 4023.                   e0(1 + $I_L4004_298) = $e0_WR0_R11
 4024.                   bitc(1 + $I_L4004_298) = $e0_WR0_R11 == ecrit
 4006.                   $I_L4004_298 = 1 + $I_L4004_298
 4004.                   if ( $I_L4004_298 >= nslmp1 ) exit
 4004.                enddo
 4004.             endif
 4027.             t$1876 = ( max( 0, nslmp1 ) )
 4027.             t$1879 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nslmp1 ) ) ) ) ), 8 )
 4027.             $F_A51 = nslmp1
 4027.             if ( nslmp1 > 0 ) then
 4027.                $I_L4027_346 = 0
 4027. !dir$ ivdep
 4027.                do
 4027.                   t$1878(1 + $I_L4027_346) = bitc(1 + $I_L4027_346)
 4027.                   $I_L4027_346 = 1 + $I_L4027_346
 4027.                   if ( $I_L4027_346 >= $F_A51 ) exit
 4027.                enddo
 4027.             endif
 4027.             $F_A52 = nslmp1
 4027.             if ( nslmp1 > 0 ) then
 4027.                $I_L4027_348 = 0
 4027. !dir$ ivdep
 4027.                do
 4027.                   if ( t$1878(1 + $I_L4027_348) /= 0 ) then
 4027.                      e0(1 + $I_L4027_348) = tauc(1 + $I_L4027_348)
 4027.                   endif
 4027.                   $I_L4027_348 = 1 + $I_L4027_348
 4027.                   if ( $I_L4027_348 >= $F_A52 ) exit
 4027.                enddo
 4027.             endif
 4027.             _free( t$1879 )
 4028.             $F_A53 = nslmp1
 4028.             if ( nslmp1 > 0 ) then
 4028.                $I_L4028_350 = 0
 4028. !dir$ ivdep
 4028.                do
 4028.                   bitc(1 + $I_L4028_350) = ccu(1 + $I_L4028_350) > 0.0
 4028.                   $I_L4028_350 = 1 + $I_L4028_350
 4028.                   if ( $I_L4028_350 >= $F_A53 ) exit
 4028.                enddo
 4028.             endif
 4029.             t$1880 = ( max( 0, nslmp1 ) )
 4029.             t$1883 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, nslmp1 ) ) ) ) ), 8 )
 4029.             $F_A54 = nslmp1
 4029.             if ( nslmp1 > 0 ) then
 4029.                $I_L4029_352 = 0
 4029. !dir$ ivdep
 4029.                do
 4029.                   t$1882(1 + $I_L4029_352) = bitc(1 + $I_L4029_352)
 4029.                   $I_L4029_352 = 1 + $I_L4029_352
 4029.                   if ( $I_L4029_352 >= $F_A54 ) exit
 4029.                enddo
 4029.             endif
 4029.             $F_A55 = nslmp1
 4029.             if ( nslmp1 > 0 ) then
 4029.                $I_L4029_354 = 0
 4029. !dir$ ivdep
 4029.                do
 4029.                   if ( t$1882(1 + $I_L4029_354) /= 0 ) then
 4029.                      e0(1 + $I_L4029_354) = 1.6e-1
 4029.                   endif
 4029.                   $I_L4029_354 = 1 + $I_L4029_354
 4029.                   if ( $I_L4029_354 >= $F_A55 ) exit
 4029.                enddo
 4029.             endif
 4029.             _free( t$1883 )
 4029.          else if ( icld == 3 ) then
 4032.             if ( nslmp1 > 0 ) then
 4032.                $I_L4032_300 = 0
 4032. !dir$ ivdep
 4032.                do
 4034.                   e0(1 + $I_L4032_300) = css(1 + $I_L4032_300) * tauc(1 + $I_L4032_300) * _sqrt( css(1 + $I_L4032_300) )
 4035.                   $I_L4032_300 = 1 + $I_L4032_300
 4032.                   if ( $I_L4032_300 >= nslmp1 ) exit
 4032.                enddo
 4032.             endif
 4032.          endif
 4042.          if ( icld /= 3 ) then
 4043.             if ( nslmp1 > 0 ) then
 4043.                $I_L4043_302 = 0
 4043. !dir$ ivdep
 4043.                do
 4044.                   e0(1 + $I_L4043_302) = dpc(1 + $I_L4043_302) * e0(1 + $I_L4043_302) * css(1 + $I_L4043_302)
 4045.                   $I_L4043_302 = 1 + $I_L4043_302
 4043.                   if ( $I_L4043_302 >= nslmp1 ) exit
 4043.                enddo
 4043.             endif
 4043.          endif
 4051.          if ( lmp1 * $Reduc_A41 > 0 ) then
 4051.             $I_L4051_304 = 0
 4051. !dir$ ivdep
 4051.             do
 4052.                if ( litd(1 + $I_L4051_304) <= nslmp1 ) then
 4052.                   tauc(1 + $I_L4051_304) = e0(litd(1 + $I_L4051_304))
 4052.                endif
 4053.                $I_L4051_304 = 1 + $I_L4051_304
 4052.                if ( $I_L4051_304 >= ( lmp1 * $Reduc_A41 ) ) exit
 4052.             enddo
 4052.          endif
 4055.          if ( $Reduc_A41 > 0 ) then
 4055.             $I_L4055_306 = 0
 4055. !dir$ ivdep
 4055.             do
 4056.                taut(1 + $I_L4055_306) = 0.0
 4057.                $I_L4055_306 = 1 + $I_L4055_306
 4055.                if ( $I_L4055_306 >= $Reduc_A41 ) exit
 4055.             enddo
 4055.          endif
 4058.          if ( lmp1 > 0 ) then
 4060.             if ( $Reduc_A41 > 0 ) then
 4058.                $SI_L4058_366_G2 = 0
 4058.                do
 4060.                   $SI_L4060_308_G5 = 0
 4060.                   do
 4058.                      $I_L4058_375 = 0
 4058. !dir$ shortloop16
 4058. !dir$ blocking_size( 4, 4 )
 4058.                      do
 4060.                         $I_L4060_370 = 0
 4060. !dir$ ivdep
 4060. !dir$ blocking_size( 256, 256 )
 4060.                         do
 4061.                            taut(1 + $I_L4060_370 + 256 * $SI_L4060_308_G5) = taut(1 + $I_L4060_370 + 256 * $SI_L4060_308_G5) + tauc(1 + $I_L4060_370 + 256 * $SI_L4060_308_G5 + $I_L4058_375 * $Reduc_A41 + 4 * $SI_L4058_366_G2 * $Reduc_A41)
 4060.                            $I_L4060_370 = 1 + $I_L4060_370
 4060.                            if ( $I_L4060_370 >= min( $Reduc_A41, 256 + 256 * $SI_L4060_308_G5 ) + -256 * $SI_L4060_308_G5 ) exit
 4060.                         enddo
 4058.                         $I_L4058_375 = 1 + $I_L4058_375
 4058.                         if ( $I_L4058_375 >= min( lmp1, 4 + 4 * $SI_L4058_366_G2 ) + -4 * $SI_L4058_366_G2 ) exit
 4058.                      enddo
 4060.                      $SI_L4060_308_G5 = 1 + $SI_L4060_308_G5
 4062.                      if ( $SI_L4060_308_G5 >= _rsh( 255 + $Reduc_A41, 8 ) ) exit
 4062.                   enddo
 4058.                   $SI_L4058_366_G2 = 1 + $SI_L4058_366_G2
 4058.                   if ( $SI_L4058_366_G2 >= _rsh( 3 + lmp1, 2 ) ) exit
 4058.                enddo
 4058.             endif
 4058.          endif
 4073.          if ( $Reduc_A41 > 0 ) then
 4073.             $I_L4073_310 = 0
 4073. !dir$ ivdep
 4073.             do
 4074.                tlim(1 + $I_L4073_310) = 1.0/( 1.0 + 1.2989999999999999e-1 * taut(1 + $I_L4073_310) )
 4075.                $arg1_WR0_R13 = -2.7750000000000002e-1 * taut(1 + $I_L4073_310) * csmcld(1 + $I_L4073_310)
 4076.                e1(1 + $I_L4073_310) = _expn( $arg1_WR0_R13 )
 4077.                $I_L4073_310 = 1 + $I_L4073_310
 4073.                if ( $I_L4073_310 >= $Reduc_A41 ) exit
 4073.             enddo
 4078.             $I_L4078_312 = 0
 4078. !dir$ ivdep
 4078.             do
 4079.                tr2(1 + $I_L4078_312) = e1(1 + $I_L4078_312)
 4080.                $b1_WR0_R14 = 3.0 * cmuc(1 + $I_L4078_312)
 4081.                $c1_WR0_R15 = 2.0 + -$b1_WR0_R14
 4081.                c1(1 + $I_L4078_312) = ( 2.0 + -$b1_WR0_R14 )
 4082.                $b1_WR0_R14 = 2.0 + $b1_WR0_R14
 4082.                b1(1 + $I_L4078_312) = $b1_WR0_R14
 4083.                $a1_WR0_R16 = $b1_WR0_R14 + $c1_WR0_R15 * e1(1 + $I_L4078_312)
 4084.                $a1_WR0_R16 = ( $a1_WR0_R16 * 1.0/( 4.0 + 4.5000000000000001e-1 * taut(1 + $I_L4078_312) ) )
 4086.                $dnim_WR0_R18 = $a1_WR0_R16 + -e1(1 + $I_L4078_312)
 4087.                rc1(1 + $I_L4078_312) = ( 1.0 + -$a1_WR0_R16 ) + ( tlim(1 + $I_L4078_312) * ( $dnim_WR0_R18 * agvcd(1 + $I_L4078_312) + e1(1 + $I_L4078_312) * rsvcd(1 + $I_L4078_312) ) * 1.0/( 1.0 + -( agvcd(1 + $I_L4078_312) * ( 1.0 + -tlim(1 + $I_L4078_312) ) ) ) )
 4090.                rc2(1 + $I_L4078_312) = ( 1.0 + -$a1_WR0_R16 ) + ( tlim(1 + $I_L4078_312) * ( $dnim_WR0_R18 * agncd(1 + $I_L4078_312) + e1(1 + $I_L4078_312) * rsncd(1 + $I_L4078_312) ) * 1.0/( 1.0 + -( agncd(1 + $I_L4078_312) * ( 1.0 + -tlim(1 + $I_L4078_312) ) ) ) )
 4100.                $taui_WR0_R19 = 8.4999999999999998e-1 + taut(1 + $I_L4078_312)
 4100.                taui(1 + $I_L4078_312) = $taui_WR0_R19
 4101.                $g_WR0_R20 = ( 8.4999999999999998e-1 * taut(1 + $I_L4078_312) * 1.0/$taui_WR0_R19 )
 4101.                g(1 + $I_L4078_312) = $g_WR0_R20
 4102.                tlim(1 + $I_L4078_312) = 1.0/( 1.0 + 8.6599999999999999e-1 * $taui_WR0_R19 * ( 1.0 + -$g_WR0_R20 ) )
 4104.                $arg1_WR0_R21 = -( csmcld(1 + $I_L4078_312) * $taui_WR0_R19 * ( 1.0 + -( $g_WR0_R20 * $g_WR0_R20 ) ) )
 4106.                e1(1 + $I_L4078_312) = _expn( $arg1_WR0_R21 )
 4107.                $I_L4078_312 = 1 + $I_L4078_312
 4078.                if ( $I_L4078_312 >= $Reduc_A41 ) exit
 4078.             enddo
 4108.             $I_L4108_314 = 0
 4108. !dir$ ivdep
 4108.             do
 4109.                $a1_WR0_R22 = b1(1 + $I_L4108_314) + e1(1 + $I_L4108_314) * c1(1 + $I_L4108_314)
 4110.                $a1_WR0_R22 = ( $a1_WR0_R22 * 1.0/( 4.0 + 3.0 * taui(1 + $I_L4108_314) * ( 1.0 + -g(1 + $I_L4108_314) ) ) )
 4113.                $dnim_WR0_R26 = $a1_WR0_R22 + -e1(1 + $I_L4108_314)
 4114.                $rco_WR0_R27 = ( 1.0 + -$a1_WR0_R22 ) + ( tlim(1 + $I_L4108_314) * ( $dnim_WR0_R26 * agvcd(1 + $I_L4108_314) + e1(1 + $I_L4108_314) * rsvcd(1 + $I_L4108_314) ) * 1.0/( 1.0 + -( agvcd(1 + $I_L4108_314) * ( 1.0 + -tlim(1 + $I_L4108_314) ) ) ) )
 4126.                $taui_WR0_R24 = 1.5745999999999999e-1 + taut(1 + $I_L4108_314)
 4126.                taui(1 + $I_L4108_314) = $taui_WR0_R24
 4127.                $g_WR0_R23 = ( 8.4999999999999998e-1 * taut(1 + $I_L4108_314) * 1.0/$taui_WR0_R24 )
 4127.                g(1 + $I_L4108_314) = $g_WR0_R23
 4128.                tlim(1 + $I_L4108_314) = 1.0/( 1.0 + 8.6599999999999999e-1 * $taui_WR0_R24 * ( 1.0 + -$g_WR0_R23 ) )
 4130.                $arg1_WR0_R28 = -( csmcld(1 + $I_L4108_314) * $taui_WR0_R24 * ( 1.0 + -( $g_WR0_R23 * $g_WR0_R23 ) ) )
 4132.                e1(1 + $I_L4108_314) = _expn( $arg1_WR0_R28 )
 4117.                $rco_WR0_R27 = athrd * $rco_WR0_R27 + tthrd * rc1(1 + $I_L4108_314)
 4117.                rco(1 + $I_L4108_314) = $rco_WR0_R27
 4133.                $I_L4108_314 = 1 + $I_L4108_314
 4108.                if ( $I_L4108_314 >= $Reduc_A41 ) exit
 4108.             enddo
 4134.             $I_L4134_316 = 0
 4134. !dir$ ivdep
 4134.             do
 4135.                tr3(1 + $I_L4134_316) = e1(1 + $I_L4134_316)
 4136.                $a1_WR0_R29 = b1(1 + $I_L4134_316) + e1(1 + $I_L4134_316) * c1(1 + $I_L4134_316)
 4137.                $a1_WR0_R29 = ( $a1_WR0_R29 * 1.0/( 4.0 + 3.0 * taui(1 + $I_L4134_316) * ( 1.0 + -g(1 + $I_L4134_316) ) ) )
 4140.                $dnim_WR0_R31 = $a1_WR0_R29 + -e1(1 + $I_L4134_316)
 4141.                rcg(1 + $I_L4134_316) = ( 1.0 + -$a1_WR0_R29 ) + ( tlim(1 + $I_L4134_316) * ( $dnim_WR0_R31 * agvcd(1 + $I_L4134_316) + e1(1 + $I_L4134_316) * rsvcd(1 + $I_L4134_316) ) * 1.0/( 1.0 + -( agvcd(1 + $I_L4134_316) * ( 1.0 + -tlim(1 + $I_L4134_316) ) ) ) )
 4144.                $I_L4134_316 = 1 + $I_L4134_316
 4134.                if ( $I_L4134_316 >= $Reduc_A41 ) exit
 4134.             enddo
 4134.          endif
 4156.          call cloudy( ncols, kmax, scosc(1), cmuc(1), csmcld(1), dscld(1), rvbc(1), rvdc(1), rnbc(1), rndc(1), agvcd(1), agncd(1), rsvcd(1), rsncd(1), sc(1), rco(1), rcg(1), taut(1), rc2(1), tr1(1), tr2(1), tr3(1), ta(1), wa(1), oa(1), e0(1), pu(1), ozcd(1), swale(1), swil(1), css(1), acld(1), dpc(1), swilc(1), ccu(1), tauc(1), litd(1), sqrt3, gg, ggp, ggsq, np, lmp1, nsol, ncld, nclmp1, ncldnp, dooz )
 3525.          _free( t$333 )
 3525.       endif
 4163.       return
 4163.       end
 4163.       
 4184.       
 4184.       subroutine swrad( ncols, kmax, nls, noz, icld, inalb, s0, cosz, pl20, dpl, tl, ql, o3l, alvdf, alndf, alvdr, alndr, swinc, radvbc, radvdc, radnbc, radndc, radvbl, radvdl, radnbl, radndl, dswclr, dswtop, ssclr, ss, aslclr, asl, cld, clu, taud )
 4184.       t$32 = ncols
 4274.       t$428 = _zla( 0, ncols )
 4184.       t$33 = kmax
 4184.       t$429 = _zla( 0, ncols )
 4277.       t$430 = _zla( 0, kmax )
 4184.       t$431 = _zla( 0, ncols ) * _zla( 0, kmax )
 4184.       t$34 = ( ncols + ncols * kmax )
 4361.       t$432 = _zla( 0, ( ncols + ncols * kmax ) )
 4361.       t$435 = 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4358.       t$436 = 8 * ( 7 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4358.       t$438 = t$436 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4343.       t$439 = 8 * ( 7 + t$436 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4343.       t$441 = t$439 + 8 * _zla( 0, ncols )
 4347.       t$442 = 8 * ( 7 + t$439 + 8 * _zla( 0, ncols ) ) / 8
 4347.       t$444 = t$442 + 8 * _zla( 0, ncols )
 4342.       t$445 = 8 * ( 7 + t$442 + 8 * _zla( 0, ncols ) ) / 8
 4342.       t$447 = t$445 + 8 * _zla( 0, ncols )
 4184.       t$35 = ( ncols * kmax + 2 * ncols )
 4367.       t$448 = _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4367.       t$450 = t$445 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4368.       t$452 = t$445 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4366.       t$454 = t$445 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 4 * _zla( 0, ( ncols + ncols * kmax ) )
 4363.       t$455 = 8 * ( 7 + t$445 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 4 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4363.       t$457 = t$455 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4330.       t$458 = 8 * ( 7 + t$455 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4330.       t$460 = t$458 + 8 * _zla( 0, ncols )
 4334.       t$461 = 8 * ( 7 + t$458 + 8 * _zla( 0, ncols ) ) / 8
 4334.       t$463 = t$461 + 8 * _zla( 0, ncols )
 4331.       t$464 = 8 * ( 7 + t$461 + 8 * _zla( 0, ncols ) ) / 8
 4331.       t$466 = t$464 + 8 * _zla( 0, ncols )
 4335.       t$467 = 8 * ( 7 + t$464 + 8 * _zla( 0, ncols ) ) / 8
 4335.       t$469 = t$467 + 8 * _zla( 0, ncols )
 4360.       t$470 = 8 * ( 7 + t$467 + 8 * _zla( 0, ncols ) ) / 8
 4360.       t$472 = t$470 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4359.       t$473 = 8 * ( 7 + t$470 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4359.       t$475 = t$473 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4362.       t$476 = 8 * ( 7 + t$473 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4362.       t$478 = t$476 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4336.       t$479 = 8 * ( 7 + t$476 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4336.       t$481 = t$479 + 8 * _zla( 0, ncols )
 4332.       t$482 = 8 * ( 7 + t$479 + 8 * _zla( 0, ncols ) ) / 8
 4332.       t$484 = t$482 + 8 * _zla( 0, ncols )
 4365.       t$486 = t$482 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4364.       t$488 = t$482 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 4 * _zla( 0, ( ncols + ncols * kmax ) )
 4354.       t$489 = 8 * ( 7 + t$482 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) + 4 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4354.       t$491 = t$489 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4355.       t$492 = 8 * ( 7 + t$489 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4355.       t$494 = t$492 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4345.       t$495 = 8 * ( 7 + t$492 + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) ) ) / 8
 4345.       t$497 = t$495 + 8 * _zla( 0, ncols )
 4340.       t$498 = 8 * ( 7 + t$495 + 8 * _zla( 0, ncols ) ) / 8
 4340.       t$500 = t$498 + 8 * _zla( 0, ncols )
 4346.       t$501 = 8 * ( 7 + t$498 + 8 * _zla( 0, ncols ) ) / 8
 4346.       t$503 = t$501 + 8 * _zla( 0, ncols )
 4341.       t$504 = 8 * ( 7 + t$501 + 8 * _zla( 0, ncols ) ) / 8
 4341.       t$506 = t$504 + 8 * _zla( 0, ncols )
 4349.       t$507 = 8 * ( 7 + t$504 + 8 * _zla( 0, ncols ) ) / 8
 4349.       t$509 = t$507 + 8 * _zla( 0, ncols )
 4348.       t$510 = 8 * ( 7 + t$507 + 8 * _zla( 0, ncols ) ) / 8
 4348.       t$512 = t$510 + 8 * _zla( 0, ncols )
 4338.       t$513 = 8 * ( 7 + t$510 + 8 * _zla( 0, ncols ) ) / 8
 4338.       t$515 = t$513 + 8 * _zla( 0, ncols )
 4337.       t$516 = 8 * ( 7 + t$513 + 8 * _zla( 0, ncols ) ) / 8
 4337.       t$518 = t$516 + 8 * _zla( 0, ncols )
 4344.       t$519 = 8 * ( 7 + t$516 + 8 * _zla( 0, ncols ) ) / 8
 4344.       t$521 = t$519 + 8 * _zla( 0, ncols )
 4339.       t$522 = 8 * ( 7 + t$519 + 8 * _zla( 0, ncols ) ) / 8
 4339.       t$524 = t$522 + 8 * _zla( 0, ncols )
 4351.       t$525 = 8 * ( 7 + t$522 + 8 * _zla( 0, ncols ) ) / 8
 4351.       t$527 = t$525 + 8 * _zla( 0, ncols )
 4333.       t$528 = 8 * ( 7 + t$525 + 8 * _zla( 0, ncols ) ) / 8
 4333.       t$530 = t$528 + 8 * _zla( 0, ncols )
 4329.       t$531 = 8 * ( 7 + t$528 + 8 * _zla( 0, ncols ) ) / 8
 4329.       t$533 = t$531 + 8 * _zla( 0, ncols )
 4350.       t$534 = 8 * ( 7 + t$531 + 8 * _zla( 0, ncols ) ) / 8
 4350.       t$536 = t$534 + 8 * _zla( 0, ncols )
 4352.       t$537 = 8 * ( 7 + t$534 + 8 * _zla( 0, ncols ) ) / 8
 4352.       t$539 = t$537 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4356.       t$540 = 8 * ( 7 + t$537 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4356.       t$542 = t$540 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4353.       t$543 = 8 * ( 7 + t$540 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ) / 8
 4353.       t$545 = t$543 + 8 * _zla( 0, ( ncols + ncols * kmax ) )
 4184.       t$433 = int( _alloc( t$543 + 8 * _zla( 0, ( ncols + ncols * kmax ) ) ), 8 )
 4361.       t$434 = t$433
 4358.       t$437 = t$436 + t$433
 4343.       t$440 = t$439 + t$433
 4347.       t$443 = t$442 + t$433
 4342.       t$446 = t$445 + t$433
 4367.       t$449 = t$445 + t$433 + 8 * _zla( 0, ncols )
 4368.       t$451 = t$445 + t$433 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4366.       t$453 = t$445 + t$433 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4363.       t$456 = t$455 + t$433
 4330.       t$459 = t$458 + t$433
 4334.       t$462 = t$461 + t$433
 4331.       t$465 = t$464 + t$433
 4335.       t$468 = t$467 + t$433
 4360.       t$471 = t$470 + t$433
 4359.       t$474 = t$473 + t$433
 4362.       t$477 = t$476 + t$433
 4336.       t$480 = t$479 + t$433
 4332.       t$483 = t$482 + t$433
 4365.       t$485 = t$482 + t$433 + 8 * _zla( 0, ncols )
 4364.       t$487 = t$482 + t$433 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ( ncols * kmax + 2 * ncols ) )
 4354.       t$490 = t$489 + t$433
 4355.       t$493 = t$492 + t$433
 4345.       t$496 = t$495 + t$433
 4340.       t$499 = t$498 + t$433
 4346.       t$502 = t$501 + t$433
 4341.       t$505 = t$504 + t$433
 4349.       t$508 = t$507 + t$433
 4348.       t$511 = t$510 + t$433
 4338.       t$514 = t$513 + t$433
 4337.       t$517 = t$516 + t$433
 4344.       t$520 = t$519 + t$433
 4339.       t$523 = t$522 + t$433
 4351.       t$526 = t$525 + t$433
 4333.       t$529 = t$528 + t$433
 4329.       t$532 = t$531 + t$433
 4350.       t$535 = t$534 + t$433
 4352.       t$538 = t$537 + t$433
 4356.       t$541 = t$540 + t$433
 4353.       t$544 = t$543 + t$433
 4410.       dooz = noz == .false.
 4413.       np = 2 + kmax
 4415.       lmp1 = 1 + kmax
 4421.       sqrt3 = 1.7320508075688772
 4423.       $F_A35 = ( ncols + ncols * kmax )
 4423.       if ( ncols + ncols * kmax > 0 ) then
 4423.          $I_L4423_250 = 0
 4423. !dir$ ivdep
 4423.          do
 4423.             acld(1 + $I_L4423_250) = 0.0
 4423.             $I_L4423_250 = 1 + $I_L4423_250
 4423.             if ( $I_L4423_250 >= $F_A35 ) exit
 4423.          enddo
 4423.       endif
 4424.       $F_A36 = ncols
 4424.       if ( ncols > 0 ) then
 4424.          $I_L4424_252 = 0
 4424. !dir$ ivdep
 4424.          do
 4424.             sc(1 + $I_L4424_252) = 0.0
 4424.             $I_L4424_252 = 1 + $I_L4424_252
 4424.             if ( $I_L4424_252 >= $F_A36 ) exit
 4424.          enddo
 4443.          $I_L4443_196 = 0
 4443. !dir$ ivdep
 4443.          do
 4444.             swinc(1 + $I_L4443_196) = 0.0
 4445.             ss(1 + $I_L4443_196) = 0.0
 4446.             ssclr(1 + $I_L4443_196) = 0.0
 4447.             dswtop(1 + $I_L4443_196) = 0.0
 4448.             dswclr(1 + $I_L4443_196) = 0.0
 4449.             radvbl(1 + $I_L4443_196) = 0.0
 4450.             radvdl(1 + $I_L4443_196) = 0.0
 4451.             radnbl(1 + $I_L4443_196) = 0.0
 4452.             radndl(1 + $I_L4443_196) = 0.0
 4453.             radvbc(1 + $I_L4443_196) = 0.0
 4454.             radvdc(1 + $I_L4443_196) = 0.0
 4455.             radnbc(1 + $I_L4443_196) = 0.0
 4456.             radndc(1 + $I_L4443_196) = 0.0
 4457.             $I_L4443_196 = 1 + $I_L4443_196
 4443.             if ( $I_L4443_196 >= ncols ) exit
 4443.          enddo
 4443.       endif
 4428.       if ( ncols * kmax + 2 * ncols > 0 ) then
 4428.          $I_L4428_194 = 0
 4428. !dir$ ivdep
 4428.          do
 4429.             listim(1 + $I_L4428_194) = ( 1 + $I_L4428_194 )
 4430.             $I_L4428_194 = 1 + $I_L4428_194
 4428.             if ( $I_L4428_194 >= ( ncols * kmax + 2 * ncols ) ) exit
 4428.          enddo
 4428.       endif
 4435.       $F_A37 = ncols
 4435.       if ( ncols > 0 ) then
 4435.          $I_L4435_254 = 0
 4435. !dir$ ivdep
 4435.          do
 4435.             bitx(1 + $I_L4435_254) = cosz(1 + $I_L4435_254) >= 1.0e-2
 4435.             $I_L4435_254 = 1 + $I_L4435_254
 4435.             if ( $I_L4435_254 >= $F_A37 ) exit
 4435.          enddo
 4435.       endif
 4439.       $Reduc_A38 = 0
 4439.       $F_A40 = ncols
 4439.       if ( ncols > 0 ) then
 4439.          $I_L4439_256 = 0
 4439. !dir$ ivdep
 4439.          do
 4439.             if ( bitx(1 + $I_L4439_256) /= 0 ) then
 4439.                $Reduc_A38 = 1 + $Reduc_A38
 4439.             endif
 4439.             $I_L4439_256 = 1 + $I_L4439_256
 4439.             if ( $I_L4439_256 >= $F_A40 ) exit
 4439.          enddo
 4439.       endif
 4439.       nsol = $Reduc_A38
 4458.       if ( kmax > 0 ) then
 4459.          if ( ncols > 0 ) then
 4458.             $I_L4458_268 = 0
 4458.             do
 4459.                $I_L4459_198 = 0
 4459. !dir$ ivdep
 4459.                do
 4460.                   asl(1 + $I_L4459_198, 1 + $I_L4458_268) = 0.0
 4461.                   aslclr(1 + $I_L4459_198, 1 + $I_L4458_268) = 0.0
 4462.                   $I_L4459_198 = 1 + $I_L4459_198
 4459.                   if ( $I_L4459_198 >= ncols ) exit
 4459.                enddo
 4463.                $I_L4458_268 = 1 + $I_L4458_268
 4462.                if ( $I_L4458_268 >= kmax ) exit
 4462.             enddo
 4462.          endif
 4462.       endif
 4468.       if ( $Reduc_A38 == 0 ) then
 4184.          _free( t$433 )
 4184.       else
 4473.          nslmp1 = $Reduc_A38 + kmax * $Reduc_A38
 4475.          nsolnp = kmax * $Reduc_A38 + 2 * $Reduc_A38
 4485.          if ( kmax > 0 ) then
 4487.             if ( ncols > 0 ) then
 4485.                $I_L4485_270 = 0
 4485.                do
 4487.                   $I_L4487_200 = 0
 4487.                   $CSVL_V0 = cvmg( ncols + ncols * $I_L4485_270, 4, and( ncols + ncols * $I_L4485_270 <= -1 + ncols, and( ncols + ncols * $I_L4485_270 <= 4, ncols + ncols * $I_L4485_270 > 0 ) ) )
 4487.                   if ( $CSVL_V0 <= 4 ) then
 4487.                      do
 4488.                         bitx(1 + ncols + $I_L4487_200 + ncols * $I_L4485_270) = bitx(1 + $I_L4487_200)
 4489.                         $I_L4487_200 = 1 + $I_L4487_200
 4487.                         if ( $I_L4487_200 >= ncols ) exit
 4487.                      enddo
 4487.                   else
 4487. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 4487.                      do
 4488.                         bitx(1 + ncols + $I_L4487_200 + ncols * $I_L4485_270) = bitx(1 + $I_L4487_200)
 4489.                         $I_L4487_200 = 1 + $I_L4487_200
 4487.                         if ( $I_L4487_200 >= ncols ) exit
 4487.                      enddo
 4487.                   endif
 4490.                   $I_L4485_270 = 1 + $I_L4485_270
 4489.                   if ( $I_L4485_270 >= kmax ) exit
 4489.                enddo
 4489.             endif
 4489.          endif
 4494.          if ( $Reduc_A38 > 0 ) then
 4494.             $I_L4494_202 = 0
 4494. !dir$ ivdep
 4494.             do
 4495.                pu(1 + $I_L4494_202) = 0.0
 4496.                $I_L4494_202 = 1 + $I_L4494_202
 4494.                if ( $I_L4494_202 >= $Reduc_A38 ) exit
 4494.             enddo
 4497.             $I_L4497_204 = 0
 4497. !dir$ ivdep
 4497.             do
 4498.                pu(1 + $I_L4497_204 + $Reduc_A38) = 5.0e-1
 4499.                $I_L4497_204 = 1 + $I_L4497_204
 4497.                if ( $I_L4497_204 >= $Reduc_A38 ) exit
 4497.             enddo
 4497.          endif
 4506.          t$1939 = ( max( 0, ncols + ncols * kmax ) )
 4506.          t$1942 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols + ncols * kmax ) ) ) ) ), 8 )
 4506.          $F_A41 = ( ncols + ncols * kmax )
 4506.          if ( ncols + ncols * kmax > 0 ) then
 4506.             $I_L4506_258 = 0
 4506. !dir$ ivdep
 4506.             do
 4506.                t$1941(1 + $I_L4506_258) = listim(1 + $I_L4506_258)
 4506.                $I_L4506_258 = 1 + $I_L4506_258
 4506.                if ( $I_L4506_258 >= $F_A41 ) exit
 4506.             enddo
 4506.          endif
 4506.          t$1943 = ( max( 0, ncols + ncols * kmax ) )
 4506.          t$1946 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols + ncols * kmax ) ) ) ) ), 8 )
 4506.          $F_A42 = ( ncols + ncols * kmax )
 4506.          if ( ncols + ncols * kmax > 0 ) then
 4506.             $I_L4506_260 = 0
 4506. !dir$ ivdep
 4506.             do
 4506.                t$1945(1 + $I_L4506_260) = bitx(1 + $I_L4506_260)
 4506.                $I_L4506_260 = 1 + $I_L4506_260
 4506.                if ( $I_L4506_260 >= $F_A42 ) exit
 4506.             enddo
 4506.          endif
 4505.          $PackIdx_A0 = 0
 4505.          if ( ncols + ncols * kmax > 0 ) then
 4505.             $I_L4505_248 = 0
 4505. !dir$ ivdep
 4505.             do
 4505.                if ( t$1945(1 + $I_L4505_248) /= .false. ) then
 4505.                   litx(1 + $PackIdx_A0) = t$1941(1 + $I_L4505_248)
 4505.                   $PackIdx_A0 = 1 + $PackIdx_A0
 4505.                endif
 4505.                $I_L4505_248 = 1 + $I_L4505_248
 4505.                if ( $I_L4505_248 >= max( 0, ( ncols + ncols * kmax ) ) ) exit
 4505.             enddo
 4505.          endif
 4506.          _free( t$1946 )
 4506.          _free( t$1942 )
 4514.          if ( kmax * $Reduc_A38 > 0 ) then
 4514.             $I_L4514_206 = 0
 4514. !dir$ ivdep
 4514.             do
 4515.                if ( litx(1 + $I_L4514_206) <= ncols * kmax ) then
 4516.                   pu(1 + $I_L4514_206 + 2 * $Reduc_A38) = pl20(litx(1 + $I_L4514_206), 1)
 4517.                   dp(1 + $I_L4514_206 + $Reduc_A38) = dpl(litx(1 + $I_L4514_206), 1)
 4518.                   ta(1 + $I_L4514_206 + $Reduc_A38) = tl(litx(1 + $I_L4514_206), 1)
 4519.                   wa(1 + $I_L4514_206 + $Reduc_A38) = ql(litx(1 + $I_L4514_206), 1)
 4520.                   css(1 + $I_L4514_206 + $Reduc_A38) = cld(litx(1 + $I_L4514_206), 1)
 4521.                   ccu(1 + $I_L4514_206 + $Reduc_A38) = clu(litx(1 + $I_L4514_206), 1)
 4522.                   tauc(1 + $I_L4514_206 + $Reduc_A38) = taud(litx(1 + $I_L4514_206), 1)
 4522.                endif
 4524.                $I_L4514_206 = 1 + $I_L4514_206
 4523.                if ( $I_L4514_206 >= ( kmax * $Reduc_A38 ) ) exit
 4523.             enddo
 4523.          endif
 4530.          if ( noz == .false. ) then
 4531.             if ( kmax * $Reduc_A38 > 0 ) then
 4531.                $I_L4531_208 = 0
 4531. !dir$ ivdep
 4531.                do
 4532.                   if ( litx(1 + $I_L4531_208) <= ncols * kmax ) then
 4532.                      oa(1 + $I_L4531_208 + $Reduc_A38) = o3l(litx(1 + $I_L4531_208), 1)
 4532.                   endif
 4533.                   $I_L4531_208 = 1 + $I_L4531_208
 4532.                   if ( $I_L4531_208 >= ( kmax * $Reduc_A38 ) ) exit
 4532.                enddo
 4532.             endif
 4534.             if ( $Reduc_A38 > 0 ) then
 4534.                $I_L4534_210 = 0
 4534.                $CSVL_V1 = cvmg( -$Reduc_A38, 2, and( $Reduc_A38 < 0, and( -$Reduc_A38 <= 2, -$Reduc_A38 <= -1 + $Reduc_A38 ) ) )
 4534.                if ( $CSVL_V1 <= 4 ) then
 4534.                   do
 4535.                      oa(1 + $I_L4534_210) = oa(1 + $I_L4534_210 + $Reduc_A38)
 4536.                      $I_L4534_210 = 1 + $I_L4534_210
 4534.                      if ( $I_L4534_210 >= $Reduc_A38 ) exit
 4534.                   enddo
 4534.                else
 4534. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 4
 4534.                   do
 4535.                      oa(1 + $I_L4534_210) = oa(1 + $I_L4534_210 + $Reduc_A38)
 4536.                      $I_L4534_210 = 1 + $I_L4534_210
 4534.                      if ( $I_L4534_210 >= $Reduc_A38 ) exit
 4534.                   enddo
 4534.                endif
 4534.             endif
 4537.             if ( $Reduc_A38 + kmax * $Reduc_A38 > 0 ) then
 4537.                $I_L4537_212 = 0
 4537. !dir$ ivdep
 4537.                do
 4538.                   oa(1 + $I_L4537_212) = max( 1.0e-10, oa(1 + $I_L4537_212) )
 4539.                   $I_L4537_212 = 1 + $I_L4537_212
 4537.                   if ( $I_L4537_212 >= ( $Reduc_A38 + kmax * $Reduc_A38 ) ) exit
 4537.                enddo
 4537.             endif
 4537.          endif
 4547.          if ( $Reduc_A38 > 0 ) then
 4547.             $I_L4547_214 = 0
 4547. !dir$ ivdep
 4547.             do
 4548.                if ( litx(1 + $I_L4547_214) <= ncols ) then
 4549.                   agv(1 + $I_L4547_214) = alvdf(litx(1 + $I_L4547_214))
 4550.                   agn(1 + $I_L4547_214) = alndf(litx(1 + $I_L4547_214))
 4551.                   cmu(1 + $I_L4547_214) = cosz(litx(1 + $I_L4547_214))
 4551.                endif
 4553.                $I_L4547_214 = 1 + $I_L4547_214
 4552.                if ( $I_L4547_214 >= $Reduc_A38 ) exit
 4552.             enddo
 4594.             $I_L4594_224 = 0
 4594.             $CSVL_V2 = cvmg( -$Reduc_A38, 2, and( $Reduc_A38 < 0, and( -$Reduc_A38 <= 2, -$Reduc_A38 <= -1 + $Reduc_A38 ) ) )
 4594.             if ( $CSVL_V2 <= 4 ) then
 4594.                do
 4595.                   dp(1 + $I_L4594_224) = pu(1 + $I_L4594_224 + $Reduc_A38)
 4596.                   ta(1 + $I_L4594_224) = ta(1 + $I_L4594_224 + $Reduc_A38)
 4597.                   wa(1 + $I_L4594_224) = wa(1 + $I_L4594_224 + $Reduc_A38)
 4598.                   tauc(1 + $I_L4594_224) = 0.0
 4599.                   $I_L4594_224 = 1 + $I_L4594_224
 4594.                   if ( $I_L4594_224 >= $Reduc_A38 ) exit
 4594.                enddo
 4594.             else
 4594. !dir$ ivdep safevl = $CSVL_V2 !   Guaranteed minimum :: 4
 4594.                do
 4595.                   dp(1 + $I_L4594_224) = pu(1 + $I_L4594_224 + $Reduc_A38)
 4596.                   ta(1 + $I_L4594_224) = ta(1 + $I_L4594_224 + $Reduc_A38)
 4597.                   wa(1 + $I_L4594_224) = wa(1 + $I_L4594_224 + $Reduc_A38)
 4598.                   tauc(1 + $I_L4594_224) = 0.0
 4599.                   $I_L4594_224 = 1 + $I_L4594_224
 4594.                   if ( $I_L4594_224 >= $Reduc_A38 ) exit
 4594.                enddo
 4594.             endif
 4618.             $I_L4618_234 = 0
 4618. !dir$ ivdep
 4618.             do
 4619.                cosmag(1 + $I_L4618_234) = 1.0 + 1224.0 * cmu(1 + $I_L4618_234) * cmu(1 + $I_L4618_234)
 4620.                $I_L4618_234 = 1 + $I_L4618_234
 4618.                if ( $I_L4618_234 >= $Reduc_A38 ) exit
 4618.             enddo
 4618.          endif
 4559.          if ( inalb /= 2 ) then
 4571.             $F_A43 = $Reduc_A38
 4571.             if ( $Reduc_A38 > 0 ) then
 4571.                $I_L4571_262 = 0
 4571. !dir$ ivdep
 4571.                do
 4571.                   rvbl(1 + $I_L4571_262) = acos( cmu(1 + $I_L4571_262) )
 4571.                   $I_L4571_262 = 1 + $I_L4571_262
 4571.                   if ( $I_L4571_262 >= $F_A43 ) exit
 4571.                enddo
 4572.                $I_L4572_216 = 0
 4572. !dir$ ivdep
 4572.                do
 4573.                   $rvdc_WR0_R0 = -5.7295779513082321 * ( 1.5707963267948966 + -rvbl(1 + $I_L4572_216) )
 4574.                   $rvbc_WR0_R1 = _expn( $rvdc_WR0_R0 )
 4574.                   rvbc(1 + $I_L4572_216) = $rvbc_WR0_R1
 4577.                   $rvdc_WR0_R0 = 1.0574323216878312 * ( -5.4313e-2 + agv(1 + $I_L4572_216) )
 4577.                   rvdc(1 + $I_L4572_216) = $rvdc_WR0_R0
 4578.                   $rndc_WR0_R2 = 1.0574323216878312 * ( -5.4313e-2 + agn(1 + $I_L4572_216) )
 4578.                   rndc(1 + $I_L4572_216) = $rndc_WR0_R2
 4579.                   rsurfv(1 + $I_L4572_216) = $rvdc_WR0_R0 + $rvbc_WR0_R1 * ( 1.0 + -$rvdc_WR0_R0 )
 4580.                   rsurfn(1 + $I_L4572_216) = $rndc_WR0_R2 + $rvbc_WR0_R1 * ( 1.0 + -$rndc_WR0_R2 )
 4575.                   $I_L4572_216 = 1 + $I_L4572_216
 4572.                   if ( $I_L4572_216 >= $Reduc_A38 ) exit
 4572.                enddo
 4572.             endif
 4582.             if ( ncols > 0 ) then
 4582.                $I_L4582_218 = 0
 4582. !dir$ ivdep
 4582.                do
 4583.                   alvdr(1 + $I_L4582_218) = 0.0
 4584.                   alndr(1 + $I_L4582_218) = 0.0
 4585.                   $I_L4582_218 = 1 + $I_L4582_218
 4582.                   if ( $I_L4582_218 >= ncols ) exit
 4582.                enddo
 4582.             endif
 4586.             if ( $Reduc_A38 > 0 ) then
 4586.                $I_L4586_220 = 0
 4586. !dir$ ivdep
 4586.                do
 4587.                   alvdr(litx(1 + $I_L4586_220)) = rsurfv(1 + $I_L4586_220)
 4588.                   alndr(litx(1 + $I_L4586_220)) = rsurfn(1 + $I_L4586_220)
 4589.                   $I_L4586_220 = 1 + $I_L4586_220
 4586.                   if ( $I_L4586_220 >= $Reduc_A38 ) exit
 4586.                enddo
 4586.             endif
 4586.          else if ( $Reduc_A38 > 0 ) then
 4560.             $I_L4560_222 = 0
 4560. !dir$ ivdep
 4560.             do
 4561.                if ( litx(1 + $I_L4560_222) <= ncols ) then
 4562.                   rsurfv(1 + $I_L4560_222) = alvdr(litx(1 + $I_L4560_222))
 4563.                   rsurfn(1 + $I_L4560_222) = alndr(litx(1 + $I_L4560_222))
 4563.                endif
 4565.                $I_L4560_222 = 1 + $I_L4560_222
 4564.                if ( $I_L4560_222 >= $Reduc_A38 ) exit
 4564.             enddo
 4564.          endif
 4600.          if ( $Reduc_A38 + kmax * $Reduc_A38 > 0 ) then
 4600.             $I_L4600_226 = 0
 4600. !dir$ ivdep
 4600.             do
 4601.                dpc(1 + $I_L4600_226) = dp(1 + $I_L4600_226)
 4602.                $I_L4600_226 = 1 + $I_L4600_226
 4600.                if ( $I_L4600_226 >= ( $Reduc_A38 + kmax * $Reduc_A38 ) ) exit
 4600.             enddo
 4600.          endif
 4603.          if ( $Reduc_A38 + nls * $Reduc_A38 > 0 ) then
 4603.             $I_L4603_228 = 0
 4603. !dir$ ivdep
 4603.             do
 4604.                css(1 + $I_L4603_228) = 0.0
 4605.                ccu(1 + $I_L4603_228) = 0.0
 4606.                $I_L4603_228 = 1 + $I_L4603_228
 4603.                if ( $I_L4603_228 >= ( $Reduc_A38 + nls * $Reduc_A38 ) ) exit
 4603.             enddo
 4603.          endif
 4607.          if ( nls * $Reduc_A38 > 0 ) then
 4607.             $I_L4607_230 = 0
 4607. !dir$ ivdep
 4607.             do
 4608.                wa(1 + $I_L4607_230) = 3.0000000000000001e-6
 4609.                $I_L4607_230 = 1 + $I_L4607_230
 4607.                if ( $I_L4607_230 >= ( nls * $Reduc_A38 ) ) exit
 4607.             enddo
 4607.          endif
 4610.          if ( $Reduc_A38 + -( nls * $Reduc_A38 ) + kmax * $Reduc_A38 > 0 ) then
 4610.             $I_L4610_232 = 0
 4610. !dir$ ivdep
 4610.             do
 4611.                wa(1 + $I_L4610_232 + nls * $Reduc_A38) = max( 9.9999999999999996e-24, wa(1 + $I_L4610_232 + nls * $Reduc_A38) )
 4612.                $I_L4610_232 = 1 + $I_L4610_232
 4610.                if ( $I_L4610_232 >= ( $Reduc_A38 + -( nls * $Reduc_A38 ) + kmax * $Reduc_A38 ) ) exit
 4610.             enddo
 4610.          endif
 4621.          $F_A44 = $Reduc_A38
 4621.          if ( $Reduc_A38 > 0 ) then
 4621.             $I_L4621_264 = 0
 4621. !dir$ ivdep
 4621.             do
 4621.                cosmag(1 + $I_L4621_264) = _sqrt( cosmag(1 + $I_L4621_264) )
 4621.                $I_L4621_264 = 1 + $I_L4621_264
 4621.                if ( $I_L4621_264 >= $F_A44 ) exit
 4621.             enddo
 4622.             $I_L4622_236 = 0
 4622. !dir$ ivdep
 4622.             do
 4624.                $scosz_WR0_R3 = s0 * cmu(1 + $I_L4622_236)
 4624.                scosz(1 + $I_L4622_236) = $scosz_WR0_R3
 4630.                swinc(litx(1 + $I_L4622_236)) = $scosz_WR0_R3
 4623.                cosmag(1 + $I_L4622_236) = ( 35.0 * 1.0/cosmag(1 + $I_L4622_236) )
 4625.                $I_L4622_236 = 1 + $I_L4622_236
 4622.                if ( $I_L4622_236 >= $Reduc_A38 ) exit
 4622.             enddo
 4622.          endif
 4640.          call setsw( ncols, kmax, 273.16000000000003, icld, tauc(1), scosz(1), cmu(1), cosmag(1), dsclr(1), rvbl(1), scosc(1), cmuc(1), csmcld(1), dscld(1), rvbc(1), rvdl(1), rnbl(1), rndl(1), agv(1), agn(1), rvdc(1), rnbc(1), rndc(1), agncd(1), rsurfv(1), rsurfn(1), sl(1), sc(1), ta(1), wa(1), oa(1), pu(1), aclr(1), dp(1), css(1), acld(1), dpc(1), ccu(1), listim(1), bitd(1), sqrt3, 8.4999999999999998e-1, 3.4459459459459457e-1, 7.2249999999999992e-1, 3.3333333333333331e-1, 6.6666666666666663e-1, 1.5267175572519084e-1, 2.2359459616579985e-1, 190.66000000000003, 1.0512499999999999e-2, np, lmp1, nsol, nslmp1, nsolnp, ncld, ncldp1, nclmp1, ncldnp, dooz )
 4662.          if ( ncld /= 0 ) then
 4663.             $F_A45 = nslmp1
 4663.             if ( nslmp1 > 0 ) then
 4663.                $I_L4663_266 = 0
 4663. !dir$ ivdep
 4663.                do
 4663.                   bitn(1 + $I_L4663_266) = bitd(1 + $I_L4663_266) == .false.
 4663.                   $I_L4663_266 = 1 + $I_L4663_266
 4663.                   if ( $I_L4663_266 >= $F_A45 ) exit
 4663.                enddo
 4664.                $I_L4664_238 = 0
 4664. !dir$ ivdep
 4664.                do
 4665.                   if ( bitn(1 + $I_L4664_238) /= .false. ) then
 4665.                      acld(1 + $I_L4664_238) = aclr(1 + $I_L4664_238)
 4665.                   endif
 4666.                   $I_L4664_238 = 1 + $I_L4664_238
 4665.                   if ( $I_L4664_238 >= nslmp1 ) exit
 4665.                enddo
 4665.             endif
 4667.             if ( nsol > 0 ) then
 4667.                $I_L4667_240 = 0
 4667. !dir$ ivdep
 4667.                do
 4668.                   if ( bitn(1 + $I_L4667_240) /= .false. ) then
 4669.                      rvbc(1 + $I_L4667_240) = rvbl(1 + $I_L4667_240)
 4670.                      rvdc(1 + $I_L4667_240) = rvdl(1 + $I_L4667_240)
 4671.                      rnbc(1 + $I_L4667_240) = rnbl(1 + $I_L4667_240)
 4672.                      rndc(1 + $I_L4667_240) = rndl(1 + $I_L4667_240)
 4673.                      sc(1 + $I_L4667_240) = sl(1 + $I_L4667_240)
 4674.                      dscld(1 + $I_L4667_240) = dsclr(1 + $I_L4667_240)
 4674.                   endif
 4676.                   $I_L4667_240 = 1 + $I_L4667_240
 4675.                   if ( $I_L4667_240 >= nsol ) exit
 4675.                enddo
 4675.             endif
 4675.          endif
 4684.          if ( nsol > 0 ) then
 4684.             $I_L4684_242 = 0
 4684. !dir$ ivdep
 4684.             do
 4686.                ssclr(litx(1 + $I_L4684_242)) = sl(1 + $I_L4684_242)
 4687.                dswclr(litx(1 + $I_L4684_242)) = dsclr(1 + $I_L4684_242)
 4688.                radvbl(litx(1 + $I_L4684_242)) = rvbl(1 + $I_L4684_242)
 4689.                radvdl(litx(1 + $I_L4684_242)) = rvdl(1 + $I_L4684_242)
 4690.                radnbl(litx(1 + $I_L4684_242)) = rnbl(1 + $I_L4684_242)
 4691.                radndl(litx(1 + $I_L4684_242)) = rndl(1 + $I_L4684_242)
 4694.                ss(litx(1 + $I_L4684_242)) = sc(1 + $I_L4684_242)
 4695.                dswtop(litx(1 + $I_L4684_242)) = dscld(1 + $I_L4684_242)
 4696.                radvbc(litx(1 + $I_L4684_242)) = rvbc(1 + $I_L4684_242)
 4697.                radvdc(litx(1 + $I_L4684_242)) = rvdc(1 + $I_L4684_242)
 4698.                radnbc(litx(1 + $I_L4684_242)) = rnbc(1 + $I_L4684_242)
 4699.                radndc(litx(1 + $I_L4684_242)) = rndc(1 + $I_L4684_242)
 4700.                $I_L4684_242 = 1 + $I_L4684_242
 4684.                if ( $I_L4684_242 >= nsol ) exit
 4684.             enddo
 4684.          endif
 4702.          if ( kmax * $Reduc_A38 > 0 ) then
 4702.             $I_L4702_244 = 0
 4702. !dir$ ivdep
 4702.             do
 4703.                aslclr(litx(1 + $I_L4702_244), 1) = aclr(1 + nsol + $I_L4702_244)
 4704.                asl(litx(1 + $I_L4702_244), 1) = acld(1 + nsol + $I_L4702_244)
 4705.                $I_L4702_244 = 1 + $I_L4702_244
 4702.                if ( $I_L4702_244 >= ( kmax * $Reduc_A38 ) ) exit
 4702.             enddo
 4702.          endif
 4711.          if ( kmax > 0 ) then
 4712.             if ( ncols > 0 ) then
 4711.                $I_L4711_272 = 0
 4711.                do
 4712.                   $I_L4712_246 = 0
 4712. !dir$ ivdep
 4712.                   do
 4713.                      if ( aslclr(1 + $I_L4712_246, 1 + $I_L4711_272) < 1.0e-22 ) then
 4713.                         aslclr(1 + $I_L4712_246, 1 + $I_L4711_272) = 0.0
 4713.                      endif
 4714.                      aslclr(1 + $I_L4712_246, 1 + $I_L4711_272) = ( 9.7706879363425924e-5 * aslclr(1 + $I_L4712_246, 1 + $I_L4711_272) * 1.0/dpl(1 + $I_L4712_246, 1 + $I_L4711_272) )
 4715.                      if ( asl(1 + $I_L4712_246, 1 + $I_L4711_272) < 1.0e-22 ) then
 4715.                         asl(1 + $I_L4712_246, 1 + $I_L4711_272) = 0.0
 4715.                      endif
 4716.                      asl(1 + $I_L4712_246, 1 + $I_L4711_272) = ( 9.7706879363425924e-5 * asl(1 + $I_L4712_246, 1 + $I_L4711_272) * 1.0/dpl(1 + $I_L4712_246, 1 + $I_L4711_272) )
 4717.                      $I_L4712_246 = 1 + $I_L4712_246
 4715.                      if ( $I_L4712_246 >= ncols ) exit
 4715.                   enddo
 4718.                   $I_L4711_272 = 1 + $I_L4711_272
 4717.                   if ( $I_L4711_272 >= kmax ) exit
 4717.                enddo
 4717.             endif
 4717.          endif
 4184.          _free( t$433 )
 4184.       endif
 4720.       return
 4720.       end
 4720.       
    6.       
    6.       module rad_cola
    6.       end
    6.       
