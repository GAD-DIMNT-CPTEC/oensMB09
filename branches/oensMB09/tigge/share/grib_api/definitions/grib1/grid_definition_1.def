# grib 1 -> 2
constant gridDefinitionTemplateNumber     = 20;

# START 1/grid_definition.mercator ----------------------------------------------------------------------
# GRID DEFINITION Mercator
#  Ni - number of points along a parallel

signed[2] numberOfPointsAlongAParallel;
alias Ni = numberOfPointsAlongAParallel;

signed[2] numberOfPointsAlongAMeridian;
alias Nj = numberOfPointsAlongAMeridian;

include "grid_first_last_resandcomp.def";

signed[3] latitudeAtWhichTheMercatorProjectionCylinderIntersectsTheEarth : optional;
meta latitudeAtWhichTheMercatorProjectionCylinderIntersectsTheEarthInDegrees scale(latitudeAtWhichTheMercatorProjectionCylinderIntersectsTheEarth,oneConstant,grib1divider);
alias Latin=latitudeSAtWhichTheMercatorProjectionCylinderIntersectsTheEarth;

pad padding_grid1_1(1);

include "scanning_mode.def";

signed[3] longitudinalDirectionGridLength ;

signed[3] latitudinalDirectionGridLength ;

pad padding_grid1_2(8);

#alias geography.laFirst = latOfFirstPoint,geography);
#alias geography.loFirst = longOfFirstPoint,geography);

#alias geography.laLast = latOfLastPoint,geography);
#alias geography.loLast = longOfLastPoint,geography);
#alias Ni = numberOfPointsAlongAParallel;
#alias Nj = numberOfPointsAlongAMeridian;
#alias geography.di = longitudinalDirectionGridLength ;
#alias geography.dj = latitudinalDirectionGridLength  ;

#alias geography.latIntersects = longOfCylinderIntersects  ;

# END   1/grid_definition.mercator ----------------------------------------------------------------------
