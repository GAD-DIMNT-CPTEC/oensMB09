       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  PblDriver.f90
       !        File                  :  PblDriver.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
   47.       
   47.       subroutine initpbldriver( kmax, sl, del_in, si )
   38.       t$5 = kmax
   41.       t$13 = _zla( 0, kmax )
   38.       t$6 = ( 1 + kmax )
   43.       t$14 = _zla( 0, ( 1 + kmax ) )
   45.       call initplanboundlayer( kmax, sl(1), del_in(1), si(1) )
   47.       return
   47.       end
   47.       
   98.       
   98.       subroutine pbl_driver( gu, gv, gt, gq, delsig, ncols, kmax, delt, colrad, tmtx, qmtx, umtx, gl0, pbl, latco, pbl_coefkm, pbl_coefkh )
   52.       t$7 = ncols
   52.       t$8 = kmax
   62.       t$15 = _zla( 0, ncols )
   52.       t$16 = _zla( 0, ncols )
   62.       t$17 = _zla( 0, kmax )
   52.       t$18 = _zla( 0, ncols ) * _zla( 0, kmax )
   52.       t$19 = _zla( 0, ncols ) * _zla( 0, kmax )
   52.       t$20 = _zla( 0, ncols ) * _zla( 0, kmax ) * 3
   52.       t$21 = _zla( 0, ncols ) * _zla( 0, kmax ) * 4
   77.       call ympbl0( gu(1, 1), gv(1, 1), gt(1, 1), gq(1, 1), delsig(1), ncols, kmax, delt, colrad(1), tmtx(1, 1, 1), qmtx(1, 1, 1), umtx(1, 1, 1), gl0(1), pbl, pbl_coefkm(1, 1), pbl_coefkh(1, 1) )
   83.       if ( pbl /= 1 ) then
   87.          if ( startstordiag ) then
   88.             call pbldiagnstorage( latco, ncols, kmax, tmtx(1, 1, 1), qmtx(1, 1, 1), umtx(1, 1, 1) )
   88.          endif
   93.          $t_S0 = isgridhistoryon
   93.          if ( $t_S0 ) then
   94.             call pblgridhistorystorage( latco, ncols, kmax, tmtx(1, 1, 1), qmtx(1, 1, 1), umtx(1, 1, 1) )
   94.          endif
   94.       endif
   98.       return
   98.       end
   98.       
  114.       
  114.       subroutine pblgridhistorystorage( latco, ncols, kmax, tmtx, qmtx, umtx )
  100.       t$9 = ncols
  100.       t$10 = kmax
  105.       t$22 = _zla( 0, ncols )
  100.       t$23 = _zla( 0, ncols )
  105.       t$24 = _zla( 0, kmax )
  100.       t$25 = _zla( 0, ncols ) * _zla( 0, kmax )
  100.       t$26 = _zla( 0, ncols ) * _zla( 0, kmax ) * 3
  100.       t$27 = _zla( 0, ncols ) * _zla( 0, kmax ) * 4
  109.       if ( (dogrh%base_addr)(67, latco, 0) ) then
  109. !dir$ suppress tmtx(1, 1, 3)
  109.          t$35%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( tmtx(1, 1, 3) ) )
  109.          t$35%header%el_len = 64
  109.          t$35%header%assoc = 1
  109.          t$35%header%ptr_alloc = 0
  109.          t$35%header%p_or_a = 0
  109.          t$35%header%a_contig = 1
  109.          t$35%header%dv_versn = 2
  109.          t$35%header%dv_smunit = 64
  109.          t$35%header%d_type = 0
  109.          t$35%header%n_params = 0
  109.          t$35%header%pad_codim = 0
  109.          t$35%header%n_codim = 0
  109.          t$35%header%pad_dim = 0
  109.          t$35%header%n_dim = 2
  109.          t$35%header%d_type_idx = 13
  109.          t$35%header%typ_code = 134481411
  109.          t$35%header%orig_base = 0
  109.          t$35%header%orig_size = 0
  109.          t$35%dim_1%LB = 1
  109.          t$35%dim_1%EX = ( max( 0, ncols ) )
  109.          t$35%dim_1%SM = 1
  109.          t$35%dim_2%LB = 1
  109.          t$35%dim_2%EX = ( max( 0, kmax ) )
  109.          t$35%dim_2%SM = _zla( 0, ncols )
  109.          ipa$64 = 67
  109.          call store2d( t$35, ipa$64, latco, 0 )
  109.       endif
  110.       if ( (dogrh%base_addr)(72, latco, 0) ) then
  110. !dir$ suppress umtx(1, 1, 3)
  110.          t$36%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( umtx(1, 1, 3) ) )
  110.          t$36%header%el_len = 64
  110.          t$36%header%assoc = 1
  110.          t$36%header%ptr_alloc = 0
  110.          t$36%header%p_or_a = 0
  110.          t$36%header%a_contig = 1
  110.          t$36%header%dv_versn = 2
  110.          t$36%header%dv_smunit = 64
  110.          t$36%header%d_type = 0
  110.          t$36%header%n_params = 0
  110.          t$36%header%pad_codim = 0
  110.          t$36%header%n_codim = 0
  110.          t$36%header%pad_dim = 0
  110.          t$36%header%n_dim = 2
  110.          t$36%header%d_type_idx = 13
  110.          t$36%header%typ_code = 134481411
  110.          t$36%header%orig_base = 0
  110.          t$36%header%orig_size = 0
  110.          t$36%dim_1%LB = 1
  110.          t$36%dim_1%EX = ( max( 0, ncols ) )
  110.          t$36%dim_1%SM = 1
  110.          t$36%dim_2%LB = 1
  110.          t$36%dim_2%EX = ( max( 0, kmax ) )
  110.          t$36%dim_2%SM = _zla( 0, ncols )
  110.          ipa$65 = 72
  110.          call store2d( t$36, ipa$65, latco, 0 )
  110.       endif
  111.       if ( (dogrh%base_addr)(73, latco, 0) ) then
  111. !dir$ suppress umtx(1, 1, 4)
  111.          t$37%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( umtx(1, 1, 4) ) )
  111.          t$37%header%el_len = 64
  111.          t$37%header%assoc = 1
  111.          t$37%header%ptr_alloc = 0
  111.          t$37%header%p_or_a = 0
  111.          t$37%header%a_contig = 1
  111.          t$37%header%dv_versn = 2
  111.          t$37%header%dv_smunit = 64
  111.          t$37%header%d_type = 0
  111.          t$37%header%n_params = 0
  111.          t$37%header%pad_codim = 0
  111.          t$37%header%n_codim = 0
  111.          t$37%header%pad_dim = 0
  111.          t$37%header%n_dim = 2
  111.          t$37%header%d_type_idx = 13
  111.          t$37%header%typ_code = 134481411
  111.          t$37%header%orig_base = 0
  111.          t$37%header%orig_size = 0
  111.          t$37%dim_1%LB = 1
  111.          t$37%dim_1%EX = ( max( 0, ncols ) )
  111.          t$37%dim_1%SM = 1
  111.          t$37%dim_2%LB = 1
  111.          t$37%dim_2%EX = ( max( 0, kmax ) )
  111.          t$37%dim_2%SM = _zla( 0, ncols )
  111.          ipa$66 = 73
  111.          call store2d( t$37, ipa$66, latco, 0 )
  111.       endif
  112.       if ( (dogrh%base_addr)(71, latco, 0) ) then
  112. !dir$ suppress qmtx(1, 1, 3)
  112.          t$38%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qmtx(1, 1, 3) ) )
  112.          t$38%header%el_len = 64
  112.          t$38%header%assoc = 1
  112.          t$38%header%ptr_alloc = 0
  112.          t$38%header%p_or_a = 0
  112.          t$38%header%a_contig = 1
  112.          t$38%header%dv_versn = 2
  112.          t$38%header%dv_smunit = 64
  112.          t$38%header%d_type = 0
  112.          t$38%header%n_params = 0
  112.          t$38%header%pad_codim = 0
  112.          t$38%header%n_codim = 0
  112.          t$38%header%pad_dim = 0
  112.          t$38%header%n_dim = 2
  112.          t$38%header%d_type_idx = 13
  112.          t$38%header%typ_code = 134481411
  112.          t$38%header%orig_base = 0
  112.          t$38%header%orig_size = 0
  112.          t$38%dim_1%LB = 1
  112.          t$38%dim_1%EX = ( max( 0, ncols ) )
  112.          t$38%dim_1%SM = 1
  112.          t$38%dim_2%LB = 1
  112.          t$38%dim_2%EX = ( max( 0, kmax ) )
  112.          t$38%dim_2%SM = _zla( 0, ncols )
  112.          ipa$67 = 71
  112.          call store2d( t$38, ipa$67, latco, 0 )
  112.       endif
  114.       return
  114.       end
  114.       
  131.       
  131.       subroutine pbldiagnstorage( latco, ncols, kmax, tmtx, qmtx, umtx )
  117.       t$11 = ncols
  117.       t$12 = kmax
  122.       t$28 = _zla( 0, ncols )
  117.       t$29 = _zla( 0, ncols )
  122.       t$30 = _zla( 0, kmax )
  117.       t$31 = _zla( 0, ncols ) * _zla( 0, kmax )
  117.       t$32 = _zla( 0, ncols ) * _zla( 0, kmax ) * 3
  117.       t$33 = _zla( 0, ncols ) * _zla( 0, kmax ) * 4
  126.       if ( (dodia%base_addr)(39, 0) ) then
  126. !dir$ suppress tmtx(1, 1, 3)
  126.          t$39%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( tmtx(1, 1, 3) ) )
  126.          t$39%header%el_len = 64
  126.          t$39%header%assoc = 1
  126.          t$39%header%ptr_alloc = 0
  126.          t$39%header%p_or_a = 0
  126.          t$39%header%a_contig = 0
  126.          t$39%header%dv_versn = 2
  126.          t$39%header%dv_smunit = 64
  126.          t$39%header%d_type = 0
  126.          t$39%header%n_params = 0
  126.          t$39%header%pad_codim = 0
  126.          t$39%header%n_codim = 0
  126.          t$39%header%pad_dim = 0
  126.          t$39%header%n_dim = 2
  126.          t$39%header%d_type_idx = 13
  126.          t$39%header%typ_code = 134481411
  126.          t$39%header%orig_base = 0
  126.          t$39%header%orig_size = 0
  126.          t$39%dim_1%LB = 1
  126.          t$39%dim_1%EX = ( max( 0, ncols ) )
  126.          t$39%dim_1%SM = 1
  126.          t$39%dim_2%LB = 1
  126.          t$39%dim_2%EX = ( max( 0, kmax ) )
  126.          t$39%dim_2%SM = _zla( 0, ncols )
  126.          ipa$68 = 39
  126.          call updia2d( t$39, ipa$68, latco )
  126.       endif
  127.       if ( (dodia%base_addr)(41, 0) ) then
  127. !dir$ suppress umtx(1, 1, 3)
  127.          t$40%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( umtx(1, 1, 3) ) )
  127.          t$40%header%el_len = 64
  127.          t$40%header%assoc = 1
  127.          t$40%header%ptr_alloc = 0
  127.          t$40%header%p_or_a = 0
  127.          t$40%header%a_contig = 0
  127.          t$40%header%dv_versn = 2
  127.          t$40%header%dv_smunit = 64
  127.          t$40%header%d_type = 0
  127.          t$40%header%n_params = 0
  127.          t$40%header%pad_codim = 0
  127.          t$40%header%n_codim = 0
  127.          t$40%header%pad_dim = 0
  127.          t$40%header%n_dim = 2
  127.          t$40%header%d_type_idx = 13
  127.          t$40%header%typ_code = 134481411
  127.          t$40%header%orig_base = 0
  127.          t$40%header%orig_size = 0
  127.          t$40%dim_1%LB = 1
  127.          t$40%dim_1%EX = ( max( 0, ncols ) )
  127.          t$40%dim_1%SM = 1
  127.          t$40%dim_2%LB = 1
  127.          t$40%dim_2%EX = ( max( 0, kmax ) )
  127.          t$40%dim_2%SM = _zla( 0, ncols )
  127.          ipa$69 = 41
  127.          call updia2d( t$40, ipa$69, latco )
  127.       endif
  128.       if ( (dodia%base_addr)(42, 0) ) then
  128. !dir$ suppress umtx(1, 1, 4)
  128.          t$41%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( umtx(1, 1, 4) ) )
  128.          t$41%header%el_len = 64
  128.          t$41%header%assoc = 1
  128.          t$41%header%ptr_alloc = 0
  128.          t$41%header%p_or_a = 0
  128.          t$41%header%a_contig = 0
  128.          t$41%header%dv_versn = 2
  128.          t$41%header%dv_smunit = 64
  128.          t$41%header%d_type = 0
  128.          t$41%header%n_params = 0
  128.          t$41%header%pad_codim = 0
  128.          t$41%header%n_codim = 0
  128.          t$41%header%pad_dim = 0
  128.          t$41%header%n_dim = 2
  128.          t$41%header%d_type_idx = 13
  128.          t$41%header%typ_code = 134481411
  128.          t$41%header%orig_base = 0
  128.          t$41%header%orig_size = 0
  128.          t$41%dim_1%LB = 1
  128.          t$41%dim_1%EX = ( max( 0, ncols ) )
  128.          t$41%dim_1%SM = 1
  128.          t$41%dim_2%LB = 1
  128.          t$41%dim_2%EX = ( max( 0, kmax ) )
  128.          t$41%dim_2%SM = _zla( 0, ncols )
  128.          ipa$70 = 42
  128.          call updia2d( t$41, ipa$70, latco )
  128.       endif
  129.       if ( (dodia%base_addr)(40, 0) ) then
  129. !dir$ suppress qmtx(1, 1, 3)
  129.          t$42%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qmtx(1, 1, 3) ) )
  129.          t$42%header%el_len = 64
  129.          t$42%header%assoc = 1
  129.          t$42%header%ptr_alloc = 0
  129.          t$42%header%p_or_a = 0
  129.          t$42%header%a_contig = 0
  129.          t$42%header%dv_versn = 2
  129.          t$42%header%dv_smunit = 64
  129.          t$42%header%d_type = 0
  129.          t$42%header%n_params = 0
  129.          t$42%header%pad_codim = 0
  129.          t$42%header%n_codim = 0
  129.          t$42%header%pad_dim = 0
  129.          t$42%header%n_dim = 2
  129.          t$42%header%d_type_idx = 13
  129.          t$42%header%typ_code = 134481411
  129.          t$42%header%orig_base = 0
  129.          t$42%header%orig_size = 0
  129.          t$42%dim_1%LB = 1
  129.          t$42%dim_1%EX = ( max( 0, ncols ) )
  129.          t$42%dim_1%SM = 1
  129.          t$42%dim_2%LB = 1
  129.          t$42%dim_2%EX = ( max( 0, kmax ) )
  129.          t$42%dim_2%SM = _zla( 0, ncols )
  129.          ipa$71 = 40
  129.          call updia2d( t$42, ipa$71, latco )
  129.       endif
  131.       return
  131.       end
  131.       
    6.       
    6.       module pbldriver
  133.       return
  133.       end
  133.       
