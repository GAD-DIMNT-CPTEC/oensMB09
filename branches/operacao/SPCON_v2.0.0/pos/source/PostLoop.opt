       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  PostLoop.f90
       !        File                  :  PostLoop.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   56.       
   56.       subroutine initpostloop
   58.       first = .true.
   59.       second2 = .false.
   60.       return
   60.       end
   60.       
   62.       
   62.       subroutine postgl( nffrs, nfbeg, nfend, nfile )
   62.       t$8 = kmax
  119.       t$305 = _zla( 0, kmax )
  119.       t$308 = 8 * _zla( 0, kmax )
   62.       t$7 = mnwv2
  118.       t$309 = _zla( 0, mnwv2 )
   62.       t$310 = _zla( 0, mnwv2 )
   62.       t$311 = _zla( 0, kmax ) * _zla( 0, mnwv2 )
  118.       t$312 = 8 * ( 7 + 8 * _zla( 0, kmax ) ) / 8
  118.       t$314 = t$312 + 8 * _zla( 0, kmax ) * _zla( 0, mnwv2 )
   62.       t$5 = imax
   62.       t$6 = jmax
  117.       t$315 = _zla( 0, imax )
   62.       t$316 = _zla( 0, imax )
  117.       t$317 = _zla( 0, jmax )
   62.       t$318 = _zla( 0, imax ) * _zla( 0, jmax )
   62.       t$319 = _zla( 0, kmax ) * _zla( 0, imax ) * _zla( 0, jmax )
  117.       t$320 = 8 * ( 7 + t$312 + 8 * _zla( 0, kmax ) * _zla( 0, mnwv2 ) ) / 8
  117.       t$322 = t$320 + 8 * _zla( 0, kmax ) * _zla( 0, imax ) * _zla( 0, jmax )
  116.       t$323 = 8 * ( 7 + t$320 + 8 * _zla( 0, kmax ) * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  116.       t$325 = t$323 + 8 * _zla( 0, mnwv2 )
   62.       t$326 = _zla( 0, imax ) * _zla( 0, jmax )
  122.       t$327 = 8 * ( 7 + t$323 + 8 * _zla( 0, mnwv2 ) ) / 8
  122.       t$329 = t$327 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
   62.       t$10 = idim
   62.       t$11 = jdim
  123.       t$330 = _zla( 0, idim )
   62.       t$331 = _zla( 0, idim )
  123.       t$332 = _zla( 0, jdim )
   62.       t$333 = _zla( 0, idim ) * _zla( 0, jdim )
  123.       t$334 = 8 * ( 7 + t$327 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  123.       t$336 = t$334 + 8 * _zla( 0, idim ) * _zla( 0, jdim )
   62.       t$9 = lmax
  120.       t$337 = _zla( 0, lmax )
   62.       t$338 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  120.       t$339 = 8 * ( 7 + t$334 + 8 * _zla( 0, idim ) * _zla( 0, jdim ) ) / 8
  120.       t$341 = t$339 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  115.       t$342 = 8 * ( 7 + t$339 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
  115.       t$344 = t$342 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  121.       t$345 = 8 * ( 7 + t$342 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  121.       t$347 = t$345 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
   77.       if ( t$34 == 0 ) then
   77.          t$352(1) = 2
   77.          t$353(1) = 0
   77.          t$354(1) = 0
   77.          t$349(1) = int( loc( t$33 ), 8 )
   77.          t$350(1) = 0
   77.          t$351(1) = int( loc( t$348 ), 8 )
   77.          t$34 = __get_dynamic_type( 2, t$349(1), t$352(1), 1, t$350(1), t$351(1), t$353(1), t$354(1) )
   77.       endif
   77.       if ( t$36 == 0 ) then
   77.          t$360(1) = 2
   77.          t$361(1) = 0
   77.          t$362(1) = 0
   77.          t$357(1) = int( loc( t$35 ), 8 )
   77.          t$358(1) = 0
   77.          t$359(1) = int( loc( t$356 ), 8 )
   77.          t$36 = __get_dynamic_type( 2, t$357(1), t$360(1), 1, t$358(1), t$359(1), t$361(1), t$362(1) )
   77.       endif
   77.       if ( t$38 == 0 ) then
   77.          t$368(1) = 2
   77.          t$369(1) = 0
   77.          t$370(1) = 0
   77.          t$365(1) = int( loc( t$37 ), 8 )
   77.          t$366(1) = 0
   77.          t$367(1) = int( loc( t$364 ), 8 )
   77.          t$38 = __get_dynamic_type( 2, t$365(1), t$368(1), 1, t$366(1), t$367(1), t$369(1), t$370(1) )
   77.       endif
  122.       t$372 = 8 * ( 7 + t$345 + 8 * _zla( 0, t$5 ) * _zla( 0, t$6 ) ) / 8
  122.       t$374 = t$372 + 8 * _zla( 0, t$5 ) * _zla( 0, t$6 )
  123.       t$375 = 8 * ( 7 + t$372 + 8 * _zla( 0, t$5 ) * _zla( 0, t$6 ) ) / 8
  123.       t$377 = t$375 + 8 * _zla( 0, t$10 ) * _zla( 0, t$11 )
   62.       t$306 = int( _alloc( t$375 + 8 * _zla( 0, t$10 ) * _zla( 0, t$11 ) ), 8 )
  119.       t$307 = t$306
  118.       t$313 = t$312 + t$306
  117.       t$321 = t$320 + t$306
  116.       t$324 = t$323 + t$306
  122.       t$328 = t$327 + t$306
  123.       t$335 = t$334 + t$306
  120.       t$340 = t$339 + t$306
  115.       t$343 = t$342 + t$306
  121.       t$346 = t$345 + t$306
  122.       t$373 = t$372 + t$306
  123.       t$376 = t$375 + t$306
  142.       if ( nfbeg <= nfile ) then
  143.          call opnpos(  _substr(labelp,1,10) )
  144.          call recon( nfld, nflp, nof, indate(1),  _substr(title,1,40),  _substr(specal,1,40), del(1),  _substr(rcode,1,4),  _substr(dtin,1,4), nfile )
  146.          call setsig( del(1) )
  147.          if ( nfld /= 0 ) then
  149.             call readheader( ifday, tod, idate(1), idatec(1) )
  150.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$14,  _substr(t$13,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ForecastDay =', 0x800600000000L ), _iotype( ifday, 0x2000200000000L ), _iotype( '  TimeOfDay =', 0x800600000000L ), _iotype( tod, 0x804060300000000L ) ) )
  151.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,10), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' InitialDate =', 0x800600000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ) ) )
  152.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$18,  _substr(t$17,1,10), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' CurrentDate =', 0x800600000000L ), _iotype( (&)idatec(+:( 1, 4, 1 )), 0x2000200000000L ) ) )
  155.             if ( binary /= .false. ) then
  156.                call gerabinctl( 12,  _substr(fname,1,256),  _substr(title,1,40),  _substr(labelp,1,10), nof, 307, nvo(1),  _substr(aliop(1),1,4),  _substr(chrop(1),1,40), nuco(1) )
  156.             else
  158.                call geragribctl( 12,  _substr(fname,1,256),  _substr(title,1,40),  _substr(labelp,1,10), nof, 307, nvo(1),  _substr(aliop(1),1,4) )
  158.             endif
  161.             $Unit_temp_O0 = nfprt
  161.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$20,  _substr(t$19,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nFFrs = ', 0x800600000000L ), _iotype( nffrs, 0x2000200000000L ), _iotype( ' nFEnd =', 0x800600000000L ), _iotype( nfend, 0x2000200000000L ) ) )
  162.             $Unit_temp_O1 = nfprt
  162.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nFile = ', 0x800600000000L ), _iotype( nfile, 0x2000200000000L ), _iotype( ' nFBeg =', 0x800600000000L ), _iotype( nfbeg, 0x2000200000000L ) ) )
  165.             ihr = idatec(1)
  166.             month = idatec(2)
  167.             iday = idatec(3)
  168.             iyr = idatec(4)
  169.             hr = real( ihr, 8 ) + 2.7777777777777778e-4 * mod( tod, 3600.0 )
  170.             $_IOitem_P0(0) = ihr
  170.             $_IOitem_P0(1) = month
  170.             $_IOitem_P0(2) = iday
  170.             $_IOitem_P0(3) = iyr
  170.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$24,  _substr(t$23,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '  Hour = ', 0x800600000000L ), _iotype( hr, 0x804060300000000L ), _iotype( (&)indate(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
  176.             hh_fct = ihr
  177.             dd_fct = iday
  178.             mm_fct = month
  179.             yy_fct = iyr
  180.             hh_anl = idate(1)
  181.             dd_anl = idate(3)
  182.             mm_anl = idate(2)
  183.             yy_anl = idate(4)
  185.             call gdspdssetion( kgds(1), kpds(1) )
  187.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Dimensions: nx = ', 0x800600000000L ), _iotype( idim, 0x2000200000000L ), _iotype( ' ny = ', 0x800600000000L ), _iotype( jdim, 0x2000200000000L ) ) )
  188.             if ( ( 1 < glat%dim_1%LB .or. 0 >= -1 + glat%dim_1%LB + glat%dim_1%EX ) /= .false. ) then
  188.                 _substr(t$645,1,13) = 'PostLoop.f90'
  188.                 _substr(t$646,1,5) = 'GLAT'
  188.                t$647 = glat%dim_1%LB
  188.                t$648 = -1 + glat%dim_1%LB + glat%dim_1%EX
  188.                call _bounds_error(  _substr(t$645,1,13), 188,  _substr(t$646,1,5), 1, t$647, t$648, 1, t$644 )
  188.             endif
  188.             if ( ( jdim < glat%dim_1%LB .or. jdim > -1 + glat%dim_1%LB + glat%dim_1%EX ) /= .false. ) then
  188.                 _substr(t$650,1,13) = 'PostLoop.f90'
  188.                 _substr(t$651,1,5) = 'GLAT'
  188.                t$652 = glat%dim_1%LB
  188.                t$653 = -1 + glat%dim_1%LB + glat%dim_1%EX
  188.                t$654 = jdim
  188.                call _bounds_error(  _substr(t$650,1,13), 188,  _substr(t$651,1,5), 1, t$652, t$653, t$654, t$649 )
  188.             endif
  188.             $IOitem_O2 = (glat%base_addr)(jdim, 0)
  188.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'LATITUDES = ', 0x800600000000L ), _iotype( (glat%base_addr)(1, 0), 0x804060300000000L ), _iotype( $IOitem_O2, 0x804060300000000L ) ) )
  193.             ldim = 1
  194.             call readfield( mnwv2, ldim, gz(1) )
  195.             call rectrg( mnwv2, ldim, gz(1), top(1, 1) )
  196.             call readfield( ngaus, ldim, lsmk(1, 1) )
  197.             if ( regint /= .false. ) then
  198.                if ( binary /= .false. ) then
  202.                   call doareainterpolation( top(1, 1), topreg(1, 1) )
  203.                   call writefield( mgaus, topreg(1, 1) )
  204.                   call doareainterpolation( lsmk(1, 1), lsmkreg(1, 1) )
  205.                   call writefield( mgaus, lsmkreg(1, 1) )
  205.                else
  211.                   call doareainterpolation( top(1, 1), topreg(1, 1) )
  212.                    _substr(t$655,1,4) = 'TOPO'
  212.                   call writegrbfield(  _substr(t$655,1,4), mgaus, kgds(1), kpds(1), topreg(1, 1), ldim )
  213.                   call doareainterpolation( lsmk(1, 1), lsmkreg(1, 1) )
  214.                    _substr(t$656,1,4) = 'LSMK'
  214.                   call writegrbfield(  _substr(t$656,1,4), mgaus, kgds(1), kpds(1), lsmkreg(1, 1), ldim )
  214.                endif
  217.             else if ( binary /= .false. ) then
  222.                call doareagausinterpolation( top(1, 1), topreg(1, 1) )
  223.                call writefield( mgaus, topreg(1, 1) )
  224.                call doareagausinterpolation( lsmk(1, 1), lsmkreg(1, 1) )
  225.                call writefield( mgaus, lsmkreg(1, 1) )
  225.             else
  231.                call doareagausinterpolation( top(1, 1), topreg(1, 1) )
  232.                 _substr(t$657,1,4) = 'TOPO'
  232.                call writegrbfield(  _substr(t$657,1,4), mgaus, kgds(1), kpds(1), topreg(1, 1), ldim )
  233.                call doareagausinterpolation( lsmk(1, 1), lsmkreg(1, 1) )
  234.                 _substr(t$658,1,4) = 'LSMK'
  234.                call writegrbfield(  _substr(t$658,1,4), mgaus, kgds(1), kpds(1), lsmkreg(1, 1), ldim )
  234.             endif
  241.             kfld = 1
  242.             kflo = 1
  243.             mean = .false.
  244.             newday = .true.
  245.             $Unit_temp_O3 = nfprt
  245.             $_IOitem_P1(0) = iyr
  245.             $_IOitem_P1(1) = month
  245.             $_IOitem_P1(2) = iday
  245.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$26,  _substr(t$25,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Processing: ', 0x800600000000L ), _iotype( (&)$_IOitem_P1(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( hr, 0x804060300000000L ) ) )
  246.             $Unit_temp_O4 = nfprt
  246.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Starting postgg: Mean = ', 0x800600000000L ), _iotype( mean, 0x2000500000000L ) ) )
  247.             call postgg( psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0), (alnpmd%base_addr)(alnpmd%dim_1%LB, 0), mean, kfld, kflo, newday, top(1, 1) )
  248.             $Unit_temp_O5 = nfprt
  248.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$30,  _substr(t$29,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg Finished', 0x800600000000L ) ) )
  250.             $kp_S1 = 1
  250.             if ( nfld > 0 ) then
  250.                $I_L250_12 = 0
  250. !dir$ ivdep
  250.                do
  250.                   $kp_S1 = ( 1 + $I_L250_12 )
  251.                   if (  _substr(prodia(1 + $I_L250_12),1,4) == 'DIAG' ) then
  250.                      $kp_S1 = ( 1 + $I_L250_12 )
  250.                      goto 10
  250.                   endif
  252.                   $I_L250_12 = 1 + $I_L250_12
  252.                   if ( $I_L250_12 >= nfld ) exit
  252.                enddo
  250.                $kp_S1 = nfld
  252.                $kp_S1 = ( 1 + nfld )
  252.             endif
  252.    10       continue
  254.             $ks_S3 = kfld
  256.             t$662 = kfld
  256.             if ( $kp_S1 + -kfld > 0 ) then
  256.                $I_L256_14 = 0
  256.                do
  256.                   kfld = ( $ks_S3 + $I_L256_14 )
  257.                   $Unit_temp_O6 = nfprt
  257.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$32,  _substr(t$31,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Processing Input Field Number: ', 0x800600000000L ), _iotype( kfld, 0x2000200000000L ) ) )
  258.                   if ( mkdir($ks_S3 + $I_L256_14) <= 0 .orelse. mkdir($ks_S3 + $I_L256_14) == 100 ) then
  259.                      if ( ( ( $ks_S3 + $I_L256_14 ) <= 0 .or. ( $ks_S3 + $I_L256_14 ) > 250 ) /= .false. ) then
  259.                          _substr(t$667,1,13) = 'PostLoop.f90'
  259.                          _substr(t$668,1,6) = 'NLEVS'
  259.                         t$647 = t$662 + $I_L256_14
  259.                         call _bounds_error(  _substr(t$667,1,13), 259,  _substr(t$668,1,6), 1, 1, 250, t$647, t$666 )
  259.                      endif
  259.                      $Unit_temp_O9 = nfprt
  259.                      $IOitem_O20 = nlevs(t$662 + $I_L256_14)
  259.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, t$34,  _substr(t$33,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Prog skipf(nlevs(kfld)), nLevs = ', 0x800600000000L ), _iotype( $IOitem_O20, 0x2000200000000L ) ) )
  260.                      call skipf( nlevs(t$662 + $I_L256_14) )
  260.                   else
  261.                      if ( nharm($ks_S3 + $I_L256_14) + -ngaus == 0 ) then
  262.                         call readfield( ngaus, nlevs(t$662 + $I_L256_14), ga(1, 1, 1) )
  263.                         if ( mod( mkdir($ks_S3 + $I_L256_14), 2 ) == 1 ) then
  264.                            call gavint( nlevs(t$662 + $I_L256_14), nvo(kflo), ga(1, 1, 1), og(1, 1, 1), psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0) )
  265.                            call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  266.                            kflo = 1 + kflo
  267.                         else if ( mkdir($ks_S3 + $I_L256_14) > 1 ) then
  268.                            call scase( kflo, nlevs(t$662 + $I_L256_14), nfe(1), iclcd(1), ga(1, 1, 1) )
  269.                            call gavint( nlevs(t$662 + $I_L256_14), nvo(kflo), ga(1, 1, 1), og(1, 1, 1), psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0) )
  270.                            call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  271.                            kflo = 1 + kflo
  271.                         else
  273.                            if ( ( ( $ks_S3 + $I_L256_14 ) <= 0 .or. ( $ks_S3 + $I_L256_14 ) > 250 ) /= .false. ) then
  273.                                _substr(t$670,1,13) = 'PostLoop.f90'
  273.                                _substr(t$671,1,6) = 'NLEVS'
  273.                               t$648 = t$662 + $I_L256_14
  273.                               call _bounds_error(  _substr(t$670,1,13), 273,  _substr(t$671,1,6), 1, 1, 250, t$648, t$669 )
  273.                            endif
  273.                            $Unit_temp_O7 = nfprt
  273.                            $IOitem_O19 = nlevs(t$662 + $I_L256_14)
  273.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$36,  _substr(t$35,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Field Skipped, nLevs = ', 0x800600000000L ), _iotype( $IOitem_O19, 0x2000200000000L ) ) )
  273.                         endif
  275.                      else if ( nharm($ks_S3 + $I_L256_14) + -mnwv2 == 0 ) then
  276.                         call readfield( mnwv2, nlevs(t$662 + $I_L256_14), di(1, 1) )
  277.                         $Unit_temp_O8 = nfprt
  277.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, t$38,  _substr(t$37,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Mean   = ', 0x800600000000L ), _iotype( mean, 0x2000500000000L ) ) )
  278.                         t$672 = ( t$662 + $I_L256_14 )
  278.                         call stog( psmb(1, 1), (alnpmd%base_addr)(alnpmd%dim_1%LB, 0), nlevs(t$662 + $I_L256_14), mean, kflo, nof, t$672, di(1, 1), og(1, 1, 1), qg(1, 1) )
  279.                         if ( mod( mkdir($ks_S3 + $I_L256_14), 2 ) == 1 ) then
  281.                            call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  282.                            kflo = 1 + kflo
  282.                         endif
  284.                         if ( mkdir($ks_S3 + $I_L256_14) > 1 ) then
  286.                            call rwrite( nvo(kflo), kflo, qg(1, 1) )
  287.                            kflo = 1 + kflo
  287.                         endif
  287.                      endif
  287.                   endif
  290.                   $I_L256_14 = 1 + $I_L256_14
  289.                   if ( $I_L256_14 >= ( $kp_S1 + -t$662 ) ) exit
  289.                enddo
  289.             endif
  291.             kfld = $kp_S1
  292.             if ( $kp_S1 > nfld ) then
  293.                $Unit_temp_O10 = nfprt
  293.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, t$40,  _substr(t$39,1,10), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Progs Finished, Diags Skipped for nFile = ', 0x800600000000L ), _iotype( nfile, 0x2000200000000L ) ) )
  295.             else if ( nfile <= 0 ) then
  297.                $Unit_temp_O11 = nfprt
  297.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$42,  _substr(t$41,1,10), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Progs Finished, Diags Skipped for nFile = ', 0x800600000000L ), _iotype( nfile, 0x2000200000000L ) ) )
  297.             else
  300.                $Unit_temp_O12 = nfprt
  300.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Progs Finished, Diags Starting ...', 0x800600000000L ) ) )
  304.                mean = .true.
  305.                $Unit_temp_O13 = nfprt
  305.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$46,  _substr(t$45,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Starting postgg: Mean = ', 0x800600000000L ), _iotype( mean, 0x2000500000000L ) ) )
  306.                call postgg( psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0), (alnpmd%base_addr)(alnpmd%dim_1%LB, 0), mean, kfld, kflo, newday, top(1, 1) )
  307.                $Unit_temp_O14 = nfprt
  307.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$48,  _substr(t$47,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg Finished', 0x800600000000L ) ) )
  308.                $ks_S4 = kfld
  310.                t$673 = kfld
  310.                if ( nfld + -kfld >= 0 ) then
  310.                   $I_L310_16 = 0
  310.                   do
  310.                      kfld = ( $ks_S4 + $I_L310_16 )
  311.                      $Unit_temp_O15 = nfprt
  311.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, t$50,  _substr(t$49,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Processing Input Field Number: ', 0x800600000000L ), _iotype( kfld, 0x2000200000000L ) ) )
  312.                      if ( mkdir($ks_S4 + $I_L310_16) <= 0 .orelse. mkdir($ks_S4 + $I_L310_16) == 100 ) then
  313.                         if ( ( ( $ks_S4 + $I_L310_16 ) <= 0 .or. ( $ks_S4 + $I_L310_16 ) > 250 ) /= .false. ) then
  313.                             _substr(t$678,1,13) = 'PostLoop.f90'
  313.                             _substr(t$679,1,6) = 'NLEVS'
  313.                            t$652 = t$673 + $I_L310_16
  313.                            call _bounds_error(  _substr(t$678,1,13), 313,  _substr(t$679,1,6), 1, 1, 250, t$652, t$677 )
  313.                         endif
  313.                         $Unit_temp_O17 = nfprt
  313.                         $IOitem_O21 = nlevs(t$673 + $I_L310_16)
  313.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Prog skipf(nlevs(kfld)), nLevs = ', 0x800600000000L ), _iotype( $IOitem_O21, 0x2000200000000L ) ) )
  314.                         call skipf( nlevs(t$673 + $I_L310_16) )
  314.                      else
  315.                         if ( nharm($ks_S4 + $I_L310_16) + -ngaus == 0 ) then
  316.                            call readfield( ngaus, nlevs(t$673 + $I_L310_16), ga(1, 1, 1) )
  317.                            if ( mod( mkdir($ks_S4 + $I_L310_16), 2 ) == 1 ) then
  318.                               call gavint( nlevs(t$673 + $I_L310_16), nvo(kflo), ga(1, 1, 1), og(1, 1, 1), psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0) )
  319.                               call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  320.                               kflo = 1 + kflo
  320.                            endif
  322.                            if ( mkdir($ks_S4 + $I_L310_16) > 1 ) then
  323.                               call scase( kflo, nlevs(t$673 + $I_L310_16), nfe(1), iclcd(1), ga(1, 1, 1) )
  324.                               call gavint( nlevs(t$673 + $I_L310_16), nvo(kflo), ga(1, 1, 1), og(1, 1, 1), psmb(1, 1), (pmand%base_addr)(pmand%dim_1%LB, 0) )
  325.                               call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  326.                               kflo = 1 + kflo
  326.                            endif
  328.                         else if ( nharm($ks_S4 + $I_L310_16) + -mnwv2 == 0 ) then
  329.                            call readfield( mnwv2, nlevs(t$673 + $I_L310_16), di(1, 1) )
  330.                            $Unit_temp_O16 = nfprt
  330.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, t$54,  _substr(t$53,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Mean   = ', 0x800600000000L ), _iotype( mean, 0x2000500000000L ) ) )
  331.                            t$672 = ( t$673 + $I_L310_16 )
  331.                            call stog( psmb(1, 1), (alnpmd%base_addr)(alnpmd%dim_1%LB, 0), nlevs(t$673 + $I_L310_16), mean, kflo, nof, t$672, di(1, 1), og(1, 1, 1), qg(1, 1) )
  332.                            if ( mod( mkdir($ks_S4 + $I_L310_16), 2 ) == 1 ) then
  333.                               call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  334.                               kflo = 1 + kflo
  334.                            endif
  336.                            if ( mkdir($ks_S4 + $I_L310_16) > 1 ) then
  337.                               call rwrite( nvo(kflo), kflo, qg(1, 1) )
  338.                               kflo = 1 + kflo
  338.                            endif
  338.                         endif
  338.                      endif
  341.                      $I_L310_16 = 1 + $I_L310_16
  340.                      if ( $I_L310_16 >= 1 + nfld + -t$673 ) exit
  340.                   enddo
  340.                endif
  342.                $Unit_temp_O18 = nfprt
  342.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, t$56,  _substr(t$55,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Diagnostics Completed ...', 0x800600000000L ) ) )
  342.             endif
  342.          endif
  342.       endif
  348.       call closefiles
  350.       if ( binary == .false. ) then
  351.          call baclose( 51, ierr )
  352.           _substr(t$680,1,8) = 'GCMPOST '
  352.          call w3tage(  _substr(t$680,1,8) )
  352.       endif
   62.       _free( t$306 )
  355.       return
  355.       end
  355.       
  358.       
  358.       subroutine postgg( psmb, pmand, alnpmd, mean, kfld, kflo, newday, top )
  358.       t$58 = imax
  358.       t$59 = jmax
  377.       t$378 = _zla( 0, imax )
  358.       t$379 = _zla( 0, imax )
  377.       t$380 = _zla( 0, jmax )
  358.       t$381 = _zla( 0, imax ) * _zla( 0, jmax )
  358.       t$57 = lmax
  374.       t$382 = _zla( 0, lmax )
  403.       t$385 = 8 * _zla( 0, jmax )
  358.       t$60 = mnwv2
  358.       t$61 = kmax
  396.       t$386 = _zla( 0, mnwv2 )
  358.       t$387 = _zla( 0, mnwv2 )
  396.       t$388 = _zla( 0, kmax )
  358.       t$389 = _zla( 0, mnwv2 ) * _zla( 0, kmax )
  396.       t$390 = 8 * ( 7 + 8 * _zla( 0, jmax ) ) / 8
  396.       t$392 = t$390 + 8 * _zla( 0, mnwv2 ) * _zla( 0, kmax )
  405.       t$393 = 8 * ( 7 + t$390 + 8 * _zla( 0, mnwv2 ) * _zla( 0, kmax ) ) / 8
  405.       t$395 = t$393 + 8 * _zla( 0, mnwv2 )
  358.       t$62 = mnwv3
  404.       t$396 = _zla( 0, mnwv3 )
  404.       t$397 = 8 * ( 7 + t$393 + 8 * _zla( 0, mnwv2 ) ) / 8
  404.       t$399 = t$397 + 8 * _zla( 0, mnwv3 )
  410.       t$400 = 8 * ( 7 + t$397 + 8 * _zla( 0, mnwv3 ) ) / 8
  410.       t$402 = t$400 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  358.       t$403 = _zla( 0, imax ) * _zla( 0, jmax )
  358.       t$404 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  408.       t$405 = 8 * ( 7 + t$400 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  408.       t$407 = t$405 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  409.       t$408 = 8 * ( 7 + t$405 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
  409.       t$410 = t$408 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  406.       t$411 = 8 * ( 7 + t$408 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  406.       t$413 = t$411 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  407.       t$414 = 8 * ( 7 + t$411 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
  407.       t$416 = t$414 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  358.       t$417 = _zla( 0, lmax ) * _zla( 0, mnwv2 )
  398.       t$418 = 8 * ( 7 + t$414 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
  398.       t$420 = t$418 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 )
  400.       t$421 = 8 * ( 7 + t$418 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 ) ) / 8
  400.       t$423 = t$421 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 )
  401.       t$424 = 8 * ( 7 + t$421 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 ) ) / 8
  401.       t$426 = t$424 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 )
  402.       t$427 = 8 * ( 7 + t$424 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 ) ) / 8
  402.       t$429 = t$427 + 8 * _zla( 0, mnwv2 )
  399.       t$430 = 8 * ( 7 + t$427 + 8 * _zla( 0, mnwv2 ) ) / 8
  399.       t$432 = t$430 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 )
  397.       t$433 = 8 * ( 7 + t$430 + 8 * _zla( 0, lmax ) * _zla( 0, mnwv2 ) ) / 8
  397.       t$435 = t$433 + 8 * _zla( 0, mnwv2 ) * _zla( 0, kmax )
  358.       t$383 = int( _alloc( t$433 + 8 * _zla( 0, mnwv2 ) * _zla( 0, kmax ) ), 8 )
  403.       t$384 = t$383
  396.       t$391 = t$390 + t$383
  405.       t$394 = t$393 + t$383
  404.       t$398 = t$397 + t$383
  410.       t$401 = t$400 + t$383
  408.       t$406 = t$405 + t$383
  409.       t$409 = t$408 + t$383
  406.       t$412 = t$411 + t$383
  407.       t$415 = t$414 + t$383
  398.       t$419 = t$418 + t$383
  400.       t$422 = t$421 + t$383
  401.       t$425 = t$424 + t$383
  402.       t$428 = t$427 + t$383
  399.       t$431 = t$430 + t$383
  397.       t$434 = t$433 + t$383
  422.       $I_L422_413 = 0
  422.       do
  422.           _substr(inf(1 + $I_L422_413, 1),1,40) =  _substr(t$681(1 + $I_L422_413),1,40)
  422.          $I_L422_413 = 1 + $I_L422_413
  422.          if ( $I_L422_413 >= 5 ) exit
  422.       enddo
  428.       $I_L428_415 = 0
  428.       do
  428.           _substr(inf(1 + $I_L428_415, 2),1,40) =  _substr(t$682(1 + $I_L428_415),1,40)
  428.          $I_L428_415 = 1 + $I_L428_415
  428.          if ( $I_L428_415 >= 5 ) exit
  428.       enddo
  435.       $I_L435_417 = 0
  435.       do
  435.           _substr(opf(1 + $I_L435_417, 1),1,40) =  _substr(t$683(1 + $I_L435_417),1,40)
  435.          $I_L435_417 = 1 + $I_L435_417
  435.          if ( $I_L435_417 >= 25 ) exit
  435.       enddo
  461.       $I_L461_419 = 0
  461.       do
  461.           _substr(opf(1 + $I_L461_419, 2),1,40) =  _substr(t$684(1 + $I_L461_419),1,40)
  461.          $I_L461_419 = 1 + $I_L461_419
  461.          if ( $I_L461_419 >= 25 ) exit
  461.       enddo
  488.       $timemean_S6 = .true.
  489.       if ( first /= .false. ) then
  491.          if ( mean /= .false. ) then
  492.             $Unit_temp_O0 = nferr
  492.             $_IOitem_P1(0) = first
  492.             $_IOitem_P1(1) = second2
  492.             $_IOitem_P1(2) = mean
  492.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' First, Second, Mean Inconsistent:', 0x800600000000L ), _iotype( (&)$_IOitem_P1(:( 0, 2, 1 )), 0x2000500000000L ) ) )
  495.              _substr(t$685,1,4) = '8100'
  495.             call _stop(  _substr(t$685,1,4) )
  495.          else
  502.             $I_L502_378 = 0
  502. !dir$ ivdep
  502.             do
  503.                if (  _substr(inf(1 + $I_L502_378, 1),1,40) /=  _substr(chrdsc(kfld + $I_L502_378),1,40) ) then
  508.                   if ( ( ( 1 + $I_L502_378 ) <= 0 .or. ( 1 + $I_L502_378 ) > 5 ) /= .false. ) then
  508.                       _substr(t$688,1,13) = 'PostLoop.f90'
  508.                       _substr(t$689,1,4) = 'INF'
  508.                      t$690 = 1 + $I_L502_378
  508.                      call _bounds_error(  _substr(t$688,1,13), 508,  _substr(t$689,1,4), 1, 1, 5, t$690, t$687 )
  508.                   endif
  508.                   if ( ( ( kfld + $I_L502_378 ) <= 0 .or. ( kfld + $I_L502_378 ) > 250 ) /= .false. ) then
  508.                       _substr(t$696,1,13) = 'PostLoop.f90'
  508.                       _substr(t$697,1,7) = 'CHRDSC'
  508.                      t$698 = kfld + $I_L502_378
  508.                      call _bounds_error(  _substr(t$696,1,13), 508,  _substr(t$697,1,7), 1, 1, 250, t$698, t$695 )
  508.                   endif
  506.                   $Unit_temp_O4 = nferr
  506.                   $IOitem_O5 = ( 1 + $I_L502_378 )
  506.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$66,  _substr(t$65,1,28), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' At Mean = ', 0x800600000000L ), _iotype( mean, 0x2000500000000L ), _iotype( ' mm = ', 0x800600000000L ), _iotype( $IOitem_O5, 0x2000200000000L ), _iotype( ' kt = ', 0x800600000000L ), _iotype( ( kfld + $I_L502_378 ), 0x2000200000000L ), _iotype( ' inf = ', 0x800600000000L ), _iotype(  _substr(inf(1 + $I_L502_378, 1),1,40), 0x800600000000L ), _iotype( ' chrdsc = ', 0x800600000000L ), _iotype(  _substr(chrdsc(kfld + $I_L502_378),1,40), 0x800600000000L ) ) )
  509.                    _substr(t$699,1,4) = '9100'
  509.                   call _stop(  _substr(t$699,1,4) )
  509.                   goto 100
  509.                endif
  511.                $I_L502_378 = 1 + $I_L502_378
  504.                if ( $I_L502_378 >= 5 ) exit
  504.             enddo
  516.             $kt_S0 = kflo
  517.             $I_L517_380 = 0
  517. !dir$ unroll 4
  517.             do
  518.                if (  _substr(opf(1 + $I_L517_380, 1),1,40) ==  _substr(chrop($kt_S0),1,40) ) then
  519.                   dopf(1 + $I_L517_380, 1) = .true.
  520.                   $kt_S0 = 1 + $kt_S0
  520.                else
  522.                   dopf(1 + $I_L517_380, 1) = .false.
  522.                endif
  524.                $I_L517_380 = 1 + $I_L517_380
  523.                if ( $I_L517_380 >= 25 ) exit
  523.             enddo
  525.             first = .false.
  526.             second2 = .true.
  527.             $Unit_temp_O1 = nfprt
  527.             _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$68,  _substr(t$67,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  527.             $I_L527_382 = 0
  527.             do
  527.                if ( ( ( 1 + $I_L527_382 ) <= 0 .or. -24 + $I_L527_382 > 0 ) /= .false. ) then
  527.                    _substr(t$703,1,13) = 'PostLoop.f90'
  527.                    _substr(t$704,1,5) = 'DOPF'
  527.                   t$690 = 1 + $I_L527_382
  527.                   call _bounds_error(  _substr(t$703,1,13), 527,  _substr(t$704,1,5), 1, 1, 25, t$690, t$702 )
  527.                endif
  527.                $Unit_temp_O2 = nfprt
  527.                $IOitem_O22 = dopf(1 + $I_L527_382, 1)
  527.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$68,  _substr(t$67,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x2000500000000L ) ) )
  527.                $I_L527_382 = 1 + $I_L527_382
  527.                if ( $I_L527_382 >= 25 ) exit
  527.             enddo
  527.             $Unit_temp_O3 = nfprt
  527.             _fwrite( _clist( 0, 0, 1, $Unit_temp_O3, Null_Arg, Null_Arg, t$68,  _substr(t$67,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  527.             goto 10
  527.          endif
  529.       else if ( second2 == .false. ) then
  529.          goto 10
  529.       else if ( newday /= .false. ) then
  529.          goto 10
  529.       else if ( mean == .false. ) then
  532.          $Unit_temp_O6 = nferr
  532.          $_IOitem_P2(0) = first
  532.          $_IOitem_P2(1) = second2
  532.          $_IOitem_P2(2) = .false.
  532.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$70,  _substr(t$69,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' First, Second, Mean Inconsistent:', 0x800600000000L ), _iotype( (&)$_IOitem_P2(:( 0, 2, 1 )), 0x2000500000000L ) ) )
  535.           _substr(t$705,1,4) = '8100'
  535.          call _stop(  _substr(t$705,1,4) )
  535.       else
  539.           _substr(inf(1, 2),1,40) =  _substr(t2ps,1,40)
  543.          $kt_S2 = kfld
  544.          $I_L544_372 = 0
  544.          do
  545.             if (  _substr(inf(1 + $I_L544_372, 2),1,40) ==  _substr(chrdsc($kt_S2),1,40) ) then
  546.                $kt_S2 = 1 + $kt_S2
  546.             else
  548.                $Unit_temp_O7 = nfprt
  548.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$72,  _substr(t$71,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Time Mean is not Available, Ignore it ...', 0x800600000000L ) ) )
  549.                $timemean_S6 = .false.
  549.             endif
  551.             $I_L544_372 = 1 + $I_L544_372
  550.             if ( $I_L544_372 >= 5 ) exit
  550.          enddo
  556.          $kt_S4 = kflo
  557.          $I_L557_374 = 0
  557. !dir$ unroll 4
  557.          do
  558.             if (  _substr(opf(1 + $I_L557_374, 2),1,40) ==  _substr(chrop($kt_S4),1,40) ) then
  559.                dopf(1 + $I_L557_374, 2) = .true.
  560.                $kt_S4 = 1 + $kt_S4
  560.             else
  562.                dopf(1 + $I_L557_374, 2) = .false.
  562.             endif
  564.             $I_L557_374 = 1 + $I_L557_374
  563.             if ( $I_L557_374 >= 25 ) exit
  563.          enddo
  565.          $Unit_temp_O8 = nfprt
  565.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O8, Null_Arg, Null_Arg, t$74,  _substr(t$73,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  565.          $I_L565_376 = 0
  565.          do
  565.             if ( ( ( 1 + $I_L565_376 ) <= 0 .or. -24 + $I_L565_376 > 0 ) /= .false. ) then
  565.                 _substr(t$710,1,13) = 'PostLoop.f90'
  565.                 _substr(t$711,1,5) = 'DOPF'
  565.                t$694 = 1 + $I_L565_376
  565.                call _bounds_error(  _substr(t$710,1,13), 565,  _substr(t$711,1,5), 1, 1, 25, t$694, t$709 )
  565.             endif
  565.             $Unit_temp_O9 = nfprt
  565.             $IOitem_O23 = dopf(1 + $I_L565_376, 2)
  565.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O9, Null_Arg, Null_Arg, t$74,  _substr(t$73,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O23, 0x2000500000000L ) ) )
  565.             $I_L565_376 = 1 + $I_L565_376
  565.             if ( $I_L565_376 >= 25 ) exit
  565.          enddo
  565.          $Unit_temp_O10 = nfprt
  565.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$74,  _substr(t$73,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  565.    10    continue
  570.          if ( $timemean_S6 /= .false. ) then
  574.             if ( mean == .false. ) then
  581.                id = 1
  582.                ldim = 1
  583.                call readfield( nharm(kfld), nlevs(kfld), wq(1) )
  584.                call rectrg( mnwv2, ldim, wq(1), pscb(1, 1) )
  585.                if ( jmax > 0 ) then
  586.                   if ( imax > 0 ) then
  585.                      $I_L585_433 = 0
  585.                      do
  586.                         $I_L586_386 = 0
  586. !dir$ ivdep
  586.                         do
  587.                            $pscb_WR0_R0 = _expn( pscb(1 + $I_L586_386, 1 + $I_L585_433) )
  587.                            pscb(1 + $I_L586_386, 1 + $I_L585_433) = $pscb_WR0_R0
  588.                            psmb(1 + $I_L586_386, 1 + $I_L585_433) = 10.0 * $pscb_WR0_R0
  589.                            $I_L586_386 = 1 + $I_L586_386
  586.                            if ( $I_L586_386 >= imax ) exit
  586.                         enddo
  590.                         $I_L585_433 = 1 + $I_L585_433
  589.                         if ( $I_L585_433 >= jmax ) exit
  589.                      enddo
  589.                   endif
  589.                endif
  589.             else
  598.                id = 2
  599.                ldim = 1
  600.                call readfield( nharm(kfld), nlevs(kfld), pscb(1, 1) )
  601.                if ( jmax > 0 ) then
  602.                   if ( imax > 0 ) then
  601.                      $I_L601_431 = 0
  601.                      do
  602.                         $I_L602_384 = 0
  602. !dir$ ivdep
  602.                         do
  603.                            psmb(1 + $I_L602_384, 1 + $I_L601_431) = 10.0 * pscb(1 + $I_L602_384, 1 + $I_L601_431)
  604.                            lnpscb(1 + $I_L602_384, 1 + $I_L601_431) = log( pscb(1 + $I_L602_384, 1 + $I_L601_431) )
  605.                            $I_L602_384 = 1 + $I_L602_384
  602.                            if ( $I_L602_384 >= imax ) exit
  602.                         enddo
  606.                         $I_L601_431 = 1 + $I_L601_431
  605.                         if ( $I_L601_431 >= jmax ) exit
  605.                      enddo
  605.                   endif
  605.                endif
  607.                call dectrg( ldim, lnpscb(1, 1), wq(1) )
  607.             endif
  612.             call dellnp( wq(1), dpdphi(1), dpdlam(1) )
  617.             call readfield( nharm(1 + kfld), nlevs(1 + kfld), di(1, 1) )
  622.             call readfield( nharm(2 + kfld), nlevs(2 + kfld), ze(1, 1) )
  625.             if ( dopf(1, id) ) then
  616.                goto 20
  625.             else if ( dopf(2, id) /= .false. ) then
  625.    20          continue
  626.                $Unit_temp_O11 = nfprt
  626.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$76,  _substr(t$75,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: ps and masK', 0x800600000000L ) ) )
  631.                if ( lmax > 0 ) then
  632.                   if ( jmax > 0 ) then
  633.                      if ( imax > 0 ) then
  632.                         $I_L632_487 = 0
  632.                         do
  631.                            $I_L631_485 = 0
  631.                            do
  633.                               $I_L633_479 = 0
  633.                               do
  632.                                  $I_L632_460 = 0
  632. !dir$ shortloop16
  632. !dir$ blocking_size( 8, 8 )
  632.                                  do
  631.                                     $I_L631_451 = 0
  631. !dir$ shortloop16
  631. !dir$ blocking_size( 8, 8 )
  631.                                     do
  633.                                        $SCA_pmand_I4 = pmand(1 + $I_L631_451 + 8 * $I_L631_485)
  633.                                        $I_L633_388 = 0
  633. !dir$ ivdep
  633. !dir$ loop_info (automatic) cache_nt( og )
  633. !dir$ blocking_size( 256, 256 )
  633.                                        do
  634.                                           if ( psmb(1 + $I_L633_388 + 256 * $I_L633_479, 1 + $I_L632_460 + 8 * $I_L632_487) < $SCA_pmand_I4 ) then
  635.                                              og(1 + $I_L633_388 + 256 * $I_L633_479, 1 + $I_L632_460 + 8 * $I_L632_487, 1 + $I_L631_451 + 8 * $I_L631_485) = -( $SCA_pmand_I4 * 1.0/psmb(1 + $I_L633_388 + 256 * $I_L633_479, 1 + $I_L632_460 + 8 * $I_L632_487) )
  635.                                           else
  637.                                              og(1 + $I_L633_388 + 256 * $I_L633_479, 1 + $I_L632_460 + 8 * $I_L632_487, 1 + $I_L631_451 + 8 * $I_L631_485) = ( $SCA_pmand_I4 * 1.0/psmb(1 + $I_L633_388 + 256 * $I_L633_479, 1 + $I_L632_460 + 8 * $I_L632_487) )
  637.                                           endif
  633.                                           $I_L633_388 = 1 + $I_L633_388
  638.                                           if ( $I_L633_388 >= min( imax, 256 + 256 * $I_L633_479 ) + -256 * $I_L633_479 ) exit
  638.                                        enddo
  631.                                        $I_L631_451 = 1 + $I_L631_451
  631.                                        if ( $I_L631_451 >= min( lmax, 8 + 8 * $I_L631_485 ) + -8 * $I_L631_485 ) exit
  631.                                     enddo
  632.                                     $I_L632_460 = 1 + $I_L632_460
  639.                                     if ( $I_L632_460 >= min( jmax, 8 + 8 * $I_L632_487 ) + -8 * $I_L632_487 ) exit
  639.                                  enddo
  633.                                  $I_L633_479 = 1 + $I_L633_479
  633.                                  if ( $I_L633_479 >= 1 + max( 0, -1 + _rsh( 255 + imax, 8 ) ) ) exit
  633.                               enddo
  631.                               $I_L631_485 = 1 + $I_L631_485
  640.                               if ( $I_L631_485 >= 1 + max( 0, -1 + _rsh( 7 + lmax, 3 ) ) ) exit
  640.                            enddo
  632.                            $I_L632_487 = 1 + $I_L632_487
  632.                            if ( $I_L632_487 >= 1 + max( 0, -1 + _rsh( 7 + jmax, 3 ) ) ) exit
  632.                         enddo
  632.                      endif
  632.                   endif
  632.                endif
  645.                if ( dopf(1, id) /= .false. ) then
  646.                   call rwrite( nvo(kflo), kflo, pscb(1, 1) )
  647.                   kflo = 1 + kflo
  647.                endif
  652.                if ( dopf(2, id) /= .false. ) then
  653.                   call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
  654.                   kflo = 1 + kflo
  654.                endif
  654.             endif
  659.             if ( dopf(3, id) ) then
  657.                goto 30
  659.             else if ( dopf(4, id) ) then
  659.                goto 30
  659.             else if ( dopf(5, id) ) then
  659.                goto 30
  659.             else if ( dopf(6, id) ) then
  659.                goto 30
  659.             else if ( dopf(7, id) ) then
  659.                goto 30
  659.             else if ( dopf(8, id) ) then
  659.                goto 30
  659.             else if ( dopf(10, id) ) then
  659.                goto 30
  659.             else if ( dopf(11, id) ) then
  659.                goto 30
  659.             else if ( dopf(12, id) ) then
  659.                goto 30
  659.             else if ( dopf(13, id) ) then
  659.                goto 30
  659.             else if ( dopf(14, id) ) then
  659.                goto 30
  659.             else if ( dopf(15, id) /= .false. ) then
  659.    30          continue
  663.                $Unit_temp_O12 = nfprt
  663.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$78,  _substr(t$77,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Winds: us, up, vs, vp and omega', 0x800600000000L ) ) )
  664. !dir$ suppress dopf(1, 1)
  664.                t$733 = $_StaticDV_P3
  664.                t$733%base_addr = pointer to array[1] of array[1] of logical( loc( dopf(1, 1) ) )
  664.                t$733%header%el_len = 32
  664.                t$733%header%assoc = 1
  664.                t$733%header%ptr_alloc = 0
  664.                t$733%header%p_or_a = 0
  664.                t$733%header%a_contig = 1
  664.                t$733%header%n_dim = 2
  664.                t$733%header%orig_base = 0
  664.                t$733%header%orig_size = 0
  664.                t$733%header%n_codim = 0
  664.                t$733%header%dv_versn = 2
  664.                t$733%header%dv_smunit = 32
  664.                t$733%header%d_type = 0
  664.                t$733%header%n_params = 0
  664.                t$733%header%d_type_idx = 21
  664.                t$733%dim_1%LB = 1
  664.                t$733%dim_1%EX = 25
  664.                t$733%dim_1%SM = 1
  664.                t$733%dim_2%LB = 1
  664.                t$733%dim_2%EX = 2
  664.                t$733%dim_2%SM = 25
  664.                call winds( psmb(1, 1), alnpmd(1), kflo, t$733, id, nvo(1), 307, dpdphi(1), dpdlam(1), di(1, 1), ze(1, 1), ug(1, 1, 1), vg(1, 1, 1), og(1, 1, 1) )
  664.             endif
  670.             if ( dopf(8, id) ) then
  666.                goto 40
  670.             else if ( dopf(9, id) ) then
  670.                goto 40
  670.             else if ( dopf(10, id) ) then
  670.                goto 40
  670.             else if ( dopf(11, id) ) then
  670.                goto 40
  670.             else if ( dopf(12, id) ) then
  670.                goto 40
  670.             else if ( dopf(13, id) ) then
  670.                goto 40
  670.             else if ( dopf(14, id) ) then
  670.                goto 40
  670.             else if ( dopf(15, id) /= .false. ) then
  670.    40          continue
  673.                $Unit_temp_O13 = nfprt
  673.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' uvtodz: div and vort', 0x800600000000L ) ) )
  675.                call uvtodz( ug(1, 1, 1), vg(1, 1, 1), wz(1, 1), wd(1, 1) )
  676.                call rectrg( mnwv2, lmax, wd(1, 1), ug(1, 1, 1) )
  677.                call rectrg( mnwv2, lmax, wz(1, 1), vg(1, 1, 1) )
  677.             endif
  682.             if ( dopf(8, id) /= .false. ) then
  683.                call rwrite( nvo(kflo), kflo, ug(1, 1, 1) )
  684.                kflo = 1 + kflo
  684.             endif
  689.             if ( dopf(9, id) /= .false. ) then
  690.                call rwrite( nvo(kflo), kflo, vg(1, 1, 1) )
  691.                kflo = 1 + kflo
  691.             endif
  696.             if ( dopf(10, id) ) then
  692.                goto 50
  696.             else if ( dopf(11, id) ) then
  696.                goto 50
  696.             else if ( dopf(12, id) /= .false. ) then
  696.    50          continue
  697.                if ( lmax > 0 ) then
  701.                   $SC_snnp1_I0 = snnp1%dim_1%EX
  701.                   $SC_snnp1_I1 = snnp1%dim_1%LB
  700.                   if ( -3 + mnwv2 >= 0 ) then
  697.                      $I_L697_421 = 0
  697. !dir$ ivdep
  697.                      do
  698.                         wk(1, 1 + $I_L697_421) = 0.0
  699.                         wk(2, 1 + $I_L697_421) = 0.0
  703.                         $I_L697_421 = 1 + $I_L697_421
  702.                         if ( $I_L697_421 >= lmax ) exit
  702.                      enddo
  697.                      $I_L697_481 = 0
  697.                      do
  700.                         $I_L700_475 = 0
  700.                         do
  697.                            $I_L697_489 = 0
  697. !dir$ shortloop16
  697. !dir$ blocking_size( 2, 2 )
  697.                            do
  700.                               $I_L700_423 = 0
  700. !dir$ ivdep
  700. !dir$ blocking_size( 256, 256 )
  700.                               do
  701.                                  wk(3 + $I_L700_423 + 256 * $I_L700_475, 1 + $I_L697_489 + 2 * $I_L697_481) = (snnp1%base_addr)(3 + $I_L700_423 + 256 * $I_L700_475, 0) * wz(3 + $I_L700_423 + 256 * $I_L700_475, 1 + $I_L697_489 + 2 * $I_L697_481)
  700.                                  $I_L700_423 = 1 + $I_L700_423
  700.                                  if ( $I_L700_423 >= min( -2 + mnwv2, 256 + 256 * $I_L700_475 ) + -256 * $I_L700_475 ) exit
  700.                               enddo
  697.                               $I_L697_489 = 1 + $I_L697_489
  697.                               if ( $I_L697_489 >= min( lmax, 2 + 2 * $I_L697_481 ) + -2 * $I_L697_481 ) exit
  697.                            enddo
  700.                            $I_L700_475 = 1 + $I_L700_475
  702.                            if ( $I_L700_475 >= 1 + max( 0, -1 + _rsh( 253 + mnwv2, 8 ) ) ) exit
  702.                         enddo
  697.                         $I_L697_481 = 1 + $I_L697_481
  697.                         if ( $I_L697_481 >= 1 + max( 0, -1 + _rsh( 1 + lmax, 1 ) ) ) exit
  697.                      enddo
  697.                   else
  697.                      $I_L697_409 = 0
  697. !dir$ ivdep
  697.                      do
  698.                         wk(1, 1 + $I_L697_409) = 0.0
  699.                         wk(2, 1 + $I_L697_409) = 0.0
  703.                         $I_L697_409 = 1 + $I_L697_409
  702.                         if ( $I_L697_409 >= lmax ) exit
  702.                      enddo
  702.                   endif
  702.                endif
  704.                if ( dopf(10, id) /= .false. ) then
  705.                   $Unit_temp_O14 = nfprt
  705.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$82,  _substr(t$81,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: psi', 0x800600000000L ) ) )
  706.                   call rectrg( mnwv2, lmax, wk(1, 1), ug(1, 1, 1) )
  707.                   call rwrite( nvo(kflo), kflo, ug(1, 1, 1) )
  708.                   kflo = 1 + kflo
  708.                endif
  708.             endif
  712.             if ( dopf(11, id) ) then
  710.                goto 60
  712.             else if ( dopf(12, id) ) then
  712.                goto 60
  712.             else if ( dopf(14, id) ) then
  712.                goto 60
  712.             else if ( dopf(15, id) /= .false. ) then
  712.    60          continue
  714.                if ( jmaxhf > 0 ) then
  715.                   $SC_colrad_I2 = colrad%dim_1%EX
  715.                   $SC_colrad_I3 = colrad%dim_1%LB
  714.                   $I_L714_391 = 0
  714.                   do
  715.                      $Flat_S19 = sin( (colrad%base_addr)(1 + $I_L714_391, 0) )
  715.                      coslai(1 + $I_L714_391) = 1.0/$Flat_S19
  716.                      coslai(jmax + -$I_L714_391) = 1.0/$Flat_S19
  717.                      $I_L714_391 = 1 + $I_L714_391
  714.                      if ( $I_L714_391 >= jmaxhf ) exit
  714.                   enddo
  714.                endif
  714.             endif
  722.             if ( dopf(11, id) /= .false. ) then
  723.                $Unit_temp_O15 = nfprt
  723.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, t$84,  _substr(t$83,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: upsi', 0x800600000000L ) ) )
  724.                if ( lmax > 0 ) then
  725.                   if ( mnwv2 > 0 ) then
  724.                      $I_L724_435 = 0
  724.                      do
  725.                         $I_L725_393 = 0
  725. !dir$ ivdep
  725.                         do
  726.                            wl(1 + $I_L725_393, 1 + $I_L724_435) = -( emrad1 * wk(1 + $I_L725_393, 1 + $I_L724_435) )
  727.                            $I_L725_393 = 1 + $I_L725_393
  725.                            if ( $I_L725_393 >= mnwv2 ) exit
  725.                         enddo
  728.                         $I_L724_435 = 1 + $I_L724_435
  727.                         if ( $I_L724_435 >= lmax ) exit
  727.                      enddo
  727.                   endif
  727.                endif
  729.                call rectrd( lmax, wl(1, 1), ug(1, 1, 1) )
  730.                if ( lmax > 0 ) then
  731.                   if ( jmax > 0 ) then
  732.                      if ( imax > 0 ) then
  731.                         $I_L731_463 = 0
  731.                         do
  730.                            $SCA_coslai_I5 = coslai(1 + $I_L731_463)
  730.                            $I_L730_437 = 0
  730.                            do
  732.                               $I_L732_395 = 0
  732. !dir$ ivdep
  732. !dir$ loop_info (automatic) cache_nt( ug )
  732.                               do
  733.                                  ug(1 + $I_L732_395, 1 + $I_L731_463, 1 + $I_L730_437) = $SCA_coslai_I5 * ug(1 + $I_L732_395, 1 + $I_L731_463, 1 + $I_L730_437)
  734.                                  $I_L732_395 = 1 + $I_L732_395
  732.                                  if ( $I_L732_395 >= imax ) exit
  732.                               enddo
  736.                               $I_L730_437 = 1 + $I_L730_437
  734.                               if ( $I_L730_437 >= lmax ) exit
  734.                            enddo
  735.                            $I_L731_463 = 1 + $I_L731_463
  735.                            if ( $I_L731_463 >= jmax ) exit
  735.                         enddo
  735.                      endif
  735.                   endif
  735.                endif
  737.                call rwrite( nvo(kflo), kflo, ug(1, 1, 1) )
  738.                kflo = 1 + kflo
  738.             endif
  743.             if ( dopf(12, id) /= .false. ) then
  744.                $Unit_temp_O16 = nfprt
  744.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, t$86,  _substr(t$85,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: vpsi', 0x800600000000L ) ) )
  745.                if ( lmax > 0 ) then
  747.                   if ( mend1 > 0 ) then
  745.                      $I_L745_465 = 0
  745.                      do
  746.                         $ll_S26 = 0
  754.                         if ( 0 < -1 + mend2 ) then
  747.                            $I_L747_439 = 0
  747.                            do
  749.                               $I_L749_397 = 0
  749. !dir$ ivdep
  749.                               do
  751.                                  wl(1 + 2 * $ll_S26 + 2 * $I_L749_397, 1 + $I_L745_465) = -( emrad1 * wk(2 + 2 * $ll_S26 + 2 * $I_L749_397, 1 + $I_L745_465) * real( $I_L749_397, 8 ) )
  752.                                  wl(2 + 2 * $ll_S26 + 2 * $I_L749_397, 1 + $I_L745_465) = emrad1 * wk(1 + 2 * $ll_S26 + 2 * $I_L749_397, 1 + $I_L745_465) * real( $I_L749_397, 8 )
  753.                                  $I_L749_397 = 1 + $I_L749_397
  749.                                  if ( $I_L749_397 >= -1 + mend2 + -$I_L747_439 ) exit
  749.                               enddo
  750.                               $ll_S26 = ( -1 + mend2 + $ll_S26 + -$I_L747_439 )
  754.                               $I_L747_439 = 1 + $I_L747_439
  753.                               if ( $I_L747_439 >= min( mend1, -1 + mend2 ) ) exit
  753.                            enddo
  753.                         endif
  755.                         $I_L745_465 = 1 + $I_L745_465
  754.                         if ( $I_L745_465 >= lmax ) exit
  754.                      enddo
  754.                   endif
  754.                endif
  756.                call rectrg( mnwv2, lmax, wl(1, 1), ug(1, 1, 1) )
  757.                if ( lmax > 0 ) then
  758.                   if ( jmax > 0 ) then
  759.                      if ( imax > 0 ) then
  758.                         $I_L758_467 = 0
  758.                         do
  757.                            $SCA_coslai_I6 = coslai(1 + $I_L758_467)
  757.                            $I_L757_441 = 0
  757.                            do
  759.                               $I_L759_399 = 0
  759. !dir$ ivdep
  759. !dir$ loop_info (automatic) cache_nt( ug )
  759.                               do
  760.                                  ug(1 + $I_L759_399, 1 + $I_L758_467, 1 + $I_L757_441) = $SCA_coslai_I6 * ug(1 + $I_L759_399, 1 + $I_L758_467, 1 + $I_L757_441)
  761.                                  $I_L759_399 = 1 + $I_L759_399
  759.                                  if ( $I_L759_399 >= imax ) exit
  759.                               enddo
  763.                               $I_L757_441 = 1 + $I_L757_441
  761.                               if ( $I_L757_441 >= lmax ) exit
  761.                            enddo
  762.                            $I_L758_467 = 1 + $I_L758_467
  762.                            if ( $I_L758_467 >= jmax ) exit
  762.                         enddo
  762.                      endif
  762.                   endif
  762.                endif
  764.                call rwrite( nvo(kflo), kflo, ug(1, 1, 1) )
  765.                kflo = 1 + kflo
  765.             endif
  770.             if ( dopf(13, id) ) then
  766.                goto 70
  770.             else if ( dopf(14, id) ) then
  770.                goto 70
  770.             else if ( dopf(15, id) /= .false. ) then
  770.    70          continue
  771.                if ( lmax > 0 ) then
  775.                   $SC_snnp1_I0 = snnp1%dim_1%EX
  775.                   $SC_snnp1_I1 = snnp1%dim_1%LB
  774.                   if ( -3 + mnwv2 >= 0 ) then
  771.                      $I_L771_426 = 0
  771. !dir$ ivdep
  771.                      do
  772.                         wk(1, 1 + $I_L771_426) = 0.0
  773.                         wk(2, 1 + $I_L771_426) = 0.0
  777.                         $I_L771_426 = 1 + $I_L771_426
  776.                         if ( $I_L771_426 >= lmax ) exit
  776.                      enddo
  771.                      $I_L771_483 = 0
  771.                      do
  774.                         $I_L774_477 = 0
  774.                         do
  771.                            $I_L771_491 = 0
  771. !dir$ shortloop16
  771. !dir$ blocking_size( 2, 2 )
  771.                            do
  774.                               $I_L774_428 = 0
  774. !dir$ ivdep
  774. !dir$ blocking_size( 256, 256 )
  774.                               do
  775.                                  wk(3 + $I_L774_428 + 256 * $I_L774_477, 1 + $I_L771_491 + 2 * $I_L771_483) = (snnp1%base_addr)(3 + $I_L774_428 + 256 * $I_L774_477, 0) * wd(3 + $I_L774_428 + 256 * $I_L774_477, 1 + $I_L771_491 + 2 * $I_L771_483)
  774.                                  $I_L774_428 = 1 + $I_L774_428
  774.                                  if ( $I_L774_428 >= min( -2 + mnwv2, 256 + 256 * $I_L774_477 ) + -256 * $I_L774_477 ) exit
  774.                               enddo
  771.                               $I_L771_491 = 1 + $I_L771_491
  771.                               if ( $I_L771_491 >= min( lmax, 2 + 2 * $I_L771_483 ) + -2 * $I_L771_483 ) exit
  771.                            enddo
  774.                            $I_L774_477 = 1 + $I_L774_477
  776.                            if ( $I_L774_477 >= 1 + max( 0, -1 + _rsh( 253 + mnwv2, 8 ) ) ) exit
  776.                         enddo
  771.                         $I_L771_483 = 1 + $I_L771_483
  771.                         if ( $I_L771_483 >= 1 + max( 0, -1 + _rsh( 1 + lmax, 1 ) ) ) exit
  771.                      enddo
  771.                   else
  771.                      $I_L771_411 = 0
  771. !dir$ ivdep
  771.                      do
  772.                         wk(1, 1 + $I_L771_411) = 0.0
  773.                         wk(2, 1 + $I_L771_411) = 0.0
  777.                         $I_L771_411 = 1 + $I_L771_411
  776.                         if ( $I_L771_411 >= lmax ) exit
  776.                      enddo
  776.                   endif
  776.                endif
  778.                if ( dopf(13, id) /= .false. ) then
  779.                   $Unit_temp_O17 = nfprt
  779.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, t$88,  _substr(t$87,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: chi', 0x800600000000L ) ) )
  780.                   call rectrg( mnwv2, lmax, wk(1, 1), vg(1, 1, 1) )
  781.                   call rwrite( nvo(kflo), kflo, vg(1, 1, 1) )
  782.                   kflo = 1 + kflo
  782.                endif
  782.             endif
  788.             if ( dopf(14, id) /= .false. ) then
  789.                $Unit_temp_O18 = nfprt
  789.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, t$90,  _substr(t$89,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: uchi', 0x800600000000L ) ) )
  790.                if ( lmax > 0 ) then
  792.                   if ( mend1 > 0 ) then
  790.                      $I_L790_469 = 0
  790.                      do
  791.                         $ll_S35 = 0
  799.                         if ( 0 < -1 + mend2 ) then
  792.                            $I_L792_443 = 0
  792.                            do
  794.                               $I_L794_401 = 0
  794. !dir$ ivdep
  794.                               do
  796.                                  wl(1 + 2 * $ll_S35 + 2 * $I_L794_401, 1 + $I_L790_469) = -( emrad1 * wk(2 + 2 * $ll_S35 + 2 * $I_L794_401, 1 + $I_L790_469) * real( $I_L794_401, 8 ) )
  797.                                  wl(2 + 2 * $ll_S35 + 2 * $I_L794_401, 1 + $I_L790_469) = emrad1 * wk(1 + 2 * $ll_S35 + 2 * $I_L794_401, 1 + $I_L790_469) * real( $I_L794_401, 8 )
  798.                                  $I_L794_401 = 1 + $I_L794_401
  794.                                  if ( $I_L794_401 >= -1 + mend2 + -$I_L792_443 ) exit
  794.                               enddo
  795.                               $ll_S35 = ( -1 + mend2 + $ll_S35 + -$I_L792_443 )
  799.                               $I_L792_443 = 1 + $I_L792_443
  798.                               if ( $I_L792_443 >= min( mend1, -1 + mend2 ) ) exit
  798.                            enddo
  798.                         endif
  800.                         $I_L790_469 = 1 + $I_L790_469
  799.                         if ( $I_L790_469 >= lmax ) exit
  799.                      enddo
  799.                   endif
  799.                endif
  801.                call rectrg( mnwv2, lmax, wl(1, 1), vg(1, 1, 1) )
  802.                if ( lmax > 0 ) then
  803.                   if ( jmax > 0 ) then
  804.                      if ( imax > 0 ) then
  803.                         $I_L803_471 = 0
  803.                         do
  802.                            $SCA_coslai_I7 = coslai(1 + $I_L803_471)
  802.                            $I_L802_445 = 0
  802.                            do
  804.                               $I_L804_403 = 0
  804. !dir$ ivdep
  804. !dir$ loop_info (automatic) cache_nt( vg )
  804.                               do
  805.                                  vg(1 + $I_L804_403, 1 + $I_L803_471, 1 + $I_L802_445) = $SCA_coslai_I7 * vg(1 + $I_L804_403, 1 + $I_L803_471, 1 + $I_L802_445)
  806.                                  $I_L804_403 = 1 + $I_L804_403
  804.                                  if ( $I_L804_403 >= imax ) exit
  804.                               enddo
  808.                               $I_L802_445 = 1 + $I_L802_445
  806.                               if ( $I_L802_445 >= lmax ) exit
  806.                            enddo
  807.                            $I_L803_471 = 1 + $I_L803_471
  807.                            if ( $I_L803_471 >= jmax ) exit
  807.                         enddo
  807.                      endif
  807.                   endif
  807.                endif
  809.                call rwrite( nvo(kflo), kflo, vg(1, 1, 1) )
  810.                kflo = 1 + kflo
  810.             endif
  815.             if ( dopf(15, id) /= .false. ) then
  816.                $Unit_temp_O19 = nfprt
  816.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O19, Null_Arg, Null_Arg, t$92,  _substr(t$91,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' postgg: vchi', 0x800600000000L ) ) )
  817.                if ( lmax > 0 ) then
  818.                   if ( mnwv2 > 0 ) then
  817.                      $I_L817_447 = 0
  817.                      do
  818.                         $I_L818_405 = 0
  818. !dir$ ivdep
  818.                         do
  819.                            wl(1 + $I_L818_405, 1 + $I_L817_447) = emrad1 * wk(1 + $I_L818_405, 1 + $I_L817_447)
  820.                            $I_L818_405 = 1 + $I_L818_405
  818.                            if ( $I_L818_405 >= mnwv2 ) exit
  818.                         enddo
  821.                         $I_L817_447 = 1 + $I_L817_447
  820.                         if ( $I_L817_447 >= lmax ) exit
  820.                      enddo
  820.                   endif
  820.                endif
  822.                call rectrd( lmax, wl(1, 1), vg(1, 1, 1) )
  823.                if ( lmax > 0 ) then
  824.                   if ( jmax > 0 ) then
  825.                      if ( imax > 0 ) then
  824.                         $I_L824_473 = 0
  824.                         do
  823.                            $SCA_coslai_I8 = coslai(1 + $I_L824_473)
  823.                            $I_L823_449 = 0
  823.                            do
  825.                               $I_L825_407 = 0
  825. !dir$ ivdep
  825. !dir$ loop_info (automatic) cache_nt( vg )
  825.                               do
  826.                                  vg(1 + $I_L825_407, 1 + $I_L824_473, 1 + $I_L823_449) = $SCA_coslai_I8 * vg(1 + $I_L825_407, 1 + $I_L824_473, 1 + $I_L823_449)
  827.                                  $I_L825_407 = 1 + $I_L825_407
  825.                                  if ( $I_L825_407 >= imax ) exit
  825.                               enddo
  829.                               $I_L823_449 = 1 + $I_L823_449
  827.                               if ( $I_L823_449 >= lmax ) exit
  827.                            enddo
  828.                            $I_L824_473 = 1 + $I_L824_473
  828.                            if ( $I_L824_473 >= jmax ) exit
  828.                         enddo
  828.                      endif
  828.                   endif
  828.                endif
  830.                call rwrite( nvo(kflo), kflo, vg(1, 1, 1) )
  831.                kflo = 1 + kflo
  831.             endif
  834.             call readfield( nharm(3 + kfld), nlevs(3 + kfld), di(1, 1) )
  836.             call readfield( nharm(4 + kfld), nlevs(4 + kfld), ze(1, 1) )
  837.             kfld = 5 + kfld
  846.             if ( dopf(16, id) ) then
  835.                goto 80
  846.             else if ( dopf(17, id) ) then
  846.                goto 80
  846.             else if ( dopf(18, id) ) then
  846.                goto 80
  846.             else if ( dopf(20, id) ) then
  846.                goto 80
  846.             else if ( dopf(22, id) ) then
  846.                goto 80
  846.             else if ( dopf(23, id) /= .false. ) then
  846.    80          continue
  848.                $Unit_temp_O20 = nfprt
  848.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, t$94,  _substr(t$93,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Heights: Tv, zp and slp', 0x800600000000L ) ) )
  849. !dir$ suppress dopf(1, 1)
  849.                t$815 = $_StaticDV_P4
  849.                t$815%base_addr = pointer to array[1] of array[1] of logical( loc( dopf(1, 1) ) )
  849.                t$815%header%el_len = 32
  849.                t$815%header%assoc = 1
  849.                t$815%header%ptr_alloc = 0
  849.                t$815%header%p_or_a = 0
  849.                t$815%header%a_contig = 1
  849.                t$815%header%n_dim = 2
  849.                t$815%header%orig_base = 0
  849.                t$815%header%orig_size = 0
  849.                t$815%header%n_codim = 0
  849.                t$815%header%dv_versn = 2
  849.                t$815%header%dv_smunit = 32
  849.                t$815%header%d_type = 0
  849.                t$815%header%n_params = 0
  849.                t$815%header%d_type_idx = 21
  849.                t$815%dim_1%LB = 1
  849.                t$815%dim_1%EX = 25
  849.                t$815%dim_1%SM = 1
  849.                t$815%dim_2%LB = 1
  849.                t$815%dim_2%EX = 2
  849.                t$815%dim_2%SM = 25
  849.                call heights( psmb(1, 1), pmand(1), alnpmd(1), kflo, t$815, id, nvo(1), 307, ze(1, 1), top(1, 1), ug(1, 1, 1), vg(1, 1, 1), og(1, 1, 1) )
  849.             endif
  856.             if ( dopf(19, id) ) then
  851.                goto 90
  856.             else if ( dopf(20, id) ) then
  856.                goto 90
  856.             else if ( dopf(21, id) ) then
  856.                goto 90
  856.             else if ( dopf(22, id) ) then
  856.                goto 90
  856.             else if ( dopf(23, id) ) then
  856.                goto 90
  856.             else if ( dopf(24, id) /= .false. ) then
  856.    90          continue
  858.                $Unit_temp_O21 = nfprt
  858.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, t$96,  _substr(t$95,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Humidity: Ts, Tp, rhs, rhp, sh, pw and theta', 0x800600000000L ) ) )
  859. !dir$ suppress dopf(1, 1)
  859.                t$816 = $_StaticDV_P5
  859.                t$816%base_addr = pointer to array[1] of array[1] of logical( loc( dopf(1, 1) ) )
  859.                t$816%header%el_len = 32
  859.                t$816%header%assoc = 1
  859.                t$816%header%ptr_alloc = 0
  859.                t$816%header%p_or_a = 0
  859.                t$816%header%a_contig = 1
  859.                t$816%header%n_dim = 2
  859.                t$816%header%orig_base = 0
  859.                t$816%header%orig_size = 0
  859.                t$816%header%n_codim = 0
  859.                t$816%header%dv_versn = 2
  859.                t$816%header%dv_smunit = 32
  859.                t$816%header%d_type = 0
  859.                t$816%header%n_params = 0
  859.                t$816%header%d_type_idx = 21
  859.                t$816%dim_1%LB = 1
  859.                t$816%dim_1%EX = 25
  859.                t$816%dim_1%SM = 1
  859.                t$816%dim_2%LB = 1
  859.                t$816%dim_2%EX = 2
  859.                t$816%dim_2%SM = 25
  859.                call humidity( psmb(1, 1), pmand(1), alnpmd(1), kflo, t$816, id, nvo(1), 307, di(1, 1), ze(1, 1), ug(1, 1, 1), vg(1, 1, 1), og(1, 1, 1) )
  859.             endif
  863.             newday = .false.
  863.          endif
  358.          _free( t$383 )
  358.       endif
  358.   100 continue
  867.       return
  867.       end
  867.       
  870.       
  870.       subroutine winds( psmb, alnpmd, kflo, dopf, id, nvo, ndp, dpdphi, dpdlam, di, ze, ug, vg, og )
  870.       t$98 = imax
  870.       t$99 = jmax
  889.       t$436 = _zla( 0, imax )
  870.       t$437 = _zla( 0, imax )
  889.       t$438 = _zla( 0, jmax )
  870.       t$439 = _zla( 0, imax ) * _zla( 0, jmax )
  870.       t$100 = lmax
  890.       t$440 = _zla( 0, lmax )
  890.       dopf%dim_1%LB = 1
  890.       dopf%dim_2%LB = 1
  870.       t$97 = ndp
  887.       t$441 = _zla( 0, ndp )
  870.       t$101 = mnwv3
  891.       t$442 = _zla( 0, mnwv3 )
  870.       t$102 = mnwv2
  892.       t$443 = _zla( 0, mnwv2 )
  870.       t$103 = kmax
  870.       t$444 = _zla( 0, mnwv2 )
  893.       t$445 = _zla( 0, kmax )
  870.       t$446 = _zla( 0, mnwv2 ) * _zla( 0, kmax )
  870.       t$447 = _zla( 0, imax ) * _zla( 0, jmax )
  870.       t$448 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
  905.       t$451 = 8 * _zla( 0, jmax )
  870.       t$104 = imx
  909.       t$452 = _zla( 0, imx )
  870.       t$453 = _zla( 0, imx )
  870.       t$454 = _zla( 0, jmax ) * _zla( 0, imx )
  909.       t$455 = 8 * ( 7 + 8 * _zla( 0, jmax ) ) / 8
  909.       t$457 = t$455 + 8 * _zla( 0, jmax ) * _zla( 0, imx )
  870.       t$458 = _zla( 0, jmax ) * _zla( 0, imx )
  870.       t$459 = _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
  910.       t$460 = 8 * ( 7 + t$455 + 8 * _zla( 0, jmax ) * _zla( 0, imx ) ) / 8
  910.       t$462 = t$460 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
  870.       t$463 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
  913.       t$464 = 8 * ( 7 + t$460 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
  913.       t$466 = t$464 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
  911.       t$467 = 8 * ( 7 + t$464 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
  911.       t$469 = t$467 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  912.       t$470 = 8 * ( 7 + t$467 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  912.       t$472 = t$470 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  916.       t$473 = 8 * ( 7 + t$470 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  916.       t$475 = t$473 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
  914.       t$476 = 8 * ( 7 + t$473 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
  914.       t$478 = t$476 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
  915.       t$479 = 8 * ( 7 + t$476 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
  915.       t$481 = t$479 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
  906.       t$482 = 8 * ( 7 + t$479 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
  906.       t$484 = t$482 + 8 * _zla( 0, jmax )
  870.       t$485 = _zla( 0, mnwv3 )
  870.       t$486 = _zla( 0, mnwv3 ) * _zla( 0, kmax )
  907.       t$487 = 8 * ( 7 + t$482 + 8 * _zla( 0, jmax ) ) / 8
  907.       t$489 = t$487 + 8 * _zla( 0, mnwv3 ) * _zla( 0, kmax )
  917.       t$490 = 8 * ( 7 + t$487 + 8 * _zla( 0, mnwv3 ) * _zla( 0, kmax ) ) / 8
  917.       t$492 = t$490 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  908.       t$493 = 8 * ( 7 + t$490 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  908.       t$495 = t$493 + 8 * _zla( 0, mnwv3 ) * _zla( 0, kmax )
  918.       t$496 = 8 * ( 7 + t$493 + 8 * _zla( 0, mnwv3 ) * _zla( 0, kmax ) ) / 8
  918.       t$498 = t$496 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  870.       t$449 = int( _alloc( t$496 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ), 8 )
  905.       t$450 = t$449
  909.       t$456 = t$455 + t$449
  910.       t$461 = t$460 + t$449
  913.       t$465 = t$464 + t$449
  911.       t$468 = t$467 + t$449
  912.       t$471 = t$470 + t$449
  916.       t$474 = t$473 + t$449
  914.       t$477 = t$476 + t$449
  915.       t$480 = t$479 + t$449
  906.       t$483 = t$482 + t$449
  907.       t$488 = t$487 + t$449
  917.       t$491 = t$490 + t$449
  908.       t$494 = t$493 + t$449
  918.       t$497 = t$496 + t$449
  920.       $F_A33 = kmax
  920.       $F_A34 = mnwv3
  920.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  920.          $I_A2 = 0
  920.          do
  920.             $I_A1 = 0
  920. !dir$ ivdep
  920.             do
  920.                uln(1 + $I_A1, 1 + $I_A2) = 0.0
  920.                $I_A1 = 1 + $I_A1
  920.                if ( $I_A1 >= $F_A34 ) exit
  920.             enddo
  920.             $I_A2 = 1 + $I_A2
  920.             if ( $I_A2 >= $F_A33 ) exit
  920.          enddo
  920.       endif
  921.       $F_A35 = kmax
  921.       $F_A36 = mnwv3
  921.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  921.          $I_A2 = 0
  921.          do
  921.             $I_A1 = 0
  921. !dir$ ivdep
  921.             do
  921.                vln(1 + $I_A1, 1 + $I_A2) = 0.0
  921.                $I_A1 = 1 + $I_A1
  921.                if ( $I_A1 >= $F_A36 ) exit
  921.             enddo
  921.             $I_A2 = 1 + $I_A2
  921.             if ( $I_A2 >= $F_A35 ) exit
  921.          enddo
  921.       endif
  923.       call dztouv( di(1, 1), ze(1, 1), uln(1, 1), vln(1, 1) )
  927. !dir$ suppress dpdlam(1)
  927.       t$817 = $_StaticDV_P1
  927.       t$817%base_addr = pointer to array[1] of real (kind=8)( loc( dpdlam(1) ) )
  927.       t$817%header%el_len = 64
  927.       t$817%header%assoc = 1
  927.       t$817%header%ptr_alloc = 0
  927.       t$817%header%p_or_a = 0
  927.       t$817%header%a_contig = 1
  927.       t$817%header%n_dim = 1
  927.       t$817%header%orig_base = 0
  927.       t$817%header%orig_size = 0
  927.       t$817%header%n_codim = 0
  927.       t$817%header%dv_versn = 2
  927.       t$817%header%dv_smunit = 64
  927.       t$817%header%d_type = 0
  927.       t$817%header%n_params = 0
  927.       t$817%header%d_type_idx = 13
  927.       t$817%dim_1%LB = 1
  927.       t$817%dim_1%EX = _zla( 0, t$102 )
  927.       t$817%dim_1%SM = 1
  927. !dir$ suppress four2d(1, 1)
  927.       t$818 = $_StaticDV_P2
  927.       t$818%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( four2d(1, 1) ) )
  927.       t$818%header%el_len = 64
  927.       t$818%header%assoc = 1
  927.       t$818%header%ptr_alloc = 0
  927.       t$818%header%p_or_a = 0
  927.       t$818%header%a_contig = 1
  927.       t$818%header%n_dim = 2
  927.       t$818%header%orig_base = 0
  927.       t$818%header%orig_size = 0
  927.       t$818%header%n_codim = 0
  927.       t$818%header%dv_versn = 2
  927.       t$818%header%dv_smunit = 64
  927.       t$818%header%d_type = 0
  927.       t$818%header%n_params = 0
  927.       t$818%header%d_type_idx = 13
  927.       t$818%dim_1%LB = 1
  927.       t$818%dim_1%EX = _zla( 0, t$104 )
  927.       t$818%dim_1%SM = 1
  927.       t$818%dim_2%LB = 1
  927.       t$818%dim_2%EX = _zla( 0, t$99 )
  927.       t$818%dim_2%SM = _zla( 0, t$104 )
  927.       call spec2four1d( t$817, t$818, 0 )
  928. !dir$ suppress four2d(1, 1)
  928.       t$819 = $_StaticDV_P3
  928.       t$819%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( four2d(1, 1) ) )
  928.       t$819%header%el_len = 64
  928.       t$819%header%assoc = 1
  928.       t$819%header%ptr_alloc = 0
  928.       t$819%header%p_or_a = 0
  928.       t$819%header%a_contig = 1
  928.       t$819%header%n_dim = 2
  928.       t$819%header%orig_base = 0
  928.       t$819%header%orig_size = 0
  928.       t$819%header%n_codim = 0
  928.       t$819%header%dv_versn = 2
  928.       t$819%header%dv_smunit = 64
  928.       t$819%header%d_type = 0
  928.       t$819%header%n_params = 0
  928.       t$819%header%d_type_idx = 13
  928.       t$819%dim_1%LB = 1
  928.       t$819%dim_1%EX = _zla( 0, t$104 )
  928.       t$819%dim_1%SM = 1
  928.       t$819%dim_2%LB = 1
  928.       t$819%dim_2%EX = _zla( 0, t$99 )
  928.       t$819%dim_2%SM = _zla( 0, t$104 )
  928. !dir$ suppress gdlam(1, 1)
  928.       t$820 = $_StaticDV_P4
  928.       t$820%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gdlam(1, 1) ) )
  928.       t$820%header%el_len = 64
  928.       t$820%header%assoc = 1
  928.       t$820%header%ptr_alloc = 0
  928.       t$820%header%p_or_a = 0
  928.       t$820%header%a_contig = 1
  928.       t$820%header%n_dim = 2
  928.       t$820%header%orig_base = 0
  928.       t$820%header%orig_size = 0
  928.       t$820%header%n_codim = 0
  928.       t$820%header%dv_versn = 2
  928.       t$820%header%dv_smunit = 64
  928.       t$820%header%d_type = 0
  928.       t$820%header%n_params = 0
  928.       t$820%header%d_type_idx = 13
  928.       t$820%dim_1%LB = 1
  928.       t$820%dim_1%EX = _zla( 0, t$98 )
  928.       t$820%dim_1%SM = 1
  928.       t$820%dim_2%LB = 1
  928.       t$820%dim_2%EX = _zla( 0, t$99 )
  928.       t$820%dim_2%SM = _zla( 0, t$98 )
  928.       call invd2( t$819, t$820 )
  930. !dir$ suppress di(1, 1)
  930.       t$821 = $_StaticDV_P5
  930.       t$821%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( di(1, 1) ) )
  930.       t$821%header%el_len = 64
  930.       t$821%header%assoc = 1
  930.       t$821%header%ptr_alloc = 0
  930.       t$821%header%p_or_a = 0
  930.       t$821%header%a_contig = 1
  930.       t$821%header%n_dim = 2
  930.       t$821%header%orig_base = 0
  930.       t$821%header%orig_size = 0
  930.       t$821%header%n_codim = 0
  930.       t$821%header%dv_versn = 2
  930.       t$821%header%dv_smunit = 64
  930.       t$821%header%d_type = 0
  930.       t$821%header%n_params = 0
  930.       t$821%header%d_type_idx = 13
  930.       t$821%dim_1%LB = 1
  930.       t$821%dim_1%EX = _zla( 0, t$102 )
  930.       t$821%dim_1%SM = 1
  930.       t$821%dim_2%LB = 1
  930.       t$821%dim_2%EX = _zla( 0, t$103 )
  930.       t$821%dim_2%SM = _zla( 0, t$102 )
  930. !dir$ suppress four3d(1, 1, 1)
  930.       t$822 = $_StaticDV_P6
  930.       t$822%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  930.       t$822%header%el_len = 64
  930.       t$822%header%assoc = 1
  930.       t$822%header%ptr_alloc = 0
  930.       t$822%header%p_or_a = 0
  930.       t$822%header%a_contig = 1
  930.       t$822%header%n_dim = 3
  930.       t$822%header%orig_base = 0
  930.       t$822%header%orig_size = 0
  930.       t$822%header%n_codim = 0
  930.       t$822%header%dv_versn = 2
  930.       t$822%header%dv_smunit = 64
  930.       t$822%header%d_type = 0
  930.       t$822%header%n_params = 0
  930.       t$822%header%d_type_idx = 13
  930.       t$822%dim_1%LB = 1
  930.       t$822%dim_1%EX = _zla( 0, t$104 )
  930.       t$822%dim_1%SM = 1
  930.       t$822%dim_2%LB = 1
  930.       t$822%dim_2%EX = _zla( 0, t$99 )
  930.       t$822%dim_2%SM = _zla( 0, t$104 )
  930.       t$822%dim_3%LB = 1
  930.       t$822%dim_3%EX = _zla( 0, t$103 )
  930.       t$822%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  930.       call spec2four2d( t$821, t$822, 0 )
  931. !dir$ suppress four3d(1, 1, 1)
  931.       t$823 = $_StaticDV_P7
  931.       t$823%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  931.       t$823%header%el_len = 64
  931.       t$823%header%assoc = 1
  931.       t$823%header%ptr_alloc = 0
  931.       t$823%header%p_or_a = 0
  931.       t$823%header%a_contig = 1
  931.       t$823%header%n_dim = 3
  931.       t$823%header%orig_base = 0
  931.       t$823%header%orig_size = 0
  931.       t$823%header%n_codim = 0
  931.       t$823%header%dv_versn = 2
  931.       t$823%header%dv_smunit = 64
  931.       t$823%header%d_type = 0
  931.       t$823%header%n_params = 0
  931.       t$823%header%d_type_idx = 13
  931.       t$823%dim_1%LB = 1
  931.       t$823%dim_1%EX = _zla( 0, t$104 )
  931.       t$823%dim_1%SM = 1
  931.       t$823%dim_2%LB = 1
  931.       t$823%dim_2%EX = _zla( 0, t$99 )
  931.       t$823%dim_2%SM = _zla( 0, t$104 )
  931.       t$823%dim_3%LB = 1
  931.       t$823%dim_3%EX = _zla( 0, t$103 )
  931.       t$823%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  931. !dir$ suppress gdi(1, 1, 1)
  931.       t$824 = $_StaticDV_P8
  931.       t$824%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gdi(1, 1, 1) ) )
  931.       t$824%header%el_len = 64
  931.       t$824%header%assoc = 1
  931.       t$824%header%ptr_alloc = 0
  931.       t$824%header%p_or_a = 0
  931.       t$824%header%a_contig = 1
  931.       t$824%header%n_dim = 3
  931.       t$824%header%orig_base = 0
  931.       t$824%header%orig_size = 0
  931.       t$824%header%n_codim = 0
  931.       t$824%header%dv_versn = 2
  931.       t$824%header%dv_smunit = 64
  931.       t$824%header%d_type = 0
  931.       t$824%header%n_params = 0
  931.       t$824%header%d_type_idx = 13
  931.       t$824%dim_1%LB = 1
  931.       t$824%dim_1%EX = _zla( 0, t$98 )
  931.       t$824%dim_1%SM = 1
  931.       t$824%dim_2%LB = 1
  931.       t$824%dim_2%EX = _zla( 0, t$99 )
  931.       t$824%dim_2%SM = _zla( 0, t$98 )
  931.       t$824%dim_3%LB = 1
  931.       t$824%dim_3%EX = _zla( 0, t$103 )
  931.       t$824%dim_3%SM = _zla( 0, t$98 ) * _zla( 0, t$99 )
  931.       call invd3( t$823, t$824 )
  933. !dir$ suppress dpdphi(1)
  933.       t$825 = $_StaticDV_P9
  933.       t$825%base_addr = pointer to array[1] of real (kind=8)( loc( dpdphi(1) ) )
  933.       t$825%header%el_len = 64
  933.       t$825%header%assoc = 1
  933.       t$825%header%ptr_alloc = 0
  933.       t$825%header%p_or_a = 0
  933.       t$825%header%a_contig = 1
  933.       t$825%header%n_dim = 1
  933.       t$825%header%orig_base = 0
  933.       t$825%header%orig_size = 0
  933.       t$825%header%n_codim = 0
  933.       t$825%header%dv_versn = 2
  933.       t$825%header%dv_smunit = 64
  933.       t$825%header%d_type = 0
  933.       t$825%header%n_params = 0
  933.       t$825%header%d_type_idx = 13
  933.       t$825%dim_1%LB = 1
  933.       t$825%dim_1%EX = _zla( 0, t$101 )
  933.       t$825%dim_1%SM = 1
  933. !dir$ suppress four2d(1, 1)
  933.       t$826 = $_StaticDV_P10
  933.       t$826%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( four2d(1, 1) ) )
  933.       t$826%header%el_len = 64
  933.       t$826%header%assoc = 1
  933.       t$826%header%ptr_alloc = 0
  933.       t$826%header%p_or_a = 0
  933.       t$826%header%a_contig = 1
  933.       t$826%header%n_dim = 2
  933.       t$826%header%orig_base = 0
  933.       t$826%header%orig_size = 0
  933.       t$826%header%n_codim = 0
  933.       t$826%header%dv_versn = 2
  933.       t$826%header%dv_smunit = 64
  933.       t$826%header%d_type = 0
  933.       t$826%header%n_params = 0
  933.       t$826%header%d_type_idx = 13
  933.       t$826%dim_1%LB = 1
  933.       t$826%dim_1%EX = _zla( 0, t$104 )
  933.       t$826%dim_1%SM = 1
  933.       t$826%dim_2%LB = 1
  933.       t$826%dim_2%EX = _zla( 0, t$99 )
  933.       t$826%dim_2%SM = _zla( 0, t$104 )
  933.       call spec2four1d( t$825, t$826, 0 )
  934. !dir$ suppress four2d(1, 1)
  934.       t$827 = $_StaticDV_P11
  934.       t$827%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( four2d(1, 1) ) )
  934.       t$827%header%el_len = 64
  934.       t$827%header%assoc = 1
  934.       t$827%header%ptr_alloc = 0
  934.       t$827%header%p_or_a = 0
  934.       t$827%header%a_contig = 1
  934.       t$827%header%n_dim = 2
  934.       t$827%header%orig_base = 0
  934.       t$827%header%orig_size = 0
  934.       t$827%header%n_codim = 0
  934.       t$827%header%dv_versn = 2
  934.       t$827%header%dv_smunit = 64
  934.       t$827%header%d_type = 0
  934.       t$827%header%n_params = 0
  934.       t$827%header%d_type_idx = 13
  934.       t$827%dim_1%LB = 1
  934.       t$827%dim_1%EX = _zla( 0, t$104 )
  934.       t$827%dim_1%SM = 1
  934.       t$827%dim_2%LB = 1
  934.       t$827%dim_2%EX = _zla( 0, t$99 )
  934.       t$827%dim_2%SM = _zla( 0, t$104 )
  934. !dir$ suppress gdphi(1, 1)
  934.       t$828 = $_StaticDV_P12
  934.       t$828%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gdphi(1, 1) ) )
  934.       t$828%header%el_len = 64
  934.       t$828%header%assoc = 1
  934.       t$828%header%ptr_alloc = 0
  934.       t$828%header%p_or_a = 0
  934.       t$828%header%a_contig = 1
  934.       t$828%header%n_dim = 2
  934.       t$828%header%orig_base = 0
  934.       t$828%header%orig_size = 0
  934.       t$828%header%n_codim = 0
  934.       t$828%header%dv_versn = 2
  934.       t$828%header%dv_smunit = 64
  934.       t$828%header%d_type = 0
  934.       t$828%header%n_params = 0
  934.       t$828%header%d_type_idx = 13
  934.       t$828%dim_1%LB = 1
  934.       t$828%dim_1%EX = _zla( 0, t$98 )
  934.       t$828%dim_1%SM = 1
  934.       t$828%dim_2%LB = 1
  934.       t$828%dim_2%EX = _zla( 0, t$99 )
  934.       t$828%dim_2%SM = _zla( 0, t$98 )
  934.       call invd2( t$827, t$828 )
  936. !dir$ suppress uln(1, 1)
  936.       t$829 = $_StaticDV_P13
  936.       t$829%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( uln(1, 1) ) )
  936.       t$829%header%el_len = 64
  936.       t$829%header%assoc = 1
  936.       t$829%header%ptr_alloc = 0
  936.       t$829%header%p_or_a = 0
  936.       t$829%header%a_contig = 1
  936.       t$829%header%n_dim = 2
  936.       t$829%header%orig_base = 0
  936.       t$829%header%orig_size = 0
  936.       t$829%header%n_codim = 0
  936.       t$829%header%dv_versn = 2
  936.       t$829%header%dv_smunit = 64
  936.       t$829%header%d_type = 0
  936.       t$829%header%n_params = 0
  936.       t$829%header%d_type_idx = 13
  936.       t$829%dim_1%LB = 1
  936.       t$829%dim_1%EX = _zla( 0, t$101 )
  936.       t$829%dim_1%SM = 1
  936.       t$829%dim_2%LB = 1
  936.       t$829%dim_2%EX = _zla( 0, t$103 )
  936.       t$829%dim_2%SM = _zla( 0, t$101 )
  936. !dir$ suppress four3d(1, 1, 1)
  936.       t$830 = $_StaticDV_P14
  936.       t$830%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  936.       t$830%header%el_len = 64
  936.       t$830%header%assoc = 1
  936.       t$830%header%ptr_alloc = 0
  936.       t$830%header%p_or_a = 0
  936.       t$830%header%a_contig = 1
  936.       t$830%header%n_dim = 3
  936.       t$830%header%orig_base = 0
  936.       t$830%header%orig_size = 0
  936.       t$830%header%n_codim = 0
  936.       t$830%header%dv_versn = 2
  936.       t$830%header%dv_smunit = 64
  936.       t$830%header%d_type = 0
  936.       t$830%header%n_params = 0
  936.       t$830%header%d_type_idx = 13
  936.       t$830%dim_1%LB = 1
  936.       t$830%dim_1%EX = _zla( 0, t$104 )
  936.       t$830%dim_1%SM = 1
  936.       t$830%dim_2%LB = 1
  936.       t$830%dim_2%EX = _zla( 0, t$99 )
  936.       t$830%dim_2%SM = _zla( 0, t$104 )
  936.       t$830%dim_3%LB = 1
  936.       t$830%dim_3%EX = _zla( 0, t$103 )
  936.       t$830%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  936.       call spec2four2d( t$829, t$830, 0 )
  937. !dir$ suppress four3d(1, 1, 1)
  937.       t$831 = $_StaticDV_P15
  937.       t$831%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  937.       t$831%header%el_len = 64
  937.       t$831%header%assoc = 1
  937.       t$831%header%ptr_alloc = 0
  937.       t$831%header%p_or_a = 0
  937.       t$831%header%a_contig = 1
  937.       t$831%header%n_dim = 3
  937.       t$831%header%orig_base = 0
  937.       t$831%header%orig_size = 0
  937.       t$831%header%n_codim = 0
  937.       t$831%header%dv_versn = 2
  937.       t$831%header%dv_smunit = 64
  937.       t$831%header%d_type = 0
  937.       t$831%header%n_params = 0
  937.       t$831%header%d_type_idx = 13
  937.       t$831%dim_1%LB = 1
  937.       t$831%dim_1%EX = _zla( 0, t$104 )
  937.       t$831%dim_1%SM = 1
  937.       t$831%dim_2%LB = 1
  937.       t$831%dim_2%EX = _zla( 0, t$99 )
  937.       t$831%dim_2%SM = _zla( 0, t$104 )
  937.       t$831%dim_3%LB = 1
  937.       t$831%dim_3%EX = _zla( 0, t$103 )
  937.       t$831%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  937. !dir$ suppress gus(1, 1, 1)
  937.       t$832 = $_StaticDV_P16
  937.       t$832%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gus(1, 1, 1) ) )
  937.       t$832%header%el_len = 64
  937.       t$832%header%assoc = 1
  937.       t$832%header%ptr_alloc = 0
  937.       t$832%header%p_or_a = 0
  937.       t$832%header%a_contig = 1
  937.       t$832%header%n_dim = 3
  937.       t$832%header%orig_base = 0
  937.       t$832%header%orig_size = 0
  937.       t$832%header%n_codim = 0
  937.       t$832%header%dv_versn = 2
  937.       t$832%header%dv_smunit = 64
  937.       t$832%header%d_type = 0
  937.       t$832%header%n_params = 0
  937.       t$832%header%d_type_idx = 13
  937.       t$832%dim_1%LB = 1
  937.       t$832%dim_1%EX = _zla( 0, t$98 )
  937.       t$832%dim_1%SM = 1
  937.       t$832%dim_2%LB = 1
  937.       t$832%dim_2%EX = _zla( 0, t$99 )
  937.       t$832%dim_2%SM = _zla( 0, t$98 )
  937.       t$832%dim_3%LB = 1
  937.       t$832%dim_3%EX = _zla( 0, t$103 )
  937.       t$832%dim_3%SM = _zla( 0, t$98 ) * _zla( 0, t$99 )
  937.       call invd3( t$831, t$832 )
  939. !dir$ suppress vln(1, 1)
  939.       t$833 = $_StaticDV_P17
  939.       t$833%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( vln(1, 1) ) )
  939.       t$833%header%el_len = 64
  939.       t$833%header%assoc = 1
  939.       t$833%header%ptr_alloc = 0
  939.       t$833%header%p_or_a = 0
  939.       t$833%header%a_contig = 1
  939.       t$833%header%n_dim = 2
  939.       t$833%header%orig_base = 0
  939.       t$833%header%orig_size = 0
  939.       t$833%header%n_codim = 0
  939.       t$833%header%dv_versn = 2
  939.       t$833%header%dv_smunit = 64
  939.       t$833%header%d_type = 0
  939.       t$833%header%n_params = 0
  939.       t$833%header%d_type_idx = 13
  939.       t$833%dim_1%LB = 1
  939.       t$833%dim_1%EX = _zla( 0, t$101 )
  939.       t$833%dim_1%SM = 1
  939.       t$833%dim_2%LB = 1
  939.       t$833%dim_2%EX = _zla( 0, t$103 )
  939.       t$833%dim_2%SM = _zla( 0, t$101 )
  939. !dir$ suppress four3d(1, 1, 1)
  939.       t$834 = $_StaticDV_P18
  939.       t$834%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  939.       t$834%header%el_len = 64
  939.       t$834%header%assoc = 1
  939.       t$834%header%ptr_alloc = 0
  939.       t$834%header%p_or_a = 0
  939.       t$834%header%a_contig = 1
  939.       t$834%header%n_dim = 3
  939.       t$834%header%orig_base = 0
  939.       t$834%header%orig_size = 0
  939.       t$834%header%n_codim = 0
  939.       t$834%header%dv_versn = 2
  939.       t$834%header%dv_smunit = 64
  939.       t$834%header%d_type = 0
  939.       t$834%header%n_params = 0
  939.       t$834%header%d_type_idx = 13
  939.       t$834%dim_1%LB = 1
  939.       t$834%dim_1%EX = _zla( 0, t$104 )
  939.       t$834%dim_1%SM = 1
  939.       t$834%dim_2%LB = 1
  939.       t$834%dim_2%EX = _zla( 0, t$99 )
  939.       t$834%dim_2%SM = _zla( 0, t$104 )
  939.       t$834%dim_3%LB = 1
  939.       t$834%dim_3%EX = _zla( 0, t$103 )
  939.       t$834%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  939.       call spec2four2d( t$833, t$834, 0 )
  940. !dir$ suppress four3d(1, 1, 1)
  940.       t$835 = $_StaticDV_P19
  940.       t$835%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four3d(1, 1, 1) ) )
  940.       t$835%header%el_len = 64
  940.       t$835%header%assoc = 1
  940.       t$835%header%ptr_alloc = 0
  940.       t$835%header%p_or_a = 0
  940.       t$835%header%a_contig = 1
  940.       t$835%header%n_dim = 3
  940.       t$835%header%orig_base = 0
  940.       t$835%header%orig_size = 0
  940.       t$835%header%n_codim = 0
  940.       t$835%header%dv_versn = 2
  940.       t$835%header%dv_smunit = 64
  940.       t$835%header%d_type = 0
  940.       t$835%header%n_params = 0
  940.       t$835%header%d_type_idx = 13
  940.       t$835%dim_1%LB = 1
  940.       t$835%dim_1%EX = _zla( 0, t$104 )
  940.       t$835%dim_1%SM = 1
  940.       t$835%dim_2%LB = 1
  940.       t$835%dim_2%EX = _zla( 0, t$99 )
  940.       t$835%dim_2%SM = _zla( 0, t$104 )
  940.       t$835%dim_3%LB = 1
  940.       t$835%dim_3%EX = _zla( 0, t$103 )
  940.       t$835%dim_3%SM = _zla( 0, t$99 ) * _zla( 0, t$104 )
  940. !dir$ suppress gvs(1, 1, 1)
  940.       t$836 = $_StaticDV_P20
  940.       t$836%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gvs(1, 1, 1) ) )
  940.       t$836%header%el_len = 64
  940.       t$836%header%assoc = 1
  940.       t$836%header%ptr_alloc = 0
  940.       t$836%header%p_or_a = 0
  940.       t$836%header%a_contig = 1
  940.       t$836%header%n_dim = 3
  940.       t$836%header%orig_base = 0
  940.       t$836%header%orig_size = 0
  940.       t$836%header%n_codim = 0
  940.       t$836%header%dv_versn = 2
  940.       t$836%header%dv_smunit = 64
  940.       t$836%header%d_type = 0
  940.       t$836%header%n_params = 0
  940.       t$836%header%d_type_idx = 13
  940.       t$836%dim_1%LB = 1
  940.       t$836%dim_1%EX = _zla( 0, t$98 )
  940.       t$836%dim_1%SM = 1
  940.       t$836%dim_2%LB = 1
  940.       t$836%dim_2%EX = _zla( 0, t$99 )
  940.       t$836%dim_2%SM = _zla( 0, t$98 )
  940.       t$836%dim_3%LB = 1
  940.       t$836%dim_3%EX = _zla( 0, t$103 )
  940.       t$836%dim_3%SM = _zla( 0, t$98 ) * _zla( 0, t$99 )
  940.       call invd3( t$835, t$836 )
  943.       if ( jmaxhf > 0 ) then
  946.          $SC_colrad_I2 = colrad%dim_1%EX
  946.          $SC_colrad_I3 = colrad%dim_1%LB
  944.          $SC_rcs2_I0 = rcs2%dim_1%EX
  944.          $SC_rcs2_I1 = rcs2%dim_1%LB
  943.          $I_L943_24 = 0
  943.          do
  944.             rcl(1 + $I_L943_24) = (rcs2%base_addr)(1 + $I_L943_24, 0)
  945.             rcl(jmax + -$I_L943_24) = rcl(1 + $I_L943_24)
  946.             $Flat_S1 = sin( (colrad%base_addr)(1 + $I_L943_24, 0) )
  946.             coslat(1 + $I_L943_24) = 1.0/$Flat_S1
  947.             coslat(jmax + -$I_L943_24) = 1.0/$Flat_S1
  948.             $I_L943_24 = 1 + $I_L943_24
  943.             if ( $I_L943_24 >= jmaxhf ) exit
  943.          enddo
  943.       endif
  949.       if ( jmax > 0 ) then
  950.          if ( imax > 0 ) then
  949.             $I_L949_38 = 0
  949.             do
  950.                $SCA_coslat_I4 = coslat(1 + $I_L949_38)
  950.                $I_L950_36 = 0
  950. !dir$ ivdep
  950.                do
  951.                   us(1 + $I_L950_36, 1 + $I_L949_38) = $SCA_coslat_I4 * gus(1 + $I_L950_36, 1 + $I_L949_38, 1)
  952.                   vs(1 + $I_L950_36, 1 + $I_L949_38) = $SCA_coslat_I4 * gvs(1 + $I_L950_36, 1 + $I_L949_38, 1)
  953.                   $I_L950_36 = 1 + $I_L950_36
  950.                   if ( $I_L950_36 >= imax ) exit
  950.                enddo
  954.                $I_L949_38 = 1 + $I_L949_38
  953.                if ( $I_L949_38 >= jmax ) exit
  953.             enddo
  953.          endif
  953.       endif
  958.       call omegas( gdphi(1, 1), gdlam(1, 1), gus(1, 1, 1), gvs(1, 1, 1), gdi(1, 1, 1), rcl(1), gomeg(1, 1, 1), psmb(1, 1) )
  963.       call sig2po( psmb(1, 1), alnpmd(1), gus(1, 1, 1), ug(1, 1, 1), gvs(1, 1, 1), vg(1, 1, 1), gomeg(1, 1, 1), og(1, 1, 1) )
  967.       if ( lmax > 0 ) then
  968.          if ( jmax > 0 ) then
  969.             if ( imax > 0 ) then
  968.                $I_L968_42 = 0
  968.                do
  967.                   $SCA_coslat_I5 = coslat(1 + $I_L968_42)
  967.                   $I_L967_40 = 0
  967.                   do
  969.                      $I_L969_28 = 0
  969. !dir$ ivdep
  969. !dir$ loop_info (automatic) cache_nt( vg, ug )
  969.                      do
  970.                         ug(1 + $I_L969_28, 1 + $I_L968_42, 1 + $I_L967_40) = $SCA_coslat_I5 * ug(1 + $I_L969_28, 1 + $I_L968_42, 1 + $I_L967_40)
  971.                         vg(1 + $I_L969_28, 1 + $I_L968_42, 1 + $I_L967_40) = $SCA_coslat_I5 * vg(1 + $I_L969_28, 1 + $I_L968_42, 1 + $I_L967_40)
  972.                         $I_L969_28 = 1 + $I_L969_28
  969.                         if ( $I_L969_28 >= imax ) exit
  969.                      enddo
  974.                      $I_L967_40 = 1 + $I_L967_40
  972.                      if ( $I_L967_40 >= lmax ) exit
  972.                   enddo
  973.                   $I_L968_42 = 1 + $I_L968_42
  973.                   if ( $I_L968_42 >= jmax ) exit
  973.                enddo
  973.             endif
  973.          endif
  973.       endif
  978.       if ( (dopf%base_addr)(3, id, 0) /= .false. ) then
  979.          call rwrite( nvo(kflo), kflo, us(1, 1) )
  980.          kflo = 1 + kflo
  980.       endif
  985.       if ( (dopf%base_addr)(4, id, 0) /= .false. ) then
  986.          call rwrite( nvo(kflo), kflo, ug(1, 1, 1) )
  987.          kflo = 1 + kflo
  987.       endif
  992.       if ( (dopf%base_addr)(5, id, 0) /= .false. ) then
  993.          call rwrite( nvo(kflo), kflo, vs(1, 1) )
  994.          kflo = 1 + kflo
  994.       endif
  999.       if ( (dopf%base_addr)(6, id, 0) /= .false. ) then
 1000.          call rwrite( nvo(kflo), kflo, vg(1, 1, 1) )
 1001.          kflo = 1 + kflo
 1001.       endif
 1006.       if ( (dopf%base_addr)(7, id, 0) /= .false. ) then
 1007.          call rwrite( nvo(kflo), kflo, og(1, 1, 1) )
 1008.          kflo = 1 + kflo
 1008.       endif
  870.       _free( t$449 )
 1011.       return
 1011.       end
 1011.       
 1014.       
 1014.       subroutine heights( psmb, pmand, alnpmd, kflo, dopf, id, nvo, ndp, qtv, top, zp, tv, tvsav )
 1014.       t$106 = imax
 1014.       t$107 = jmax
 1030.       t$499 = _zla( 0, imax )
 1014.       t$500 = _zla( 0, imax )
 1030.       t$501 = _zla( 0, jmax )
 1014.       t$502 = _zla( 0, imax ) * _zla( 0, jmax )
 1014.       t$108 = lmax
 1031.       t$503 = _zla( 0, lmax )
 1031.       dopf%dim_1%LB = 1
 1031.       dopf%dim_2%LB = 1
 1014.       t$105 = ndp
 1028.       t$504 = _zla( 0, ndp )
 1014.       t$109 = mnwv2
 1014.       t$110 = kmax
 1033.       t$505 = _zla( 0, mnwv2 )
 1014.       t$506 = _zla( 0, mnwv2 )
 1033.       t$507 = _zla( 0, kmax )
 1014.       t$508 = _zla( 0, mnwv2 ) * _zla( 0, kmax )
 1014.       t$509 = _zla( 0, imax ) * _zla( 0, jmax )
 1014.       t$510 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
 1046.       t$513 = 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1043.       t$514 = 8 * ( 7 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1043.       t$516 = t$514 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
 1014.       t$111 = imx
 1044.       t$517 = _zla( 0, imx )
 1014.       t$518 = _zla( 0, imx )
 1014.       t$519 = _zla( 0, jmax ) * _zla( 0, imx )
 1014.       t$520 = _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1044.       t$521 = 8 * ( 7 + t$514 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
 1044.       t$523 = t$521 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1014.       t$524 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1045.       t$525 = 8 * ( 7 + t$521 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1045.       t$527 = t$525 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1014.       t$511 = int( _alloc( t$525 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ), 8 )
 1046.       t$512 = t$511
 1043.       t$515 = t$514 + t$511
 1044.       t$522 = t$521 + t$511
 1045.       t$526 = t$525 + t$511
 1048.       $F_A33 = lmax
 1048.       $F_A34 = jmax
 1048.       $F_A35 = imax
 1048.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 1048.          $I_A3 = 0
 1048.          do
 1048.             $I_A2 = 0
 1048.             do
 1048.                $I_A1 = 0
 1048. !dir$ ivdep
 1048.                do
 1048.                   zp(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = 0.0
 1048.                   $I_A1 = 1 + $I_A1
 1048.                   if ( $I_A1 >= $F_A35 ) exit
 1048.                enddo
 1048.                $I_A2 = 1 + $I_A2
 1048.                if ( $I_A2 >= $F_A34 ) exit
 1048.             enddo
 1048.             $I_A3 = 1 + $I_A3
 1048.             if ( $I_A3 >= $F_A33 ) exit
 1048.          enddo
 1048.       endif
 1049.       $F_A36 = lmax
 1049.       $F_A37 = jmax
 1049.       $F_A38 = imax
 1049.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
 1049.          $I_A3 = 0
 1049.          do
 1049.             $I_A2 = 0
 1049.             do
 1049.                $I_A1 = 0
 1049. !dir$ ivdep
 1049.                do
 1049.                   tv(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = 0.0
 1049.                   $I_A1 = 1 + $I_A1
 1049.                   if ( $I_A1 >= $F_A38 ) exit
 1049.                enddo
 1049.                $I_A2 = 1 + $I_A2
 1049.                if ( $I_A2 >= $F_A37 ) exit
 1049.             enddo
 1049.             $I_A3 = 1 + $I_A3
 1049.             if ( $I_A3 >= $F_A36 ) exit
 1049.          enddo
 1049.       endif
 1050.       $F_A39 = jmax
 1050.       $F_A40 = imax
 1050.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1050.          $I_A2 = 0
 1050.          do
 1050.             $I_A1 = 0
 1050. !dir$ ivdep
 1050.             do
 1050.                slpg(1 + $I_A1, 1 + $I_A2) = 0.0
 1050.                $I_A1 = 1 + $I_A1
 1050.                if ( $I_A1 >= $F_A40 ) exit
 1050.             enddo
 1050.             $I_A2 = 1 + $I_A2
 1050.             if ( $I_A2 >= $F_A39 ) exit
 1050.          enddo
 1050.       endif
 1055. !dir$ suppress qtv(1, 1)
 1055.       t$855 = $_StaticDV_P0
 1055.       t$855%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qtv(1, 1) ) )
 1055.       t$855%header%el_len = 64
 1055.       t$855%header%assoc = 1
 1055.       t$855%header%ptr_alloc = 0
 1055.       t$855%header%p_or_a = 0
 1055.       t$855%header%a_contig = 1
 1055.       t$855%header%n_dim = 2
 1055.       t$855%header%orig_base = 0
 1055.       t$855%header%orig_size = 0
 1055.       t$855%header%n_codim = 0
 1055.       t$855%header%dv_versn = 2
 1055.       t$855%header%dv_smunit = 64
 1055.       t$855%header%d_type = 0
 1055.       t$855%header%n_params = 0
 1055.       t$855%header%d_type_idx = 13
 1055.       t$855%dim_1%LB = 1
 1055.       t$855%dim_1%EX = _zla( 0, mnwv2 )
 1055.       t$855%dim_1%SM = 1
 1055.       t$855%dim_2%LB = 1
 1055.       t$855%dim_2%EX = _zla( 0, kmax )
 1055.       t$855%dim_2%SM = _zla( 0, mnwv2 )
 1055. !dir$ suppress tf(1, 1, 1)
 1055.       t$856 = $_StaticDV_P1
 1055.       t$856%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( tf(1, 1, 1) ) )
 1055.       t$856%header%el_len = 64
 1055.       t$856%header%assoc = 1
 1055.       t$856%header%ptr_alloc = 0
 1055.       t$856%header%p_or_a = 0
 1055.       t$856%header%a_contig = 1
 1055.       t$856%header%n_dim = 3
 1055.       t$856%header%orig_base = 0
 1055.       t$856%header%orig_size = 0
 1055.       t$856%header%n_codim = 0
 1055.       t$856%header%dv_versn = 2
 1055.       t$856%header%dv_smunit = 64
 1055.       t$856%header%d_type = 0
 1055.       t$856%header%n_params = 0
 1055.       t$856%header%d_type_idx = 13
 1055.       t$856%dim_1%LB = 1
 1055.       t$856%dim_1%EX = _zla( 0, imx )
 1055.       t$856%dim_1%SM = 1
 1055.       t$856%dim_2%LB = 1
 1055.       t$856%dim_2%EX = _zla( 0, jmax )
 1055.       t$856%dim_2%SM = _zla( 0, imx )
 1055.       t$856%dim_3%LB = 1
 1055.       t$856%dim_3%EX = _zla( 0, kmax )
 1055.       t$856%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
 1055.       call spec2four2d( t$855, t$856, 0 )
 1056. !dir$ suppress tf(1, 1, 1)
 1056.       t$857 = $_StaticDV_P2
 1056.       t$857%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( tf(1, 1, 1) ) )
 1056.       t$857%header%el_len = 64
 1056.       t$857%header%assoc = 1
 1056.       t$857%header%ptr_alloc = 0
 1056.       t$857%header%p_or_a = 0
 1056.       t$857%header%a_contig = 1
 1056.       t$857%header%n_dim = 3
 1056.       t$857%header%orig_base = 0
 1056.       t$857%header%orig_size = 0
 1056.       t$857%header%n_codim = 0
 1056.       t$857%header%dv_versn = 2
 1056.       t$857%header%dv_smunit = 64
 1056.       t$857%header%d_type = 0
 1056.       t$857%header%n_params = 0
 1056.       t$857%header%d_type_idx = 13
 1056.       t$857%dim_1%LB = 1
 1056.       t$857%dim_1%EX = _zla( 0, t$111 )
 1056.       t$857%dim_1%SM = 1
 1056.       t$857%dim_2%LB = 1
 1056.       t$857%dim_2%EX = _zla( 0, t$107 )
 1056.       t$857%dim_2%SM = _zla( 0, t$111 )
 1056.       t$857%dim_3%LB = 1
 1056.       t$857%dim_3%EX = _zla( 0, t$110 )
 1056.       t$857%dim_3%SM = _zla( 0, t$107 ) * _zla( 0, t$111 )
 1056. !dir$ suppress ts(1, 1, 1)
 1056.       t$858 = $_StaticDV_P3
 1056.       t$858%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( ts(1, 1, 1) ) )
 1056.       t$858%header%el_len = 64
 1056.       t$858%header%assoc = 1
 1056.       t$858%header%ptr_alloc = 0
 1056.       t$858%header%p_or_a = 0
 1056.       t$858%header%a_contig = 1
 1056.       t$858%header%n_dim = 3
 1056.       t$858%header%orig_base = 0
 1056.       t$858%header%orig_size = 0
 1056.       t$858%header%n_codim = 0
 1056.       t$858%header%dv_versn = 2
 1056.       t$858%header%dv_smunit = 64
 1056.       t$858%header%d_type = 0
 1056.       t$858%header%n_params = 0
 1056.       t$858%header%d_type_idx = 13
 1056.       t$858%dim_1%LB = 1
 1056.       t$858%dim_1%EX = _zla( 0, t$106 )
 1056.       t$858%dim_1%SM = 1
 1056.       t$858%dim_2%LB = 1
 1056.       t$858%dim_2%EX = _zla( 0, t$107 )
 1056.       t$858%dim_2%SM = _zla( 0, t$106 )
 1056.       t$858%dim_3%LB = 1
 1056.       t$858%dim_3%EX = _zla( 0, t$110 )
 1056.       t$858%dim_3%SM = _zla( 0, t$106 ) * _zla( 0, t$107 )
 1056.       call invd3( t$857, t$858 )
 1058.       call sig2pz( ts(1, 1, 1), psmb(1, 1), top(1, 1), tv(1, 1, 1), zp(1, 1, 1), alnpmd(1) )
 1063.       call lowtmp( zp(1, 1, 1), tc(1, 1, 1), pmand(1) )
 1064.       if ( lmax > 0 ) then
 1065.          if ( jmax > 0 ) then
 1066.             if ( imax > 0 ) then
 1065.                $SI_L1065_22_G1 = 0
 1065.                do
 1064.                   $SI_L1064_20_G4 = 0
 1064.                   do
 1066.                      $SI_L1066_18_G7 = 0
 1066.                      do
 1065.                         $I_L1065_30 = 0
 1065. !dir$ shortloop16
 1065. !dir$ blocking_size( 2, 2 )
 1065.                         do
 1064.                            $I_L1064_27 = 0
 1064. !dir$ shortloop16
 1064. !dir$ blocking_size( 2, 2 )
 1064.                            do
 1066.                               $SCA_pmand_I0 = pmand(1 + $I_L1064_27 + 2 * $SI_L1064_20_G4)
 1066.                               $I_L1066_24 = 0
 1066. !dir$ ivdep
 1066. !dir$ loop_info (automatic) cache_nt( tc, tv )
 1066. !dir$ blocking_size( 256, 256 )
 1066.                               do
 1067.                                  if ( $SCA_pmand_I0 > psmb(1 + $I_L1066_24 + 256 * $SI_L1066_18_G7, 1 + $I_L1065_30 + 2 * $SI_L1065_22_G1) ) then
 1067.                                     tv(1 + $I_L1066_24 + 256 * $SI_L1066_18_G7, 1 + $I_L1065_30 + 2 * $SI_L1065_22_G1, 1 + $I_L1064_27 + 2 * $SI_L1064_20_G4) = tc(1 + $I_L1066_24 + 256 * $SI_L1066_18_G7, 1 + $I_L1065_30 + 2 * $SI_L1065_22_G1, 1 + $I_L1064_27 + 2 * $SI_L1064_20_G4)
 1067.                                  endif
 1068.                                  tvsav(1 + $I_L1066_24 + 256 * $SI_L1066_18_G7, 1 + $I_L1065_30 + 2 * $SI_L1065_22_G1, 1 + $I_L1064_27 + 2 * $SI_L1064_20_G4) = tv(1 + $I_L1066_24 + 256 * $SI_L1066_18_G7, 1 + $I_L1065_30 + 2 * $SI_L1065_22_G1, 1 + $I_L1064_27 + 2 * $SI_L1064_20_G4)
 1066.                                  $I_L1066_24 = 1 + $I_L1066_24
 1067.                                  if ( $I_L1066_24 >= min( imax, 256 + 256 * $SI_L1066_18_G7 ) + -256 * $SI_L1066_18_G7 ) exit
 1067.                               enddo
 1064.                               $I_L1064_27 = 1 + $I_L1064_27
 1064.                               if ( $I_L1064_27 >= min( lmax, 2 + 2 * $SI_L1064_20_G4 ) + -2 * $SI_L1064_20_G4 ) exit
 1064.                            enddo
 1065.                            $I_L1065_30 = 1 + $I_L1065_30
 1069.                            if ( $I_L1065_30 >= min( jmax, 2 + 2 * $SI_L1065_22_G1 ) + -2 * $SI_L1065_22_G1 ) exit
 1069.                         enddo
 1066.                         $SI_L1066_18_G7 = 1 + $SI_L1066_18_G7
 1066.                         if ( $SI_L1066_18_G7 >= _rsh( 255 + imax, 8 ) ) exit
 1066.                      enddo
 1064.                      $SI_L1064_20_G4 = 1 + $SI_L1064_20_G4
 1070.                      if ( $SI_L1064_20_G4 >= _rsh( 1 + lmax, 1 ) ) exit
 1070.                   enddo
 1065.                   $SI_L1065_22_G1 = 1 + $SI_L1065_22_G1
 1065.                   if ( $SI_L1065_22_G1 >= _rsh( 1 + jmax, 1 ) ) exit
 1065.                enddo
 1065.             endif
 1065.          endif
 1065.       endif
 1075.       if ( (dopf%base_addr)(16, id, 0) /= .false. ) then
 1076.          call rwrite( nvo(kflo), kflo, tv(1, 1, 1) )
 1077.          kflo = 1 + kflo
 1077.       endif
 1082.       if ( (dopf%base_addr)(17, id, 0) /= .false. ) then
 1083.          call rwrite( nvo(kflo), kflo, zp(1, 1, 1) )
 1084.          kflo = 1 + kflo
 1084.       endif
 1089.       if ( (dopf%base_addr)(18, id, 0) /= .false. ) then
 1090.          call getslp( slpg(1, 1), zp(1, 1, 1), pmand(1) )
 1091.          call rwrite( nvo(kflo), kflo, slpg(1, 1) )
 1092.          kflo = 1 + kflo
 1092.       endif
 1014.       _free( t$511 )
 1095.       return
 1095.       end
 1095.       
 1098.       
 1098.       subroutine humidity( psmb, pmand, alnpmd, kflo, dopf, id, nvo, ndp, qsh, qtv, ta, rh, tv )
 1098.       t$113 = imax
 1098.       t$114 = jmax
 1116.       t$528 = _zla( 0, imax )
 1098.       t$529 = _zla( 0, imax )
 1116.       t$530 = _zla( 0, jmax )
 1098.       t$531 = _zla( 0, imax ) * _zla( 0, jmax )
 1098.       t$115 = lmax
 1117.       t$532 = _zla( 0, lmax )
 1117.       dopf%dim_1%LB = 1
 1117.       dopf%dim_2%LB = 1
 1098.       t$112 = ndp
 1114.       t$533 = _zla( 0, ndp )
 1098.       t$116 = mnwv2
 1098.       t$117 = kmax
 1119.       t$534 = _zla( 0, mnwv2 )
 1098.       t$535 = _zla( 0, mnwv2 )
 1119.       t$536 = _zla( 0, kmax )
 1098.       t$537 = _zla( 0, mnwv2 ) * _zla( 0, kmax )
 1098.       t$538 = _zla( 0, imax ) * _zla( 0, jmax )
 1098.       t$539 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
 1098.       t$118 = imx
 1133.       t$540 = _zla( 0, imx )
 1098.       t$541 = _zla( 0, imx )
 1098.       t$542 = _zla( 0, jmax ) * _zla( 0, imx )
 1098.       t$543 = _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1133.       t$546 = 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1131.       t$547 = 8 * ( 7 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1131.       t$549 = t$547 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1132.       t$550 = 8 * ( 7 + t$547 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1132.       t$552 = t$550 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1098.       t$553 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1129.       t$554 = 8 * ( 7 + t$550 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1129.       t$556 = t$554 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1130.       t$557 = 8 * ( 7 + t$554 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
 1130.       t$559 = t$557 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1136.       t$560 = 8 * ( 7 + t$557 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1136.       t$562 = t$560 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1135.       t$563 = 8 * ( 7 + t$560 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1135.       t$565 = t$563 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1134.       t$566 = 8 * ( 7 + t$563 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1134.       t$568 = t$566 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1098.       t$544 = int( _alloc( t$566 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ), 8 )
 1133.       t$545 = t$544
 1131.       t$548 = t$547 + t$544
 1132.       t$551 = t$550 + t$544
 1129.       t$555 = t$554 + t$544
 1130.       t$558 = t$557 + t$544
 1136.       t$561 = t$560 + t$544
 1135.       t$564 = t$563 + t$544
 1134.       t$567 = t$566 + t$544
 1138.       $F_A33 = lmax
 1138.       $F_A34 = jmax
 1138.       $F_A35 = imax
 1138.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 1138.          $I_A3 = 0
 1138.          do
 1138.             $I_A2 = 0
 1138.             do
 1138.                $I_A1 = 0
 1138. !dir$ ivdep
 1138.                do
 1138.                   ta(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = 0.0
 1138.                   $I_A1 = 1 + $I_A1
 1138.                   if ( $I_A1 >= $F_A35 ) exit
 1138.                enddo
 1138.                $I_A2 = 1 + $I_A2
 1138.                if ( $I_A2 >= $F_A34 ) exit
 1138.             enddo
 1138.             $I_A3 = 1 + $I_A3
 1138.             if ( $I_A3 >= $F_A33 ) exit
 1138.          enddo
 1138.       endif
 1139.       $F_A36 = lmax
 1139.       $F_A37 = jmax
 1139.       $F_A38 = imax
 1139.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
 1139.          $I_A3 = 0
 1139.          do
 1139.             $I_A2 = 0
 1139.             do
 1139.                $I_A1 = 0
 1139. !dir$ ivdep
 1139.                do
 1139.                   rh(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = 0.0
 1139.                   $I_A1 = 1 + $I_A1
 1139.                   if ( $I_A1 >= $F_A38 ) exit
 1139.                enddo
 1139.                $I_A2 = 1 + $I_A2
 1139.                if ( $I_A2 >= $F_A37 ) exit
 1139.             enddo
 1139.             $I_A3 = 1 + $I_A3
 1139.             if ( $I_A3 >= $F_A36 ) exit
 1139.          enddo
 1139.       endif
 1140.       $F_A39 = jmax
 1140.       $F_A40 = imax
 1140.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1140.          $I_A2 = 0
 1140.          do
 1140.             $I_A1 = 0
 1140. !dir$ ivdep
 1140.             do
 1140.                ts(1 + $I_A1, 1 + $I_A2) = 0.0
 1140.                $I_A1 = 1 + $I_A1
 1140.                if ( $I_A1 >= $F_A40 ) exit
 1140.             enddo
 1140.             $I_A2 = 1 + $I_A2
 1140.             if ( $I_A2 >= $F_A39 ) exit
 1140.          enddo
 1140.       endif
 1141.       $F_A41 = jmax
 1141.       $F_A42 = imax
 1141.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1141.          $I_A2 = 0
 1141.          do
 1141.             $I_A1 = 0
 1141. !dir$ ivdep
 1141.             do
 1141.                rs(1 + $I_A1, 1 + $I_A2) = 0.0
 1141.                $I_A1 = 1 + $I_A1
 1141.                if ( $I_A1 >= $F_A42 ) exit
 1141.             enddo
 1141.             $I_A2 = 1 + $I_A2
 1141.             if ( $I_A2 >= $F_A41 ) exit
 1141.          enddo
 1141.       endif
 1142.       $F_A43 = jmax
 1142.       $F_A44 = imax
 1142.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1142.          $I_A2 = 0
 1142.          do
 1142.             $I_A1 = 0
 1142. !dir$ ivdep
 1142.             do
 1142.                pw(1 + $I_A1, 1 + $I_A2) = 0.0
 1142.                $I_A1 = 1 + $I_A1
 1142.                if ( $I_A1 >= $F_A44 ) exit
 1142.             enddo
 1142.             $I_A2 = 1 + $I_A2
 1142.             if ( $I_A2 >= $F_A43 ) exit
 1142.          enddo
 1142.       endif
 1147. !dir$ suppress qtv(1, 1)
 1147.       t$868 = $_StaticDV_P0
 1147.       t$868%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qtv(1, 1) ) )
 1147.       t$868%header%el_len = 64
 1147.       t$868%header%assoc = 1
 1147.       t$868%header%ptr_alloc = 0
 1147.       t$868%header%p_or_a = 0
 1147.       t$868%header%a_contig = 1
 1147.       t$868%header%n_dim = 2
 1147.       t$868%header%orig_base = 0
 1147.       t$868%header%orig_size = 0
 1147.       t$868%header%n_codim = 0
 1147.       t$868%header%dv_versn = 2
 1147.       t$868%header%dv_smunit = 64
 1147.       t$868%header%d_type = 0
 1147.       t$868%header%n_params = 0
 1147.       t$868%header%d_type_idx = 13
 1147.       t$868%dim_1%LB = 1
 1147.       t$868%dim_1%EX = _zla( 0, mnwv2 )
 1147.       t$868%dim_1%SM = 1
 1147.       t$868%dim_2%LB = 1
 1147.       t$868%dim_2%EX = _zla( 0, kmax )
 1147.       t$868%dim_2%SM = _zla( 0, mnwv2 )
 1147. !dir$ suppress four(1, 1, 1)
 1147.       t$869 = $_StaticDV_P1
 1147.       t$869%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1147.       t$869%header%el_len = 64
 1147.       t$869%header%assoc = 1
 1147.       t$869%header%ptr_alloc = 0
 1147.       t$869%header%p_or_a = 0
 1147.       t$869%header%a_contig = 1
 1147.       t$869%header%n_dim = 3
 1147.       t$869%header%orig_base = 0
 1147.       t$869%header%orig_size = 0
 1147.       t$869%header%n_codim = 0
 1147.       t$869%header%dv_versn = 2
 1147.       t$869%header%dv_smunit = 64
 1147.       t$869%header%d_type = 0
 1147.       t$869%header%n_params = 0
 1147.       t$869%header%d_type_idx = 13
 1147.       t$869%dim_1%LB = 1
 1147.       t$869%dim_1%EX = _zla( 0, imx )
 1147.       t$869%dim_1%SM = 1
 1147.       t$869%dim_2%LB = 1
 1147.       t$869%dim_2%EX = _zla( 0, jmax )
 1147.       t$869%dim_2%SM = _zla( 0, imx )
 1147.       t$869%dim_3%LB = 1
 1147.       t$869%dim_3%EX = _zla( 0, kmax )
 1147.       t$869%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
 1147.       call spec2four2d( t$868, t$869, 0 )
 1148. !dir$ suppress four(1, 1, 1)
 1148.       t$870 = $_StaticDV_P2
 1148.       t$870%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1148.       t$870%header%el_len = 64
 1148.       t$870%header%assoc = 1
 1148.       t$870%header%ptr_alloc = 0
 1148.       t$870%header%p_or_a = 0
 1148.       t$870%header%a_contig = 1
 1148.       t$870%header%n_dim = 3
 1148.       t$870%header%orig_base = 0
 1148.       t$870%header%orig_size = 0
 1148.       t$870%header%n_codim = 0
 1148.       t$870%header%dv_versn = 2
 1148.       t$870%header%dv_smunit = 64
 1148.       t$870%header%d_type = 0
 1148.       t$870%header%n_params = 0
 1148.       t$870%header%d_type_idx = 13
 1148.       t$870%dim_1%LB = 1
 1148.       t$870%dim_1%EX = _zla( 0, t$118 )
 1148.       t$870%dim_1%SM = 1
 1148.       t$870%dim_2%LB = 1
 1148.       t$870%dim_2%EX = _zla( 0, t$114 )
 1148.       t$870%dim_2%SM = _zla( 0, t$118 )
 1148.       t$870%dim_3%LB = 1
 1148.       t$870%dim_3%EX = _zla( 0, t$117 )
 1148.       t$870%dim_3%SM = _zla( 0, t$114 ) * _zla( 0, t$118 )
 1148. !dir$ suppress gtv(1, 1, 1)
 1148.       t$871 = $_StaticDV_P3
 1148.       t$871%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gtv(1, 1, 1) ) )
 1148.       t$871%header%el_len = 64
 1148.       t$871%header%assoc = 1
 1148.       t$871%header%ptr_alloc = 0
 1148.       t$871%header%p_or_a = 0
 1148.       t$871%header%a_contig = 1
 1148.       t$871%header%n_dim = 3
 1148.       t$871%header%orig_base = 0
 1148.       t$871%header%orig_size = 0
 1148.       t$871%header%n_codim = 0
 1148.       t$871%header%dv_versn = 2
 1148.       t$871%header%dv_smunit = 64
 1148.       t$871%header%d_type = 0
 1148.       t$871%header%n_params = 0
 1148.       t$871%header%d_type_idx = 13
 1148.       t$871%dim_1%LB = 1
 1148.       t$871%dim_1%EX = _zla( 0, t$118 )
 1148.       t$871%dim_1%SM = 1
 1148.       t$871%dim_2%LB = 1
 1148.       t$871%dim_2%EX = _zla( 0, t$114 )
 1148.       t$871%dim_2%SM = _zla( 0, t$118 )
 1148.       t$871%dim_3%LB = 1
 1148.       t$871%dim_3%EX = _zla( 0, t$117 )
 1148.       t$871%dim_3%SM = _zla( 0, t$114 ) * _zla( 0, t$118 )
 1148.       call invd3( t$870, t$871 )
 1150. !dir$ suppress qsh(1, 1)
 1150.       t$872 = $_StaticDV_P4
 1150.       t$872%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qsh(1, 1) ) )
 1150.       t$872%header%el_len = 64
 1150.       t$872%header%assoc = 1
 1150.       t$872%header%ptr_alloc = 0
 1150.       t$872%header%p_or_a = 0
 1150.       t$872%header%a_contig = 1
 1150.       t$872%header%n_dim = 2
 1150.       t$872%header%orig_base = 0
 1150.       t$872%header%orig_size = 0
 1150.       t$872%header%n_codim = 0
 1150.       t$872%header%dv_versn = 2
 1150.       t$872%header%dv_smunit = 64
 1150.       t$872%header%d_type = 0
 1150.       t$872%header%n_params = 0
 1150.       t$872%header%d_type_idx = 13
 1150.       t$872%dim_1%LB = 1
 1150.       t$872%dim_1%EX = _zla( 0, t$116 )
 1150.       t$872%dim_1%SM = 1
 1150.       t$872%dim_2%LB = 1
 1150.       t$872%dim_2%EX = _zla( 0, t$117 )
 1150.       t$872%dim_2%SM = _zla( 0, t$116 )
 1150. !dir$ suppress four(1, 1, 1)
 1150.       t$873 = $_StaticDV_P5
 1150.       t$873%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1150.       t$873%header%el_len = 64
 1150.       t$873%header%assoc = 1
 1150.       t$873%header%ptr_alloc = 0
 1150.       t$873%header%p_or_a = 0
 1150.       t$873%header%a_contig = 1
 1150.       t$873%header%n_dim = 3
 1150.       t$873%header%orig_base = 0
 1150.       t$873%header%orig_size = 0
 1150.       t$873%header%n_codim = 0
 1150.       t$873%header%dv_versn = 2
 1150.       t$873%header%dv_smunit = 64
 1150.       t$873%header%d_type = 0
 1150.       t$873%header%n_params = 0
 1150.       t$873%header%d_type_idx = 13
 1150.       t$873%dim_1%LB = 1
 1150.       t$873%dim_1%EX = _zla( 0, t$118 )
 1150.       t$873%dim_1%SM = 1
 1150.       t$873%dim_2%LB = 1
 1150.       t$873%dim_2%EX = _zla( 0, t$114 )
 1150.       t$873%dim_2%SM = _zla( 0, t$118 )
 1150.       t$873%dim_3%LB = 1
 1150.       t$873%dim_3%EX = _zla( 0, t$117 )
 1150.       t$873%dim_3%SM = _zla( 0, t$114 ) * _zla( 0, t$118 )
 1150.       call spec2four2d( t$872, t$873, 0 )
 1151. !dir$ suppress four(1, 1, 1)
 1151.       t$874 = $_StaticDV_P6
 1151.       t$874%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1151.       t$874%header%el_len = 64
 1151.       t$874%header%assoc = 1
 1151.       t$874%header%ptr_alloc = 0
 1151.       t$874%header%p_or_a = 0
 1151.       t$874%header%a_contig = 1
 1151.       t$874%header%n_dim = 3
 1151.       t$874%header%orig_base = 0
 1151.       t$874%header%orig_size = 0
 1151.       t$874%header%n_codim = 0
 1151.       t$874%header%dv_versn = 2
 1151.       t$874%header%dv_smunit = 64
 1151.       t$874%header%d_type = 0
 1151.       t$874%header%n_params = 0
 1151.       t$874%header%d_type_idx = 13
 1151.       t$874%dim_1%LB = 1
 1151.       t$874%dim_1%EX = _zla( 0, t$118 )
 1151.       t$874%dim_1%SM = 1
 1151.       t$874%dim_2%LB = 1
 1151.       t$874%dim_2%EX = _zla( 0, t$114 )
 1151.       t$874%dim_2%SM = _zla( 0, t$118 )
 1151.       t$874%dim_3%LB = 1
 1151.       t$874%dim_3%EX = _zla( 0, t$117 )
 1151.       t$874%dim_3%SM = _zla( 0, t$114 ) * _zla( 0, t$118 )
 1151. !dir$ suppress gsh(1, 1, 1)
 1151.       t$875 = $_StaticDV_P7
 1151.       t$875%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gsh(1, 1, 1) ) )
 1151.       t$875%header%el_len = 64
 1151.       t$875%header%assoc = 1
 1151.       t$875%header%ptr_alloc = 0
 1151.       t$875%header%p_or_a = 0
 1151.       t$875%header%a_contig = 1
 1151.       t$875%header%n_dim = 3
 1151.       t$875%header%orig_base = 0
 1151.       t$875%header%orig_size = 0
 1151.       t$875%header%n_codim = 0
 1151.       t$875%header%dv_versn = 2
 1151.       t$875%header%dv_smunit = 64
 1151.       t$875%header%d_type = 0
 1151.       t$875%header%n_params = 0
 1151.       t$875%header%d_type_idx = 13
 1151.       t$875%dim_1%LB = 1
 1151.       t$875%dim_1%EX = _zla( 0, t$118 )
 1151.       t$875%dim_1%SM = 1
 1151.       t$875%dim_2%LB = 1
 1151.       t$875%dim_2%EX = _zla( 0, t$114 )
 1151.       t$875%dim_2%SM = _zla( 0, t$118 )
 1151.       t$875%dim_3%LB = 1
 1151.       t$875%dim_3%EX = _zla( 0, t$117 )
 1151.       t$875%dim_3%SM = _zla( 0, t$114 ) * _zla( 0, t$118 )
 1151.       call invd3( t$874, t$875 )
 1152.       $F_A45 = t$117
 1152.       $F_A46 = t$114
 1152.       $F_A47 = t$118
 1152.       if ( and( and( -$F_A46, -$F_A45 ), -$F_A47 ) < 0 ) then
 1152.          $I_A3 = 0
 1152.          do
 1152.             $I_A2 = 0
 1152.             do
 1152.                $I_A1 = 0
 1152. !dir$ ivdep
 1152. !dir$ loop_info (automatic) cache_nt( gsh )
 1152.                do
 1152.                   gsh(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = max( shmin, gsh(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) )
 1152.                   $I_A1 = 1 + $I_A1
 1152.                   if ( $I_A1 >= $F_A47 ) exit
 1152.                enddo
 1152.                $I_A2 = 1 + $I_A2
 1152.                if ( $I_A2 >= $F_A46 ) exit
 1152.             enddo
 1152.             $I_A3 = 1 + $I_A3
 1152.             if ( $I_A3 >= $F_A45 ) exit
 1152.          enddo
 1152.       endif
 1156.       call pwater( imx, imax, kmax, jmax, gsh(1, 1, 1), pw(1, 1), psmb(1, 1) )
 1160.       call sigtop( gta(1, 1, 1), gtv(1, 1, 1), gsh(1, 1, 1), gss(1, 1, 1), psmb(1, 1), ta(1, 1, 1), rh(1, 1, 1), pmand(1), alnpmd(1) )
 1162.       if ( jmax > 0 ) then
 1163.          if ( imax > 0 ) then
 1162.             $I_L1162_10 = 0
 1162.             do
 1163.                $I_L1163_8 = 0
 1163. !dir$ ivdep
 1163.                do
 1164.                   ts(1 + $I_L1163_8, 1 + $I_L1162_10) = gta(1 + $I_L1163_8, 1 + $I_L1162_10, 1)
 1165.                   rs(1 + $I_L1163_8, 1 + $I_L1162_10) = gss(1 + $I_L1163_8, 1 + $I_L1162_10, 1)
 1166.                   $I_L1163_8 = 1 + $I_L1163_8
 1163.                   if ( $I_L1163_8 >= imax ) exit
 1163.                enddo
 1167.                $I_L1162_10 = 1 + $I_L1162_10
 1166.                if ( $I_L1162_10 >= jmax ) exit
 1166.             enddo
 1166.          endif
 1166.       endif
 1172.       if ( (dopf%base_addr)(20, id, 0) ) then
 1167.          goto 10
 1172.       else if ( (dopf%base_addr)(22, id, 0) ) then
 1172.          goto 10
 1172.       else if ( (dopf%base_addr)(23, id, 0) /= .false. ) then
 1172.    10    continue
 1173.          call getsh( tv(1, 1, 1), rh(1, 1, 1), pmand(1), ta(1, 1, 1), psmb(1, 1) )
 1173.       endif
 1178.       if ( (dopf%base_addr)(19, id, 0) /= .false. ) then
 1179.          call rwrite( nvo(kflo), kflo, ts(1, 1) )
 1180.          kflo = 1 + kflo
 1180.       endif
 1185.       if ( (dopf%base_addr)(20, id, 0) /= .false. ) then
 1186.          call rwrite( nvo(kflo), kflo, ta(1, 1, 1) )
 1187.          kflo = 1 + kflo
 1187.       endif
 1192.       if ( (dopf%base_addr)(21, id, 0) /= .false. ) then
 1193.          call rwrite( nvo(kflo), kflo, rs(1, 1) )
 1194.          kflo = 1 + kflo
 1194.       endif
 1199.       if ( (dopf%base_addr)(22, id, 0) /= .false. ) then
 1200.          call rwrite( nvo(kflo), kflo, rh(1, 1, 1) )
 1201.          kflo = 1 + kflo
 1201.       endif
 1206.       if ( (dopf%base_addr)(23, id, 0) /= .false. ) then
 1207.          call rwrite( nvo(kflo), kflo, tv(1, 1, 1) )
 1208.          kflo = 1 + kflo
 1208.       endif
 1213.       if ( (dopf%base_addr)(24, id, 0) /= .false. ) then
 1214.          call rwrite( nvo(kflo), kflo, pw(1, 1) )
 1215.          kflo = 1 + kflo
 1215.       endif
 1220.       if ( (dopf%base_addr)(25, id, 0) /= .false. ) then
 1221.          call getth( tv(1, 1, 1), pmand(1), ta(1, 1, 1) )
 1222.          call rwrite( nvo(kflo), kflo, tv(1, 1, 1) )
 1223.          kflo = 1 + kflo
 1223.       endif
 1098.       _free( t$544 )
 1226.       return
 1226.       end
 1226.       
 1229.       
 1229.       subroutine stog( psmb, alnpmd, ldim, mean, kflo, nof, kfld, di, og, qg )
 1229.       t$119 = imax
 1229.       t$120 = jmax
 1248.       t$569 = _zla( 0, imax )
 1229.       t$570 = _zla( 0, imax )
 1248.       t$571 = _zla( 0, jmax )
 1229.       t$572 = _zla( 0, imax ) * _zla( 0, jmax )
 1229.       t$121 = lmax
 1249.       t$573 = _zla( 0, lmax )
 1229.       t$122 = mnwv2
 1229.       t$123 = kmax
 1250.       t$574 = _zla( 0, mnwv2 )
 1229.       t$575 = _zla( 0, mnwv2 )
 1250.       t$576 = _zla( 0, kmax )
 1229.       t$577 = _zla( 0, mnwv2 ) * _zla( 0, kmax )
 1229.       t$578 = _zla( 0, imax ) * _zla( 0, jmax )
 1229.       t$579 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
 1263.       t$582 = 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax )
 1229.       t$124 = imx
 1259.       t$583 = _zla( 0, imx )
 1229.       t$584 = _zla( 0, imx )
 1229.       t$585 = _zla( 0, jmax ) * _zla( 0, imx )
 1229.       t$586 = _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1259.       t$587 = 8 * ( 7 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, lmax ) ) / 8
 1259.       t$589 = t$587 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx )
 1229.       t$590 = _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1260.       t$591 = 8 * ( 7 + t$587 + 8 * _zla( 0, jmax ) * _zla( 0, kmax ) * _zla( 0, imx ) ) / 8
 1260.       t$593 = t$591 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1262.       t$594 = 8 * ( 7 + t$591 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ) / 8
 1262.       t$596 = t$594 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1261.       t$597 = 8 * ( 7 + t$594 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1261.       t$599 = t$597 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax )
 1229.       t$580 = int( _alloc( t$597 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) * _zla( 0, kmax ) ), 8 )
 1263.       t$581 = t$580
 1259.       t$588 = t$587 + t$580
 1260.       t$592 = t$591 + t$580
 1262.       t$595 = t$594 + t$580
 1261.       t$598 = t$597 + t$580
 1265.       $lout_S19 = cvmg( lmax, 1, ldim /= 1 )
 1271.       $F_A35 = jmax
 1271.       $F_A36 = imax
 1271.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1271.          $I_A4 = 0
 1271.          do
 1271.             $I_A3 = 0
 1271. !dir$ ivdep
 1271.             do
 1271.                qg(1 + $I_A3, 1 + $I_A4) = 0.0
 1271.                $I_A3 = 1 + $I_A3
 1271.                if ( $I_A3 >= $F_A36 ) exit
 1271.             enddo
 1271.             $I_A4 = 1 + $I_A4
 1271.             if ( $I_A4 >= $F_A35 ) exit
 1271.          enddo
 1271.       endif
 1272.       $F_A37 = cvmg( lmax, 1, ldim /= 1 )
 1272.       $F_A38 = jmax
 1272.       $F_A39 = imax
 1272.       if ( and( and( -$F_A38, -$F_A37 ), -$F_A39 ) < 0 ) then
 1272.          $I_A5 = 0
 1272.          do
 1272.             $I_A4 = 0
 1272.             do
 1272.                $I_A3 = 0
 1272. !dir$ ivdep
 1272.                do
 1272.                   og(1 + $I_A3, 1 + $I_A4, 1 + $I_A5) = 0.0
 1272.                   $I_A3 = 1 + $I_A3
 1272.                   if ( $I_A3 >= $F_A39 ) exit
 1272.                enddo
 1272.                $I_A4 = 1 + $I_A4
 1272.                if ( $I_A4 >= $F_A38 ) exit
 1272.             enddo
 1272.             $I_A5 = 1 + $I_A5
 1272.             if ( $I_A5 >= $F_A37 ) exit
 1272.          enddo
 1272.       endif
 1274.       $jjj_S0 = jfe(kflo)
 1275.       $mmm_S1 = mko($jjj_S0)
 1276.       $nnn_S4 = ife($jjj_S0)
 1277.       $mm1_S5 = 0
 1278.       $nn1_S3 = 1
 1279.       if ( $mmm_S1 == 1 ) then
 1279.          if ( kflo < nof ) then
 1280.             $jj1_S2 = jfe(1 + kflo)
 1281.             $mm1_S5 = mko($jj1_S2)
 1282.             $nn1_S3 = ife($jj1_S2)
 1283.             if ( lif($nn1_S3) + -kfld /= 0 ) then
 1283.                $mm1_S5 = 0
 1283.             endif
 1283.          endif
 1283.       endif
 1286. !dir$ suppress di(1, 1)
 1286.       t$882 = $_StaticDV_P2
 1286.       t$882%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( di(1, 1) ) )
 1286.       t$882%header%el_len = 64
 1286.       t$882%header%assoc = 1
 1286.       t$882%header%ptr_alloc = 0
 1286.       t$882%header%p_or_a = 0
 1286.       t$882%header%a_contig = 1
 1286.       t$882%header%n_dim = 2
 1286.       t$882%header%orig_base = 0
 1286.       t$882%header%orig_size = 0
 1286.       t$882%header%n_codim = 0
 1286.       t$882%header%dv_versn = 2
 1286.       t$882%header%dv_smunit = 64
 1286.       t$882%header%d_type = 0
 1286.       t$882%header%n_params = 0
 1286.       t$882%header%d_type_idx = 13
 1286.       t$882%dim_1%LB = 1
 1286.       t$882%dim_1%EX = _zla( 0, mnwv2 )
 1286.       t$882%dim_1%SM = 1
 1286.       t$882%dim_2%LB = 1
 1286.       t$882%dim_2%EX = _zla( 0, kmax )
 1286.       t$882%dim_2%SM = _zla( 0, mnwv2 )
 1286. !dir$ suppress four(1, 1, 1)
 1286.       t$883 = $_StaticDV_P3
 1286.       t$883%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1286.       t$883%header%el_len = 64
 1286.       t$883%header%assoc = 1
 1286.       t$883%header%ptr_alloc = 0
 1286.       t$883%header%p_or_a = 0
 1286.       t$883%header%a_contig = 1
 1286.       t$883%header%n_dim = 3
 1286.       t$883%header%orig_base = 0
 1286.       t$883%header%orig_size = 0
 1286.       t$883%header%n_codim = 0
 1286.       t$883%header%dv_versn = 2
 1286.       t$883%header%dv_smunit = 64
 1286.       t$883%header%d_type = 0
 1286.       t$883%header%n_params = 0
 1286.       t$883%header%d_type_idx = 13
 1286.       t$883%dim_1%LB = 1
 1286.       t$883%dim_1%EX = _zla( 0, imx )
 1286.       t$883%dim_1%SM = 1
 1286.       t$883%dim_2%LB = 1
 1286.       t$883%dim_2%EX = _zla( 0, jmax )
 1286.       t$883%dim_2%SM = _zla( 0, imx )
 1286.       t$883%dim_3%LB = 1
 1286.       t$883%dim_3%EX = _zla( 0, kmax )
 1286.       t$883%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
 1286.       call spec2four2d( t$882, t$883, 0 )
 1287. !dir$ suppress four(1, 1, 1)
 1287.       t$884 = $_StaticDV_P4
 1287.       t$884%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
 1287.       t$884%header%el_len = 64
 1287.       t$884%header%assoc = 1
 1287.       t$884%header%ptr_alloc = 0
 1287.       t$884%header%p_or_a = 0
 1287.       t$884%header%a_contig = 1
 1287.       t$884%header%n_dim = 3
 1287.       t$884%header%orig_base = 0
 1287.       t$884%header%orig_size = 0
 1287.       t$884%header%n_codim = 0
 1287.       t$884%header%dv_versn = 2
 1287.       t$884%header%dv_smunit = 64
 1287.       t$884%header%d_type = 0
 1287.       t$884%header%n_params = 0
 1287.       t$884%header%d_type_idx = 13
 1287.       t$884%dim_1%LB = 1
 1287.       t$884%dim_1%EX = _zla( 0, t$124 )
 1287.       t$884%dim_1%SM = 1
 1287.       t$884%dim_2%LB = 1
 1287.       t$884%dim_2%EX = _zla( 0, t$120 )
 1287.       t$884%dim_2%SM = _zla( 0, t$124 )
 1287.       t$884%dim_3%LB = 1
 1287.       t$884%dim_3%EX = _zla( 0, t$123 )
 1287.       t$884%dim_3%SM = _zla( 0, t$120 ) * _zla( 0, t$124 )
 1287. !dir$ suppress gdi(1, 1, 1)
 1287.       t$885 = $_StaticDV_P5
 1287.       t$885%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( gdi(1, 1, 1) ) )
 1287.       t$885%header%el_len = 64
 1287.       t$885%header%assoc = 1
 1287.       t$885%header%ptr_alloc = 0
 1287.       t$885%header%p_or_a = 0
 1287.       t$885%header%a_contig = 1
 1287.       t$885%header%n_dim = 3
 1287.       t$885%header%orig_base = 0
 1287.       t$885%header%orig_size = 0
 1287.       t$885%header%n_codim = 0
 1287.       t$885%header%dv_versn = 2
 1287.       t$885%header%dv_smunit = 64
 1287.       t$885%header%d_type = 0
 1287.       t$885%header%n_params = 0
 1287.       t$885%header%d_type_idx = 13
 1287.       t$885%dim_1%LB = 1
 1287.       t$885%dim_1%EX = _zla( 0, t$119 )
 1287.       t$885%dim_1%SM = 1
 1287.       t$885%dim_2%LB = 1
 1287.       t$885%dim_2%EX = _zla( 0, t$120 )
 1287.       t$885%dim_2%SM = _zla( 0, t$119 )
 1287.       t$885%dim_3%LB = 1
 1287.       t$885%dim_3%EX = _zla( 0, t$123 )
 1287.       t$885%dim_3%SM = _zla( 0, t$119 ) * _zla( 0, t$120 )
 1287.       call invd3( t$884, t$885 )
 1289.       if ( ldim + -kmax /= 0 ) then
 1286.          goto 10
 1289.       else if ( mean /= .false. ) then
 1291.          if ( $mmm_S1 /= 2 .orelse. iclcd($nnn_S4) /= 3 ) then
 1291.             if ( $mm1_S5 == 2 ) then
 1291.                if ( iclcd($nn1_S3) == 3 ) then
 1291.                   goto 20
 1291.                endif
 1291.             endif
 1291.          else
 1291.    20       continue
 1293.             if ( $mmm_S1 == 2 ) then
 1293.                nnx = $nnn_S4
 1293.             endif
 1294.             if ( $mm1_S5 == 2 ) then
 1294.                nnx = $nn1_S3
 1294.             endif
 1295.             if ( nureq(nnx, 2) + -ifldcd(kfld) /= 0 ) then
 1296.                ier = 0
 1297.                call cnvout( ijkmax, ifldcd(kfld), nureq(nnx, 2), gdi(1, 1, 1), zea(1, 1, 1), ier )
 1298.                if ( ier > 0 ) then
 1301.                   if ( ( kfld <= 0 .or. kfld > 250 ) /= .false. ) then
 1301.                       _substr(t$887,1,13) = 'PostLoop.f90'
 1301.                       _substr(t$888,1,7) = 'IFLDCD'
 1301.                      t$889 = kfld
 1301.                      call _bounds_error(  _substr(t$887,1,13), 1301,  _substr(t$888,1,7), 1, 1, 250, t$889, t$886 )
 1301.                   endif
 1301.                   if ( ( nnx <= 0 .or. nnx > 57 ) /= .false. ) then
 1301.                       _substr(t$891,1,13) = 'PostLoop.f90'
 1301.                       _substr(t$892,1,6) = 'NUREQ'
 1301.                      t$893 = nnx
 1301.                      call _bounds_error(  _substr(t$891,1,13), 1301,  _substr(t$892,1,6), 1, 1, 57, t$893, t$890 )
 1301.                   endif
 1298.                   $Unit_temp_O0 = nfprt
 1298.                   $IOitem_O2 = ifldcd(kfld)
 1298.                   $IOitem_O3 = nureq(nnx, 2)
 1298.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Conversion Error at kflo = ', 0x800600000000L ), _iotype( kflo, 0x2000200000000L ), _iotype( ' kfld = ', 0x800600000000L ), _iotype( kfld, 0x2000200000000L ), _iotype( ' Error = ', 0x800600000000L ), _iotype( ier, 0x2000200000000L ), _iotype( ' nfe = ', 0x800600000000L ), _iotype( nnx, 0x2000200000000L ), _iotype( ' ifldcd = ', 0x800600000000L ), _iotype( $IOitem_O2, 0x2000200000000L ), _iotype( ' nureq = ', 0x800600000000L ), _iotype( $IOitem_O3, 0x2000200000000L ) ) )
 1298.                endif
 1302.             else if ( kmax > 0 ) then
 1304.                if ( jmax > 0 ) then
 1305.                   if ( imax > 0 ) then
 1303.                      $I_L1303_68 = 0
 1303.                      do
 1304.                         $I_L1304_60 = 0
 1304.                         do
 1305.                            $I_L1305_50 = 0
 1305. !dir$ ivdep
 1305. !dir$ loop_info (automatic) cache_nt( gdi )
 1305.                            do
 1306.                               zea(1 + $I_L1305_50, 1 + $I_L1304_60, 1 + $I_L1303_68) = gdi(1 + $I_L1305_50, 1 + $I_L1304_60, 1 + $I_L1303_68)
 1307.                               $I_L1305_50 = 1 + $I_L1305_50
 1305.                               if ( $I_L1305_50 >= imax ) exit
 1305.                            enddo
 1308.                            $I_L1304_60 = 1 + $I_L1304_60
 1307.                            if ( $I_L1304_60 >= jmax ) exit
 1307.                         enddo
 1309.                         $I_L1303_68 = 1 + $I_L1303_68
 1308.                         if ( $I_L1303_68 >= kmax ) exit
 1308.                      enddo
 1308.                   endif
 1308.                endif
 1308.             endif
 1311.             call pwater( imax, imax, kmax, jmax, zea(1, 1, 1), ha(1, 1), psmb(1, 1) )
 1311.          endif
 1314.          call sig2po( psmb(1, 1), alnpmd(1), gdi(1, 1, 1), dip(1, 1, 1), 0, 0, 0, 0 )
 1314.       else
 1314.    10    continue
 1316.          if ( jmax > 0 ) then
 1317.             if ( imax > 0 ) then
 1316.                $I_L1316_58 = 0
 1316.                do
 1317.                   $I_L1317_48 = 0
 1317. !dir$ ivdep
 1317.                   do
 1318.                      dip(1 + $I_L1317_48, 1 + $I_L1316_58, 1) = gdi(1 + $I_L1317_48, 1 + $I_L1316_58, 1)
 1319.                      $I_L1317_48 = 1 + $I_L1317_48
 1317.                      if ( $I_L1317_48 >= imax ) exit
 1317.                   enddo
 1320.                   $I_L1316_58 = 1 + $I_L1316_58
 1319.                   if ( $I_L1316_58 >= jmax ) exit
 1319.                enddo
 1319.             endif
 1319.          endif
 1319.       endif
 1324.       if ( $mmm_S1 /= 2 .orelse. iclcd($nnn_S4) /= 4 ) then
 1324.          if ( $mm1_S5 == 2 ) then
 1324.             if ( iclcd($nn1_S3) == 4 ) then
 1324.                goto 30
 1324.             endif
 1324.          endif
 1324.       else
 1324.    30    continue
 1326.          if ( jmax > 0 ) then
 1327.             if ( imax > 0 ) then
 1326.                $I_L1326_62 = 0
 1326.                do
 1327.                   $I_L1327_52 = 0
 1327. !dir$ ivdep
 1327.                   do
 1328.                      ha(1 + $I_L1327_52, 1 + $I_L1326_62) = _expn( dip(1 + $I_L1327_52, 1 + $I_L1326_62, 1) )
 1329.                      $I_L1327_52 = 1 + $I_L1327_52
 1327.                      if ( $I_L1327_52 >= imax ) exit
 1327.                   enddo
 1330.                   $I_L1326_62 = 1 + $I_L1326_62
 1329.                   if ( $I_L1326_62 >= jmax ) exit
 1329.                enddo
 1329.             endif
 1329.          endif
 1329.       endif
 1333.       if ( $mmm_S1 /= 2 ) then
 1334.          if ( lmax > 0 ) then
 1335.             if ( jmax > 0 ) then
 1336.                if ( imax > 0 ) then
 1334.                   $I_L1334_70 = 0
 1334.                   do
 1335.                      $I_L1335_64 = 0
 1335.                      do
 1336.                         $I_L1336_54 = 0
 1336. !dir$ ivdep
 1336. !dir$ loop_info (automatic) cache_nt( dip )
 1336.                         do
 1337.                            og(1 + $I_L1336_54, 1 + $I_L1335_64, 1 + $I_L1334_70) = dip(1 + $I_L1336_54, 1 + $I_L1335_64, 1 + $I_L1334_70)
 1338.                            $I_L1336_54 = 1 + $I_L1336_54
 1336.                            if ( $I_L1336_54 >= imax ) exit
 1336.                         enddo
 1339.                         $I_L1335_64 = 1 + $I_L1335_64
 1338.                         if ( $I_L1335_64 >= jmax ) exit
 1338.                      enddo
 1340.                      $I_L1334_70 = 1 + $I_L1334_70
 1339.                      if ( $I_L1334_70 >= lmax ) exit
 1339.                   enddo
 1339.                endif
 1339.             endif
 1339.          endif
 1339.          goto 40
 1339.       else if ( iclcd($nnn_S4) < 3 ) then
 1339.    40    continue
 1343.          if ( $mm1_S5 == 2 ) then
 1343.             if ( iclcd($nn1_S3) >= 3 ) then
 1343.                goto 50
 1343.             endif
 1343.          endif
 1343.       else
 1343.    50    continue
 1345.          if ( jmax > 0 ) then
 1346.             if ( imax > 0 ) then
 1345.                $I_L1345_66 = 0
 1345.                do
 1346.                   $I_L1346_56 = 0
 1346. !dir$ ivdep
 1346.                   do
 1347.                      qg(1 + $I_L1346_56, 1 + $I_L1345_66) = ha(1 + $I_L1346_56, 1 + $I_L1345_66)
 1348.                      $I_L1346_56 = 1 + $I_L1346_56
 1346.                      if ( $I_L1346_56 >= imax ) exit
 1346.                   enddo
 1349.                   $I_L1345_66 = 1 + $I_L1345_66
 1348.                   if ( $I_L1345_66 >= jmax ) exit
 1348.                enddo
 1348.             endif
 1348.          endif
 1348.       endif
 1351.       $Reduc_A40 = .true.
 1351.       $F_A43 = t$120
 1351.       $F_A44 = t$119
 1351.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1351.          $I_A42 = 0
 1351.          do
 1351.             $I_A41 = 0
 1351. !dir$ ivdep
 1351.             do
 1351.                if ( qg(1 + $I_A41, 1 + $I_A42) /= 0.0 ) then
 1351.                   $Reduc_A40 = .false.
 1351.                   goto 60
 1351.                endif
 1351.                $I_A41 = 1 + $I_A41
 1351.                if ( $I_A41 >= $F_A44 ) exit
 1351.             enddo
 1351.             $I_A42 = 1 + $I_A42
 1351.             if ( $I_A42 >= $F_A43 ) exit
 1351.          enddo
 1351.       endif
 1351.    60 continue
 1351.       if ( $Reduc_A40 /= .false. ) then
 1351.          $Reduc_A45 = .true.
 1351.          $F_A49 = $lout_S19
 1351.          $F_A50 = t$120
 1351.          $F_A51 = t$119
 1351.          if ( and( and( -$F_A50, -$F_A49 ), -$F_A51 ) < 0 ) then
 1351.             $I_A48 = 0
 1351.             do
 1351.                $I_A47 = 0
 1351.                do
 1351.                   $I_A46 = 0
 1351. !dir$ ivdep
 1351.                   do
 1351.                      if ( og(1 + $I_A46, 1 + $I_A47, 1 + $I_A48) /= 0.0 ) then
 1351.                         $Reduc_A45 = .false.
 1351.                         goto 70
 1351.                      endif
 1351.                      $I_A46 = 1 + $I_A46
 1351.                      if ( $I_A46 >= $F_A51 ) exit
 1351.                   enddo
 1351.                   $I_A47 = 1 + $I_A47
 1351.                   if ( $I_A47 >= $F_A50 ) exit
 1351.                enddo
 1351.                $I_A48 = 1 + $I_A48
 1351.                if ( $I_A48 >= $F_A49 ) exit
 1351.             enddo
 1351.          endif
 1351.    70    continue
 1351.          if ( $Reduc_A45 /= .false. ) then
 1352.             $Unit_temp_O1 = nferr
 1352.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' stog: og and qg NOT SET', 0x800600000000L ) ) )
 1352.          endif
 1352.       endif
 1229.       _free( t$580 )
 1354.       return
 1354.       end
 1354.       
 1357.       
 1357.       subroutine recon( nfld, nflp, nof, indate, title, specal, del, rcode, dtin, nfile )
 1357.       t$127 = kmax
 1385.       t$600 = _zla( 0, kmax )
 1415.       $Unit_temp_O0 = nfdir
 1415.       t$930 = _fread( _clist( 0, 4, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(type,1,20), 0x800600000000L ) ) )
 1415.       if ( t$930 == 1 .orelse. t$930 /= 2 ) then
 1416.          $Unit_temp_O1 = nfprt
 1416.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(type,1,20), 0x800600000000L ) ) )
 1417.          $Unit_temp_O2 = nfprt
 1417.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(type1,1,20), 0x800600000000L ) ) )
 1418.          $Unit_temp_O3 = nfprt
 1418.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(type2,1,20), 0x800600000000L ) ) )
 1421.          $Unit_temp_O4 = nfdir
 1421.          $_IOitem_P0(0) = nwn
 1421.          $_IOitem_P0(1) = mend1
 1421.          $_IOitem_P0(2) = levin
 1421.          $_IOitem_P0(3) = levqin
 1421.          t$931 = _fread( _clist( 0, 4, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(rcode,1,4), 0x800600000000L ), _iotype(  _substr(sdain,1,4), 0x800600000000L ), _iotype(  _substr(trunc,1,1), 0x800600000000L ), _iotype( (&)$_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype( (&)indate(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype(  _substr(dtin,1,4), 0x800600000000L ) ) )
 1421.          nwn = $_IOitem_P0(0)
 1421.          mend1 = $_IOitem_P0(1)
 1421.          levin = $_IOitem_P0(2)
 1421.          levqin = $_IOitem_P0(3)
 1421.          if ( t$931 == 1 .orelse. t$931 /= 2 ) then
 1423.             $Unit_temp_O5 = nfprt
 1423.             $_IOitem_P1(0) = nwn
 1423.             $_IOitem_P1(1) = mend1
 1423.             $_IOitem_P1(2) = levin
 1423.             $_IOitem_P1(3) = levqin
 1423.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,36), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(rcode,1,4), 0x800600000000L ), _iotype(  _substr(sdain,1,4), 0x800600000000L ), _iotype(  _substr(trunc,1,1), 0x800600000000L ), _iotype( (&)$_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype( (&)indate(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype(  _substr(dtin,1,4), 0x800600000000L ) ) )
 1425.             $Unit_temp_O6 = nfdir
 1425.             t$932 = _fread( _clist( 0, 4, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$141,  _substr(t$140,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(title,1,40), 0x800600000000L ), _iotype(  _substr(specal,1,40), 0x800600000000L ) ) )
 1425.             if ( t$932 == 1 .orelse. t$932 /= 2 ) then
 1426.                $Unit_temp_O7 = nfprt
 1426.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$143,  _substr(t$142,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(title,1,40), 0x800600000000L ), _iotype(  _substr(specal,1,40), 0x800600000000L ) ) )
 1427.                $Unit_temp_O8 = nfdir
 1427.                t$933 = _fread( _clist( 0, 4, 2, $Unit_temp_O8, Null_Arg, Null_Arg, t$145,  _substr(t$144,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1427.                if ( t$933 == 0 ) then
 1427.                   if ( levin > 0 ) then
 1427.                      $I_L1427_157 = 0
 1427.                      do
 1427.                         if ( ( ( 1 + $I_L1427_157 ) <= 0 .or. ( 1 + $I_L1427_157 ) > t$127 ) /= .false. ) then
 1427.                             _substr(t$938,1,13) = 'PostLoop.f90'
 1427.                             _substr(t$939,1,4) = 'DEL'
 1427.                            t$940 = 1 + $I_L1427_157
 1427.                            call _bounds_error(  _substr(t$938,1,13), 1427,  _substr(t$939,1,4), 1, 1, t$127, t$940, t$937 )
 1427.                         endif
 1427.                         $Unit_temp_O9 = nfdir
 1427.                         $IOitem_O50 = del(1 + $I_L1427_157)
 1427.                         t$933 = _fread( _clist( 0, 4, 0, $Unit_temp_O9, Null_Arg, Null_Arg, t$145,  _substr(t$144,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O50, 0x804060300000000L ) ) )
 1427.                         del(1 + $I_L1427_157) = $IOitem_O50
 1427.                         if ( t$933 /= 0 ) goto 20
 1427.                         $I_L1427_157 = 1 + $I_L1427_157
 1427.                         if ( $I_L1427_157 >= levin ) exit
 1427.                      enddo
 1427.                      goto 10
 1427.                   else
 1427.    10                continue
 1427.                      $Unit_temp_O10 = nfdir
 1427.                      t$933 = _fread( _clist( 0, 4, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$145,  _substr(t$144,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1427.                   endif
 1427.                endif
 1427.    20          continue
 1427.                if ( t$933 == 1 .orelse. t$933 /= 2 ) then
 1428.                   $Unit_temp_O12 = nfprt
 1428.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O12, Null_Arg, Null_Arg, t$147,  _substr(t$146,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1428.                   if ( levin > 0 ) then
 1428.                      $I_L1428_159 = 0
 1428.                      do
 1428.                         if ( ( ( 1 + $I_L1428_159 ) <= 0 .or. ( 1 + $I_L1428_159 ) > t$127 ) /= .false. ) then
 1428.                             _substr(t$945,1,13) = 'PostLoop.f90'
 1428.                             _substr(t$946,1,4) = 'DEL'
 1428.                            t$940 = 1 + $I_L1428_159
 1428.                            call _bounds_error(  _substr(t$945,1,13), 1428,  _substr(t$946,1,4), 1, 1, t$127, t$940, t$944 )
 1428.                         endif
 1428.                         $Unit_temp_O13 = nfprt
 1428.                         $IOitem_O51 = del(1 + $I_L1428_159)
 1428.                         _fwrite( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$147,  _substr(t$146,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O51, 0x804060300000000L ) ) )
 1428.                         $I_L1428_159 = 1 + $I_L1428_159
 1428.                         if ( $I_L1428_159 >= levin ) exit
 1428.                      enddo
 1428.                   endif
 1428.                   $Unit_temp_O14 = nfprt
 1428.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O14, Null_Arg, Null_Arg, t$147,  _substr(t$146,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1430.                   kk = 0
 1431.                   nflp = 0
 1434.                   $I_L1434_201 = 0
 1434.                   do
 1434.                      do
 1436.                         $Unit_temp_O15 = nfdir
 1436.                         t$948 = _fread( _clist( 0, 4, 2, $Unit_temp_O15, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1436.                         if ( t$948 == 0 ) then
 1437.                            if ( ( ( 1 + $I_L1434_201 ) <= 0 .or. ( 1 + $I_L1434_201 ) > 250 ) /= .false. ) then
 1437.                                _substr(t$950,1,13) = 'PostLoop.f90'
 1437.                                _substr(t$951,1,7) = 'CHRDSC'
 1437.                               t$940 = 1 + $I_L1434_201
 1437.                               call _bounds_error(  _substr(t$950,1,13), 1437,  _substr(t$951,1,7), 1, 1, 250, t$940, t$949 )
 1437.                            endif
 1436.                            $Unit_temp_O16 = nfdir
 1436.                            t$948 = _fread( _clist( 0, 4, 0, $Unit_temp_O16, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(chrdsc(1 + $I_L1434_201),1,40), 0x800600000000L ) ) )
 1436.                            if ( t$948 == 0 ) then
 1437.                               if ( ( ( 1 + $I_L1434_201 ) <= 0 .or. ( 1 + $I_L1434_201 ) > 250 ) /= .false. ) then
 1437.                                   _substr(t$953,1,13) = 'PostLoop.f90'
 1437.                                   _substr(t$954,1,7) = 'PRODIA'
 1437.                                  t$955 = 1 + $I_L1434_201
 1437.                                  call _bounds_error(  _substr(t$953,1,13), 1437,  _substr(t$954,1,7), 1, 1, 250, t$955, t$952 )
 1437.                               endif
 1436.                               $Unit_temp_O17 = nfdir
 1436.                               t$948 = _fread( _clist( 0, 4, 0, $Unit_temp_O17, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(prodia(1 + $I_L1434_201),1,4), 0x800600000000L ) ) )
 1436.                               if ( t$948 == 0 ) then
 1437.                                  if ( ( ( 1 + $I_L1434_201 ) <= 0 .or. ( 1 + $I_L1434_201 ) > 250 ) /= .false. ) then
 1437.                                      _substr(t$957,1,13) = 'PostLoop.f90'
 1437.                                      _substr(t$958,1,6) = 'NHARM'
 1437.                                     t$959 = 1 + $I_L1434_201
 1437.                                     call _bounds_error(  _substr(t$957,1,13), 1437,  _substr(t$958,1,6), 1, 1, 250, t$959, t$956 )
 1437.                                  endif
 1436.                                  $Unit_temp_O18 = nfdir
 1436.                                  $IOitem_O52 = nharm(1 + $I_L1434_201)
 1436.                                  t$948 = _fread( _clist( 0, 4, 0, $Unit_temp_O18, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O52, 0x2000200000000L ) ) )
 1436.                                  nharm(1 + $I_L1434_201) = $IOitem_O52
 1436.                                  if ( t$948 == 0 ) then
 1437.                                     if ( ( ( 1 + $I_L1434_201 ) <= 0 .or. ( 1 + $I_L1434_201 ) > 250 ) /= .false. ) then
 1437.                                         _substr(t$961,1,13) = 'PostLoop.f90'
 1437.                                         _substr(t$962,1,6) = 'NLEVS'
 1437.                                        t$963 = 1 + $I_L1434_201
 1437.                                        call _bounds_error(  _substr(t$961,1,13), 1437,  _substr(t$962,1,6), 1, 1, 250, t$963, t$960 )
 1437.                                     endif
 1436.                                     $Unit_temp_O19 = nfdir
 1436.                                     $IOitem_O53 = nlevs(1 + $I_L1434_201)
 1436.                                     t$948 = _fread( _clist( 0, 4, 0, $Unit_temp_O19, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O53, 0x2000200000000L ) ) )
 1436.                                     nlevs(1 + $I_L1434_201) = $IOitem_O53
 1436.                                     if ( t$948 == 0 ) then
 1437.                                        if ( ( ( 1 + $I_L1434_201 ) <= 0 .or. ( 1 + $I_L1434_201 ) > 250 ) /= .false. ) then
 1437.                                            _substr(t$965,1,13) = 'PostLoop.f90'
 1437.                                            _substr(t$966,1,7) = 'IFLDCD'
 1437.                                           t$967 = 1 + $I_L1434_201
 1437.                                           call _bounds_error(  _substr(t$965,1,13), 1437,  _substr(t$966,1,7), 1, 1, 250, t$967, t$964 )
 1437.                                        endif
 1436.                                        $Unit_temp_O20 = nfdir
 1436.                                        $IOitem_O54 = ifldcd(1 + $I_L1434_201)
 1436.                                        t$948 = _fread( _clist( 0, 4, 0, $Unit_temp_O20, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O54, 0x2000200000000L ) ) )
 1436.                                        ifldcd(1 + $I_L1434_201) = $IOitem_O54
 1436.                                        if ( t$948 == 0 ) then
 1436.                                           $Unit_temp_O21 = nfdir
 1436.                                           t$948 = _fread( _clist( 0, 4, 1, $Unit_temp_O21, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1436.                                        endif
 1436.                                     endif
 1436.                                  endif
 1436.                               endif
 1436.                            endif
 1436.                         endif
 1436.                         if ( t$948 == 1 .orelse. t$948 /= 2 ) then
 1436.                         else
 1436.                         endif
 1436.                         if (  _substr(prodia(1 + $I_L1434_201),1,4) /= 'FIXD' ) exit
 1436.                      enddo
 1440.                      $I_L1434_201 = 1 + $I_L1434_201
 1439.                      if ( $I_L1434_201 >= 250 ) exit
 1439.                   enddo
 1440.                   nfld = 251
 1441.                   $Unit_temp_O49 = nfprt
 1441.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O49, Null_Arg, Null_Arg, t$151,  _substr(t$150,1,14), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Directory Table Overflow.  nfld = ', 0x800600000000L ), _iotype( nfld, 0x2000200000000L ), _iotype( ' nflp = ', 0x800600000000L ), _iotype( nflp, 0x2000200000000L ), _iotype( ' ndv = ', 0x800600000000L ), _iotype( 57, 0x2000200000000L ), _iotype( ' kk = ', 0x800600000000L ), _iotype( kk, 0x2000200000000L ) ) )
 1443.                    _substr(t$968,1,4) = '3100'
 1443.                   call _stop(  _substr(t$968,1,4) )
 1443.                else
 1443.                   goto 30
 1443.                endif
 1443.             else
 1443.                goto 30
 1443.             endif
 1443.          else
 1443.             goto 30
 1443.          endif
 1443.       else
 1443.    30    continue
 1659.          $Unit_temp_O11 = nferr
 1659.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$175,  _substr(t$174,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Unexpected End of File in Input File Directory.', 0x800600000000L ) ) )
 1661.           _substr(t$1120,1,4) = '4100'
 1661.          call _stop(  _substr(t$1120,1,4) )
 1661.       endif
 1663.       return
 1663.       end
 1663.       
 1666.       
 1666.       subroutine rwrite( lev, kflo, bfr )
 1666.       t$176 = imax
 1666.       t$177 = jmax
 1666.       t$178 = lev
 1683.       t$601 = _zla( 0, imax )
 1666.       t$602 = _zla( 0, imax )
 1683.       t$603 = _zla( 0, jmax )
 1666.       t$604 = _zla( 0, imax ) * _zla( 0, jmax )
 1683.       t$605 = _zla( 0, lev )
 1666.       t$606 = _zla( 0, lev ) * _zla( 0, imax ) * _zla( 0, jmax )
 1666.       t$607 = _zla( 0, imax ) * _zla( 0, jmax )
 1689.       t$610 = 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1666.       t$179 = idim
 1666.       t$180 = jdim
 1689.       t$611 = _zla( 0, idim )
 1666.       t$612 = _zla( 0, idim )
 1689.       t$613 = _zla( 0, jdim )
 1666.       t$614 = _zla( 0, idim ) * _zla( 0, jdim )
 1689.       t$615 = 8 * ( 7 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1689.       t$617 = t$615 + 8 * _zla( 0, idim ) * _zla( 0, jdim )
 1666.       t$608 = int( _alloc( t$615 + 8 * _zla( 0, idim ) * _zla( 0, jdim ) ), 8 )
 1689.       t$609 = t$608
 1689.       t$616 = t$615 + t$608
 1693.       $Unit_temp_O0 = nfprt
 1693.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$182,  _substr(t$181,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Lev = ', 0x800600000000L ), _iotype( lev, 0x2000200000000L ), _iotype( ' kflo = ', 0x800600000000L ), _iotype( kflo, 0x2000200000000L ) ) )
 1695.       $t1_S0 = mko(jfe(kflo)) == 2
 1696.       $t2_S1 = mko(jfe(kflo)) == 0
 1697.       $t3_S4 = nudv(nfe(kflo)) + -nuco(kflo) == 0
 1698.       $t4_S2 = ifldcd(ife(jfe(kflo))) + -nuco(kflo) == 0
 1701.       call gdspdssetion( kgds(1), kpds(1) )
 1703.       if ( $t1_S0 .orelse. $t2_S1 .orelse. $t4_S2 ) then
 1742.          if ( $t1_S0 == .false. .orelse. $t3_S4 /= .false. ) then
 1782.             if ( $t1_S0 == .false. .orelse. $t3_S4 == .false. ) then
 1782.                if ( $t2_S1 ) then
 1782.                   goto 10
 1782.                else if ( $t1_S0 == .false. ) then
 1782.                   if ( $t2_S1 == .false. ) then
 1782.                      if ( $t4_S2 /= .false. ) then
 1782.                         goto 10
 1782.                      endif
 1782.                   endif
 1782.                endif
 1782.             else
 1782.    10          continue
 1784.                if ( lev > 0 ) then
 1784.                   $I_L1784_28 = 0
 1784.                   do
 1785.                      if ( jmax > 0 ) then
 1786.                         if ( imax > 0 ) then
 1785.                            $I_L1785_26 = 0
 1785.                            do
 1786.                               $I_L1786_24 = 0
 1786. !dir$ ivdep
 1786.                               do
 1787.                                  bbfr(1 + $I_L1786_24, 1 + $I_L1785_26) = bfr(1 + $I_L1786_24, 1 + $I_L1785_26, 1 + $I_L1784_28)
 1788.                                  $I_L1786_24 = 1 + $I_L1786_24
 1786.                                  if ( $I_L1786_24 >= imax ) exit
 1786.                               enddo
 1789.                               $I_L1785_26 = 1 + $I_L1785_26
 1788.                               if ( $I_L1785_26 >= jmax ) exit
 1788.                            enddo
 1788.                         endif
 1788.                      endif
 1790.                      if ( regint /= .false. ) then
 1791.                         if ( binary /= .false. ) then
 1795.                            call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1796.                            call writefield( mgaus, breg(1, 1) )
 1796.                         else
 1801.                            call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1802.                            t$1152 = ( 1 + $I_L1784_28 )
 1802.                            call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1802.                         endif
 1804.                      else if ( binary /= .false. ) then
 1809.                         call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1810.                         call writefield( mgaus, breg(1, 1) )
 1810.                      else
 1816.                         call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1817.                         t$1152 = ( 1 + $I_L1784_28 )
 1817.                         call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1817.                      endif
 1821.                      $I_L1784_28 = 1 + $I_L1784_28
 1820.                      if ( $I_L1784_28 >= lev ) exit
 1820.                   enddo
 1820.                endif
 1820.             endif
 1820.          else
 1743.             if ( lev > 0 ) then
 1743.                $I_L1743_20 = 0
 1743.                do
 1744.                   ier = 0
 1745.                   call cnvout( ngaus, nudv(nfe(kflo)), nuco(kflo), bfr(1, 1, 1 + $I_L1743_20), bbfr(1, 1), ier )
 1747.                   if ( ier > 0 ) then
 1749.                      if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1749.                          _substr(t$1157,1,13) = 'PostLoop.f90'
 1749.                          _substr(t$1158,1,4) = 'NFE'
 1749.                         t$1127 = kflo
 1749.                         call _bounds_error(  _substr(t$1157,1,13), 1749,  _substr(t$1158,1,4), 1, 1, 307, t$1127, t$1156 )
 1749.                      endif
 1749.                      if ( ( nfe(kflo) <= 0 .or. nfe(kflo) > 57 ) /= .false. ) then
 1749.                          _substr(t$1160,1,13) = 'PostLoop.f90'
 1749.                          _substr(t$1161,1,5) = 'NUDV'
 1749.                         t$1131 = nfe(kflo)
 1749.                         call _bounds_error(  _substr(t$1160,1,13), 1749,  _substr(t$1161,1,5), 1, 1, 57, t$1131, t$1159 )
 1749.                      endif
 1749.                      if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1749.                          _substr(t$1163,1,13) = 'PostLoop.f90'
 1749.                          _substr(t$1164,1,4) = 'NFE'
 1749.                         t$1135 = kflo
 1749.                         call _bounds_error(  _substr(t$1163,1,13), 1749,  _substr(t$1164,1,4), 1, 1, 307, t$1135, t$1162 )
 1749.                      endif
 1749.                      if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1749.                          _substr(t$1166,1,13) = 'PostLoop.f90'
 1749.                          _substr(t$1167,1,5) = 'NUCO'
 1749.                         t$1139 = kflo
 1749.                         call _bounds_error(  _substr(t$1166,1,13), 1749,  _substr(t$1167,1,5), 1, 1, 307, t$1139, t$1165 )
 1749.                      endif
 1747.                      $Unit_temp_O4 = nfprt
 1747.                      $IOitem_O5 = nudv(nfe(kflo))
 1747.                      $IOitem_O8 = nfe(kflo)
 1747.                      $IOitem_O9 = nuco(kflo)
 1747.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$186,  _substr(t$185,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Conversion Error at kflo = ', 0x800600000000L ), _iotype( kflo, 0x2000200000000L ), _iotype( ' Error = ', 0x800600000000L ), _iotype( ier, 0x2000200000000L ), _iotype( ' nfe = ', 0x800600000000L ), _iotype( $IOitem_O8, 0x2000200000000L ), _iotype( ' nudv = ', 0x800600000000L ), _iotype( $IOitem_O5, 0x2000200000000L ), _iotype( ' nuco = ', 0x800600000000L ), _iotype( $IOitem_O9, 0x2000200000000L ) ) )
 1747.                   endif
 1750.                   if ( regint /= .false. ) then
 1751.                      if ( binary /= .false. ) then
 1755.                         call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1756.                         call writefield( mgaus, breg(1, 1) )
 1756.                      else
 1761.                         call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1762.                         t$1152 = ( 1 + $I_L1743_20 )
 1762.                         call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1762.                      endif
 1764.                   else if ( binary /= .false. ) then
 1769.                      call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1770.                      call writefield( mgaus, breg(1, 1) )
 1770.                   else
 1776.                      call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1777.                      t$1152 = ( 1 + $I_L1743_20 )
 1777.                      call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1777.                   endif
 1781.                   $I_L1743_20 = 1 + $I_L1743_20
 1780.                   if ( $I_L1743_20 >= lev ) exit
 1780.                enddo
 1780.             endif
 1780.          endif
 1780.       else
 1704.          if ( lev > 0 ) then
 1704.             $I_L1704_22 = 0
 1704.             do
 1705.                ier = 0
 1706.                call cnvout( ngaus, ifldcd(ife(jfe(kflo))), nuco(kflo), bfr(1, 1, 1 + $I_L1704_22), bbfr(1, 1), ier )
 1708.                if ( ier > 0 ) then
 1710.                   if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1710.                       _substr(t$1125,1,13) = 'PostLoop.f90'
 1710.                       _substr(t$1126,1,4) = 'JFE'
 1710.                      t$1127 = kflo
 1710.                      call _bounds_error(  _substr(t$1125,1,13), 1710,  _substr(t$1126,1,4), 1, 1, 307, t$1127, t$1124 )
 1710.                   endif
 1710.                   if ( ( jfe(kflo) <= 0 .or. jfe(kflo) > 307 ) /= .false. ) then
 1710.                       _substr(t$1129,1,13) = 'PostLoop.f90'
 1710.                       _substr(t$1130,1,4) = 'IFE'
 1710.                      t$1131 = jfe(kflo)
 1710.                      call _bounds_error(  _substr(t$1129,1,13), 1710,  _substr(t$1130,1,4), 1, 1, 307, t$1131, t$1128 )
 1710.                   endif
 1710.                   if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1710.                       _substr(t$1133,1,13) = 'PostLoop.f90'
 1710.                       _substr(t$1134,1,4) = 'JFE'
 1710.                      t$1135 = kflo
 1710.                      call _bounds_error(  _substr(t$1133,1,13), 1710,  _substr(t$1134,1,4), 1, 1, 307, t$1135, t$1132 )
 1710.                   endif
 1711.                   if ( ( ife(jfe(kflo)) <= 0 .or. ife(jfe(kflo)) > 250 ) /= .false. ) then
 1711.                       _substr(t$1137,1,13) = 'PostLoop.f90'
 1711.                       _substr(t$1138,1,7) = 'IFLDCD'
 1711.                      t$1139 = ife(jfe(kflo))
 1711.                      call _bounds_error(  _substr(t$1137,1,13), 1711,  _substr(t$1138,1,7), 1, 1, 250, t$1139, t$1136 )
 1711.                   endif
 1711.                   if ( ( jfe(kflo) <= 0 .or. jfe(kflo) > 307 ) /= .false. ) then
 1711.                       _substr(t$1141,1,13) = 'PostLoop.f90'
 1711.                       _substr(t$1142,1,4) = 'IFE'
 1711.                      t$1143 = jfe(kflo)
 1711.                      call _bounds_error(  _substr(t$1141,1,13), 1711,  _substr(t$1142,1,4), 1, 1, 307, t$1143, t$1140 )
 1711.                   endif
 1711.                   if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1711.                       _substr(t$1145,1,13) = 'PostLoop.f90'
 1711.                       _substr(t$1146,1,4) = 'JFE'
 1711.                      t$1147 = kflo
 1711.                      call _bounds_error(  _substr(t$1145,1,13), 1711,  _substr(t$1146,1,4), 1, 1, 307, t$1147, t$1144 )
 1711.                   endif
 1711.                   if ( ( kflo <= 0 .or. kflo > 307 ) /= .false. ) then
 1711.                       _substr(t$1149,1,13) = 'PostLoop.f90'
 1711.                       _substr(t$1150,1,5) = 'NUCO'
 1711.                      t$1151 = kflo
 1711.                      call _bounds_error(  _substr(t$1149,1,13), 1711,  _substr(t$1150,1,5), 1, 1, 307, t$1151, t$1148 )
 1711.                   endif
 1708.                   $Unit_temp_O1 = nfprt
 1708.                   $IOitem_O2 = ife(jfe(kflo))
 1708.                   $IOitem_O3 = ifldcd($IOitem_O2)
 1708.                   $IOitem_O6 = jfe(kflo)
 1708.                   $IOitem_O7 = nuco(kflo)
 1708.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$184,  _substr(t$183,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Conversion Error at kflo = ', 0x800600000000L ), _iotype( kflo, 0x2000200000000L ), _iotype( ' Error = ', 0x800600000000L ), _iotype( ier, 0x2000200000000L ), _iotype( ' jfe = ', 0x800600000000L ), _iotype( $IOitem_O6, 0x2000200000000L ), _iotype( ' ife = ', 0x800600000000L ), _iotype( $IOitem_O2, 0x2000200000000L ), _iotype( ' ifldcd = ', 0x800600000000L ), _iotype( $IOitem_O3, 0x2000200000000L ), _iotype( ' nuco = ', 0x800600000000L ), _iotype( $IOitem_O7, 0x2000200000000L ) ) )
 1708.                endif
 1712.                if ( regint /= .false. ) then
 1713.                   if ( binary /= .false. ) then
 1717.                      call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1718.                      call writefield( mgaus, breg(1, 1) )
 1718.                   else
 1723.                      call doareainterpolation( bbfr(1, 1), breg(1, 1) )
 1724.                      t$1152 = ( 1 + $I_L1704_22 )
 1724.                      call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1724.                   endif
 1726.                else if ( binary /= .false. ) then
 1731.                   call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1732.                   call writefield( mgaus, breg(1, 1) )
 1732.                else
 1737.                   call doareagausinterpolation( bbfr(1, 1), breg(1, 1) )
 1738.                   t$1152 = ( 1 + $I_L1704_22 )
 1738.                   call writegrbfield(  _substr(aliop(kflo),1,4), mgaus, kgds(1), kpds(1), breg(1, 1), t$1152 )
 1738.                endif
 1741.                $I_L1704_22 = 1 + $I_L1704_22
 1740.                if ( $I_L1704_22 >= lev ) exit
 1740.             enddo
 1740.          endif
 1740.       endif
 1666.       _free( t$608 )
 1824.       return
 1824.       end
 1824.       
 1826.       
 1826.       subroutine geragribctl( unt, fname, title, labelp, nof, ndp, nvo, aliop )
 1826.       t$187 = ndp
 1841.       t$618 = _zla( 0, ndp )
   77.       if ( t$34 == 0 ) then
   77.          t$623(1) = 2
   77.          t$624(1) = 0
   77.          t$625(1) = 0
   77.          t$620(1) = int( loc( t$33 ), 8 )
   77.          t$621(1) = 0
   77.          t$622(1) = int( loc( t$619 ), 8 )
   77.          t$34 = __get_dynamic_type( 2, t$620(1), t$623(1), 1, t$621(1), t$622(1), t$624(1), t$625(1) )
   77.       endif
   77.       if ( t$36 == 0 ) then
   77.          t$631(1) = 2
   77.          t$632(1) = 0
   77.          t$633(1) = 0
   77.          t$628(1) = int( loc( t$35 ), 8 )
   77.          t$629(1) = 0
   77.          t$630(1) = int( loc( t$627 ), 8 )
   77.          t$36 = __get_dynamic_type( 2, t$628(1), t$631(1), 1, t$629(1), t$630(1), t$632(1), t$633(1) )
   77.       endif
   77.       if ( t$38 == 0 ) then
   77.          t$639(1) = 2
   77.          t$640(1) = 0
   77.          t$641(1) = 0
   77.          t$636(1) = int( loc( t$37 ), 8 )
   77.          t$637(1) = 0
   77.          t$638(1) = int( loc( t$635 ), 8 )
   77.          t$38 = __get_dynamic_type( 2, t$636(1), t$639(1), 1, t$637(1), t$638(1), t$640(1), t$641(1) )
   77.       endif
 1856.       t$1178 = unt
 1856.       t$1179(1) = 0x100000000000000L
 1856. !dir$ suppress t$1178
 1856.       t$1179(2) = int( loc( t$1178 ), 8 )
 1856.       t$1179(3) = 0
 1856.       t$1179(5) = 0
 1856.       t$1179(6) = 0
 1856.       t$1179(7) = 0
 1856.       t$1179(8) = 0
 1856.       t$1179(9) = 0
 1856.       t$1179(10) = 0
 1856. !dir$ suppress  _substr(fname,1,256)
 1856.       t$1179(11) = int( loc(  _substr(fname,1,256) ), 8 )
 1856.       t$1179(12) = 256
 1856.       t$1179(13) = 0
 1856.       t$1179(15) = 0
 1856.       t$1179(17) = 0
 1856.       t$1179(19) = 0
 1856.       t$1179(21) = 0
 1856.       t$1179(23) = 0
 1856.       t$1179(25) = 0
 1856.       t$1179(26) = 0
 1856.       t$1179(27) = 0
 1856.       t$1179(29) = 0
 1856.       t$1179(31) = 0
 1856.       t$1179(33) = 0
 1856.       t$1179(35) = 0
 1856.       t$1179(37) = 0
 1856.       t$1179(39) = 0
 1856.       t$1179(41) = 0
 1856.       t$1179(43) = 0
 1856.       t$1179(44) = 0
 1856.       t$1179(45) = 0
 1856.       t$1179(46) = 0
 1856.       t$1179(47) = 0
 1856.       t$1179(48) = 0
 1856.       t$1179(49) = 0
 1856.       t$1179(50) = 0
 1856.       t$1179(52) = 0
 1856.       t$1179(54) = 0
 1856.       t$1179(56) = 0
 1856.       t$1179(57) = 0
 1856.       t$1179(58) = 0
 1856.       t$1179(60) = 0
 1856.       t$1179(61) = 0
 1856.       t$1179(62) = 0
 1856.       t$1179(63) = 0
 1856.       t$1179(64) = 0
 1856.       t$1179(66) = 0
 1856.       t$1179(68) = 0
 1856.       t$1179(69) = 0
 1856.       t$1179(70) = 0
 1856.       t$1177 = _inquire( t$1179 )
 1857.       ifnb = -5 + ( _index( //(  _substr(fname,1,256), ' ' ), ' ', .false. ) )
 1858.       $ifna_S0 = 1 + ifnb
 1858.       do
 1860.          $ifna_S0 = -1 + $ifna_S0
 1860.          if ( int(  _substr(fname,$ifna_S0,1) ) == 47 ) exit
 1860.       enddo
 1864.        _substr(t$1180,1,270) = //( ' OUTPUT FILE: ',  _substr(fname,1,256) )
 1864.       $_IOitem_P0(0) = 1 + $ifna_S0
 1864.       $_IOitem_P0(1) = 1 + $ifna_S0
 1864.       _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1180,1,270), 0x800600000000L ), _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1865.       t$1181 = 18 + max( 0, ifnb + -$ifna_S0 )
 1865.       t$1183 = int( _alloc( max( 0, 18 + max( 0, ifnb + -$ifna_S0 ) ) ), 8 )
 1865.        _substr(t$1182,1,max( 0, 18 + max( 0, ifnb + -$ifna_S0 ) )) = //( ' OUTPUT FILE: ', //(  _substr(fname,1 + $ifna_S0,max( 0, ifnb + -$ifna_S0 )), '.grb' ) )
 1865.       _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$190,  _substr(t$189,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1182,1,max( 0, 18 + max( 0, ifnb + -$ifna_S0 ) )), 0x800600000000L ) ) )
 1865.       _free( t$1183 )
 1866.       t$1184 = 10 + max( 0, ifnb + -$ifna_S0 )
 1866.       t$1186 = int( _alloc( max( 0, 10 + max( 0, ifnb + -$ifna_S0 ) ) ), 8 )
 1866.        _substr(t$1185,1,max( 0, 10 + max( 0, ifnb + -$ifna_S0 ) )) = //( 'dset ^', //(  _substr(fname,1 + $ifna_S0,max( 0, ifnb + -$ifna_S0 )), '.grb' ) )
 1866.       $Unit_temp_O0 = unt
 1866.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$192,  _substr(t$191,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1185,1,max( 0, 10 + max( 0, ifnb + -$ifna_S0 ) )), 0x800600000000L ) ) )
 1866.       _free( t$1186 )
 1867.       $Unit_temp_O1 = unt
 1867.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$194,  _substr(t$193,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1868.       t$1187 = 11 + max( 0, ifnb + -$ifna_S0 )
 1868.       t$1189 = int( _alloc( max( 0, 11 + max( 0, ifnb + -$ifna_S0 ) ) ), 8 )
 1868.        _substr(t$1188,1,max( 0, 11 + max( 0, ifnb + -$ifna_S0 ) )) = //( 'index ^', //(  _substr(fname,1 + $ifna_S0,max( 0, ifnb + -$ifna_S0 )), '.idx' ) )
 1868.       $Unit_temp_O2 = unt
 1868.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$196,  _substr(t$195,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1188,1,max( 0, 11 + max( 0, ifnb + -$ifna_S0 ) )), 0x800600000000L ) ) )
 1868.       _free( t$1189 )
 1869.       $Unit_temp_O3 = unt
 1869.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$198,  _substr(t$197,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1870.       if ( regint /= .false. ) then
 1871.          $Unit_temp_O4 = unt
 1871.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$200,  _substr(t$199,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'undef -2.56E+33', 0x800600000000L ) ) )
 1871.       else
 1873.          $Unit_temp_O5 = unt
 1873.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$202,  _substr(t$201,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'undef 9.999E+20', 0x800600000000L ) ) )
 1873.       endif
 1875.       $Unit_temp_O6 = unt
 1875.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$204,  _substr(t$203,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1876.       $Unit_temp_O7 = unt
 1876.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$206,  _substr(t$205,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'title ', 0x800600000000L ), _iotype( 'PRESSURE HISTORY    ', 0x800600000000L ), _iotype(  _substr(title,1,40), 0x800600000000L ) ) )
 1877.       $Unit_temp_O8 = unt
 1877.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, t$208,  _substr(t$207,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1878.       if ( ( size_tb(1) < table1%dim_1%LB .or. size_tb(1) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1878.           _substr(t$1191,1,13) = 'PostLoop.f90'
 1878.           _substr(t$1192,1,7) = 'TABLE1'
 1878.          t$1178 = table1%dim_1%LB
 1878.          t$1193 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1878.          t$1194 = size_tb(1)
 1878.          call _bounds_error(  _substr(t$1191,1,13), 1878,  _substr(t$1192,1,7), 1, t$1178, t$1193, t$1194, t$1190 )
 1878.       endif
 1878.       $Unit_temp_O9 = unt
 1878.       $IOitem_O10 = (table1%base_addr)(size_tb(1), 0)%id
 1878.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, t$210,  _substr(t$209,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'dtype grib', 0x800600000000L ), _iotype( $IOitem_O10, 0x2000200000000L ) ) )
 1879.       $Unit_temp_O11 = unt
 1879.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$212,  _substr(t$211,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1880.       $Unit_temp_O12 = unt
 1880.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$214,  _substr(t$213,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'options yrev', 0x800600000000L ) ) )
 1881.       $Unit_temp_O13 = unt
 1881.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$216,  _substr(t$215,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1882.       if ( regint /= .false. ) then
 1883.          $Unit_temp_O14 = unt
 1883.          $IOitem_O15 = ( 360.0 * 1.0/( real( idim, 8 ) ) )
 1883.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$218,  _substr(t$217,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'xdef ', 0x800600000000L ), _iotype( idim, 0x2000200000000L ), _iotype( ' linear ', 0x800600000000L ), _iotype( 0.0, 0x804020300000000L ), _iotype( $IOitem_O15, 0x4000300000000L ) ) )
 1885.          $Unit_temp_O16 = unt
 1885.          $_IOitem_P1(0) = -90.0
 1885.          $_IOitem_P1(1) = ( 180.0 * 1.0/( real( -1 + jdim, 8 ) ) )
 1885.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, t$220,  _substr(t$219,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ydef ', 0x800600000000L ), _iotype( jdim, 0x2000200000000L ), _iotype( ' linear ', 0x800600000000L ), _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x4000300000000L ) ) )
 1885.       else
 1888.          $Unit_temp_O18 = unt
 1888.          $IOitem_O19 = ( 360.0 * 1.0/( real( idim, 8 ) ) )
 1888.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, t$222,  _substr(t$221,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'xdef ', 0x800600000000L ), _iotype( idim, 0x2000200000000L ), _iotype( ' linear ', 0x800600000000L ), _iotype( 0.0, 0x804020300000000L ), _iotype( $IOitem_O19, 0x4000300000000L ) ) )
 1890.          $Unit_temp_O20 = unt
 1890.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, t$224,  _substr(t$223,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ydef ', 0x800600000000L ), _iotype( jdim, 0x2000200000000L ), _iotype( ' levels ', 0x800600000000L ) ) )
 1891.          if ( res <= 0 ) then
 1892.             _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$226,  _substr(t$225,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1892.             t$1195 = jmax
 1892.             if ( jmax > 0 ) then
 1892.                $I_L1892_50 = 0
 1892.                do
 1892.                   if ( ( t$1195 + -$I_L1892_50 < glat%dim_1%LB .or. t$1195 + -$I_L1892_50 > -1 + glat%dim_1%LB + glat%dim_1%EX ) /= .false. ) then
 1892.                       _substr(t$1199,1,13) = 'PostLoop.f90'
 1892.                       _substr(t$1200,1,5) = 'GLAT'
 1892.                      t$1178 = glat%dim_1%LB
 1892.                      t$1193 = -1 + glat%dim_1%LB + glat%dim_1%EX
 1892.                      t$1194 = ( t$1195 + -$I_L1892_50 )
 1892.                      call _bounds_error(  _substr(t$1199,1,13), 1892,  _substr(t$1200,1,5), 1, t$1178, t$1193, t$1194, t$1198 )
 1892.                   endif
 1892.                   $IOitem_O21 = (glat%base_addr)(t$1195 + -$I_L1892_50, 0)
 1892.                   _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$226,  _substr(t$225,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O21, 0x804060300000000L ) ) )
 1892.                   $I_L1892_50 = 1 + $I_L1892_50
 1892.                   if ( $I_L1892_50 >= 1 + max( 0, -1 + t$1195 ) ) exit
 1892.                enddo
 1892.             endif
 1892.             _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$226,  _substr(t$225,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1892.          else
 1894.             _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$228,  _substr(t$227,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1894.             t$1201 = jdim
 1894.             if ( jdim > 0 ) then
 1894.                $I_L1894_48 = 0
 1894.                do
 1894.                   if ( ( t$1201 + -$I_L1894_48 < glats%dim_1%LB .or. t$1201 + -$I_L1894_48 > -1 + glats%dim_1%LB + glats%dim_1%EX ) /= .false. ) then
 1894.                       _substr(t$1205,1,13) = 'PostLoop.f90'
 1894.                       _substr(t$1206,1,6) = 'GLATS'
 1894.                      t$1178 = glats%dim_1%LB
 1894.                      t$1193 = -1 + glats%dim_1%LB + glats%dim_1%EX
 1894.                      t$1194 = ( t$1201 + -$I_L1894_48 )
 1894.                      call _bounds_error(  _substr(t$1205,1,13), 1894,  _substr(t$1206,1,6), 1, t$1178, t$1193, t$1194, t$1204 )
 1894.                   endif
 1894.                   $IOitem_O22 = (glats%base_addr)(t$1201 + -$I_L1894_48, 0)
 1894.                   _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$228,  _substr(t$227,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x804060300000000L ) ) )
 1894.                   $I_L1894_48 = 1 + $I_L1894_48
 1894.                   if ( $I_L1894_48 >= 1 + max( 0, -1 + t$1201 ) ) exit
 1894.                enddo
 1894.             endif
 1894.             _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$228,  _substr(t$227,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1894.          endif
 1894.       endif
 1897.       it = 1
 1898.       _fread( _clist( 0, 0, 3,  _substr(labelp,1,10), Null_Arg, Null_Arg, t$230,  _substr(t$229,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P2(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 1898.       iy = $_IOitem_P2(0)
 1898.       im = $_IOitem_P2(1)
 1898.       id = $_IOitem_P2(2)
 1898.       ih = $_IOitem_P2(3)
 1899.       $Unit_temp_O23 = unt
 1899.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O23, Null_Arg, Null_Arg, t$232,  _substr(t$231,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'tdef ', 0x800600000000L ), _iotype( it, 0x2000200000000L ), _iotype( ' linear ', 0x800600000000L ), _iotype( ih, 0x2000200000000L ), _iotype( 'Z', 0x800600000000L ), _iotype( id, 0x2000200000000L ), _iotype(  _substr(cmth(im),1,3), 0x800600000000L ), _iotype( iy, 0x2000200000000L ), _iotype( ' 6hr', 0x800600000000L ) ) )
 1901.       $Unit_temp_O24 = unt
 1901.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O24, Null_Arg, Null_Arg, t$234,  _substr(t$233,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1902.       if ( lmax <= 10 ) then
 1903.          $Unit_temp_O25 = unt
 1903.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O25, Null_Arg, Null_Arg, t$236,  _substr(t$235,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1903.          $Unit_temp_O26 = unt
 1903.          _fwrite( _clist( 0, 0, 0, $Unit_temp_O26, Null_Arg, Null_Arg, t$236,  _substr(t$235,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'zdef ', 0x800600000000L ), _iotype( lmax, 0x2000200000000L ), _iotype( '  levels ', 0x800600000000L ) ) )
 1903.          $t_S1 = lmax
 1903.          if ( lmax > 0 ) then
 1903.             $I_L1903_56 = 0
 1903.             do
 1904.                if ( ( ( 1 + $I_L1903_56 ) < pmand%dim_1%LB .or. ( 1 + $I_L1903_56 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 1904.                    _substr(t$1211,1,13) = 'PostLoop.f90'
 1904.                    _substr(t$1212,1,6) = 'PMAND'
 1904.                   t$1178 = pmand%dim_1%LB
 1904.                   t$1193 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 1904.                   t$1194 = 1 + $I_L1903_56
 1904.                   call _bounds_error(  _substr(t$1211,1,13), 1904,  _substr(t$1212,1,6), 1, t$1178, t$1193, t$1194, t$1210 )
 1904.                endif
 1903.                $Unit_temp_O27 = unt
 1903.                $IOitem_O28 = _rnd( (pmand%base_addr)(1 + $I_L1903_56, 0) )
 1903.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O27, Null_Arg, Null_Arg, t$236,  _substr(t$235,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O28, 0x2000200000000L ) ) )
 1903.                $I_L1903_56 = 1 + $I_L1903_56
 1903.                if ( $I_L1903_56 >= 1 + max( 0, -1 + $t_S1 ) ) exit
 1903.             enddo
 1903.          endif
 1903.          $Unit_temp_O29 = unt
 1903.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O29, Null_Arg, Null_Arg, t$236,  _substr(t$235,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1903.       else
 1906.          $Unit_temp_O30 = unt
 1906.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O30, Null_Arg, Null_Arg, t$238,  _substr(t$237,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1906.          $Unit_temp_O31 = unt
 1906.          _fwrite( _clist( 0, 0, 0, $Unit_temp_O31, Null_Arg, Null_Arg, t$238,  _substr(t$237,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'zdef ', 0x800600000000L ), _iotype( lmax, 0x2000200000000L ), _iotype( ' levels ', 0x800600000000L ) ) )
 1906.          $I_L1906_52 = 0
 1906.          do
 1907.             if ( ( ( 1 + $I_L1906_52 ) < pmand%dim_1%LB .or. ( 1 + $I_L1906_52 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 1907.                 _substr(t$1215,1,13) = 'PostLoop.f90'
 1907.                 _substr(t$1216,1,6) = 'PMAND'
 1907.                t$1178 = pmand%dim_1%LB
 1907.                t$1193 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 1907.                t$1194 = 1 + $I_L1906_52
 1907.                call _bounds_error(  _substr(t$1215,1,13), 1907,  _substr(t$1216,1,6), 1, t$1178, t$1193, t$1194, t$1214 )
 1907.             endif
 1906.             $Unit_temp_O32 = unt
 1906.             $IOitem_O33 = _rnd( (pmand%base_addr)(1 + $I_L1906_52, 0) )
 1906.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O32, Null_Arg, Null_Arg, t$238,  _substr(t$237,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x2000200000000L ) ) )
 1906.             $I_L1906_52 = 1 + $I_L1906_52
 1906.             if ( $I_L1906_52 >= 10 ) exit
 1906.          enddo
 1906.          $Unit_temp_O34 = unt
 1906.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O34, Null_Arg, Null_Arg, t$238,  _substr(t$237,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1908.          $Unit_temp_O35 = unt
 1908.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O35, Null_Arg, Null_Arg, t$240,  _substr(t$239,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1908.          $t_S2 = lmax
 1908.          if ( -10 + lmax > 0 ) then
 1908.             $I_L1908_54 = 0
 1908.             do
 1908.                if ( ( ( 11 + $I_L1908_54 ) < pmand%dim_1%LB .or. ( 11 + $I_L1908_54 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 1908.                    _substr(t$1221,1,13) = 'PostLoop.f90'
 1908.                    _substr(t$1222,1,6) = 'PMAND'
 1908.                   t$1178 = pmand%dim_1%LB
 1908.                   t$1193 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 1908.                   t$1194 = 11 + $I_L1908_54
 1908.                   call _bounds_error(  _substr(t$1221,1,13), 1908,  _substr(t$1222,1,6), 1, t$1178, t$1193, t$1194, t$1220 )
 1908.                endif
 1908.                $Unit_temp_O36 = unt
 1908.                $IOitem_O37 = _rnd( (pmand%base_addr)(11 + $I_L1908_54, 0) )
 1908.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O36, Null_Arg, Null_Arg, t$240,  _substr(t$239,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O37, 0x2000200000000L ) ) )
 1908.                $I_L1908_54 = 1 + $I_L1908_54
 1908.                if ( $I_L1908_54 >= 1 + max( 0, -11 + $t_S2 ) ) exit
 1908.             enddo
 1908.          endif
 1908.          $Unit_temp_O38 = unt
 1908.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O38, Null_Arg, Null_Arg, t$240,  _substr(t$239,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1908.       endif
 1910.       $Unit_temp_O39 = unt
 1910.       $IOitem_O40 = 2 + nof
 1910.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O39, Null_Arg, Null_Arg, t$242,  _substr(t$241,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'vars ', 0x800600000000L ), _iotype( $IOitem_O40, 0x2000200000000L ) ) )
 1911.       $Unit_temp_O41 = unt
 1911.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O41, Null_Arg, Null_Arg, t$244,  _substr(t$243,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'topo  0 132,1,0 ** surface TOPOGRAPHY [m]', 0x800600000000L ) ) )
 1913.       $Unit_temp_O42 = unt
 1913.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O42, Null_Arg, Null_Arg, t$246,  _substr(t$245,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'lsmk  0  81,1,0 ** surface LAND SEA MASK [0,1]', 0x800600000000L ) ) )
 1915.       if ( nof > 0 ) then
 1915.          $I_L1915_62 = 0
 1915.          do
 1916.             inv = nvo(1 + $I_L1915_62)
 1917.             if ( inv == 1 ) then
 1917.                inv = 0
 1917.             endif
 1918.             $t_S4 = size_tb(1)
 1918.             if ( $t_S4 > 0 ) then
 1918.                $I_L1918_60 = 0
 1918.                do
 1919.                   if (  _substr(aliop(1 + $I_L1915_62),1,4) ==  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%name,1,4) ) then
 1920.                      itypelev = 100
 1921.                      iiplev = 0
 1922.                      $t_S5 = size_tb(2)
 1922.                      if ( $t_S5 > 0 ) then
 1923.                         $SC_table2_I2 = table2%dim_1%EX
 1923.                         $SC_table2_I3 = table2%dim_1%LB
 1923.                         $SC_table1_I0 = table1%dim_1%EX
 1923.                         $SC_table1_I1 = table1%dim_1%LB
 1922.                         $I_L1922_58 = 0
 1922.                         do
 1923.                            if (  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%level,1,_ltrim(  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%level,1,6) )) ==  _substr((table2%base_addr)(1 + $I_L1922_58, 0)%level_type,1,_ltrim(  _substr((table2%base_addr)(1 + $I_L1922_58, 0)%level_type,1,8) )) ) then
 1924.                               itypelev = (table2%base_addr)(1 + $I_L1922_58, 0)%default
 1925.                               iiplev = (table2%base_addr)(1 + $I_L1922_58, 0)%p2
 1925.                            endif
 1927.                            $I_L1922_58 = 1 + $I_L1922_58
 1926.                            if ( $I_L1922_58 >= $t_S5 ) exit
 1926.                         enddo
 1926.                      endif
 1928.                      if ( ( ( 1 + $I_L1918_60 ) < table1%dim_1%LB .or. ( 1 + $I_L1918_60 ) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1928.                          _substr(t$1233,1,13) = 'PostLoop.f90'
 1928.                          _substr(t$1234,1,7) = 'TABLE1'
 1928.                         t$1178 = table1%dim_1%LB
 1928.                         t$1193 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1928.                         t$1194 = 1 + $I_L1918_60
 1928.                         call _bounds_error(  _substr(t$1233,1,13), 1928,  _substr(t$1234,1,7), 1, t$1178, t$1193, t$1194, t$1232 )
 1928.                      endif
 1928.                      if ( ( ( 1 + $I_L1918_60 ) < table1%dim_1%LB .or. ( 1 + $I_L1918_60 ) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1928.                          _substr(t$1236,1,13) = 'PostLoop.f90'
 1928.                          _substr(t$1237,1,7) = 'TABLE1'
 1928.                         t$1238 = table1%dim_1%LB
 1928.                         t$1239 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1928.                         t$1240 = 1 + $I_L1918_60
 1928.                         call _bounds_error(  _substr(t$1236,1,13), 1928,  _substr(t$1237,1,7), 1, t$1238, t$1239, t$1240, t$1235 )
 1928.                      endif
 1929.                      if ( ( ( 1 + $I_L1918_60 ) < table1%dim_1%LB .or. ( 1 + $I_L1918_60 ) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1929.                          _substr(t$1242,1,13) = 'PostLoop.f90'
 1929.                          _substr(t$1243,1,7) = 'TABLE1'
 1929.                         t$1244 = table1%dim_1%LB
 1929.                         t$1245 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1929.                         t$1246 = 1 + $I_L1918_60
 1929.                         call _bounds_error(  _substr(t$1242,1,13), 1929,  _substr(t$1243,1,7), 1, t$1244, t$1245, t$1246, t$1241 )
 1929.                      endif
 1929.                      if ( ( ( 1 + $I_L1918_60 ) < table1%dim_1%LB .or. ( 1 + $I_L1918_60 ) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1929.                          _substr(t$1248,1,13) = 'PostLoop.f90'
 1929.                          _substr(t$1249,1,7) = 'TABLE1'
 1929.                         t$1250 = table1%dim_1%LB
 1929.                         t$1251 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1929.                         t$1252 = 1 + $I_L1918_60
 1929.                         call _bounds_error(  _substr(t$1248,1,13), 1929,  _substr(t$1249,1,7), 1, t$1250, t$1251, t$1252, t$1247 )
 1929.                      endif
 1929.                      if ( ( ( 1 + $I_L1918_60 ) < table1%dim_1%LB .or. ( 1 + $I_L1918_60 ) > -1 + table1%dim_1%LB + table1%dim_1%EX ) /= .false. ) then
 1929.                          _substr(t$1254,1,13) = 'PostLoop.f90'
 1929.                          _substr(t$1255,1,7) = 'TABLE1'
 1929.                         t$1256 = table1%dim_1%LB
 1929.                         t$1257 = -1 + table1%dim_1%LB + table1%dim_1%EX
 1929.                         t$1258 = 1 + $I_L1918_60
 1929.                         call _bounds_error(  _substr(t$1254,1,13), 1929,  _substr(t$1255,1,7), 1, t$1256, t$1257, t$1258, t$1253 )
 1929.                      endif
 1929.                       _substr(t$1259,1,68) = //( ' ** ', //(  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%level,1,6), //(  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%title,1,40), //( '(', //(  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%unit,1,16), ')' ) ) ) ) )
 1928.                      $Unit_temp_O43 = unt
 1928.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O43, Null_Arg, Null_Arg, t$248,  _substr(t$247,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((table1%base_addr)(1 + $I_L1918_60, 0)%name,1,4), 0x800600000000L ), _iotype( inv, 0x2000200000000L ), _iotype( (table1%base_addr)(1 + $I_L1918_60, 0)%id, 0x2000200000000L ), _iotype( ',', 0x800600000000L ), _iotype( itypelev, 0x2000200000000L ), _iotype( ',', 0x800600000000L ), _iotype( iiplev, 0x2000200000000L ), _iotype(  _substr(t$1259,1,68), 0x800600000000L ) ) )
 1928.                   endif
 1931.                   $I_L1918_60 = 1 + $I_L1918_60
 1930.                   if ( $I_L1918_60 >= $t_S4 ) exit
 1930.                enddo
 1930.             endif
 1932.             $I_L1915_62 = 1 + $I_L1915_62
 1931.             if ( $I_L1915_62 >= nof ) exit
 1931.          enddo
 1931.       endif
 1933.       $Unit_temp_O44 = unt
 1933.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O44, Null_Arg, Null_Arg, t$250,  _substr(t$249,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'endvars', 0x800600000000L ) ) )
 1934.       return
 1934.       end
 1934.       
 1937.       
 1937.       subroutine gerabinctl( unt, fname, title, labelp, nof, ndp, nvo, aliop, chrop, nuco )
 1937.       t$251 = ndp
 1952.       t$643 = _zla( 0, ndp )
 1969.       t$1261 = 11
 1969.       t$1262(1) = 0x100000000000000L
 1969. !dir$ suppress t$1261
 1969.       t$1262(2) = int( loc( t$1261 ), 8 )
 1969.       t$1262(3) = 0
 1969.       t$1262(5) = 0
 1969.       t$1262(6) = 0
 1969.       t$1262(7) = 0
 1969.       t$1262(8) = 0
 1969.       t$1262(9) = 0
 1969.       t$1262(10) = 0
 1969. !dir$ suppress  _substr(fname,1,256)
 1969.       t$1262(11) = int( loc(  _substr(fname,1,256) ), 8 )
 1969.       t$1262(12) = 256
 1969.       t$1262(13) = 0
 1969.       t$1262(15) = 0
 1969.       t$1262(17) = 0
 1969.       t$1262(19) = 0
 1969.       t$1262(21) = 0
 1969.       t$1262(23) = 0
 1969.       t$1262(25) = 0
 1969.       t$1262(26) = 0
 1969.       t$1262(27) = 0
 1969.       t$1262(29) = 0
 1969.       t$1262(31) = 0
 1969.       t$1262(33) = 0
 1969.       t$1262(35) = 0
 1969.       t$1262(37) = 0
 1969.       t$1262(39) = 0
 1969.       t$1262(41) = 0
 1969.       t$1262(43) = 0
 1969.       t$1262(44) = 0
 1969.       t$1262(45) = 0
 1969.       t$1262(46) = 0
 1969.       t$1262(47) = 0
 1969.       t$1262(48) = 0
 1969.       t$1262(49) = 0
 1969.       t$1262(50) = 0
 1969.       t$1262(52) = 0
 1969.       t$1262(54) = 0
 1969.       t$1262(56) = 0
 1969.       t$1262(57) = 0
 1969.       t$1262(58) = 0
 1969.       t$1262(60) = 0
 1969.       t$1262(61) = 0
 1969.       t$1262(62) = 0
 1969.       t$1262(63) = 0
 1969.       t$1262(64) = 0
 1969.       t$1262(66) = 0
 1969.       t$1262(68) = 0
 1969.       t$1262(69) = 0
 1969.       t$1262(70) = 0
 1969.       t$1260 = _inquire( t$1262 )
 1970.       ifnb = -1 + ( _index( //(  _substr(fname,1,256), ' ' ), ' ', .false. ) )
 1971.       $ifna_S0 = 1 + ifnb
 1971.       do
 1973.          $ifna_S0 = -1 + $ifna_S0
 1973.          if ( int(  _substr(fname,$ifna_S0,1) ) == 47 ) exit
 1973.       enddo
 1977.       t$1263 = 14 + max( 0, ifnb + -$ifna_S0 )
 1977.       t$1265 = int( _alloc( max( 0, 14 + max( 0, ifnb + -$ifna_S0 ) ) ), 8 )
 1977.        _substr(t$1264,1,max( 0, 14 + max( 0, ifnb + -$ifna_S0 ) )) = //( ' OUTPUT FILE: ',  _substr(fname,1 + $ifna_S0,max( 0, ifnb + -$ifna_S0 )) )
 1977.       _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$254,  _substr(t$253,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1264,1,max( 0, 14 + max( 0, ifnb + -$ifna_S0 ) )), 0x800600000000L ) ) )
 1977.       _free( t$1265 )
 1978.       t$1266 = 6 + max( 0, ifnb + -$ifna_S0 )
 1978.       t$1268 = int( _alloc( max( 0, 6 + max( 0, ifnb + -$ifna_S0 ) ) ), 8 )
 1978.        _substr(t$1267,1,max( 0, 6 + max( 0, ifnb + -$ifna_S0 ) )) = //( 'DSET ^',  _substr(fname,1 + $ifna_S0,max( 0, ifnb + -$ifna_S0 )) )
 1978.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$256,  _substr(t$255,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1267,1,max( 0, 6 + max( 0, ifnb + -$ifna_S0 ) )), 0x800600000000L ) ) )
 1978.       _free( t$1268 )
 1979.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$258,  _substr(t$257,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1980.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$260,  _substr(t$259,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'OPTIONS SEQUENTIAL YREV BIG_ENDIAN', 0x800600000000L ) ) )
 1981.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$262,  _substr(t$261,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1982.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$264,  _substr(t$263,1,10), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'UNDEF ', 0x800600000000L ), _iotype( undef, 0x804060300000000L ) ) )
 1983.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$266,  _substr(t$265,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1984.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$268,  _substr(t$267,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'TITLE ', 0x800600000000L ), _iotype( 'PRESSURE HISTORY    ', 0x800600000000L ), _iotype(  _substr(title,1,40), 0x800600000000L ) ) )
 1985.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$270,  _substr(t$269,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 1986.       if ( regint /= .false. ) then
 1987.          $IOitem_O0 = ( 360.0 * 1.0/( real( idim, 8 ) ) )
 1987.          _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$272,  _substr(t$271,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'XDEF ', 0x800600000000L ), _iotype( idim, 0x2000200000000L ), _iotype( ' LINEAR ', 0x800600000000L ), _iotype( 0.0, 0x804020300000000L ), _iotype( $IOitem_O0, 0x4000300000000L ) ) )
 1989.          $_IOitem_P0(0) = -90.0
 1989.          $_IOitem_P0(1) = ( 180.0 * 1.0/( real( -1 + jdim, 8 ) ) )
 1989.          _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$274,  _substr(t$273,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'YDEF ', 0x800600000000L ), _iotype( jdim, 0x2000200000000L ), _iotype( ' LINEAR ', 0x800600000000L ), _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x4000300000000L ) ) )
 1989.       else
 1992.          $IOitem_O2 = ( 360.0 * 1.0/( real( idim, 8 ) ) )
 1992.          _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$276,  _substr(t$275,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'XDEF ', 0x800600000000L ), _iotype( idim, 0x2000200000000L ), _iotype( ' LINEAR ', 0x800600000000L ), _iotype( 0.0, 0x804020300000000L ), _iotype( $IOitem_O2, 0x4000300000000L ) ) )
 1994.          _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$278,  _substr(t$277,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'YDEF ', 0x800600000000L ), _iotype( jdim, 0x2000200000000L ), _iotype( ' LEVELS ', 0x800600000000L ) ) )
 1995.          if ( res <= 0 ) then
 1996.             _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$280,  _substr(t$279,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1996.             t$1269 = jmax
 1996.             if ( jmax > 0 ) then
 1996.                $I_L1996_26 = 0
 1996.                do
 1996.                   if ( ( t$1269 + -$I_L1996_26 < glat%dim_1%LB .or. t$1269 + -$I_L1996_26 > -1 + glat%dim_1%LB + glat%dim_1%EX ) /= .false. ) then
 1996.                       _substr(t$1273,1,13) = 'PostLoop.f90'
 1996.                       _substr(t$1274,1,5) = 'GLAT'
 1996.                      t$1261 = glat%dim_1%LB
 1996.                      t$1275 = -1 + glat%dim_1%LB + glat%dim_1%EX
 1996.                      t$1276 = ( t$1269 + -$I_L1996_26 )
 1996.                      call _bounds_error(  _substr(t$1273,1,13), 1996,  _substr(t$1274,1,5), 1, t$1261, t$1275, t$1276, t$1272 )
 1996.                   endif
 1996.                   $IOitem_O3 = (glat%base_addr)(t$1269 + -$I_L1996_26, 0)
 1996.                   _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$280,  _substr(t$279,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O3, 0x804060300000000L ) ) )
 1996.                   $I_L1996_26 = 1 + $I_L1996_26
 1996.                   if ( $I_L1996_26 >= 1 + max( 0, -1 + t$1269 ) ) exit
 1996.                enddo
 1996.             endif
 1996.             _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$280,  _substr(t$279,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1996.          else
 1998.             _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$282,  _substr(t$281,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1998.             t$1277 = jdim
 1998.             if ( jdim > 0 ) then
 1998.                $I_L1998_24 = 0
 1998.                do
 1998.                   if ( ( t$1277 + -$I_L1998_24 < glats%dim_1%LB .or. t$1277 + -$I_L1998_24 > -1 + glats%dim_1%LB + glats%dim_1%EX ) /= .false. ) then
 1998.                       _substr(t$1281,1,13) = 'PostLoop.f90'
 1998.                       _substr(t$1282,1,6) = 'GLATS'
 1998.                      t$1261 = glats%dim_1%LB
 1998.                      t$1275 = -1 + glats%dim_1%LB + glats%dim_1%EX
 1998.                      t$1276 = ( t$1277 + -$I_L1998_24 )
 1998.                      call _bounds_error(  _substr(t$1281,1,13), 1998,  _substr(t$1282,1,6), 1, t$1261, t$1275, t$1276, t$1280 )
 1998.                   endif
 1998.                   $IOitem_O4 = (glats%base_addr)(t$1277 + -$I_L1998_24, 0)
 1998.                   _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$282,  _substr(t$281,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
 1998.                   $I_L1998_24 = 1 + $I_L1998_24
 1998.                   if ( $I_L1998_24 >= 1 + max( 0, -1 + t$1277 ) ) exit
 1998.                enddo
 1998.             endif
 1998.             _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$282,  _substr(t$281,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1998.          endif
 1998.       endif
 2001.       if ( lmax <= 10 ) then
 2002.          _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$284,  _substr(t$283,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2002.          _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$284,  _substr(t$283,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ZDEF ', 0x800600000000L ), _iotype( lmax, 0x2000200000000L ), _iotype( '  LEVELS ', 0x800600000000L ) ) )
 2002.          $t_S1 = lmax
 2002.          if ( lmax > 0 ) then
 2002.             $I_L2002_32 = 0
 2002.             do
 2003.                if ( ( ( 1 + $I_L2002_32 ) < pmand%dim_1%LB .or. ( 1 + $I_L2002_32 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 2003.                    _substr(t$1287,1,13) = 'PostLoop.f90'
 2003.                    _substr(t$1288,1,6) = 'PMAND'
 2003.                   t$1261 = pmand%dim_1%LB
 2003.                   t$1275 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 2003.                   t$1276 = 1 + $I_L2002_32
 2003.                   call _bounds_error(  _substr(t$1287,1,13), 2003,  _substr(t$1288,1,6), 1, t$1261, t$1275, t$1276, t$1286 )
 2003.                endif
 2002.                $IOitem_O5 = _rnd( (pmand%base_addr)(1 + $I_L2002_32, 0) )
 2002.                _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$284,  _substr(t$283,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x2000200000000L ) ) )
 2002.                $I_L2002_32 = 1 + $I_L2002_32
 2002.                if ( $I_L2002_32 >= 1 + max( 0, -1 + $t_S1 ) ) exit
 2002.             enddo
 2002.          endif
 2002.          _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$284,  _substr(t$283,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2002.       else
 2005.          _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$286,  _substr(t$285,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2005.          _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$286,  _substr(t$285,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ZDEF ', 0x800600000000L ), _iotype( lmax, 0x2000200000000L ), _iotype( ' LEVELS ', 0x800600000000L ) ) )
 2005.          $I_L2005_28 = 0
 2005.          do
 2006.             if ( ( ( 1 + $I_L2005_28 ) < pmand%dim_1%LB .or. ( 1 + $I_L2005_28 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 2006.                 _substr(t$1291,1,13) = 'PostLoop.f90'
 2006.                 _substr(t$1292,1,6) = 'PMAND'
 2006.                t$1261 = pmand%dim_1%LB
 2006.                t$1275 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 2006.                t$1276 = 1 + $I_L2005_28
 2006.                call _bounds_error(  _substr(t$1291,1,13), 2006,  _substr(t$1292,1,6), 1, t$1261, t$1275, t$1276, t$1290 )
 2006.             endif
 2005.             $IOitem_O6 = _rnd( (pmand%base_addr)(1 + $I_L2005_28, 0) )
 2005.             _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$286,  _substr(t$285,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O6, 0x2000200000000L ) ) )
 2005.             $I_L2005_28 = 1 + $I_L2005_28
 2005.             if ( $I_L2005_28 >= 10 ) exit
 2005.          enddo
 2005.          _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$286,  _substr(t$285,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2007.          _fwrite( _clist( 0, 0, 2, 12, Null_Arg, Null_Arg, t$288,  _substr(t$287,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2007.          $t_S2 = lmax
 2007.          if ( -10 + lmax > 0 ) then
 2007.             $I_L2007_30 = 0
 2007.             do
 2007.                if ( ( ( 11 + $I_L2007_30 ) < pmand%dim_1%LB .or. ( 11 + $I_L2007_30 ) > -1 + pmand%dim_1%LB + pmand%dim_1%EX ) /= .false. ) then
 2007.                    _substr(t$1297,1,13) = 'PostLoop.f90'
 2007.                    _substr(t$1298,1,6) = 'PMAND'
 2007.                   t$1261 = pmand%dim_1%LB
 2007.                   t$1275 = -1 + pmand%dim_1%LB + pmand%dim_1%EX
 2007.                   t$1276 = 11 + $I_L2007_30
 2007.                   call _bounds_error(  _substr(t$1297,1,13), 2007,  _substr(t$1298,1,6), 1, t$1261, t$1275, t$1276, t$1296 )
 2007.                endif
 2007.                $IOitem_O7 = _rnd( (pmand%base_addr)(11 + $I_L2007_30, 0) )
 2007.                _fwrite( _clist( 0, 0, 0, 12, Null_Arg, Null_Arg, t$288,  _substr(t$287,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O7, 0x2000200000000L ) ) )
 2007.                $I_L2007_30 = 1 + $I_L2007_30
 2007.                if ( $I_L2007_30 >= 1 + max( 0, -11 + $t_S2 ) ) exit
 2007.             enddo
 2007.          endif
 2007.          _fwrite( _clist( 0, 0, 1, 12, Null_Arg, Null_Arg, t$288,  _substr(t$287,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2007.       endif
 2009.       it = 1
 2010.       _fread( _clist( 0, 0, 3,  _substr(labelp,1,10), Null_Arg, Null_Arg, t$290,  _substr(t$289,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2010.       iy = $_IOitem_P1(0)
 2010.       im = $_IOitem_P1(1)
 2010.       id = $_IOitem_P1(2)
 2010.       ih = $_IOitem_P1(3)
 2011.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$292,  _substr(t$291,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'TDEF ', 0x800600000000L ), _iotype( it, 0x2000200000000L ), _iotype( ' LINEAR ', 0x800600000000L ), _iotype( ih, 0x2000200000000L ), _iotype( 'Z', 0x800600000000L ), _iotype( id, 0x2000200000000L ), _iotype(  _substr(cmth(im),1,3), 0x800600000000L ), _iotype( iy, 0x2000200000000L ), _iotype( ' 6HR', 0x800600000000L ) ) )
 2013.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$294,  _substr(t$293,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*', 0x800600000000L ) ) )
 2014.       $IOitem_O8 = 2 + nof
 2014.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$296,  _substr(t$295,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'VARS ', 0x800600000000L ), _iotype( $IOitem_O8, 0x2000200000000L ) ) )
 2015.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$298,  _substr(t$297,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'TOPO    0 99 TOPOGRAPHY                              (M               )', 0x800600000000L ) ) )
 2017.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$300,  _substr(t$299,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'LSMK    0 99 LAND SEA MASK                           (NO DIM          )', 0x800600000000L ) ) )
 2019.       if ( nof > 0 ) then
 2019.          $I_L2019_34 = 0
 2019.          do
 2020.             inv = nvo(1 + $I_L2019_34)
 2021.             if ( inv == 1 ) then
 2021.                inv = 0
 2021.             endif
 2022.             if ( ( ( 1 + $I_L2019_34 ) <= 0 .or. ( 1 + $I_L2019_34 ) > t$251 ) /= .false. ) then
 2022.                 _substr(t$1304,1,13) = 'PostLoop.f90'
 2022.                 _substr(t$1305,1,6) = 'ALIOP'
 2022.                t$1261 = 1 + $I_L2019_34
 2022.                call _bounds_error(  _substr(t$1304,1,13), 2022,  _substr(t$1305,1,6), 1, 1, t$251, t$1261, t$1303 )
 2022.             endif
 2022.             call giveunit(  _substr(t$1302,1,16), nuco(1 + $I_L2019_34) )
 2023.             if ( ( ( 1 + $I_L2019_34 ) <= 0 .or. ( 1 + $I_L2019_34 ) > t$251 ) /= .false. ) then
 2023.                 _substr(t$1307,1,13) = 'PostLoop.f90'
 2023.                 _substr(t$1308,1,6) = 'CHROP'
 2023.                t$1275 = 1 + $I_L2019_34
 2023.                call _bounds_error(  _substr(t$1307,1,13), 2023,  _substr(t$1308,1,6), 1, 1, t$251, t$1275, t$1306 )
 2023.             endif
 2023.              _substr(t$1309,1,58) = //(  _substr(chrop(1 + $I_L2019_34),1,40), //( '(', //(  _substr(t$1302,1,16), ')' ) ) )
 2022.             $_IOitem_P2(0) = inv
 2022.             $_IOitem_P2(1) = 99
 2022.             _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$302,  _substr(t$301,1,14), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(aliop(1 + $I_L2019_34),1,4), 0x800600000000L ), _iotype( (&)$_IOitem_P2(:( 0, 1, 1 )), 0x2000200000000L ), _iotype(  _substr(t$1309,1,58), 0x800600000000L ) ) )
 2024.             $I_L2019_34 = 1 + $I_L2019_34
 2024.             if ( $I_L2019_34 >= nof ) exit
 2024.          enddo
 2024.       endif
 2025.       _fwrite( _clist( 0, 0, 3, 12, Null_Arg, Null_Arg, t$304,  _substr(t$303,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ENDVARS', 0x800600000000L ) ) )
 2026.       return
 2026.       end
 2026.       
    6.       
    6.       module postloop
    6.       end
    6.       
