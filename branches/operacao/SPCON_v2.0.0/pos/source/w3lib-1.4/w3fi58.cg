       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  w3fi58.f
       !        File                  :  w3fi58.cg
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
    1.       
    1.       subroutine w3fi58( ifield, npts, nwork, npfld, nbits, len, kmin )
    1.       $MR_npts_S10 = 0[loc( npts ),0]
   68.       0[loc( len ),0] = 0
   69.       0[loc( nbits ),0] = 0
   70.       if ( $MR_npts_S10 > 0 ) then
   74.          $kmax_S11 = 0[loc( ifield ),0]
   75.          0[loc( kmin ),0] = $kmax_S11
   76.          if ( -2 + $MR_npts_S10 >= 0 ) then
   76.             $I_L76_S12 = 0
   78.             $kmin_S14 = $kmax_S11
   79.             $LIS_E0 = ( -1 + $MR_npts_S10 )
   79.             if ( 8 <= $LIS_E0 ) then
   76.                $LIS_E3 = and( -8, $LIS_E0 + _rsh( _ash( $LIS_E0, 2 ), 61 ) )
   76.                do
   78.                   $LCS_ifield_0 = loc( ifield )
   78.                   $MR_ifield_S13 = 1[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S15 = min( $MR_ifield_S13, $kmin_S14 )
   77.                   $kmax_S16 = max( $kmax_S11, $MR_ifield_S13 )
   78.                   $MR_ifield_3 = 2[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S17 = min( $MR_ifield_3, $kmin_S15 )
   77.                   $kmax_S18 = max( $MR_ifield_3, $kmax_S16 )
   78.                   $MR_ifield_4 = 3[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S19 = min( $MR_ifield_4, $kmin_S17 )
   77.                   $kmax_S20 = max( $MR_ifield_4, $kmax_S18 )
   78.                   $MR_ifield_5 = 4[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S21 = min( $MR_ifield_5, $kmin_S19 )
   77.                   $kmax_S22 = max( $MR_ifield_5, $kmax_S20 )
   78.                   $MR_ifield_6 = 5[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S23 = min( $MR_ifield_6, $kmin_S21 )
   77.                   $kmax_S24 = max( $MR_ifield_6, $kmax_S22 )
   78.                   $MR_ifield_7 = 6[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S25 = min( $MR_ifield_7, $kmin_S23 )
   77.                   $kmax_S26 = max( $MR_ifield_7, $kmax_S24 )
   78.                   $MR_ifield_8 = 7[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S27 = min( $MR_ifield_8, $kmin_S25 )
   77.                   $kmax_S28 = max( $MR_ifield_8, $kmax_S26 )
   78.                   $MR_ifield_9 = 8[$LCS_ifield_0,$I_L76_S12]
   78.                   $kmin_S14 = min( $MR_ifield_9, $kmin_S27 )
   77.                   $kmax_S11 = max( $MR_ifield_9, $kmax_S28 )
   79.                   $I_L76_S12 = 8 + $I_L76_S12
   79.                   if ( $I_L76_S12 >= $LIS_E3 ) exit
   79.                enddo
   79.             endif
   76.             if ( $I_L76_S12 < $LIS_E0 ) then
   76.                do
   78.                   $MR_ifield_S29 = 1[loc( ifield ),$I_L76_S12]
   78.                   $kmin_S14 = min( $kmin_S14, $MR_ifield_S29 )
   77.                   $kmax_S11 = max( $kmax_S11, $MR_ifield_S29 )
   79.                   $I_L76_S12 = 1 + $I_L76_S12
   76.                   if ( $I_L76_S12 >= $LIS_E0 ) exit
   76.                enddo
   76.             endif
   78.             0[loc( kmin ),0] = $kmin_S14
   78.          endif
   84.          $MR_kmin_10 = 0[loc( kmin ),0]
   84.          if ( $MR_kmin_10 - $kmax_S11 /= 0 ) then
   93.             $MR_nbits_S30 = int( 1.0 + 1.442695 * log( 5.0e-1 + real( $kmax_S11 - $MR_kmin_10 ) ) )
   93.             0[loc( nbits ),0] = $MR_nbits_S30
   97.             $I_L97_S34 = 0
   97.             if ( $MR_npts_S10 >= 4 ) then
   97.                $TC_5 = and( -4, $MR_npts_S10 )
   97.                $LC_S31 = -$TC_5
   97.                $SI_S32 = 0
   98.                $LIS_S33[0:4:1] = _bcst( -$MR_kmin_10, 4 )
   97.                if ( $LC_S31 < -15 ) then
   97.                   do
   98.                      $LCS_1 = $SI_S32 + loc( ifield )
   98.                      $LCS_2 = $SI_S32 + loc( nwork )
   98.                      0[$LCS_2:4:1] = 0[$LCS_1:4:1] + $LIS_S33[0:4:1]
   98.                      4[$LCS_2:4:1] = 4[$LCS_1:4:1] + $LIS_S33[0:4:1]
   98.                      8[$LCS_2:4:1] = 8[$LCS_1:4:1] + $LIS_S33[0:4:1]
   98.                      12[$LCS_2:4:1] = 12[$LCS_1:4:1] + $LIS_S33[0:4:1]
   97.                      $SI_S32 = 64 + $SI_S32
   97.                      $LC_S31 = 16 + $LC_S31
   97.                      if ( $LC_S31 >= -15 ) exit
   97.                   enddo
   97.                endif
   97.                if ( $LC_S31 < 0 ) then
   97.                   do
   98.                      0[$SI_S32 + loc( nwork ):4:1] = $LIS_S33[0:4:1] + 0[$SI_S32 + loc( ifield ):4:1]
   97.                      $SI_S32 = 16 + $SI_S32
   97.                      $LC_S31 = 4 + $LC_S31
   97.                      if ( $LC_S31 >= 0 ) exit
   97.                   enddo
   97.                endif
   97.                $I_L97_S34 = $TC_5
   97.             endif
   97.             $LCS_MR_npts_3 = $MR_npts_S10
   97.             if ( $LCS_MR_npts_3 > $I_L97_S34 ) then
   98.                $LIS_E5 = loc( ifield )
   98.                $LIS_E4 = loc( nwork )
   98.                do
   98.                   0[$LIS_E4,$I_L97_S34] = 0[$LIS_E5,$I_L97_S34] - $MR_kmin_10
   99.                   $I_L97_S34 = 1 + $I_L97_S34
   97.                   if ( $I_L97_S34 >= $LCS_MR_npts_3 ) exit
   97.                enddo
   97.             endif
  103.             $PRT_P17 = -1 + $MR_npts_S10 * $MR_nbits_S30
  103.             $MR_len_14 = 1 + _ash( $PRT_P17 + _rsh( _ash( $PRT_P17, 2 ), 29 ), 3 )
  103.             0[loc( len ),0] = $MR_len_14
  104.             $Con_P18 = 0
  104.             $Con_P19 = 0
  104.             call sbytesc( substr[npfld,0:1], 0[loc( nwork ),0], $Con_P18, 0[loc( nbits ),0], $Con_P19, 0[loc( npts ),0] )
  108.             $MR_nbits_S35 = 0[loc( nbits ),0]
  108.             $MR_npts_S36 = 0[loc( npts ),0]
  108.             $LCS_4 = $MR_nbits_S35 * $MR_npts_S36
  108.             noff = $LCS_4
  109.             $LCS_5 = _lsh( $MR_len_14, 3 ) - $LCS_4
  109.             nzero = $LCS_5
  110.             if ( $LCS_5 > 0 ) then
  110.                call sbytec( substr[npfld,0:1], kzero, noff, nzero )
  110.             endif
  110.          endif
  110.       endif
  115.       return
  115.       end
  115.       
