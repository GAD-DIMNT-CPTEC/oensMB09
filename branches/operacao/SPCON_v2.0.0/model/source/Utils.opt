       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Utils.f90
       !        File                  :  Utils.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  407.       
  407.       subroutine createassoclegfunc( allpolynomials )
  412.       if ( allpolynomials ) then
  413.          epslon%header%a_contig = 1
  413.          epslon%dim_1%LB = 1
  413.          epslon%dim_1%EX = _zla( 0, mnextmax )
  413.          epslon%dim_1%SM = 1
  413.          $_allo_P0(0) = 0x1000000000001L
  413.          $_allo_P0(1) = loc( epslon )
  413.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  414.          legfuncs2f%header%a_contig = 1
  414.          legfuncs2f%dim_1%LB = 1
  414.          legfuncs2f%dim_1%EX = _zla( 0, jmaxhalf )
  414.          legfuncs2f%dim_1%SM = 1
  414.          legfuncs2f%dim_2%LB = 1
  414.          legfuncs2f%dim_2%EX = _zla( 0, mnextmax )
  414.          legfuncs2f%dim_2%SM = _zla( 0, jmaxhalf )
  414.          $_allo_P1(0) = 0x1000000000001L
  414.          $_allo_P1(1) = loc( legfuncs2f )
  414.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  414.       else
  416.          epslon%header%a_contig = 1
  416.          epslon%dim_1%LB = 1
  416.          epslon%dim_1%EX = _zla( 0, mymnextmax )
  416.          epslon%dim_1%SM = 1
  416.          $_allo_P2(0) = 0x1000000000001L
  416.          $_allo_P2(1) = loc( epslon )
  416.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  417.          legfuncs2f%header%a_contig = 1
  417.          legfuncs2f%dim_1%LB = 1
  417.          legfuncs2f%dim_1%EX = _zla( 0, jmaxhalf )
  417.          legfuncs2f%dim_1%SM = 1
  417.          legfuncs2f%dim_2%LB = 1
  417.          legfuncs2f%dim_2%EX = _zla( 0, mymnextmax )
  417.          legfuncs2f%dim_2%SM = _zla( 0, jmaxhalf )
  417.          $_allo_P3(0) = 0x1000000000001L
  417.          $_allo_P3(1) = loc( legfuncs2f )
  417.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  418.          auxpol%header%a_contig = 1
  418.          auxpol%dim_1%LB = 1
  418.          auxpol%dim_1%EX = _zla( 0, jmaxhalf )
  418.          auxpol%dim_1%SM = 1
  418.          auxpol%dim_2%LB = 1
  418.          auxpol%dim_2%EX = _zla( 0, mmax )
  418.          auxpol%dim_2%SM = _zla( 0, jmaxhalf )
  418.          $_allo_P4(0) = 0x1000000000001L
  418.          $_allo_P4(1) = loc( auxpol )
  418.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  418.       endif
  421.       square%header%a_contig = 1
  421.       square%dim_1%LB = 1
  421.       square%dim_1%EX = _zla( 0, nextmax )
  421.       square%dim_1%SM = 1
  421.       $_allo_P5(0) = 0x1000000000001L
  421.       $_allo_P5(1) = loc( square )
  421.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  422.       den%header%a_contig = 1
  422.       den%dim_1%LB = 1
  422.       den%dim_1%EX = _zla( 0, nextmax )
  422.       den%dim_1%SM = 1
  422.       $_allo_P6(0) = 0x1000000000001L
  422.       $_allo_P6(1) = loc( den )
  422.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  423.       if ( nextmax > 0 ) then
  423.          $I_L423_430 = 0
  423. !dir$ ivdep
  423.          do
  424.             (square%base_addr)(1 + $I_L423_430, 0) = real( $I_L423_430 * $I_L423_430, 8 )
  425.             (den%base_addr)(1 + $I_L423_430, 0) = 1.0/( -1.0 + 4.0 * real( $I_L423_430 * $I_L423_430, 8 ) )
  426.             $I_L423_430 = 1 + $I_L423_430
  423.             if ( $I_L423_430 >= nextmax ) exit
  423.          enddo
  423.       endif
  427.       if ( allpolynomials ) then
  428.          if ( mnextmax > 0 ) then
  430.             $SC_nextmap_I62 = nextmap%dim_1%EX
  430.             $SC_nextmap_I63 = nextmap%dim_1%LB
  429.             $SC_mextmap_I60 = mextmap%dim_1%EX
  429.             $SC_mextmap_I61 = mextmap%dim_1%LB
  431.             $SC_epslon_I64 = epslon%dim_1%EX
  428.             $I_L428_432 = 0
  428. !dir$ ivdep
  428.             do
  429.                $m_S3 = (mextmap%base_addr)(1 + $I_L428_432, 0)
  430.                $n_S2 = (nextmap%base_addr)(1 + $I_L428_432, 0)
  431.                (epslon%base_addr)(1 + $I_L428_432, 0) = _sqrt( ( (square%base_addr)($n_S2, 0) + -(square%base_addr)($m_S3, 0) ) * (den%base_addr)($n_S2, 0) )
  432.                $I_L428_432 = 1 + $I_L428_432
  428.                if ( $I_L428_432 >= mnextmax ) exit
  428.             enddo
  428.          endif
  428.       else if ( mymnextmax > 0 ) then
  436.          $SC_mynextmap_I69 = mynextmap%dim_1%EX
  436.          $SC_mynextmap_I70 = mynextmap%dim_1%LB
  435.          $SC_lm2m_I65 = lm2m%dim_1%EX
  435.          $SC_lm2m_I66 = lm2m%dim_1%LB
  435.          $SC_mymextmap_I67 = mymextmap%dim_1%EX
  435.          $SC_mymextmap_I68 = mymextmap%dim_1%LB
  437.          $SC_epslon_I64 = epslon%dim_1%EX
  434.          $I_L434_434 = 0
  434. !dir$ ivdep
  434.          do
  435.             $m_S6 = (lm2m%base_addr)((mymextmap%base_addr)(1 + $I_L434_434, 0), 0)
  436.             $n_S5 = (mynextmap%base_addr)(1 + $I_L434_434, 0)
  437.             (epslon%base_addr)(1 + $I_L434_434, 0) = _sqrt( ( (square%base_addr)($n_S5, 0) + -(square%base_addr)($m_S6, 0) ) * (den%base_addr)($n_S5, 0) )
  438.             $I_L434_434 = 1 + $I_L434_434
  434.             if ( $I_L434_434 >= mymnextmax ) exit
  434.          enddo
  434.       endif
  442.       if ( allpolynomials ) then
  443.          $F_A33 = jmaxhalf
  443.          if ( jmaxhalf > 0 ) then
  443.             $SCA_mnextmap_I37 = (mnextmap%base_addr)(1, 1, 0)
  443.             $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  443.             $I_L443_462 = 0
  443. !dir$ ivdep
  443.             do
  443.                (legfuncs2f%base_addr)(1 + $I_L443_462, $SCA_mnextmap_I37, 0) = 7.0710678118654757e-1
  443.                $I_L443_462 = 1 + $I_L443_462
  443.                if ( $I_L443_462 >= $F_A33 ) exit
  443.             enddo
  443.          endif
  444.          if ( -2 + mmax >= 0 ) then
  445.             if ( jmaxhalf > 0 ) then
  446.                $SC_singausscolat_I77 = singausscolat%dim_1%EX
  446.                $SC_singausscolat_I78 = singausscolat%dim_1%LB
  445.                $SC_mnextmap_I72 = mnextmap%dim_1%EX
  445.                $SC_mnextmap_I73 = mnextmap%dim_1%LB
  445.                $SC_mnextmap_I75 = mnextmap%dim_2%SM
  445.                $SC_mnextmap_I74 = mnextmap%dim_2%EX
  445.                $SC_mnextmap_I76 = mnextmap%dim_2%LB
  446.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  445.                $I_L445_490 = 0
  445.                do
  444.                   $I_L444_418 = 0
  444.                   if ( -5 + mmax >= 0 ) then
  444.                      $I_L444_486 = 0
  444. !dir$ blocking_size( 0, 0 )
  444.                      do
  445.                         $SCA_mnextmap#1_U0 = (mnextmap%base_addr)(1 + 4 * $I_L444_486, 1 + 4 * $I_L444_486, 0)
  445.                         $SCA_mnextmap#1_U4 = (mnextmap%base_addr)(2 + 4 * $I_L444_486, 2 + 4 * $I_L444_486, 0)
  445.                         $SCA_mnextmap#2_U5 = (mnextmap%base_addr)(3 + 4 * $I_L444_486, 3 + 4 * $I_L444_486, 0)
  445.                         $SCA_mnextmap#3_U6 = (mnextmap%base_addr)(4 + 4 * $I_L444_486, 4 + 4 * $I_L444_486, 0)
  445.                         $SCA_mnextmap#4_U7 = (mnextmap%base_addr)(5 + 4 * $I_L444_486, 5 + 4 * $I_L444_486, 0)
  445.                         $I_L445_466 = 0
  445. !dir$ ivdep
  445. !dir$ blocking_size( 256, 256 )
  445.                         do
  446.                            (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#1_U4, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 1 + 4 * $I_L444_486 ) ) ) ) * (singausscolat%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, 0) * (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#1_U0, 0)
  446.                            (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#2_U5, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 2 + 4 * $I_L444_486 ) ) ) ) * (singausscolat%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, 0) * (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#1_U4, 0)
  446.                            (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#3_U6, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 3 + 4 * $I_L444_486 ) ) ) ) * (singausscolat%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, 0) * (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#2_U5, 0)
  446.                            (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#4_U7, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 4 + 4 * $I_L444_486 ) ) ) ) * (singausscolat%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, 0) * (legfuncs2f%base_addr)($I_L445_466 + 256 * $I_L445_490 + 1, $SCA_mnextmap#3_U6, 0)
  445.                            $I_L445_466 = 1 + $I_L445_466
  445.                            if ( $I_L445_466 >= min( jmaxhalf, 256 + 256 * $I_L445_490 ) + -256 * $I_L445_490 ) exit
  445.                         enddo
  451.                         $I_L444_486 = 1 + $I_L444_486
  451.                         if ( $I_L444_486 >= _rsh( -1 + mmax, 2 ) ) exit
  451.                      enddo
  451.                      $I_L444_418 = and( 0xfffffffffffffffcUL, -1 + mmax )
  451.                   endif
  444.                   if ( $I_L444_418 < -1 + mmax ) then
  444.                      $I_L444_481 = 0
  444. !dir$ blocking_size( 0, 0 )
  444.                      do
  445.                         $SCA_mnextmap_I38 = (mnextmap%base_addr)($I_L444_418 + $I_L444_481 + 1, $I_L444_418 + $I_L444_481 + 1, 0)
  445.                         $SCA_mnextmap_I39 = (mnextmap%base_addr)($I_L444_418 + $I_L444_481 + 2, $I_L444_418 + $I_L444_481 + 2, 0)
  445.                         $I_L445_438 = 0
  445. !dir$ ivdep
  445. !dir$ blocking_size( 256, 256 )
  445.                         do
  446.                            (legfuncs2f%base_addr)($I_L445_438 + 256 * $I_L445_490 + 1, $SCA_mnextmap_I39, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( $I_L444_418 + $I_L444_481 + 1 ) ) ) ) * (singausscolat%base_addr)($I_L445_438 + 256 * $I_L445_490 + 1, 0) * (legfuncs2f%base_addr)($I_L445_438 + 256 * $I_L445_490 + 1, $SCA_mnextmap_I38, 0)
  445.                            $I_L445_438 = 1 + $I_L445_438
  445.                            if ( $I_L445_438 >= min( jmaxhalf, 256 + 256 * $I_L445_490 ) + -256 * $I_L445_490 ) exit
  445.                         enddo
  451.                         $I_L444_481 = 1 + $I_L444_481
  451.                         if ( $I_L444_481 >= mmax + -$I_L444_418 + -1 ) exit
  451.                      enddo
  451.                   endif
  445.                   $I_L445_490 = 1 + $I_L445_490
  450.                   if ( $I_L445_490 >= 1 + max( 0, -1 + _rsh( 255 + jmaxhalf, 8 ) ) ) exit
  450.                enddo
  450.             endif
  450.          endif
  453.          if ( mmax > 0 ) then
  452.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  454.             if ( jmaxhalf > 0 ) then
  455.                $SC_gausspoints_I79 = gausspoints%dim_1%EX
  455.                $SC_gausspoints_I80 = gausspoints%dim_1%LB
  454.                $SC_mnextmap_I72 = mnextmap%dim_1%EX
  454.                $SC_mnextmap_I73 = mnextmap%dim_1%LB
  454.                $SC_mnextmap_I75 = mnextmap%dim_2%SM
  454.                $SC_mnextmap_I74 = mnextmap%dim_2%EX
  454.                $SC_mnextmap_I76 = mnextmap%dim_2%LB
  455.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  453.                $I_L453_473 = 0
  453. !$omp do schedule(static)
  453. !dir$ blocking_size( 0, 0 )
  453.                do
  454.                   $SCA_mnextmap_I40 = (mnextmap%base_addr)(1 + $I_L453_473, 1 + $I_L453_473, 0)
  454.                   $SCA_mnextmap_I41 = (mnextmap%base_addr)(1 + $I_L453_473, 2 + $I_L453_473, 0)
  454.                   $I_L454_440 = 0
  454. !dir$ ivdep
  454. !dir$ blocking_size( 0, 0 )
  454.                   do
  455.                      (legfuncs2f%base_addr)(1 + $I_L454_440, $SCA_mnextmap_I41, 0) = _sqrt( 1.0 + 2.0 * real( 1 + $I_L453_473, 8 ) ) * (gausspoints%base_addr)(1 + $I_L454_440, 0) * (legfuncs2f%base_addr)(1 + $I_L454_440, $SCA_mnextmap_I40, 0)
  459.                      $I_L454_440 = 1 + $I_L454_440
  454.                      if ( $I_L454_440 >= jmaxhalf ) exit
  454.                   enddo
  460.                   $I_L453_473 = 1 + $I_L453_473
  459.                   if ( $I_L453_473 >= mmax ) exit
  459.                enddo
  459.             else
  453.                $I_L453_452 = 0
  453. !$omp do schedule(static)
  453.                do
  460.                   $I_L453_452 = 1 + $I_L453_452
  459.                   if ( $I_L453_452 >= mmax ) exit
  459.                enddo
  459.             endif
  461.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  461.          endif
  463.          if ( mmax > 0 ) then
  462.             $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  465.             if ( jmaxhalf > 0 ) then
  466.                $SC_gausspoints_I79 = gausspoints%dim_1%EX
  466.                $SC_gausspoints_I80 = gausspoints%dim_1%LB
  465.                $SC_mnextmap_I72 = mnextmap%dim_1%EX
  465.                $SC_mnextmap_I73 = mnextmap%dim_1%LB
  465.                $SC_mnextmap_I75 = mnextmap%dim_2%SM
  465.                $SC_mnextmap_I74 = mnextmap%dim_2%EX
  465.                $SC_mnextmap_I76 = mnextmap%dim_2%LB
  466.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  465.                $SC_epslon_I64 = epslon%dim_1%EX
  463.                $I_L463_496 = 0
  463. !$omp do schedule(static)
  463.                do
  464.                   if ( ( nextmax + -$I_L463_496 + -3 ) >= 0 ) then
  465.                      $I_L465_492 = 0
  465.                      do
  464.                         $I_L464_484 = 0
  464. !dir$ blocking_size( 0, 0 )
  464.                         do
  465.                            $SCA_mnextmap_I42 = (mnextmap%base_addr)(1 + $I_L463_496, $I_L464_484 + $I_L463_496 + 3, 0)
  465.                            $SCA_epslon_I43 = (epslon%base_addr)($SCA_mnextmap_I42, 0)
  465.                            $SCA_mnextmap_I44 = (mnextmap%base_addr)(1 + $I_L463_496, $I_L464_484 + $I_L463_496 + 1, 0)
  465.                            $SCA_mnextmap_I45 = (mnextmap%base_addr)(1 + $I_L463_496, $I_L464_484 + $I_L463_496 + 2, 0)
  465.                            $SCA_epslon_I46 = (epslon%base_addr)($SCA_mnextmap_I45, 0)
  465.                            $I_L465_442 = 0
  465. !dir$ ivdep
  465. !dir$ blocking_size( 256, 256 )
  465.                            do
  466.                               (legfuncs2f%base_addr)($I_L465_442 + 256 * $I_L465_492 + 1, $SCA_mnextmap_I42, 0) = ( ( (gausspoints%base_addr)($I_L465_442 + 256 * $I_L465_492 + 1, 0) * (legfuncs2f%base_addr)($I_L465_442 + 256 * $I_L465_492 + 1, $SCA_mnextmap_I45, 0) + -( $SCA_epslon_I46 * (legfuncs2f%base_addr)($I_L465_442 + 256 * $I_L465_492 + 1, $SCA_mnextmap_I44, 0) ) ) * 1.0/$SCA_epslon_I43 )
  465.                               $I_L465_442 = 1 + $I_L465_442
  465.                               if ( $I_L465_442 >= min( jmaxhalf, 256 + 256 * $I_L465_492 ) + -256 * $I_L465_492 ) exit
  465.                            enddo
  473.                            $I_L464_484 = 1 + $I_L464_484
  473.                            if ( $I_L464_484 >= nextmax + -$I_L463_496 + -2 ) exit
  473.                         enddo
  465.                         $I_L465_492 = 1 + $I_L465_492
  472.                         if ( $I_L465_492 >= 1 + max( 0, -1 + _rsh( 255 + jmaxhalf, 8 ) ) ) exit
  472.                      enddo
  472.                   endif
  474.                   $I_L463_496 = 1 + $I_L463_496
  473.                   if ( $I_L463_496 >= mmax ) exit
  473.                enddo
  473.             else
  463.                $I_L463_454 = 0
  463. !$omp do schedule(static)
  463.                do
  474.                   $I_L463_454 = 1 + $I_L463_454
  473.                   if ( $I_L463_454 >= mmax ) exit
  473.                enddo
  473.             endif
  475.             $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
  475.          endif
  476.          if ( mymnextmax > 0 ) then
  476.             $SC_mynextmap_I69 = mynextmap%dim_1%EX
  476.             $SC_mynextmap_I70 = mynextmap%dim_1%LB
  476.             $SC_lm2m_I65 = lm2m%dim_1%EX
  476.             $SC_lm2m_I66 = lm2m%dim_1%LB
  476.             $SC_mymextmap_I67 = mymextmap%dim_1%EX
  476.             $SC_mymextmap_I68 = mymextmap%dim_1%LB
  476.             $SC_epslon_I64 = epslon%dim_1%EX
  476.             $I_L476_444 = 0
  476. !dir$ ivdep
  476.             do
  476.                $m_S16 = (lm2m%base_addr)((mymextmap%base_addr)(1 + $I_L476_444, 0), 0)
  476.                $n_S15 = (mynextmap%base_addr)(1 + $I_L476_444, 0)
  476.                (epslon%base_addr)(1 + $I_L476_444, 0) = _sqrt( ( (square%base_addr)($n_S15, 0) + -(square%base_addr)($m_S16, 0) ) * (den%base_addr)($n_S15, 0) )
  476.                $I_L476_444 = 1 + $I_L476_444
  476.                if ( $I_L476_444 >= mymnextmax ) exit
  476.             enddo
  476.          endif
  476.       else
  478.          $F_A34 = jmaxhalf
  478.          if ( jmaxhalf > 0 ) then
  478.             $SC_auxpol_I84 = auxpol%dim_2%SM
  478.             $SC_auxpol_I83 = auxpol%dim_2%EX
  478.             $SC_auxpol_I85 = auxpol%dim_2%LB
  478.             $SC_auxpol_I81 = auxpol%dim_1%EX
  478.             $SC_auxpol_I82 = auxpol%dim_1%LB
  478.             $I_L478_464 = 0
  478. !dir$ ivdep
  478.             do
  478.                (auxpol%base_addr)(1 + $I_L478_464, 1, 0) = 7.0710678118654757e-1
  478.                $I_L478_464 = 1 + $I_L478_464
  478.                if ( $I_L478_464 >= $F_A34 ) exit
  478.             enddo
  478.          endif
  479.          if ( -2 + mmax >= 0 ) then
  480.             if ( jmaxhalf > 0 ) then
  481.                $SC_singausscolat_I77 = singausscolat%dim_1%EX
  481.                $SC_singausscolat_I78 = singausscolat%dim_1%LB
  481.                $SC_auxpol_I84 = auxpol%dim_2%SM
  481.                $SC_auxpol_I83 = auxpol%dim_2%EX
  481.                $SC_auxpol_I85 = auxpol%dim_2%LB
  481.                $SC_auxpol_I81 = auxpol%dim_1%EX
  481.                $SC_auxpol_I82 = auxpol%dim_1%LB
  479.                $I_L479_408 = 0
  479.                if ( -5 + mmax >= 0 ) then
  479.                   $I_L479_488 = 0
  479. !dir$ blocking_size( 0, 0 )
  479.                   do
  480.                      $I_L480_468 = 0
  480. !dir$ ivdep
  480. !dir$ blocking_size( 0, 0 )
  480.                      do
  481.                         (auxpol%base_addr)(1 + $I_L480_468, 2 + 4 * $I_L479_488, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 1 + 4 * $I_L479_488 ) ) ) ) * (singausscolat%base_addr)(1 + $I_L480_468, 0) * (auxpol%base_addr)(1 + $I_L480_468, 1 + 4 * $I_L479_488, 0)
  481.                         (auxpol%base_addr)(1 + $I_L480_468, 3 + 4 * $I_L479_488, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 2 + 4 * $I_L479_488 ) ) ) ) * (singausscolat%base_addr)(1 + $I_L480_468, 0) * (auxpol%base_addr)(1 + $I_L480_468, 2 + 4 * $I_L479_488, 0)
  481.                         (auxpol%base_addr)(1 + $I_L480_468, 4 + 4 * $I_L479_488, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 3 + 4 * $I_L479_488 ) ) ) ) * (singausscolat%base_addr)(1 + $I_L480_468, 0) * (auxpol%base_addr)(1 + $I_L480_468, 3 + 4 * $I_L479_488, 0)
  481.                         (auxpol%base_addr)(1 + $I_L480_468, 5 + 4 * $I_L479_488, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( 4 + 4 * $I_L479_488 ) ) ) ) * (singausscolat%base_addr)(1 + $I_L480_468, 0) * (auxpol%base_addr)(1 + $I_L480_468, 4 + 4 * $I_L479_488, 0)
  485.                         $I_L480_468 = 1 + $I_L480_468
  480.                         if ( $I_L480_468 >= jmaxhalf ) exit
  480.                      enddo
  486.                      $I_L479_488 = 1 + $I_L479_488
  485.                      if ( $I_L479_488 >= _rsh( -1 + mmax, 2 ) ) exit
  485.                   enddo
  486.                   $I_L479_408 = and( 0xfffffffffffffffcUL, -1 + mmax )
  486.                endif
  479.                if ( $I_L479_408 < -1 + mmax ) then
  479.                   $I_L479_470 = 0
  479. !dir$ blocking_size( 0, 0 )
  479.                   do
  480.                      $I_L480_436 = 0
  480. !dir$ ivdep
  480. !dir$ blocking_size( 0, 0 )
  480.                      do
  481.                         (auxpol%base_addr)(1 + $I_L480_436, $I_L479_408 + $I_L479_470 + 2, 0) = _sqrt( 1.0 + ( 5.0e-1 * 1.0/( ( $I_L479_408 + $I_L479_470 + 1 ) ) ) ) * (singausscolat%base_addr)(1 + $I_L480_436, 0) * (auxpol%base_addr)(1 + $I_L480_436, $I_L479_408 + $I_L479_470 + 1, 0)
  485.                         $I_L480_436 = 1 + $I_L480_436
  480.                         if ( $I_L480_436 >= jmaxhalf ) exit
  480.                      enddo
  486.                      $I_L479_470 = 1 + $I_L479_470
  485.                      if ( $I_L479_470 >= mmax + -$I_L479_408 + -1 ) exit
  485.                   enddo
  485.                endif
  485.             endif
  485.          endif
  488.          if ( mymmax > 0 ) then
  487.             $snt_T4 = _parallel( 5, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  490.             if ( jmaxhalf > 0 ) then
  490.                $SC_mymnextmap_I86 = mymnextmap%dim_1%EX
  490.                $SC_mymnextmap_I87 = mymnextmap%dim_1%LB
  490.                $SC_mymnextmap_I89 = mymnextmap%dim_2%SM
  490.                $SC_mymnextmap_I88 = mymnextmap%dim_2%EX
  490.                $SC_mymnextmap_I90 = mymnextmap%dim_2%LB
  489.                $SC_lm2m_I65 = lm2m%dim_1%EX
  489.                $SC_lm2m_I66 = lm2m%dim_1%LB
  491.                $SC_auxpol_I84 = auxpol%dim_2%SM
  491.                $SC_auxpol_I83 = auxpol%dim_2%EX
  491.                $SC_auxpol_I85 = auxpol%dim_2%LB
  491.                $SC_auxpol_I81 = auxpol%dim_1%EX
  491.                $SC_auxpol_I82 = auxpol%dim_1%LB
  491.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  488.                $I_L488_475 = 0
  488. !$omp do schedule(static)
  488.                do
  489.                   $$_mglobalp = (lm2m%base_addr)(1 + $I_L488_475, 0)
  490.                   $SCA_mymnextmap_I52 = (mymnextmap%base_addr)(1 + $I_L488_475, $$_mglobalp, 0)
  490.                   $I_L490_446 = 0
  490. !dir$ ivdep
  490.                   do
  491.                      (legfuncs2f%base_addr)(1 + $I_L490_446, $SCA_mymnextmap_I52, 0) = (auxpol%base_addr)(1 + $I_L490_446, $$_mglobalp, 0)
  493.                      $I_L490_446 = 1 + $I_L490_446
  490.                      if ( $I_L490_446 >= jmaxhalf ) exit
  490.                   enddo
  494.                   $I_L488_475 = 1 + $I_L488_475
  493.                   if ( $I_L488_475 >= mymmax ) exit
  493.                enddo
  493.             else
  488.                $I_L488_456 = 0
  488. !$omp do schedule(static)
  488.                do
  494.                   $I_L488_456 = 1 + $I_L488_456
  493.                   if ( $I_L488_456 >= mymmax ) exit
  493.                enddo
  493.             endif
  495.             $snt_T4 = _endparallel( 5, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T4 )
  495.          endif
  497.          if ( mymmax > 0 ) then
  496.             $snt_T6 = _parallel( 7, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  499.             if ( jmaxhalf > 0 ) then
  499.                $SC_mymnextmap_I86 = mymnextmap%dim_1%EX
  499.                $SC_mymnextmap_I87 = mymnextmap%dim_1%LB
  499.                $SC_mymnextmap_I89 = mymnextmap%dim_2%SM
  499.                $SC_mymnextmap_I88 = mymnextmap%dim_2%EX
  499.                $SC_mymnextmap_I90 = mymnextmap%dim_2%LB
  500.                $SC_gausspoints_I79 = gausspoints%dim_1%EX
  500.                $SC_gausspoints_I80 = gausspoints%dim_1%LB
  498.                $SC_lm2m_I65 = lm2m%dim_1%EX
  498.                $SC_lm2m_I66 = lm2m%dim_1%LB
  500.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  497.                $I_L497_477 = 0
  497. !$omp do schedule(static)
  497. !dir$ blocking_size( 0, 0 )
  497.                do
  498.                   $$_mglobalp = (lm2m%base_addr)(1 + $I_L497_477, 0)
  499.                   $SCA_mymnextmap_I53 = (mymnextmap%base_addr)(1 + $I_L497_477, $$_mglobalp, 0)
  499.                   $SCA_mymnextmap_I54 = (mymnextmap%base_addr)(1 + $I_L497_477, 1 + $$_mglobalp, 0)
  499.                   $I_L499_448 = 0
  499. !dir$ ivdep
  499. !dir$ blocking_size( 0, 0 )
  499.                   do
  500.                      (legfuncs2f%base_addr)(1 + $I_L499_448, $SCA_mymnextmap_I54, 0) = _sqrt( 1.0 + 2.0 * real( $$_mglobalp, 8 ) ) * (gausspoints%base_addr)(1 + $I_L499_448, 0) * (legfuncs2f%base_addr)(1 + $I_L499_448, $SCA_mymnextmap_I53, 0)
  504.                      $I_L499_448 = 1 + $I_L499_448
  499.                      if ( $I_L499_448 >= jmaxhalf ) exit
  499.                   enddo
  505.                   $I_L497_477 = 1 + $I_L497_477
  504.                   if ( $I_L497_477 >= mymmax ) exit
  504.                enddo
  504.             else
  497.                $I_L497_458 = 0
  497. !$omp do schedule(static)
  497.                do
  505.                   $I_L497_458 = 1 + $I_L497_458
  504.                   if ( $I_L497_458 >= mymmax ) exit
  504.                enddo
  504.             endif
  506.             $snt_T6 = _endparallel( 7, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T6 )
  506.          endif
  508.          if ( mymmax > 0 ) then
  507.             $snt_T8 = _parallel( 9, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  511.             if ( jmaxhalf > 0 ) then
  511.                $SC_mymnextmap_I86 = mymnextmap%dim_1%EX
  511.                $SC_mymnextmap_I87 = mymnextmap%dim_1%LB
  511.                $SC_mymnextmap_I89 = mymnextmap%dim_2%SM
  511.                $SC_mymnextmap_I88 = mymnextmap%dim_2%EX
  511.                $SC_mymnextmap_I90 = mymnextmap%dim_2%LB
  512.                $SC_gausspoints_I79 = gausspoints%dim_1%EX
  512.                $SC_gausspoints_I80 = gausspoints%dim_1%LB
  509.                $SC_lm2m_I65 = lm2m%dim_1%EX
  509.                $SC_lm2m_I66 = lm2m%dim_1%LB
  512.                $SC_legfuncs2f_I71 = legfuncs2f%dim_2%EX
  511.                $SC_epslon_I64 = epslon%dim_1%EX
  508.                $I_L508_494 = 0
  508. !$omp do schedule(static)
  508.                do
  509.                   $$_mglobalp = (lm2m%base_addr)(1 + $I_L508_494, 0)
  510.                   if ( nextmax + -$$_mglobalp + -2 >= 0 ) then
  510.                      $I_L510_479 = 0
  510.                      do
  511.                         $SCA_mymnextmap_I55 = (mymnextmap%base_addr)(1 + $I_L508_494, $$_mglobalp + $I_L510_479 + 2, 0)
  511.                         $SCA_epslon_I56 = (epslon%base_addr)($SCA_mymnextmap_I55, 0)
  511.                         $SCA_mymnextmap_I57 = (mymnextmap%base_addr)(1 + $I_L508_494, $$_mglobalp + $I_L510_479, 0)
  511.                         $SCA_mymnextmap_I58 = (mymnextmap%base_addr)(1 + $I_L508_494, $$_mglobalp + $I_L510_479 + 1, 0)
  511.                         $SCA_epslon_I59 = (epslon%base_addr)($SCA_mymnextmap_I58, 0)
  511.                         $I_L511_450 = 0
  511. !dir$ ivdep
  511.                         do
  512.                            (legfuncs2f%base_addr)(1 + $I_L511_450, $SCA_mymnextmap_I55, 0) = ( ( (gausspoints%base_addr)(1 + $I_L511_450, 0) * (legfuncs2f%base_addr)(1 + $I_L511_450, $SCA_mymnextmap_I58, 0) + -( $SCA_epslon_I59 * (legfuncs2f%base_addr)(1 + $I_L511_450, $SCA_mymnextmap_I57, 0) ) ) * 1.0/$SCA_epslon_I56 )
  518.                            $I_L511_450 = 1 + $I_L511_450
  511.                            if ( $I_L511_450 >= jmaxhalf ) exit
  511.                         enddo
  519.                         $I_L510_479 = 1 + $I_L510_479
  518.                         if ( $I_L510_479 >= nextmax + -$$_mglobalp + -1 ) exit
  518.                      enddo
  518.                   endif
  520.                   $I_L508_494 = 1 + $I_L508_494
  519.                   if ( $I_L508_494 >= mymmax ) exit
  519.                enddo
  519.             else
  508.                $I_L508_460 = 0
  508. !$omp do schedule(static)
  508.                do
  520.                   $I_L508_460 = 1 + $I_L508_460
  519.                   if ( $I_L508_460 >= mymmax ) exit
  519.                enddo
  519.             endif
  521.             $snt_T8 = _endparallel( 9, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T8 )
  521.          endif
  521.       endif
  523.       return
  523.       end
  523.       
  526.       
  526.       subroutine reset_epslon_to_local
  532.       if ( mymnextmax > 0 ) then
  532.          $I_L532_6 = 0
  532. !dir$ ivdep
  532.          do
  533.             $m_S2 = (lm2m%base_addr)((mymextmap%base_addr)(1 + $I_L532_6, 0), 0)
  534.             $n_S1 = (mynextmap%base_addr)(1 + $I_L532_6, 0)
  535.             (epslon%base_addr)(1 + $I_L532_6, 0) = _sqrt( ( (square%base_addr)($n_S1, 0) + -(square%base_addr)($m_S2, 0) ) * (den%base_addr)($n_S1, 0) )
  536.             $I_L532_6 = 1 + $I_L532_6
  532.             if ( $I_L532_6 >= mymnextmax ) exit
  532.          enddo
  532.       endif
  538.       return
  538.       end
  538.       
  545.       
  545.       subroutine destroyassoclegfunc
  547.       $_allo_P0(0) = 0x2000000000001L
  547.       $_allo_P0(1) = loc( epslon )
  547.       $_allo_P0(2) = loc( legfuncs2f )
  547.       call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  547.       legfuncs2f%header%assoc = 0
  547.       epslon%header%assoc = 0
  548.       $_allo_P1(0) = 0x2000000000001L
  548.       $_allo_P1(1) = loc( square )
  548.       $_allo_P1(2) = loc( den )
  548.       call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  548.       den%header%assoc = 0
  548.       square%header%assoc = 0
  549.       return
  549.       end
  549.       
  557.       
  557.       subroutine dumpassoclegfunc
  559.       $Unit_temp_O0 = nfprt
  559.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$7,  _substr(t$6,1,28), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(DumpAssocLegFunc)**', 0x800600000000L ) ) )
  560.        _substr(t$728,1,6) = 'Epslon'
  560.       $ipa_S0 = (boolean[32])( epslon%dim_1%LB )
  560.       t$269 = 6
  560.       epslon%dim_1%LB = 1
  560.       n1 = epslon%dim_1%EX
  560.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$10,  _substr(t$9,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  560.       t$737 = int( _alloc( 6 ), 8 )
  560.       _f90_adjustl(  _substr(t$736,1,6),  _substr(t$728,1,6) )
  560.       t$739 = _ltrim(  _substr(t$736,1,6) )
  560.       t$741 = int( _alloc( _zla( 0, t$739 ) ), 8 )
  560.        _substr(t$740,1,_zla( 0, t$739 )) =  _substr(t$736,1,_ltrim(  _substr(t$736,1,6) ))
  560.       _f90_adjustl(  _substr(t$738,1,10),  _substr(c1,1,10) )
  560.       t$742 = _ltrim(  _substr(t$738,1,10) )
  560.       t$744 = int( _alloc( _zla( 0, t$742 ) ), 8 )
  560.        _substr(t$743,1,_zla( 0, t$742 )) =  _substr(t$738,1,_ltrim(  _substr(t$738,1,10) ))
  560.       $Unit_temp_O1 = nfprt
  560.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$12,  _substr(t$11,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$740,1,_zla( 0, t$739 )), 0x800600000000L ), _iotype(  _substr(t$743,1,_zla( 0, t$742 )), 0x800600000000L ) ) )
  560.       _free( t$744 )
  560.       _free( t$741 )
  560.       _free( t$737 )
  560.       i1h = min( 10, epslon%dim_1%EX )
  560.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$14,  _substr(t$13,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1h, 0x2000200000000L ) ) )
  560.       $Unit_temp_O2 = nfprt
  560.       _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  560.       t$746 = int( _alloc( 6 ), 8 )
  560.       _f90_adjustl(  _substr(t$745,1,6),  _substr(t$728,1,6) )
  560.       t$748 = _ltrim(  _substr(t$745,1,6) )
  560.       t$750 = int( _alloc( _zla( 0, t$748 ) ), 8 )
  560.        _substr(t$749,1,_zla( 0, t$748 )) =  _substr(t$745,1,_ltrim(  _substr(t$745,1,6) ))
  560.       _f90_adjustl(  _substr(t$747,1,10),  _substr(c1,1,10) )
  560.       t$751 = _ltrim(  _substr(t$747,1,10) )
  560.       t$753 = int( _alloc( _zla( 0, t$751 ) ), 8 )
  560.        _substr(t$752,1,_zla( 0, t$751 )) =  _substr(t$747,1,_ltrim(  _substr(t$747,1,10) ))
  560.       $Unit_temp_O3 = nfprt
  560.       _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$749,1,_zla( 0, t$748 )), 0x800600000000L ), _iotype(  _substr(t$752,1,_zla( 0, t$751 )), 0x800600000000L ) ) )
  560.       _free( t$753 )
  560.       _free( t$750 )
  560.       _free( t$746 )
  560.       if ( epslon%dim_1%EX > 0 ) then
  560.          $I_L560_22 = 0
  560.          do
  560.             if ( ( 1 + $I_L560_22 ) <= 0 .or. ( 1 + $I_L560_22 ) > epslon%dim_1%EX ) then
  560.                 _substr(t$758,1,10) = 'Utils.f90'
  560.                 _substr(t$759,1,4) = 'M'
  560.                t$760 = epslon%dim_1%EX
  560.                t$761 = 1 + $I_L560_22
  560.                call _bounds_error(  _substr(t$758,1,10), 612,  _substr(t$759,1,2), 1, 1, t$760, t$761, t$757 )
  560.             endif
  560.             $Unit_temp_O4 = nfprt
  560.             $IOitem_O5 = (epslon%base_addr)(1 + $I_L560_22, 0)
  560.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x804060300000000L ) ) )
  560.             $I_L560_22 = 1 + $I_L560_22
  560.             if ( $I_L560_22 >= 1 + max( 0, -1 + min( 10, n1 ) ) ) exit
  560.          enddo
  560.       endif
  560.       $Unit_temp_O6 = nfprt
  560.       _fwrite( _clist( 0, 0, 1, $Unit_temp_O6, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  560.       epslon%dim_1%LB = int( $ipa_S0, 8 )
  561.        _substr(t$730,1,10) = 'LegFuncS2F'
  561.       $ipa_S3 = (boolean[32])( legfuncs2f%dim_1%LB )
  561.       $ipa_S2 = (boolean[32])( legfuncs2f%dim_2%LB )
  561.       t$270 = 10
  561.       legfuncs2f%dim_1%LB = 1
  561.       legfuncs2f%dim_2%LB = 1
  561.       n1 = legfuncs2f%dim_1%EX
  561.       n2 = legfuncs2f%dim_2%EX
  561.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$18,  _substr(t$17,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  561.       _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$20,  _substr(t$19,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n2, 0x2000200000000L ) ) )
  561.       t$763 = int( _alloc( 10 ), 8 )
  561.       _f90_adjustl(  _substr(t$762,1,10),  _substr(t$730,1,10) )
  561.       t$766 = _ltrim(  _substr(t$762,1,10) )
  561.       t$768 = int( _alloc( _zla( 0, t$766 ) ), 8 )
  561.        _substr(t$767,1,_zla( 0, t$766 )) =  _substr(t$762,1,_ltrim(  _substr(t$762,1,10) ))
  561.       _f90_adjustl(  _substr(t$764,1,10),  _substr(c1,1,10) )
  561.       t$769 = _ltrim(  _substr(t$764,1,10) )
  561.       t$771 = int( _alloc( _zla( 0, t$769 ) ), 8 )
  561.        _substr(t$770,1,_zla( 0, t$769 )) =  _substr(t$764,1,_ltrim(  _substr(t$764,1,10) ))
  561.       _f90_adjustl(  _substr(t$765,1,10),  _substr(c2,1,10) )
  561.       t$772 = _ltrim(  _substr(t$765,1,10) )
  561.       t$774 = int( _alloc( _zla( 0, t$772 ) ), 8 )
  561.        _substr(t$773,1,_zla( 0, t$772 )) =  _substr(t$765,1,_ltrim(  _substr(t$765,1,10) ))
  561.       $Unit_temp_O7 = nfprt
  561.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,35), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$767,1,_zla( 0, t$766 )), 0x800600000000L ), _iotype(  _substr(t$770,1,_zla( 0, t$769 )), 0x800600000000L ), _iotype(  _substr(t$773,1,_zla( 0, t$772 )), 0x800600000000L ) ) )
  561.       _free( t$774 )
  561.       _free( t$771 )
  561.       _free( t$768 )
  561.       _free( t$763 )
  561.       $t_S1 = legfuncs2f%dim_1%EX
  561.       if ( legfuncs2f%dim_1%EX > 0 ) then
  561.          if ( legfuncs2f%dim_2%EX > 0 ) then
  561.             $I_L561_28 = 0
  561.             do
  561.                i1 = ( 1 + $I_L561_28 )
  561.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$24,  _substr(t$23,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  561.                i2h = min( 10, n2 )
  561.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$26,  _substr(t$25,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  561.                $Unit_temp_O8 = nfprt
  561.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O8, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  561.                t$779 = int( _alloc( 10 ), 8 )
  561.                _f90_adjustl(  _substr(t$778,1,10),  _substr(t$730,1,10) )
  561.                t$782 = _ltrim(  _substr(t$778,1,10) )
  561.                t$784 = int( _alloc( _zla( 0, t$782 ) ), 8 )
  561.                 _substr(t$783,1,_zla( 0, t$782 )) =  _substr(t$778,1,_ltrim(  _substr(t$778,1,10) ))
  561.                _f90_adjustl(  _substr(t$780,1,10),  _substr(c1,1,10) )
  561.                t$785 = _ltrim(  _substr(t$780,1,10) )
  561.                t$787 = int( _alloc( _zla( 0, t$785 ) ), 8 )
  561.                 _substr(t$786,1,_zla( 0, t$785 )) =  _substr(t$780,1,_ltrim(  _substr(t$780,1,10) ))
  561.                _f90_adjustl(  _substr(t$781,1,10),  _substr(c2,1,10) )
  561.                t$788 = _ltrim(  _substr(t$781,1,10) )
  561.                t$790 = int( _alloc( _zla( 0, t$788 ) ), 8 )
  561.                 _substr(t$789,1,_zla( 0, t$788 )) =  _substr(t$781,1,_ltrim(  _substr(t$781,1,10) ))
  561.                $Unit_temp_O9 = nfprt
  561.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O9, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$783,1,_zla( 0, t$782 )), 0x800600000000L ), _iotype(  _substr(t$786,1,_zla( 0, t$785 )), 0x800600000000L ), _iotype(  _substr(t$789,1,_zla( 0, t$788 )), 0x800600000000L ) ) )
  561.                _free( t$790 )
  561.                _free( t$787 )
  561.                _free( t$784 )
  561.                _free( t$779 )
  561.                $I_L561_24 = 0
  561.                do
  561.                   if ( ( 1 + $I_L561_28 ) <= 0 .or. ( 1 + $I_L561_28 ) > legfuncs2f%dim_1%EX ) then
  561.                       _substr(t$795,1,10) = 'Utils.f90'
  561.                       _substr(t$796,1,4) = 'M'
  561.                      t$797 = legfuncs2f%dim_1%EX
  561.                      t$798 = 1 + $I_L561_28
  561.                      call _bounds_error(  _substr(t$795,1,10), 632,  _substr(t$796,1,2), 1, 1, t$797, t$798, t$794 )
  561.                   endif
  561.                   if ( ( 1 + $I_L561_24 ) <= 0 .or. ( 1 + $I_L561_24 ) > legfuncs2f%dim_2%EX ) then
  561.                       _substr(t$800,1,10) = 'Utils.f90'
  561.                       _substr(t$801,1,4) = 'M'
  561.                      t$802 = legfuncs2f%dim_2%EX
  561.                      t$803 = 1 + $I_L561_24
  561.                      call _bounds_error(  _substr(t$800,1,10), 632,  _substr(t$801,1,2), 2, 1, t$802, t$803, t$799 )
  561.                   endif
  561.                   $Unit_temp_O10 = nfprt
  561.                   $IOitem_O11 = (legfuncs2f%base_addr)(1 + $I_L561_28, 1 + $I_L561_24, 0)
  561.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O10, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O11, 0x804060300000000L ) ) )
  561.                   $I_L561_24 = 1 + $I_L561_24
  561.                   if ( $I_L561_24 >= ( min( 10, n2 ) ) ) exit
  561.                enddo
  561.                $Unit_temp_O12 = nfprt
  561.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O12, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  561.                $I_L561_28 = 1 + $I_L561_28
  561.                if ( $I_L561_28 >= $t_S1 ) exit
  561.             enddo
  561.          else
  561.             $SC_legfuncs2f_I0 = legfuncs2f%dim_2%EX
  561.             $SC_legfuncs2f_I1 = legfuncs2f%dim_1%EX
  561.             $I_L561_26 = 0
  561.             do
  561.                i1 = ( 1 + $I_L561_26 )
  561.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$24,  _substr(t$23,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  561.                i2h = min( 10, $SC_legfuncs2f_I0 )
  561.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$26,  _substr(t$25,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  561.                $Unit_temp_O8 = nfprt
  561.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O8, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  561.                t$779 = int( _alloc( 10 ), 8 )
  561.                _f90_adjustl(  _substr(t$778,1,10),  _substr(t$730,1,10) )
  561.                t$782 = _ltrim(  _substr(t$778,1,10) )
  561.                t$784 = int( _alloc( _zla( 0, t$782 ) ), 8 )
  561.                 _substr(t$783,1,_zla( 0, t$782 )) =  _substr(t$778,1,_ltrim(  _substr(t$778,1,10) ))
  561.                _f90_adjustl(  _substr(t$780,1,10),  _substr(c1,1,10) )
  561.                t$785 = _ltrim(  _substr(t$780,1,10) )
  561.                t$787 = int( _alloc( _zla( 0, t$785 ) ), 8 )
  561.                 _substr(t$786,1,_zla( 0, t$785 )) =  _substr(t$780,1,_ltrim(  _substr(t$780,1,10) ))
  561.                _f90_adjustl(  _substr(t$781,1,10),  _substr(c2,1,10) )
  561.                t$788 = _ltrim(  _substr(t$781,1,10) )
  561.                t$790 = int( _alloc( _zla( 0, t$788 ) ), 8 )
  561.                 _substr(t$789,1,_zla( 0, t$788 )) =  _substr(t$781,1,_ltrim(  _substr(t$781,1,10) ))
  561.                $Unit_temp_O9 = nfprt
  561.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O9, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$783,1,_zla( 0, t$782 )), 0x800600000000L ), _iotype(  _substr(t$786,1,_zla( 0, t$785 )), 0x800600000000L ), _iotype(  _substr(t$789,1,_zla( 0, t$788 )), 0x800600000000L ) ) )
  561.                _free( t$790 )
  561.                _free( t$787 )
  561.                _free( t$784 )
  561.                _free( t$779 )
  561.                $Unit_temp_O12 = nfprt
  561.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O12, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  561.                $I_L561_26 = 1 + $I_L561_26
  561.                if ( $I_L561_26 >= $SC_legfuncs2f_I1 ) exit
  561.             enddo
  561.          endif
  561.       endif
  561.       legfuncs2f%dim_2%LB = int( $ipa_S2, 8 )
  561.       legfuncs2f%dim_1%LB = int( $ipa_S3, 8 )
  562.       return
  562.       end
  562.       
  581.       
  581.       integer
  581.       function nobankconflicts( s )
  589.       nobankconflicts = cvmg( s, 1 + s, or( mod( s, 2 ) /= 0, s == 0 ) )
  589.       return
  589.       end
  589.       
  590.       
  590.       subroutine nobankconflictv( p, s )
  590.       s%dim_1%LB = 1
  590.       t$8 = _zla( 0, s%dim_1%EX )
  592.       t$268 = _zla( 0, s%dim_1%EX )
  593.       t$732 = s%dim_1%EX
  593.       t$735 = int( _alloc( 4 * _zla( 0, s%dim_1%EX ) ), 8 )
  593.       $F_A33 = s%dim_1%EX
  593.       if ( s%dim_1%EX > 0 ) then
  593.          $SC_s_I4 = s%dim_1%SM
  593.          $I_L593_6 = 0
  593. !dir$ ivdep
  593.          do
  593.             t$734(1 + $I_L593_6) = mod( (s%base_addr)(1 + $I_L593_6, 0), 2 ) == 0 .and. (s%base_addr)(1 + $I_L593_6, 0) /= 0
  593.             $I_L593_6 = 1 + $I_L593_6
  593.             if ( $I_L593_6 >= $F_A33 ) exit
  593.          enddo
  593.       endif
  594.       $F_A34 = _zla( 0, s%dim_1%EX )
  594.       if ( s%dim_1%EX > 0 ) then
  594.          $SC_s_I5 = s%dim_1%EX
  594.          $I_L594_8 = 0
  594. !dir$ ivdep
  594.          do
  594.             if ( t$734(1 + $I_L594_8) ) then
  594.                p(1 + $I_L594_8) = 1 + (s%base_addr)(1 + $I_L594_8, 0)
  594.             endif
  594.             $I_L594_8 = 1 + $I_L594_8
  594.             if ( $I_L594_8 >= $F_A34 ) exit
  594.          enddo
  594.       endif
  596.       $F_A35 = _zla( 0, s%dim_1%EX )
  596.       if ( s%dim_1%EX > 0 ) then
  596.          $SC_s_I5 = s%dim_1%EX
  596.          $I_L596_10 = 0
  596. !dir$ ivdep
  596.          do
  596.             if ( t$734(1 + $I_L596_10) == 0 ) then
  596.                p(1 + $I_L596_10) = (s%base_addr)(1 + $I_L596_10, 0)
  596.             endif
  596.             $I_L596_10 = 1 + $I_L596_10
  596.             if ( $I_L596_10 >= $F_A35 ) exit
  596.          enddo
  596.       endif
  593.       _free( t$735 )
  598.       return
  598.       end
  598.       
  599.       
  599.       subroutine dumpmatrixreal1d( name, m )
  599.       t$269 = _len( name )
  599.       m%dim_1%LB = 1
  604.       n1 = m%dim_1%EX
  605.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$10,  _substr(t$9,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  607.       t$737 = int( _alloc( _len( name ) ), 8 )
  607.       _f90_adjustl(  _substr(t$736,1,_len( name )),  _substr(name,1,_len( name )) )
  606.       t$739 = _ltrim(  _substr(t$736,1,_len( name )) )
  607.       t$741 = int( _alloc( _zla( 0, t$739 ) ), 8 )
  607.        _substr(t$740,1,_zla( 0, t$739 )) =  _substr(t$736,1,_ltrim(  _substr(t$736,1,_len( name )) ))
  607.       _f90_adjustl(  _substr(t$738,1,10),  _substr(c1,1,10) )
  606.       t$742 = _ltrim(  _substr(t$738,1,10) )
  607.       t$744 = int( _alloc( _zla( 0, t$742 ) ), 8 )
  607.        _substr(t$743,1,_zla( 0, t$742 )) =  _substr(t$738,1,_ltrim(  _substr(t$738,1,10) ))
  606.       $Unit_temp_O0 = nfprt
  606.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$12,  _substr(t$11,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$740,1,_zla( 0, t$739 )), 0x800600000000L ), _iotype(  _substr(t$743,1,_zla( 0, t$742 )), 0x800600000000L ) ) )
  607.       _free( t$744 )
  607.       _free( t$741 )
  607.       _free( t$737 )
  608.       i1h = min( 10, m%dim_1%EX )
  609.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$14,  _substr(t$13,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1h, 0x2000200000000L ) ) )
  610.       $Unit_temp_O1 = nfprt
  610.       _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  611.       t$746 = int( _alloc( _len( name ) ), 8 )
  611.       _f90_adjustl(  _substr(t$745,1,_len( name )),  _substr(name,1,_len( name )) )
  610.       t$748 = _ltrim(  _substr(t$745,1,_len( name )) )
  611.       t$750 = int( _alloc( _zla( 0, t$748 ) ), 8 )
  611.        _substr(t$749,1,_zla( 0, t$748 )) =  _substr(t$745,1,_ltrim(  _substr(t$745,1,_len( name )) ))
  611.       _f90_adjustl(  _substr(t$747,1,10),  _substr(c1,1,10) )
  610.       t$751 = _ltrim(  _substr(t$747,1,10) )
  611.       t$753 = int( _alloc( _zla( 0, t$751 ) ), 8 )
  611.        _substr(t$752,1,_zla( 0, t$751 )) =  _substr(t$747,1,_ltrim(  _substr(t$747,1,10) ))
  610.       $Unit_temp_O2 = nfprt
  610.       _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$749,1,_zla( 0, t$748 )), 0x800600000000L ), _iotype(  _substr(t$752,1,_zla( 0, t$751 )), 0x800600000000L ) ) )
  611.       _free( t$753 )
  611.       _free( t$750 )
  611.       _free( t$746 )
  610.       if ( m%dim_1%EX > 0 ) then
  610.          $I_L610_6 = 0
  610.          do
  612.             if ( ( 1 + $I_L610_6 ) <= 0 .or. ( 1 + $I_L610_6 ) > m%dim_1%EX ) then
  612.                 _substr(t$758,1,10) = 'Utils.f90'
  612.                 _substr(t$759,1,4) = 'M'
  612.                t$760 = m%dim_1%EX
  612.                t$761 = 1 + $I_L610_6
  612.                call _bounds_error(  _substr(t$758,1,10), 612,  _substr(t$759,1,2), 1, 1, t$760, t$761, t$757 )
  612.             endif
  610.             $Unit_temp_O3 = nfprt
  610.             $IOitem_O4 = (m%base_addr)(1 + $I_L610_6, 0)
  610.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  610.             $I_L610_6 = 1 + $I_L610_6
  610.             if ( $I_L610_6 >= ( min( 10, m%dim_1%EX ) ) ) exit
  610.          enddo
  610.       endif
  610.       $Unit_temp_O5 = nfprt
  610.       _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  613.       return
  613.       end
  613.       
  614.       
  614.       subroutine dumpmatrixreal2d( name, m )
  614.       t$270 = _len( name )
  614.       m%dim_1%LB = 1
  614.       m%dim_2%LB = 1
  619.       n1 = m%dim_1%EX
  619.       n2 = m%dim_2%EX
  620.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$18,  _substr(t$17,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  621.       _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$20,  _substr(t$19,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n2, 0x2000200000000L ) ) )
  623.       t$763 = int( _alloc( _len( name ) ), 8 )
  623.       _f90_adjustl(  _substr(t$762,1,_len( name )),  _substr(name,1,_len( name )) )
  622.       t$766 = _ltrim(  _substr(t$762,1,_len( name )) )
  623.       t$768 = int( _alloc( _zla( 0, t$766 ) ), 8 )
  623.        _substr(t$767,1,_zla( 0, t$766 )) =  _substr(t$762,1,_ltrim(  _substr(t$762,1,_len( name )) ))
  623.       _f90_adjustl(  _substr(t$764,1,10),  _substr(c1,1,10) )
  622.       t$769 = _ltrim(  _substr(t$764,1,10) )
  623.       t$771 = int( _alloc( _zla( 0, t$769 ) ), 8 )
  623.        _substr(t$770,1,_zla( 0, t$769 )) =  _substr(t$764,1,_ltrim(  _substr(t$764,1,10) ))
  624.       _f90_adjustl(  _substr(t$765,1,10),  _substr(c2,1,10) )
  622.       t$772 = _ltrim(  _substr(t$765,1,10) )
  624.       t$774 = int( _alloc( _zla( 0, t$772 ) ), 8 )
  624.        _substr(t$773,1,_zla( 0, t$772 )) =  _substr(t$765,1,_ltrim(  _substr(t$765,1,10) ))
  622.       $Unit_temp_O0 = nfprt
  622.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,35), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$767,1,_zla( 0, t$766 )), 0x800600000000L ), _iotype(  _substr(t$770,1,_zla( 0, t$769 )), 0x800600000000L ), _iotype(  _substr(t$773,1,_zla( 0, t$772 )), 0x800600000000L ) ) )
  624.       _free( t$774 )
  623.       _free( t$771 )
  623.       _free( t$768 )
  623.       _free( t$763 )
  625.       if ( m%dim_1%EX > 0 ) then
  629.          if ( m%dim_2%EX > 0 ) then
  625.             $I_L625_26 = 0
  625.             do
  625.                i1 = ( 1 + $I_L625_26 )
  626.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$24,  _substr(t$23,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  627.                i2h = min( 10, m%dim_2%EX )
  628.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$26,  _substr(t$25,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  629.                $Unit_temp_O1 = nfprt
  629.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  630.                t$779 = int( _alloc( _len( name ) ), 8 )
  630.                _f90_adjustl(  _substr(t$778,1,_len( name )),  _substr(name,1,_len( name )) )
  629.                t$782 = _ltrim(  _substr(t$778,1,_len( name )) )
  630.                t$784 = int( _alloc( _zla( 0, t$782 ) ), 8 )
  630.                 _substr(t$783,1,_zla( 0, t$782 )) =  _substr(t$778,1,_ltrim(  _substr(t$778,1,_len( name )) ))
  630.                _f90_adjustl(  _substr(t$780,1,10),  _substr(c1,1,10) )
  629.                t$785 = _ltrim(  _substr(t$780,1,10) )
  630.                t$787 = int( _alloc( _zla( 0, t$785 ) ), 8 )
  630.                 _substr(t$786,1,_zla( 0, t$785 )) =  _substr(t$780,1,_ltrim(  _substr(t$780,1,10) ))
  631.                _f90_adjustl(  _substr(t$781,1,10),  _substr(c2,1,10) )
  629.                t$788 = _ltrim(  _substr(t$781,1,10) )
  631.                t$790 = int( _alloc( _zla( 0, t$788 ) ), 8 )
  631.                 _substr(t$789,1,_zla( 0, t$788 )) =  _substr(t$781,1,_ltrim(  _substr(t$781,1,10) ))
  629.                $Unit_temp_O2 = nfprt
  629.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$783,1,_zla( 0, t$782 )), 0x800600000000L ), _iotype(  _substr(t$786,1,_zla( 0, t$785 )), 0x800600000000L ), _iotype(  _substr(t$789,1,_zla( 0, t$788 )), 0x800600000000L ) ) )
  631.                _free( t$790 )
  630.                _free( t$787 )
  630.                _free( t$784 )
  630.                _free( t$779 )
  632.                if ( ( 1 + $I_L625_26 ) <= 0 .or. ( 1 + $I_L625_26 ) > m%dim_1%EX ) then
  629.                   $I_L629_20 = 0
  629.                   do
  632.                       _substr(t$795,1,10) = 'Utils.f90'
  632.                       _substr(t$796,1,4) = 'M'
  632.                      t$797 = m%dim_1%EX
  632.                      t$798 = 1 + $I_L625_26
  632.                      call _bounds_error(  _substr(t$795,1,10), 632,  _substr(t$796,1,2), 1, 1, t$797, t$798, t$794 )
  632.                      if ( ( 1 + $I_L629_20 ) <= 0 .or. ( 1 + $I_L629_20 ) > m%dim_2%EX ) then
  632.                          _substr(t$800,1,10) = 'Utils.f90'
  632.                          _substr(t$801,1,4) = 'M'
  632.                         t$802 = m%dim_2%EX
  632.                         t$803 = 1 + $I_L629_20
  632.                         call _bounds_error(  _substr(t$800,1,10), 632,  _substr(t$801,1,2), 2, 1, t$802, t$803, t$799 )
  632.                      endif
  629.                      $Unit_temp_O3 = nfprt
  629.                      $IOitem_O4 = (m%base_addr)(1 + $I_L625_26, 1 + $I_L629_20, 0)
  629.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  629.                      $I_L629_20 = 1 + $I_L629_20
  629.                      if ( $I_L629_20 >= ( min( 10, m%dim_2%EX ) ) ) exit
  629.                   enddo
  629.                else
  629.                   $I_L629_22 = 0
  629.                   do
  632.                      if ( ( 1 + $I_L629_22 ) <= 0 .or. ( 1 + $I_L629_22 ) > m%dim_2%EX ) then
  632.                          _substr(t$800,1,10) = 'Utils.f90'
  632.                          _substr(t$801,1,4) = 'M'
  632.                         t$802 = m%dim_2%EX
  632.                         t$803 = 1 + $I_L629_22
  632.                         call _bounds_error(  _substr(t$800,1,10), 632,  _substr(t$801,1,2), 2, 1, t$802, t$803, t$799 )
  632.                      endif
  629.                      $Unit_temp_O3 = nfprt
  629.                      $IOitem_O4 = (m%base_addr)(1 + $I_L625_26, 1 + $I_L629_22, 0)
  629.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  629.                      $I_L629_22 = 1 + $I_L629_22
  629.                      if ( $I_L629_22 >= ( min( 10, m%dim_2%EX ) ) ) exit
  629.                   enddo
  629.                endif
  629.                $Unit_temp_O5 = nfprt
  629.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  633.                $I_L625_26 = 1 + $I_L625_26
  633.                if ( $I_L625_26 >= m%dim_1%EX ) exit
  633.             enddo
  633.          else
  625.             $I_L625_24 = 0
  625.             do
  625.                i1 = ( 1 + $I_L625_24 )
  626.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$24,  _substr(t$23,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  627.                i2h = min( 10, m%dim_2%EX )
  628.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$26,  _substr(t$25,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  629.                $Unit_temp_O1 = nfprt
  629.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  630.                t$779 = int( _alloc( _len( name ) ), 8 )
  630.                _f90_adjustl(  _substr(t$778,1,_len( name )),  _substr(name,1,_len( name )) )
  629.                t$782 = _ltrim(  _substr(t$778,1,_len( name )) )
  630.                t$784 = int( _alloc( _zla( 0, t$782 ) ), 8 )
  630.                 _substr(t$783,1,_zla( 0, t$782 )) =  _substr(t$778,1,_ltrim(  _substr(t$778,1,_len( name )) ))
  630.                _f90_adjustl(  _substr(t$780,1,10),  _substr(c1,1,10) )
  629.                t$785 = _ltrim(  _substr(t$780,1,10) )
  630.                t$787 = int( _alloc( _zla( 0, t$785 ) ), 8 )
  630.                 _substr(t$786,1,_zla( 0, t$785 )) =  _substr(t$780,1,_ltrim(  _substr(t$780,1,10) ))
  631.                _f90_adjustl(  _substr(t$781,1,10),  _substr(c2,1,10) )
  629.                t$788 = _ltrim(  _substr(t$781,1,10) )
  631.                t$790 = int( _alloc( _zla( 0, t$788 ) ), 8 )
  631.                 _substr(t$789,1,_zla( 0, t$788 )) =  _substr(t$781,1,_ltrim(  _substr(t$781,1,10) ))
  629.                $Unit_temp_O2 = nfprt
  629.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$783,1,_zla( 0, t$782 )), 0x800600000000L ), _iotype(  _substr(t$786,1,_zla( 0, t$785 )), 0x800600000000L ), _iotype(  _substr(t$789,1,_zla( 0, t$788 )), 0x800600000000L ) ) )
  631.                _free( t$790 )
  630.                _free( t$787 )
  630.                _free( t$784 )
  630.                _free( t$779 )
  629.                $Unit_temp_O5 = nfprt
  629.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  633.                $I_L625_24 = 1 + $I_L625_24
  633.                if ( $I_L625_24 >= m%dim_1%EX ) exit
  633.             enddo
  633.          endif
  633.       endif
  634.       return
  634.       end
  634.       
  635.       
  635.       subroutine dumpmatrixreal3d( name, m )
  635.       t$271 = _len( name )
  635.       m%dim_1%LB = 1
  635.       m%dim_2%LB = 1
  635.       m%dim_3%LB = 1
  640.       n1 = m%dim_1%EX
  640.       n2 = m%dim_2%EX
  640.       n3 = m%dim_3%EX
  641.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$30,  _substr(t$29,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  642.       _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$32,  _substr(t$31,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n2, 0x2000200000000L ) ) )
  643.       _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$34,  _substr(t$33,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n3, 0x2000200000000L ) ) )
  645.       t$805 = int( _alloc( _len( name ) ), 8 )
  645.       _f90_adjustl(  _substr(t$804,1,_len( name )),  _substr(name,1,_len( name )) )
  644.       t$809 = _ltrim(  _substr(t$804,1,_len( name )) )
  645.       t$811 = int( _alloc( _zla( 0, t$809 ) ), 8 )
  645.        _substr(t$810,1,_zla( 0, t$809 )) =  _substr(t$804,1,_ltrim(  _substr(t$804,1,_len( name )) ))
  645.       _f90_adjustl(  _substr(t$806,1,10),  _substr(c1,1,10) )
  644.       t$812 = _ltrim(  _substr(t$806,1,10) )
  645.       t$814 = int( _alloc( _zla( 0, t$812 ) ), 8 )
  645.        _substr(t$813,1,_zla( 0, t$812 )) =  _substr(t$806,1,_ltrim(  _substr(t$806,1,10) ))
  646.       _f90_adjustl(  _substr(t$807,1,10),  _substr(c2,1,10) )
  644.       t$815 = _ltrim(  _substr(t$807,1,10) )
  646.       t$817 = int( _alloc( _zla( 0, t$815 ) ), 8 )
  646.        _substr(t$816,1,_zla( 0, t$815 )) =  _substr(t$807,1,_ltrim(  _substr(t$807,1,10) ))
  646.       _f90_adjustl(  _substr(t$808,1,10),  _substr(c3,1,10) )
  644.       t$818 = _ltrim(  _substr(t$808,1,10) )
  646.       t$820 = int( _alloc( _zla( 0, t$818 ) ), 8 )
  646.        _substr(t$819,1,_zla( 0, t$818 )) =  _substr(t$808,1,_ltrim(  _substr(t$808,1,10) ))
  644.       $Unit_temp_O0 = nfprt
  644.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$36,  _substr(t$35,1,41), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$810,1,_zla( 0, t$809 )), 0x800600000000L ), _iotype(  _substr(t$813,1,_zla( 0, t$812 )), 0x800600000000L ), _iotype(  _substr(t$816,1,_zla( 0, t$815 )), 0x800600000000L ), _iotype(  _substr(t$819,1,_zla( 0, t$818 )), 0x800600000000L ) ) )
  646.       _free( t$820 )
  646.       _free( t$817 )
  645.       _free( t$814 )
  645.       _free( t$811 )
  645.       _free( t$805 )
  647.       if ( m%dim_3%EX > 0 ) then
  650.          if ( m%dim_1%EX <= 0 ) then
  647.             $I_L647_50 = 0
  647.             do
  647.                i3 = ( 1 + $I_L647_50 )
  648.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$38,  _substr(t$37,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  649.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  659.                $I_L647_50 = 1 + $I_L647_50
  658.                if ( $I_L647_50 >= m%dim_3%EX ) exit
  658.             enddo
  658.          else if ( m%dim_2%EX > 0 ) then
  647.             $I_L647_58 = 0
  647.             do
  647.                i3 = ( 1 + $I_L647_58 )
  648.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$38,  _substr(t$37,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  649.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  650.                $I_L650_54 = 0
  650.                do
  650.                   i1 = ( 1 + $I_L650_54 )
  651.                   _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$40,  _substr(t$39,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  652.                   i2h = min( 10, m%dim_2%EX )
  653.                   _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$42,  _substr(t$41,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  654.                   $Unit_temp_O1 = nfprt
  654.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  655.                   t$828 = int( _alloc( _len( name ) ), 8 )
  655.                   _f90_adjustl(  _substr(t$827,1,_len( name )),  _substr(name,1,_len( name )) )
  654.                   t$832 = _ltrim(  _substr(t$827,1,_len( name )) )
  655.                   t$834 = int( _alloc( _zla( 0, t$832 ) ), 8 )
  655.                    _substr(t$833,1,_zla( 0, t$832 )) =  _substr(t$827,1,_ltrim(  _substr(t$827,1,_len( name )) ))
  655.                   _f90_adjustl(  _substr(t$829,1,10),  _substr(c1,1,10) )
  654.                   t$835 = _ltrim(  _substr(t$829,1,10) )
  655.                   t$837 = int( _alloc( _zla( 0, t$835 ) ), 8 )
  655.                    _substr(t$836,1,_zla( 0, t$835 )) =  _substr(t$829,1,_ltrim(  _substr(t$829,1,10) ))
  656.                   _f90_adjustl(  _substr(t$830,1,10),  _substr(c2,1,10) )
  654.                   t$838 = _ltrim(  _substr(t$830,1,10) )
  656.                   t$840 = int( _alloc( _zla( 0, t$838 ) ), 8 )
  656.                    _substr(t$839,1,_zla( 0, t$838 )) =  _substr(t$830,1,_ltrim(  _substr(t$830,1,10) ))
  656.                   _f90_adjustl(  _substr(t$831,1,10),  _substr(c3,1,10) )
  654.                   t$841 = _ltrim(  _substr(t$831,1,10) )
  656.                   t$843 = int( _alloc( _zla( 0, t$841 ) ), 8 )
  656.                    _substr(t$842,1,_zla( 0, t$841 )) =  _substr(t$831,1,_ltrim(  _substr(t$831,1,10) ))
  654.                   $Unit_temp_O2 = nfprt
  654.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$833,1,_zla( 0, t$832 )), 0x800600000000L ), _iotype(  _substr(t$836,1,_zla( 0, t$835 )), 0x800600000000L ), _iotype(  _substr(t$839,1,_zla( 0, t$838 )), 0x800600000000L ), _iotype(  _substr(t$842,1,_zla( 0, t$841 )), 0x800600000000L ) ) )
  656.                   _free( t$843 )
  656.                   _free( t$840 )
  655.                   _free( t$837 )
  655.                   _free( t$834 )
  655.                   _free( t$828 )
  657.                   if ( ( 1 + $I_L650_54 ) <= 0 .or. ( 1 + $I_L650_54 ) > m%dim_1%EX ) then
  657.                      if ( ( 1 + $I_L647_58 ) <= 0 .or. ( 1 + $I_L647_58 ) > m%dim_3%EX ) then
  654.                         $I_L654_42 = 0
  654.                         do
  657.                             _substr(t$848,1,10) = 'Utils.f90'
  657.                             _substr(t$849,1,4) = 'M'
  657.                            t$850 = m%dim_1%EX
  657.                            t$851 = 1 + $I_L650_54
  657.                            call _bounds_error(  _substr(t$848,1,10), 657,  _substr(t$849,1,2), 1, 1, t$850, t$851, t$847 )
  657.                            if ( ( 1 + $I_L654_42 ) <= 0 .or. ( 1 + $I_L654_42 ) > m%dim_2%EX ) then
  657.                                _substr(t$853,1,10) = 'Utils.f90'
  657.                                _substr(t$854,1,4) = 'M'
  657.                               t$855 = m%dim_2%EX
  657.                               t$856 = 1 + $I_L654_42
  657.                               call _bounds_error(  _substr(t$853,1,10), 657,  _substr(t$854,1,2), 2, 1, t$855, t$856, t$852 )
  657.                            endif
  657.                             _substr(t$858,1,10) = 'Utils.f90'
  657.                             _substr(t$859,1,4) = 'M'
  657.                            t$860 = m%dim_3%EX
  657.                            t$861 = 1 + $I_L647_58
  657.                            call _bounds_error(  _substr(t$858,1,10), 657,  _substr(t$859,1,2), 3, 1, t$860, t$861, t$857 )
  654.                            $Unit_temp_O3 = nfprt
  654.                            $IOitem_O4 = (m%base_addr)(1 + $I_L650_54, 1 + $I_L654_42, 1 + $I_L647_58, 0)
  654.                            _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  654.                            $I_L654_42 = 1 + $I_L654_42
  654.                            if ( $I_L654_42 >= ( min( 10, m%dim_2%EX ) ) ) exit
  654.                         enddo
  654.                      else
  654.                         $I_L654_46 = 0
  654.                         do
  657.                             _substr(t$848,1,10) = 'Utils.f90'
  657.                             _substr(t$849,1,4) = 'M'
  657.                            t$850 = m%dim_1%EX
  657.                            t$851 = 1 + $I_L650_54
  657.                            call _bounds_error(  _substr(t$848,1,10), 657,  _substr(t$849,1,2), 1, 1, t$850, t$851, t$847 )
  657.                            if ( ( 1 + $I_L654_46 ) <= 0 .or. ( 1 + $I_L654_46 ) > m%dim_2%EX ) then
  657.                                _substr(t$853,1,10) = 'Utils.f90'
  657.                                _substr(t$854,1,4) = 'M'
  657.                               t$855 = m%dim_2%EX
  657.                               t$856 = 1 + $I_L654_46
  657.                               call _bounds_error(  _substr(t$853,1,10), 657,  _substr(t$854,1,2), 2, 1, t$855, t$856, t$852 )
  657.                            endif
  654.                            $Unit_temp_O3 = nfprt
  654.                            $IOitem_O4 = (m%base_addr)(1 + $I_L650_54, 1 + $I_L654_46, 1 + $I_L647_58, 0)
  654.                            _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  654.                            $I_L654_46 = 1 + $I_L654_46
  654.                            if ( $I_L654_46 >= ( min( 10, m%dim_2%EX ) ) ) exit
  654.                         enddo
  654.                      endif
  654.                   else if ( ( 1 + $I_L647_58 ) <= 0 .or. ( 1 + $I_L647_58 ) > m%dim_3%EX ) then
  654.                      $I_L654_44 = 0
  654.                      do
  657.                         if ( ( 1 + $I_L654_44 ) <= 0 .or. ( 1 + $I_L654_44 ) > m%dim_2%EX ) then
  657.                             _substr(t$853,1,10) = 'Utils.f90'
  657.                             _substr(t$854,1,4) = 'M'
  657.                            t$855 = m%dim_2%EX
  657.                            t$856 = 1 + $I_L654_44
  657.                            call _bounds_error(  _substr(t$853,1,10), 657,  _substr(t$854,1,2), 2, 1, t$855, t$856, t$852 )
  657.                         endif
  657.                          _substr(t$858,1,10) = 'Utils.f90'
  657.                          _substr(t$859,1,4) = 'M'
  657.                         t$860 = m%dim_3%EX
  657.                         t$861 = 1 + $I_L647_58
  657.                         call _bounds_error(  _substr(t$858,1,10), 657,  _substr(t$859,1,2), 3, 1, t$860, t$861, t$857 )
  654.                         $Unit_temp_O3 = nfprt
  654.                         $IOitem_O4 = (m%base_addr)(1 + $I_L650_54, 1 + $I_L654_44, 1 + $I_L647_58, 0)
  654.                         _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  654.                         $I_L654_44 = 1 + $I_L654_44
  654.                         if ( $I_L654_44 >= ( min( 10, m%dim_2%EX ) ) ) exit
  654.                      enddo
  654.                   else
  654.                      $I_L654_48 = 0
  654.                      do
  657.                         if ( ( 1 + $I_L654_48 ) <= 0 .or. ( 1 + $I_L654_48 ) > m%dim_2%EX ) then
  657.                             _substr(t$853,1,10) = 'Utils.f90'
  657.                             _substr(t$854,1,4) = 'M'
  657.                            t$855 = m%dim_2%EX
  657.                            t$856 = 1 + $I_L654_48
  657.                            call _bounds_error(  _substr(t$853,1,10), 657,  _substr(t$854,1,2), 2, 1, t$855, t$856, t$852 )
  657.                         endif
  654.                         $Unit_temp_O3 = nfprt
  654.                         $IOitem_O4 = (m%base_addr)(1 + $I_L650_54, 1 + $I_L654_48, 1 + $I_L647_58, 0)
  654.                         _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
  654.                         $I_L654_48 = 1 + $I_L654_48
  654.                         if ( $I_L654_48 >= ( min( 10, m%dim_2%EX ) ) ) exit
  654.                      enddo
  654.                   endif
  654.                   $Unit_temp_O5 = nfprt
  654.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  658.                   $I_L650_54 = 1 + $I_L650_54
  658.                   if ( $I_L650_54 >= m%dim_1%EX ) exit
  658.                enddo
  659.                $I_L647_58 = 1 + $I_L647_58
  658.                if ( $I_L647_58 >= m%dim_3%EX ) exit
  658.             enddo
  658.          else
  647.             $I_L647_56 = 0
  647.             do
  647.                i3 = ( 1 + $I_L647_56 )
  648.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$38,  _substr(t$37,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  649.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  650.                $I_L650_52 = 0
  650.                do
  650.                   i1 = ( 1 + $I_L650_52 )
  651.                   _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$40,  _substr(t$39,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  652.                   i2h = min( 10, m%dim_2%EX )
  653.                   _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$42,  _substr(t$41,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  654.                   $Unit_temp_O1 = nfprt
  654.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  655.                   t$828 = int( _alloc( _len( name ) ), 8 )
  655.                   _f90_adjustl(  _substr(t$827,1,_len( name )),  _substr(name,1,_len( name )) )
  654.                   t$832 = _ltrim(  _substr(t$827,1,_len( name )) )
  655.                   t$834 = int( _alloc( _zla( 0, t$832 ) ), 8 )
  655.                    _substr(t$833,1,_zla( 0, t$832 )) =  _substr(t$827,1,_ltrim(  _substr(t$827,1,_len( name )) ))
  655.                   _f90_adjustl(  _substr(t$829,1,10),  _substr(c1,1,10) )
  654.                   t$835 = _ltrim(  _substr(t$829,1,10) )
  655.                   t$837 = int( _alloc( _zla( 0, t$835 ) ), 8 )
  655.                    _substr(t$836,1,_zla( 0, t$835 )) =  _substr(t$829,1,_ltrim(  _substr(t$829,1,10) ))
  656.                   _f90_adjustl(  _substr(t$830,1,10),  _substr(c2,1,10) )
  654.                   t$838 = _ltrim(  _substr(t$830,1,10) )
  656.                   t$840 = int( _alloc( _zla( 0, t$838 ) ), 8 )
  656.                    _substr(t$839,1,_zla( 0, t$838 )) =  _substr(t$830,1,_ltrim(  _substr(t$830,1,10) ))
  656.                   _f90_adjustl(  _substr(t$831,1,10),  _substr(c3,1,10) )
  654.                   t$841 = _ltrim(  _substr(t$831,1,10) )
  656.                   t$843 = int( _alloc( _zla( 0, t$841 ) ), 8 )
  656.                    _substr(t$842,1,_zla( 0, t$841 )) =  _substr(t$831,1,_ltrim(  _substr(t$831,1,10) ))
  654.                   $Unit_temp_O2 = nfprt
  654.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$833,1,_zla( 0, t$832 )), 0x800600000000L ), _iotype(  _substr(t$836,1,_zla( 0, t$835 )), 0x800600000000L ), _iotype(  _substr(t$839,1,_zla( 0, t$838 )), 0x800600000000L ), _iotype(  _substr(t$842,1,_zla( 0, t$841 )), 0x800600000000L ) ) )
  656.                   _free( t$843 )
  656.                   _free( t$840 )
  655.                   _free( t$837 )
  655.                   _free( t$834 )
  655.                   _free( t$828 )
  654.                   $Unit_temp_O5 = nfprt
  654.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,38), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  658.                   $I_L650_52 = 1 + $I_L650_52
  658.                   if ( $I_L650_52 >= m%dim_1%EX ) exit
  658.                enddo
  659.                $I_L647_56 = 1 + $I_L647_56
  658.                if ( $I_L647_56 >= m%dim_3%EX ) exit
  658.             enddo
  658.          endif
  658.       endif
  660.       return
  660.       end
  660.       
  661.       
  661.       subroutine dumpmatrixinteger1d( name, m )
  661.       t$272 = _len( name )
  661.       m%dim_1%LB = 1
  666.       n1 = m%dim_1%EX
  667.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$46,  _substr(t$45,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  669.       t$863 = int( _alloc( _len( name ) ), 8 )
  669.       _f90_adjustl(  _substr(t$862,1,_len( name )),  _substr(name,1,_len( name )) )
  668.       t$865 = _ltrim(  _substr(t$862,1,_len( name )) )
  669.       t$867 = int( _alloc( _zla( 0, t$865 ) ), 8 )
  669.        _substr(t$866,1,_zla( 0, t$865 )) =  _substr(t$862,1,_ltrim(  _substr(t$862,1,_len( name )) ))
  669.       _f90_adjustl(  _substr(t$864,1,10),  _substr(c1,1,10) )
  668.       t$868 = _ltrim(  _substr(t$864,1,10) )
  669.       t$870 = int( _alloc( _zla( 0, t$868 ) ), 8 )
  669.        _substr(t$869,1,_zla( 0, t$868 )) =  _substr(t$864,1,_ltrim(  _substr(t$864,1,10) ))
  668.       $Unit_temp_O0 = nfprt
  668.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$48,  _substr(t$47,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$866,1,_zla( 0, t$865 )), 0x800600000000L ), _iotype(  _substr(t$869,1,_zla( 0, t$868 )), 0x800600000000L ) ) )
  669.       _free( t$870 )
  669.       _free( t$867 )
  669.       _free( t$863 )
  670.       i1h = min( 10, m%dim_1%EX )
  671.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$50,  _substr(t$49,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1h, 0x2000200000000L ) ) )
  672.       $Unit_temp_O1 = nfprt
  672.       _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  673.       t$872 = int( _alloc( _len( name ) ), 8 )
  673.       _f90_adjustl(  _substr(t$871,1,_len( name )),  _substr(name,1,_len( name )) )
  672.       t$874 = _ltrim(  _substr(t$871,1,_len( name )) )
  673.       t$876 = int( _alloc( _zla( 0, t$874 ) ), 8 )
  673.        _substr(t$875,1,_zla( 0, t$874 )) =  _substr(t$871,1,_ltrim(  _substr(t$871,1,_len( name )) ))
  673.       _f90_adjustl(  _substr(t$873,1,10),  _substr(c1,1,10) )
  672.       t$877 = _ltrim(  _substr(t$873,1,10) )
  673.       t$879 = int( _alloc( _zla( 0, t$877 ) ), 8 )
  673.        _substr(t$878,1,_zla( 0, t$877 )) =  _substr(t$873,1,_ltrim(  _substr(t$873,1,10) ))
  672.       $Unit_temp_O2 = nfprt
  672.       _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$875,1,_zla( 0, t$874 )), 0x800600000000L ), _iotype(  _substr(t$878,1,_zla( 0, t$877 )), 0x800600000000L ) ) )
  673.       _free( t$879 )
  673.       _free( t$876 )
  673.       _free( t$872 )
  672.       if ( m%dim_1%EX > 0 ) then
  672.          $I_L672_6 = 0
  672.          do
  674.             if ( ( 1 + $I_L672_6 ) <= 0 .or. ( 1 + $I_L672_6 ) > m%dim_1%EX ) then
  674.                 _substr(t$884,1,10) = 'Utils.f90'
  674.                 _substr(t$885,1,4) = 'M'
  674.                t$886 = m%dim_1%EX
  674.                t$887 = 1 + $I_L672_6
  674.                call _bounds_error(  _substr(t$884,1,10), 674,  _substr(t$885,1,2), 1, 1, t$886, t$887, t$883 )
  674.             endif
  672.             $Unit_temp_O3 = nfprt
  672.             $IOitem_O4 = (m%base_addr)(1 + $I_L672_6, 0)
  672.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  672.             $I_L672_6 = 1 + $I_L672_6
  672.             if ( $I_L672_6 >= ( min( 10, m%dim_1%EX ) ) ) exit
  672.          enddo
  672.       endif
  672.       $Unit_temp_O5 = nfprt
  672.       _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,21), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  675.       return
  675.       end
  675.       
  676.       
  676.       subroutine dumpmatrixinteger2d( name, m )
  676.       t$273 = _len( name )
  676.       m%dim_1%LB = 1
  676.       m%dim_2%LB = 1
  681.       n1 = m%dim_1%EX
  681.       n2 = m%dim_2%EX
  682.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$54,  _substr(t$53,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  683.       _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$56,  _substr(t$55,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n2, 0x2000200000000L ) ) )
  685.       t$889 = int( _alloc( _len( name ) ), 8 )
  685.       _f90_adjustl(  _substr(t$888,1,_len( name )),  _substr(name,1,_len( name )) )
  684.       t$892 = _ltrim(  _substr(t$888,1,_len( name )) )
  685.       t$894 = int( _alloc( _zla( 0, t$892 ) ), 8 )
  685.        _substr(t$893,1,_zla( 0, t$892 )) =  _substr(t$888,1,_ltrim(  _substr(t$888,1,_len( name )) ))
  685.       _f90_adjustl(  _substr(t$890,1,10),  _substr(c1,1,10) )
  684.       t$895 = _ltrim(  _substr(t$890,1,10) )
  685.       t$897 = int( _alloc( _zla( 0, t$895 ) ), 8 )
  685.        _substr(t$896,1,_zla( 0, t$895 )) =  _substr(t$890,1,_ltrim(  _substr(t$890,1,10) ))
  686.       _f90_adjustl(  _substr(t$891,1,10),  _substr(c2,1,10) )
  684.       t$898 = _ltrim(  _substr(t$891,1,10) )
  686.       t$900 = int( _alloc( _zla( 0, t$898 ) ), 8 )
  686.        _substr(t$899,1,_zla( 0, t$898 )) =  _substr(t$891,1,_ltrim(  _substr(t$891,1,10) ))
  684.       $Unit_temp_O0 = nfprt
  684.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$58,  _substr(t$57,1,35), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$893,1,_zla( 0, t$892 )), 0x800600000000L ), _iotype(  _substr(t$896,1,_zla( 0, t$895 )), 0x800600000000L ), _iotype(  _substr(t$899,1,_zla( 0, t$898 )), 0x800600000000L ) ) )
  686.       _free( t$900 )
  685.       _free( t$897 )
  685.       _free( t$894 )
  685.       _free( t$889 )
  687.       if ( m%dim_1%EX > 0 ) then
  691.          if ( m%dim_2%EX > 0 ) then
  687.             $I_L687_26 = 0
  687.             do
  687.                i1 = ( 1 + $I_L687_26 )
  688.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$60,  _substr(t$59,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  689.                i2h = min( 10, m%dim_2%EX )
  690.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$62,  _substr(t$61,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  691.                $Unit_temp_O1 = nfprt
  691.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  692.                t$905 = int( _alloc( _len( name ) ), 8 )
  692.                _f90_adjustl(  _substr(t$904,1,_len( name )),  _substr(name,1,_len( name )) )
  691.                t$908 = _ltrim(  _substr(t$904,1,_len( name )) )
  692.                t$910 = int( _alloc( _zla( 0, t$908 ) ), 8 )
  692.                 _substr(t$909,1,_zla( 0, t$908 )) =  _substr(t$904,1,_ltrim(  _substr(t$904,1,_len( name )) ))
  692.                _f90_adjustl(  _substr(t$906,1,10),  _substr(c1,1,10) )
  691.                t$911 = _ltrim(  _substr(t$906,1,10) )
  692.                t$913 = int( _alloc( _zla( 0, t$911 ) ), 8 )
  692.                 _substr(t$912,1,_zla( 0, t$911 )) =  _substr(t$906,1,_ltrim(  _substr(t$906,1,10) ))
  693.                _f90_adjustl(  _substr(t$907,1,10),  _substr(c2,1,10) )
  691.                t$914 = _ltrim(  _substr(t$907,1,10) )
  693.                t$916 = int( _alloc( _zla( 0, t$914 ) ), 8 )
  693.                 _substr(t$915,1,_zla( 0, t$914 )) =  _substr(t$907,1,_ltrim(  _substr(t$907,1,10) ))
  691.                $Unit_temp_O2 = nfprt
  691.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$909,1,_zla( 0, t$908 )), 0x800600000000L ), _iotype(  _substr(t$912,1,_zla( 0, t$911 )), 0x800600000000L ), _iotype(  _substr(t$915,1,_zla( 0, t$914 )), 0x800600000000L ) ) )
  693.                _free( t$916 )
  692.                _free( t$913 )
  692.                _free( t$910 )
  692.                _free( t$905 )
  694.                if ( ( 1 + $I_L687_26 ) <= 0 .or. ( 1 + $I_L687_26 ) > m%dim_1%EX ) then
  691.                   $I_L691_20 = 0
  691.                   do
  694.                       _substr(t$921,1,10) = 'Utils.f90'
  694.                       _substr(t$922,1,4) = 'M'
  694.                      t$923 = m%dim_1%EX
  694.                      t$924 = 1 + $I_L687_26
  694.                      call _bounds_error(  _substr(t$921,1,10), 694,  _substr(t$922,1,2), 1, 1, t$923, t$924, t$920 )
  694.                      if ( ( 1 + $I_L691_20 ) <= 0 .or. ( 1 + $I_L691_20 ) > m%dim_2%EX ) then
  694.                          _substr(t$926,1,10) = 'Utils.f90'
  694.                          _substr(t$927,1,4) = 'M'
  694.                         t$928 = m%dim_2%EX
  694.                         t$929 = 1 + $I_L691_20
  694.                         call _bounds_error(  _substr(t$926,1,10), 694,  _substr(t$927,1,2), 2, 1, t$928, t$929, t$925 )
  694.                      endif
  691.                      $Unit_temp_O3 = nfprt
  691.                      $IOitem_O4 = (m%base_addr)(1 + $I_L687_26, 1 + $I_L691_20, 0)
  691.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  691.                      $I_L691_20 = 1 + $I_L691_20
  691.                      if ( $I_L691_20 >= ( min( 10, m%dim_2%EX ) ) ) exit
  691.                   enddo
  691.                else
  691.                   $I_L691_22 = 0
  691.                   do
  694.                      if ( ( 1 + $I_L691_22 ) <= 0 .or. ( 1 + $I_L691_22 ) > m%dim_2%EX ) then
  694.                          _substr(t$926,1,10) = 'Utils.f90'
  694.                          _substr(t$927,1,4) = 'M'
  694.                         t$928 = m%dim_2%EX
  694.                         t$929 = 1 + $I_L691_22
  694.                         call _bounds_error(  _substr(t$926,1,10), 694,  _substr(t$927,1,2), 2, 1, t$928, t$929, t$925 )
  694.                      endif
  691.                      $Unit_temp_O3 = nfprt
  691.                      $IOitem_O4 = (m%base_addr)(1 + $I_L687_26, 1 + $I_L691_22, 0)
  691.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  691.                      $I_L691_22 = 1 + $I_L691_22
  691.                      if ( $I_L691_22 >= ( min( 10, m%dim_2%EX ) ) ) exit
  691.                   enddo
  691.                endif
  691.                $Unit_temp_O5 = nfprt
  691.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  695.                $I_L687_26 = 1 + $I_L687_26
  695.                if ( $I_L687_26 >= m%dim_1%EX ) exit
  695.             enddo
  695.          else
  687.             $I_L687_24 = 0
  687.             do
  687.                i1 = ( 1 + $I_L687_24 )
  688.                _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$60,  _substr(t$59,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  689.                i2h = min( 10, m%dim_2%EX )
  690.                _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$62,  _substr(t$61,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  691.                $Unit_temp_O1 = nfprt
  691.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  692.                t$905 = int( _alloc( _len( name ) ), 8 )
  692.                _f90_adjustl(  _substr(t$904,1,_len( name )),  _substr(name,1,_len( name )) )
  691.                t$908 = _ltrim(  _substr(t$904,1,_len( name )) )
  692.                t$910 = int( _alloc( _zla( 0, t$908 ) ), 8 )
  692.                 _substr(t$909,1,_zla( 0, t$908 )) =  _substr(t$904,1,_ltrim(  _substr(t$904,1,_len( name )) ))
  692.                _f90_adjustl(  _substr(t$906,1,10),  _substr(c1,1,10) )
  691.                t$911 = _ltrim(  _substr(t$906,1,10) )
  692.                t$913 = int( _alloc( _zla( 0, t$911 ) ), 8 )
  692.                 _substr(t$912,1,_zla( 0, t$911 )) =  _substr(t$906,1,_ltrim(  _substr(t$906,1,10) ))
  693.                _f90_adjustl(  _substr(t$907,1,10),  _substr(c2,1,10) )
  691.                t$914 = _ltrim(  _substr(t$907,1,10) )
  693.                t$916 = int( _alloc( _zla( 0, t$914 ) ), 8 )
  693.                 _substr(t$915,1,_zla( 0, t$914 )) =  _substr(t$907,1,_ltrim(  _substr(t$907,1,10) ))
  691.                $Unit_temp_O2 = nfprt
  691.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$909,1,_zla( 0, t$908 )), 0x800600000000L ), _iotype(  _substr(t$912,1,_zla( 0, t$911 )), 0x800600000000L ), _iotype(  _substr(t$915,1,_zla( 0, t$914 )), 0x800600000000L ) ) )
  693.                _free( t$916 )
  692.                _free( t$913 )
  692.                _free( t$910 )
  692.                _free( t$905 )
  691.                $Unit_temp_O5 = nfprt
  691.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  695.                $I_L687_24 = 1 + $I_L687_24
  695.                if ( $I_L687_24 >= m%dim_1%EX ) exit
  695.             enddo
  695.          endif
  695.       endif
  696.       return
  696.       end
  696.       
  697.       
  697.       subroutine dumpmatrixinteger3d( name, m )
  697.       t$274 = _len( name )
  697.       m%dim_1%LB = 1
  697.       m%dim_2%LB = 1
  697.       m%dim_3%LB = 1
  702.       n1 = m%dim_1%EX
  702.       n2 = m%dim_2%EX
  702.       n3 = m%dim_3%EX
  703.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$66,  _substr(t$65,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  704.       _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$68,  _substr(t$67,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n2, 0x2000200000000L ) ) )
  705.       _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$70,  _substr(t$69,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n3, 0x2000200000000L ) ) )
  707.       t$931 = int( _alloc( _len( name ) ), 8 )
  707.       _f90_adjustl(  _substr(t$930,1,_len( name )),  _substr(name,1,_len( name )) )
  706.       t$935 = _ltrim(  _substr(t$930,1,_len( name )) )
  707.       t$937 = int( _alloc( _zla( 0, t$935 ) ), 8 )
  707.        _substr(t$936,1,_zla( 0, t$935 )) =  _substr(t$930,1,_ltrim(  _substr(t$930,1,_len( name )) ))
  707.       _f90_adjustl(  _substr(t$932,1,10),  _substr(c1,1,10) )
  706.       t$938 = _ltrim(  _substr(t$932,1,10) )
  707.       t$940 = int( _alloc( _zla( 0, t$938 ) ), 8 )
  707.        _substr(t$939,1,_zla( 0, t$938 )) =  _substr(t$932,1,_ltrim(  _substr(t$932,1,10) ))
  708.       _f90_adjustl(  _substr(t$933,1,10),  _substr(c2,1,10) )
  706.       t$941 = _ltrim(  _substr(t$933,1,10) )
  708.       t$943 = int( _alloc( _zla( 0, t$941 ) ), 8 )
  708.        _substr(t$942,1,_zla( 0, t$941 )) =  _substr(t$933,1,_ltrim(  _substr(t$933,1,10) ))
  708.       _f90_adjustl(  _substr(t$934,1,10),  _substr(c3,1,10) )
  706.       t$944 = _ltrim(  _substr(t$934,1,10) )
  708.       t$946 = int( _alloc( _zla( 0, t$944 ) ), 8 )
  708.        _substr(t$945,1,_zla( 0, t$944 )) =  _substr(t$934,1,_ltrim(  _substr(t$934,1,10) ))
  706.       $Unit_temp_O0 = nfprt
  706.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$72,  _substr(t$71,1,41), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$936,1,_zla( 0, t$935 )), 0x800600000000L ), _iotype(  _substr(t$939,1,_zla( 0, t$938 )), 0x800600000000L ), _iotype(  _substr(t$942,1,_zla( 0, t$941 )), 0x800600000000L ), _iotype(  _substr(t$945,1,_zla( 0, t$944 )), 0x800600000000L ) ) )
  708.       _free( t$946 )
  708.       _free( t$943 )
  707.       _free( t$940 )
  707.       _free( t$937 )
  707.       _free( t$931 )
  709.       if ( m%dim_3%EX > 0 ) then
  712.          if ( m%dim_1%EX <= 0 ) then
  709.             $I_L709_50 = 0
  709.             do
  709.                i3 = ( 1 + $I_L709_50 )
  710.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$74,  _substr(t$73,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  711.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  721.                $I_L709_50 = 1 + $I_L709_50
  720.                if ( $I_L709_50 >= m%dim_3%EX ) exit
  720.             enddo
  720.          else if ( m%dim_2%EX > 0 ) then
  709.             $I_L709_58 = 0
  709.             do
  709.                i3 = ( 1 + $I_L709_58 )
  710.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$74,  _substr(t$73,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  711.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  712.                $I_L712_54 = 0
  712.                do
  712.                   i1 = ( 1 + $I_L712_54 )
  713.                   _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$76,  _substr(t$75,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  714.                   i2h = min( 10, m%dim_2%EX )
  715.                   _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$78,  _substr(t$77,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  716.                   $Unit_temp_O1 = nfprt
  716.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  717.                   t$954 = int( _alloc( _len( name ) ), 8 )
  717.                   _f90_adjustl(  _substr(t$953,1,_len( name )),  _substr(name,1,_len( name )) )
  716.                   t$958 = _ltrim(  _substr(t$953,1,_len( name )) )
  717.                   t$960 = int( _alloc( _zla( 0, t$958 ) ), 8 )
  717.                    _substr(t$959,1,_zla( 0, t$958 )) =  _substr(t$953,1,_ltrim(  _substr(t$953,1,_len( name )) ))
  717.                   _f90_adjustl(  _substr(t$955,1,10),  _substr(c1,1,10) )
  716.                   t$961 = _ltrim(  _substr(t$955,1,10) )
  717.                   t$963 = int( _alloc( _zla( 0, t$961 ) ), 8 )
  717.                    _substr(t$962,1,_zla( 0, t$961 )) =  _substr(t$955,1,_ltrim(  _substr(t$955,1,10) ))
  718.                   _f90_adjustl(  _substr(t$956,1,10),  _substr(c2,1,10) )
  716.                   t$964 = _ltrim(  _substr(t$956,1,10) )
  718.                   t$966 = int( _alloc( _zla( 0, t$964 ) ), 8 )
  718.                    _substr(t$965,1,_zla( 0, t$964 )) =  _substr(t$956,1,_ltrim(  _substr(t$956,1,10) ))
  718.                   _f90_adjustl(  _substr(t$957,1,10),  _substr(c3,1,10) )
  716.                   t$967 = _ltrim(  _substr(t$957,1,10) )
  718.                   t$969 = int( _alloc( _zla( 0, t$967 ) ), 8 )
  718.                    _substr(t$968,1,_zla( 0, t$967 )) =  _substr(t$957,1,_ltrim(  _substr(t$957,1,10) ))
  716.                   $Unit_temp_O2 = nfprt
  716.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$959,1,_zla( 0, t$958 )), 0x800600000000L ), _iotype(  _substr(t$962,1,_zla( 0, t$961 )), 0x800600000000L ), _iotype(  _substr(t$965,1,_zla( 0, t$964 )), 0x800600000000L ), _iotype(  _substr(t$968,1,_zla( 0, t$967 )), 0x800600000000L ) ) )
  718.                   _free( t$969 )
  718.                   _free( t$966 )
  717.                   _free( t$963 )
  717.                   _free( t$960 )
  717.                   _free( t$954 )
  719.                   if ( ( 1 + $I_L712_54 ) <= 0 .or. ( 1 + $I_L712_54 ) > m%dim_1%EX ) then
  719.                      if ( ( 1 + $I_L709_58 ) <= 0 .or. ( 1 + $I_L709_58 ) > m%dim_3%EX ) then
  716.                         $I_L716_42 = 0
  716.                         do
  719.                             _substr(t$974,1,10) = 'Utils.f90'
  719.                             _substr(t$975,1,4) = 'M'
  719.                            t$976 = m%dim_1%EX
  719.                            t$977 = 1 + $I_L712_54
  719.                            call _bounds_error(  _substr(t$974,1,10), 719,  _substr(t$975,1,2), 1, 1, t$976, t$977, t$973 )
  719.                            if ( ( 1 + $I_L716_42 ) <= 0 .or. ( 1 + $I_L716_42 ) > m%dim_2%EX ) then
  719.                                _substr(t$979,1,10) = 'Utils.f90'
  719.                                _substr(t$980,1,4) = 'M'
  719.                               t$981 = m%dim_2%EX
  719.                               t$982 = 1 + $I_L716_42
  719.                               call _bounds_error(  _substr(t$979,1,10), 719,  _substr(t$980,1,2), 2, 1, t$981, t$982, t$978 )
  719.                            endif
  719.                             _substr(t$984,1,10) = 'Utils.f90'
  719.                             _substr(t$985,1,4) = 'M'
  719.                            t$986 = m%dim_3%EX
  719.                            t$987 = 1 + $I_L709_58
  719.                            call _bounds_error(  _substr(t$984,1,10), 719,  _substr(t$985,1,2), 3, 1, t$986, t$987, t$983 )
  716.                            $Unit_temp_O3 = nfprt
  716.                            $IOitem_O4 = (m%base_addr)(1 + $I_L712_54, 1 + $I_L716_42, 1 + $I_L709_58, 0)
  716.                            _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  716.                            $I_L716_42 = 1 + $I_L716_42
  716.                            if ( $I_L716_42 >= ( min( 10, m%dim_2%EX ) ) ) exit
  716.                         enddo
  716.                      else
  716.                         $I_L716_46 = 0
  716.                         do
  719.                             _substr(t$974,1,10) = 'Utils.f90'
  719.                             _substr(t$975,1,4) = 'M'
  719.                            t$976 = m%dim_1%EX
  719.                            t$977 = 1 + $I_L712_54
  719.                            call _bounds_error(  _substr(t$974,1,10), 719,  _substr(t$975,1,2), 1, 1, t$976, t$977, t$973 )
  719.                            if ( ( 1 + $I_L716_46 ) <= 0 .or. ( 1 + $I_L716_46 ) > m%dim_2%EX ) then
  719.                                _substr(t$979,1,10) = 'Utils.f90'
  719.                                _substr(t$980,1,4) = 'M'
  719.                               t$981 = m%dim_2%EX
  719.                               t$982 = 1 + $I_L716_46
  719.                               call _bounds_error(  _substr(t$979,1,10), 719,  _substr(t$980,1,2), 2, 1, t$981, t$982, t$978 )
  719.                            endif
  716.                            $Unit_temp_O3 = nfprt
  716.                            $IOitem_O4 = (m%base_addr)(1 + $I_L712_54, 1 + $I_L716_46, 1 + $I_L709_58, 0)
  716.                            _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  716.                            $I_L716_46 = 1 + $I_L716_46
  716.                            if ( $I_L716_46 >= ( min( 10, m%dim_2%EX ) ) ) exit
  716.                         enddo
  716.                      endif
  716.                   else if ( ( 1 + $I_L709_58 ) <= 0 .or. ( 1 + $I_L709_58 ) > m%dim_3%EX ) then
  716.                      $I_L716_44 = 0
  716.                      do
  719.                         if ( ( 1 + $I_L716_44 ) <= 0 .or. ( 1 + $I_L716_44 ) > m%dim_2%EX ) then
  719.                             _substr(t$979,1,10) = 'Utils.f90'
  719.                             _substr(t$980,1,4) = 'M'
  719.                            t$981 = m%dim_2%EX
  719.                            t$982 = 1 + $I_L716_44
  719.                            call _bounds_error(  _substr(t$979,1,10), 719,  _substr(t$980,1,2), 2, 1, t$981, t$982, t$978 )
  719.                         endif
  719.                          _substr(t$984,1,10) = 'Utils.f90'
  719.                          _substr(t$985,1,4) = 'M'
  719.                         t$986 = m%dim_3%EX
  719.                         t$987 = 1 + $I_L709_58
  719.                         call _bounds_error(  _substr(t$984,1,10), 719,  _substr(t$985,1,2), 3, 1, t$986, t$987, t$983 )
  716.                         $Unit_temp_O3 = nfprt
  716.                         $IOitem_O4 = (m%base_addr)(1 + $I_L712_54, 1 + $I_L716_44, 1 + $I_L709_58, 0)
  716.                         _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  716.                         $I_L716_44 = 1 + $I_L716_44
  716.                         if ( $I_L716_44 >= ( min( 10, m%dim_2%EX ) ) ) exit
  716.                      enddo
  716.                   else
  716.                      $I_L716_48 = 0
  716.                      do
  719.                         if ( ( 1 + $I_L716_48 ) <= 0 .or. ( 1 + $I_L716_48 ) > m%dim_2%EX ) then
  719.                             _substr(t$979,1,10) = 'Utils.f90'
  719.                             _substr(t$980,1,4) = 'M'
  719.                            t$981 = m%dim_2%EX
  719.                            t$982 = 1 + $I_L716_48
  719.                            call _bounds_error(  _substr(t$979,1,10), 719,  _substr(t$980,1,2), 2, 1, t$981, t$982, t$978 )
  719.                         endif
  716.                         $Unit_temp_O3 = nfprt
  716.                         $IOitem_O4 = (m%base_addr)(1 + $I_L712_54, 1 + $I_L716_48, 1 + $I_L709_58, 0)
  716.                         _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x2000200000000L ) ) )
  716.                         $I_L716_48 = 1 + $I_L716_48
  716.                         if ( $I_L716_48 >= ( min( 10, m%dim_2%EX ) ) ) exit
  716.                      enddo
  716.                   endif
  716.                   $Unit_temp_O5 = nfprt
  716.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  720.                   $I_L712_54 = 1 + $I_L712_54
  720.                   if ( $I_L712_54 >= m%dim_1%EX ) exit
  720.                enddo
  721.                $I_L709_58 = 1 + $I_L709_58
  720.                if ( $I_L709_58 >= m%dim_3%EX ) exit
  720.             enddo
  720.          else
  709.             $I_L709_56 = 0
  709.             do
  709.                i3 = ( 1 + $I_L709_56 )
  710.                _fwrite( _clist( 0, 0, 3,  _substr(c3,1,10), Null_Arg, Null_Arg, t$74,  _substr(t$73,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i3, 0x2000200000000L ) ) )
  711.                _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '', 0x800600000000L ) ) )
  712.                $I_L712_52 = 0
  712.                do
  712.                   i1 = ( 1 + $I_L712_52 )
  713.                   _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$76,  _substr(t$75,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1, 0x2000200000000L ) ) )
  714.                   i2h = min( 10, m%dim_2%EX )
  715.                   _fwrite( _clist( 0, 0, 3,  _substr(c2,1,10), Null_Arg, Null_Arg, t$78,  _substr(t$77,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i2h, 0x2000200000000L ) ) )
  716.                   $Unit_temp_O1 = nfprt
  716.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  717.                   t$954 = int( _alloc( _len( name ) ), 8 )
  717.                   _f90_adjustl(  _substr(t$953,1,_len( name )),  _substr(name,1,_len( name )) )
  716.                   t$958 = _ltrim(  _substr(t$953,1,_len( name )) )
  717.                   t$960 = int( _alloc( _zla( 0, t$958 ) ), 8 )
  717.                    _substr(t$959,1,_zla( 0, t$958 )) =  _substr(t$953,1,_ltrim(  _substr(t$953,1,_len( name )) ))
  717.                   _f90_adjustl(  _substr(t$955,1,10),  _substr(c1,1,10) )
  716.                   t$961 = _ltrim(  _substr(t$955,1,10) )
  717.                   t$963 = int( _alloc( _zla( 0, t$961 ) ), 8 )
  717.                    _substr(t$962,1,_zla( 0, t$961 )) =  _substr(t$955,1,_ltrim(  _substr(t$955,1,10) ))
  718.                   _f90_adjustl(  _substr(t$956,1,10),  _substr(c2,1,10) )
  716.                   t$964 = _ltrim(  _substr(t$956,1,10) )
  718.                   t$966 = int( _alloc( _zla( 0, t$964 ) ), 8 )
  718.                    _substr(t$965,1,_zla( 0, t$964 )) =  _substr(t$956,1,_ltrim(  _substr(t$956,1,10) ))
  718.                   _f90_adjustl(  _substr(t$957,1,10),  _substr(c3,1,10) )
  716.                   t$967 = _ltrim(  _substr(t$957,1,10) )
  718.                   t$969 = int( _alloc( _zla( 0, t$967 ) ), 8 )
  718.                    _substr(t$968,1,_zla( 0, t$967 )) =  _substr(t$957,1,_ltrim(  _substr(t$957,1,10) ))
  716.                   $Unit_temp_O2 = nfprt
  716.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$959,1,_zla( 0, t$958 )), 0x800600000000L ), _iotype(  _substr(t$962,1,_zla( 0, t$961 )), 0x800600000000L ), _iotype(  _substr(t$965,1,_zla( 0, t$964 )), 0x800600000000L ), _iotype(  _substr(t$968,1,_zla( 0, t$967 )), 0x800600000000L ) ) )
  718.                   _free( t$969 )
  718.                   _free( t$966 )
  717.                   _free( t$963 )
  717.                   _free( t$960 )
  717.                   _free( t$954 )
  716.                   $Unit_temp_O5 = nfprt
  716.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  720.                   $I_L712_52 = 1 + $I_L712_52
  720.                   if ( $I_L712_52 >= m%dim_1%EX ) exit
  720.                enddo
  721.                $I_L709_56 = 1 + $I_L709_56
  720.                if ( $I_L709_56 >= m%dim_3%EX ) exit
  720.             enddo
  720.          endif
  720.       endif
  722.       return
  722.       end
  722.       
  826.       
  826.       subroutine creategaussquad( degreegiven, gaussgiven )
  751.       fvals%header%el_len = 64
  751.       fvals%header%assoc = 0
  751.       fvals%header%ptr_alloc = 0
  751.       fvals%header%p_or_a = 2
  751.       fvals%header%a_contig = 1
  751.       fvals%header%dv_versn = 2
  751.       fvals%header%dv_smunit = 64
  751.       fvals%header%d_type = 0
  751.       fvals%header%n_params = 0
  751.       fvals%header%pad_codim = 0
  751.       fvals%header%n_codim = 0
  751.       fvals%header%pad_dim = 0
  751.       fvals%header%n_dim = 1
  751.       fvals%header%d_type_idx = 13
  751.       fvals%header%typ_code = 134481411
  751.       fvals%header%orig_base = 0
  751.       fvals%header%orig_size = 0
  751.       fvals%dim_1%LB = 1
  751.       fvals%dim_1%EX = 0
  751.       fvals%dim_1%SM = 1
  762.       if ( degreegiven <= 0 ) then
  763.          _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$82,  _substr(t$81,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( degreegiven, 0x2000200000000L ) ) )
  764.          _f90_adjustl(  _substr(t$988,1,10),  _substr(c1,1,10) )
  764.          t$989 = _ltrim(  _substr(t$988,1,10) )
  764.          t$991 = int( _alloc( _zla( 0, t$989 ) ), 8 )
  764.           _substr(t$990,1,_zla( 0, t$989 )) =  _substr(t$988,1,_ltrim(  _substr(t$988,1,10) ))
  764.          $Unit_temp_O0 = nfprt
  764.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$84,  _substr(t$83,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(CreateGaussQuad)**', 0x800600000000L ), _iotype(  _substr(t$990,1,_zla( 0, t$989 )), 0x800600000000L ) ) )
  764.          _free( t$991 )
  765.           _substr(t$992,1,4) = ' '
  765.          call _stop(  _substr(t$992,1,1) )
  765.       else
  767.          maxdegree = degreegiven
  772.          gausscolat%header%a_contig = 1
  772.          gausscolat%dim_1%LB = 1
  772.          gausscolat%dim_1%EX = _zla( 0, degreegiven / 2 )
  772.          gausscolat%dim_1%SM = 1
  772.          $_allo_P2(0) = 0x1000000000001L
  772.          $_allo_P2(1) = loc( gausscolat )
  772.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  773.          singausscolat%header%a_contig = 1
  773.          singausscolat%dim_1%LB = 1
  773.          singausscolat%dim_1%EX = _zla( 0, degreegiven / 2 )
  773.          singausscolat%dim_1%SM = 1
  773.          $_allo_P3(0) = 0x1000000000001L
  773.          $_allo_P3(1) = loc( singausscolat )
  773.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  774.          cosgausscolat%header%a_contig = 1
  774.          cosgausscolat%dim_1%LB = 1
  774.          cosgausscolat%dim_1%EX = _zla( 0, degreegiven / 2 )
  774.          cosgausscolat%dim_1%SM = 1
  774.          $_allo_P4(0) = 0x1000000000001L
  774.          $_allo_P4(1) = loc( cosgausscolat )
  774.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  775.          auxgausscolat%header%a_contig = 1
  775.          auxgausscolat%dim_1%LB = 1
  775.          auxgausscolat%dim_1%EX = _zla( 0, degreegiven / 2 )
  775.          auxgausscolat%dim_1%SM = 1
  775.          $_allo_P5(0) = 0x1000000000001L
  775.          $_allo_P5(1) = loc( auxgausscolat )
  775.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  776.          fvals%header%a_contig = 1
  776.          fvals%dim_1%LB = 1
  776.          fvals%dim_1%EX = _zla( 0, degreegiven / 2 )
  776.          fvals%dim_1%SM = 1
  776.          $_allo_P6(0) = 0x1000000000001L
  776.          $_allo_P6(1) = loc( fvals )
  776.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  777.          gausspoints%header%a_contig = 1
  777.          gausspoints%dim_1%LB = 1
  777.          gausspoints%dim_1%EX = _zla( 0, degreegiven )
  777.          gausspoints%dim_1%SM = 1
  777.          $_allo_P7(0) = 0x1000000000001L
  777.          $_allo_P7(1) = loc( gausspoints )
  777.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  778.          gaussweights%header%a_contig = 1
  778.          gaussweights%dim_1%LB = 1
  778.          gaussweights%dim_1%EX = _zla( 0, degreegiven )
  778.          gaussweights%dim_1%SM = 1
  778.          $_allo_P8(0) = 0x1000000000001L
  778.          $_allo_P8(1) = loc( gaussweights )
  778.          call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  779.          colrad%header%a_contig = 1
  779.          colrad%dim_1%LB = 1
  779.          colrad%dim_1%EX = _zla( 0, degreegiven )
  779.          colrad%dim_1%SM = 1
  779.          $_allo_P9(0) = 0x1000000000001L
  779.          $_allo_P9(1) = loc( colrad )
  779.          call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  780.          rcs2%header%a_contig = 1
  780.          rcs2%dim_1%LB = 1
  780.          rcs2%dim_1%EX = _zla( 0, degreegiven / 2 )
  780.          rcs2%dim_1%SM = 1
  780.          $_allo_P10(0) = 0x1000000000001L
  780.          $_allo_P10(1) = loc( rcs2 )
  780.          call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  784.          call createlegpol( maxdegree )
  788.          if ( gaussgiven ) then
  789.             t$993 = cosgausscolat
  789.             t$994 = gaussweights
  789.             call readgauss( t$993, t$994,  _substr(fnamegauss,1,211), maxdegree )
  789.          else
  791.             call legpolrootsandweights( maxdegree )
  792.             $F_A39 = ( maxdegree + maxdegree / -2 )
  792.             if ( maxdegree + maxdegree / -2 > 0 ) then
  792.                $SC_gaussweights_I37 = gaussweights%dim_1%EX
  792.                $SC_gaussweights_I38 = gaussweights%dim_1%LB
  792.                $I_L792_32 = 0
  792. !dir$ ivdep
  792.                do
  792.                   (gaussweights%base_addr)($I_L792_32 + maxdegree / 2 + 1, 0) = (gaussweights%base_addr)(maxdegree / 2 + -$I_L792_32, 0)
  792.                   $I_L792_32 = 1 + $I_L792_32
  792.                   if ( $I_L792_32 >= $F_A39 ) exit
  792.                enddo
  792.             endif
  793.             if ( myid == 0 ) then
  794.                t$995 = cosgausscolat
  794.                t$996 = gaussweights
  794.                call writegauss( t$995, t$996,  _substr(fnamegauss,1,211), maxdegree )
  794.             endif
  794.          endif
  797.          $F_A40 = cosgausscolat%dim_1%EX
  797.          if ( cosgausscolat%dim_1%EX > 0 ) then
  797.             $SC_cosgausscolat_I39 = cosgausscolat%dim_1%LB
  797.             $SC_gausscolat_I40 = gausscolat%dim_1%EX
  797.             $SC_gausscolat_I41 = gausscolat%dim_1%LB
  797.             $I_L797_34 = 0
  797. !dir$ ivdep
  797.             do
  797.                (gausscolat%base_addr)($SC_gausscolat_I41 + $I_L797_34, 0) = acos( (cosgausscolat%base_addr)($SC_cosgausscolat_I39 + $I_L797_34, 0) )
  797.                $I_L797_34 = 1 + $I_L797_34
  797.                if ( $I_L797_34 >= $F_A40 ) exit
  797.             enddo
  797.          endif
  798.          $F_A41 = singausscolat%dim_1%EX
  798.          if ( singausscolat%dim_1%EX > 0 ) then
  798.             $SC_singausscolat_I42 = singausscolat%dim_1%LB
  798.             $SC_gausscolat_I40 = gausscolat%dim_1%EX
  798.             $SC_gausscolat_I41 = gausscolat%dim_1%LB
  798.             $I_L798_36 = 0
  798. !dir$ ivdep
  798.             do
  798.                (singausscolat%base_addr)($SC_singausscolat_I42 + $I_L798_36, 0) = sin( (gausscolat%base_addr)($SC_gausscolat_I41 + $I_L798_36, 0) )
  798.                $I_L798_36 = 1 + $I_L798_36
  798.                if ( $I_L798_36 >= $F_A41 ) exit
  798.             enddo
  798.          endif
  799.          $F_A42 = auxgausscolat%dim_1%EX
  799.          if ( auxgausscolat%dim_1%EX > 0 ) then
  799.             $SC_auxgausscolat_I44 = auxgausscolat%dim_1%LB
  799.             $SC_singausscolat_I43 = singausscolat%dim_1%EX
  799.             $SC_singausscolat_I42 = singausscolat%dim_1%LB
  799.             $I_L799_38 = 0
  799. !dir$ ivdep
  799.             do
  799.                (auxgausscolat%base_addr)($SC_auxgausscolat_I44 + $I_L799_38, 0) = 1.0/( (singausscolat%base_addr)($SC_singausscolat_I42 + $I_L799_38, 0) * (singausscolat%base_addr)($SC_singausscolat_I42 + $I_L799_38, 0) )
  799.                $I_L799_38 = 1 + $I_L799_38
  799.                if ( $I_L799_38 >= $F_A42 ) exit
  799.             enddo
  799.          endif
  800.          $F_A43 = maxdegree / 2
  800.          if ( maxdegree >= 2 ) then
  800.             $SC_gausspoints_I46 = gausspoints%dim_1%EX
  800.             $SC_gausspoints_I47 = gausspoints%dim_1%LB
  800.             $SC_cosgausscolat_I45 = cosgausscolat%dim_1%EX
  800.             $SC_cosgausscolat_I39 = cosgausscolat%dim_1%LB
  800.             $I_L800_40 = 0
  800. !dir$ ivdep
  800.             do
  800.                (gausspoints%base_addr)(1 + $I_L800_40, 0) = (cosgausscolat%base_addr)($SC_cosgausscolat_I39 + $I_L800_40, 0)
  800.                $I_L800_40 = 1 + $I_L800_40
  800.                if ( $I_L800_40 >= $F_A43 ) exit
  800.             enddo
  803.             $I_L803_30 = 0
  803. !dir$ ivdep
  803.             do
  804.                (colrad%base_addr)(1 + $I_L803_30, 0) = (gausscolat%base_addr)(1 + $I_L803_30, 0)
  805.                (colrad%base_addr)(maxdegree + -$I_L803_30, 0) = 3.14159265358979 + -(gausscolat%base_addr)(1 + $I_L803_30, 0)
  806.                (rcs2%base_addr)(1 + $I_L803_30, 0) = (auxgausscolat%base_addr)(1 + $I_L803_30, 0)
  807.                $I_L803_30 = 1 + $I_L803_30
  803.                if ( $I_L803_30 >= maxdegree / 2 ) exit
  803.             enddo
  803.          endif
  801.          $F_A44 = ( maxdegree + maxdegree / -2 )
  801.          if ( maxdegree + maxdegree / -2 > 0 ) then
  801.             $SC_gausspoints_I46 = gausspoints%dim_1%EX
  801.             $SC_gausspoints_I47 = gausspoints%dim_1%LB
  801.             $I_L801_42 = 0
  801. !dir$ ivdep
  801.             do
  801.                (gausspoints%base_addr)($I_L801_42 + maxdegree / 2 + 1, 0) = -(gausspoints%base_addr)(maxdegree / 2 + -$I_L801_42, 0)
  801.                $I_L801_42 = 1 + $I_L801_42
  801.                if ( $I_L801_42 >= $F_A44 ) exit
  801.             enddo
  801.          endif
  810.          if ( ( 1 < colrad%dim_1%LB .or. 0 >= colrad%dim_1%LB + colrad%dim_1%EX + -1 .or. -1 + maxdegree < colrad%dim_1%LB .or. -1 + maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  810.              _substr(t$1001,1,10) = 'Utils.f90'
  810.              _substr(t$1002,1,7) = 'COLRAD'
  810.             t$1003 = colrad%dim_1%LB
  810.             t$1004 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  810.             t$1005 = ( -1 + maxdegree )
  810.             call _rbounds_error(  _substr(t$1001,1,10), 810,  _substr(t$1002,1,7), 1, t$1003, t$1004, 1, t$1005, 1, t$1000 )
  810.          endif
  810.          if ( ( 2 < colrad%dim_1%LB .or. colrad%dim_1%LB + colrad%dim_1%EX + -3 < 0 .or. maxdegree < colrad%dim_1%LB .or. maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  810.              _substr(t$1007,1,10) = 'Utils.f90'
  810.              _substr(t$1008,1,7) = 'COLRAD'
  810.             t$1009 = colrad%dim_1%LB
  810.             t$1010 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  810.             t$1011 = maxdegree
  810.             call _rbounds_error(  _substr(t$1007,1,10), 810,  _substr(t$1008,1,7), 1, t$1009, t$1010, 2, t$1011, 1, t$1006 )
  810.          endif
  810.          $Reduc_A45 = inf
  810.          $F_A47 = -1 + maxdegree
  810.          if ( -1 + maxdegree > 0 ) then
  810.             $SC_colrad_I48 = colrad%dim_1%EX
  810.             $SC_colrad_I49 = colrad%dim_1%LB
  810.             $I_L810_44 = 0
  810. !dir$ ivdep
  810.             do
  810.                $Reduc_A45 = min( $Reduc_A45, 57.295779513082387 * abs( (colrad%base_addr)(1 + $I_L810_44, 0) + -(colrad%base_addr)(2 + $I_L810_44, 0) ) )
  810.                $I_L810_44 = 1 + $I_L810_44
  810.                if ( $I_L810_44 >= $F_A47 ) exit
  810.             enddo
  810.          endif
  811.          if ( ( 1 < colrad%dim_1%LB .or. 0 >= colrad%dim_1%LB + colrad%dim_1%EX + -1 .or. -1 + maxdegree < colrad%dim_1%LB .or. -1 + maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  811.              _substr(t$1014,1,10) = 'Utils.f90'
  811.              _substr(t$1015,1,7) = 'COLRAD'
  811.             t$1016 = colrad%dim_1%LB
  811.             t$1017 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  811.             t$1018 = ( -1 + maxdegree )
  811.             call _rbounds_error(  _substr(t$1014,1,10), 811,  _substr(t$1015,1,7), 1, t$1016, t$1017, 1, t$1018, 1, t$1013 )
  811.          endif
  811.          if ( ( 2 < colrad%dim_1%LB .or. colrad%dim_1%LB + colrad%dim_1%EX + -3 < 0 .or. maxdegree < colrad%dim_1%LB .or. maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  811.              _substr(t$1020,1,10) = 'Utils.f90'
  811.              _substr(t$1021,1,7) = 'COLRAD'
  811.             t$1022 = colrad%dim_1%LB
  811.             t$1023 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  811.             t$1024 = maxdegree
  811.             call _rbounds_error(  _substr(t$1020,1,10), 811,  _substr(t$1021,1,7), 1, t$1022, t$1023, 2, t$1024, 1, t$1019 )
  811.          endif
  811.          $Reduc_A48 = -inf
  811.          $F_A50 = -1 + maxdegree
  811.          if ( -1 + maxdegree > 0 ) then
  811.             $SC_colrad_I48 = colrad%dim_1%EX
  811.             $SC_colrad_I49 = colrad%dim_1%LB
  811.             $I_L811_46 = 0
  811. !dir$ ivdep
  811.             do
  811.                $Reduc_A48 = max( $Reduc_A48, 57.295779513082387 * abs( (colrad%base_addr)(1 + $I_L811_46, 0) + -(colrad%base_addr)(2 + $I_L811_46, 0) ) )
  811.                $I_L811_46 = 1 + $I_L811_46
  811.                if ( $I_L811_46 >= $F_A50 ) exit
  811.             enddo
  811.          endif
  809.          $_IOitem_P0(0) = $Reduc_A45
  809.          $_IOitem_P0(1) = $Reduc_A48
  809.          $_IOitem_P0(2) = ( 180.0 * 1.0/maxdegree )
  809.          _fwrite( _clist( 0, 0, 3,  _substr(line,1,256), Null_Arg, Null_Arg, t$86,  _substr(t$85,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 2, 1 )), 0x4000300000000L ) ) )
  813.           _substr(t$1026,1,21) = '**(CreateGaussQuad)**'
  813.          call msgone(  _substr(t$1026,1,21),  _substr(line,1,256) )
  816.          if ( ( 1 < colrad%dim_1%LB .or. 0 >= colrad%dim_1%LB + colrad%dim_1%EX + -1 .or. -1 + maxdegree < colrad%dim_1%LB .or. -1 + maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  816.              _substr(t$1028,1,10) = 'Utils.f90'
  816.              _substr(t$1029,1,7) = 'COLRAD'
  816.             t$1003 = colrad%dim_1%LB
  816.             t$1004 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  816.             t$1005 = ( -1 + maxdegree )
  816.             call _rbounds_error(  _substr(t$1028,1,10), 816,  _substr(t$1029,1,7), 1, t$1003, t$1004, 1, t$1005, 1, t$1027 )
  816.          endif
  816.          if ( ( 2 < colrad%dim_1%LB .or. colrad%dim_1%LB + colrad%dim_1%EX + -3 < 0 .or. maxdegree < colrad%dim_1%LB .or. maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  816.              _substr(t$1031,1,10) = 'Utils.f90'
  816.              _substr(t$1032,1,7) = 'COLRAD'
  816.             t$1009 = colrad%dim_1%LB
  816.             t$1010 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  816.             t$1011 = maxdegree
  816.             call _rbounds_error(  _substr(t$1031,1,10), 816,  _substr(t$1032,1,7), 1, t$1009, t$1010, 2, t$1011, 1, t$1030 )
  816.          endif
  816.          $Reduc_A51 = inf
  816.          $F_A53 = -1 + maxdegree
  816.          if ( -1 + maxdegree > 0 ) then
  816.             $SC_colrad_I48 = colrad%dim_1%EX
  816.             $SC_colrad_I49 = colrad%dim_1%LB
  816.             $I_L816_48 = 0
  816. !dir$ ivdep
  816.             do
  816.                $Reduc_A51 = min( $Reduc_A51, 57.295779513082387 * abs( (colrad%base_addr)(1 + $I_L816_48, 0) + -(colrad%base_addr)(2 + $I_L816_48, 0) ) )
  816.                $I_L816_48 = 1 + $I_L816_48
  816.                if ( $I_L816_48 >= $F_A53 ) exit
  816.             enddo
  816.          endif
  816.          t$1012 = 112.0 * $Reduc_A51
  817.          if ( ( 1 < colrad%dim_1%LB .or. 0 >= colrad%dim_1%LB + colrad%dim_1%EX + -1 .or. -1 + maxdegree < colrad%dim_1%LB .or. -1 + maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  817.              _substr(t$1034,1,10) = 'Utils.f90'
  817.              _substr(t$1035,1,7) = 'COLRAD'
  817.             t$1016 = colrad%dim_1%LB
  817.             t$1017 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  817.             t$1018 = ( -1 + maxdegree )
  817.             call _rbounds_error(  _substr(t$1034,1,10), 817,  _substr(t$1035,1,7), 1, t$1016, t$1017, 1, t$1018, 1, t$1033 )
  817.          endif
  817.          if ( ( 2 < colrad%dim_1%LB .or. colrad%dim_1%LB + colrad%dim_1%EX + -3 < 0 .or. maxdegree < colrad%dim_1%LB .or. maxdegree > colrad%dim_1%LB + colrad%dim_1%EX + -1 ) .and. -1 + maxdegree > 0 ) then
  817.              _substr(t$1037,1,10) = 'Utils.f90'
  817.              _substr(t$1038,1,7) = 'COLRAD'
  817.             t$1022 = colrad%dim_1%LB
  817.             t$1023 = colrad%dim_1%LB + colrad%dim_1%EX + -1
  817.             t$1024 = maxdegree
  817.             call _rbounds_error(  _substr(t$1037,1,10), 817,  _substr(t$1038,1,7), 1, t$1022, t$1023, 2, t$1024, 1, t$1036 )
  817.          endif
  817.          $Reduc_A54 = -inf
  817.          $F_A56 = -1 + maxdegree
  817.          if ( -1 + maxdegree > 0 ) then
  817.             $SC_colrad_I48 = colrad%dim_1%EX
  817.             $SC_colrad_I49 = colrad%dim_1%LB
  817.             $I_L817_50 = 0
  817. !dir$ ivdep
  817.             do
  817.                $Reduc_A54 = max( $Reduc_A54, 57.295779513082387 * abs( (colrad%base_addr)(1 + $I_L817_50, 0) + -(colrad%base_addr)(2 + $I_L817_50, 0) ) )
  817.                $I_L817_50 = 1 + $I_L817_50
  817.                if ( $I_L817_50 >= $F_A56 ) exit
  817.             enddo
  817.          endif
  815.          $_IOitem_P1(0) = t$1012
  815.          $_IOitem_P1(1) = ( 112.0 * $Reduc_A54 )
  815.          $_IOitem_P1(2) = ( 20160.0 * 1.0/maxdegree )
  815.          _fwrite( _clist( 0, 0, 3,  _substr(line,1,256), Null_Arg, Null_Arg, t$88,  _substr(t$87,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 2, 1 )), 0x4000300000000L ) ) )
  819.           _substr(t$1039,1,21) = '**(CreateGaussQuad)**'
  819.          call msgone(  _substr(t$1039,1,21),  _substr(line,1,256) )
  821.          if ( ( 1 + maxdegree / 2 < gaussweights%dim_1%LB .or. 1 + maxdegree / 2 > gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1 .or. maxdegree < gaussweights%dim_1%LB .or. maxdegree > gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1 ) .and. maxdegree + maxdegree / -2 > 0 ) then
  821.              _substr(t$1041,1,10) = 'Utils.f90'
  821.              _substr(t$1042,1,13) = 'GAUSSWEIGHTS'
  821.             t$1003 = gaussweights%dim_1%LB
  821.             t$1004 = gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1
  821.             t$1005 = ( 1 + maxdegree / 2 )
  821.             t$1009 = maxdegree
  821.             call _rbounds_error(  _substr(t$1041,1,10), 821,  _substr(t$1042,1,13), 1, t$1003, t$1004, t$1005, t$1009, 1, t$1040 )
  821.          endif
  821.          $Reduc_A57 = 0.0
  821.          $F_A59 = ( maxdegree + maxdegree / -2 )
  821.          if ( maxdegree + maxdegree / -2 > 0 ) then
  821.             $SC_gaussweights_I37 = gaussweights%dim_1%EX
  821.             $SC_gaussweights_I38 = gaussweights%dim_1%LB
  821.             $I_L821_52 = 0
  821. !dir$ ivdep
  821.             do
  821.                $Reduc_A57 = $Reduc_A57 + (gaussweights%base_addr)($I_L821_52 + maxdegree / 2 + 1, 0)
  821.                $I_L821_52 = 1 + $I_L821_52
  821.                if ( $I_L821_52 >= $F_A59 ) exit
  821.             enddo
  821.          endif
  821.          t$1012 = $Reduc_A57
  822.          if ( ( 1 + maxdegree / 2 < gaussweights%dim_1%LB .or. 1 + maxdegree / 2 > gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1 .or. maxdegree < gaussweights%dim_1%LB .or. maxdegree > gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1 ) .and. maxdegree + maxdegree / -2 > 0 ) then
  822.              _substr(t$1044,1,10) = 'Utils.f90'
  822.              _substr(t$1045,1,13) = 'GAUSSWEIGHTS'
  822.             t$1010 = gaussweights%dim_1%LB
  822.             t$1011 = gaussweights%dim_1%LB + gaussweights%dim_1%EX + -1
  822.             t$1016 = ( 1 + maxdegree / 2 )
  822.             t$1017 = maxdegree
  822.             call _rbounds_error(  _substr(t$1044,1,10), 822,  _substr(t$1045,1,13), 1, t$1010, t$1011, t$1016, t$1017, 1, t$1043 )
  822.          endif
  822.          $Reduc_A60 = 0.0
  822.          $F_A62 = ( maxdegree + maxdegree / -2 )
  822.          if ( maxdegree + maxdegree / -2 > 0 ) then
  822.             $SC_gaussweights_I37 = gaussweights%dim_1%EX
  822.             $SC_gaussweights_I38 = gaussweights%dim_1%LB
  822.             $I_L822_54 = 0
  822. !dir$ ivdep
  822.             do
  822.                $Reduc_A60 = $Reduc_A60 + (gaussweights%base_addr)($I_L822_54 + maxdegree / 2 + 1, 0)
  822.                $I_L822_54 = 1 + $I_L822_54
  822.                if ( $I_L822_54 >= $F_A62 ) exit
  822.             enddo
  822.          endif
  822.          t$1025 = 1.0 + -$Reduc_A60
  821.          _fwrite( _clist( 0, 0, 3,  _substr(line,1,256), Null_Arg, Null_Arg, t$90,  _substr(t$89,1,17), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( t$1012, 0x804060300000000L ), _iotype( t$1025, 0x4000300000000L ) ) )
  823.           _substr(t$1046,1,21) = '**(CreateGaussQuad)**'
  823.          call msgone(  _substr(t$1046,1,21),  _substr(line,1,256) )
  754.          $_allo_P11(0) = 0x1000000000001L
  754.          $_allo_P11(1) = loc( fvals )
  754.          call _dealloc( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
  754.       endif
  826.       return
  826.       end
  826.       
  829.       
  829.       subroutine creategridvalues
  829.       t$91 = jmax / 2
  829.       t$275 = 1 + jmax / 2
  832.       t$276 = _zla( 0, 1 + jmax / 2 )
  832.       t$279 = 4 * _zla( 0, 1 + jmax / 2 )
  829.       t$277 = int( _alloc( 4 * _zla( 0, 1 + jmax / 2 ) ), 8 )
  832.       t$278 = t$277
  833.       colrad2d%header%a_contig = 1
  833.       colrad2d%dim_1%LB = 1
  833.       colrad2d%dim_1%EX = _zla( 0, ibmax )
  833.       colrad2d%dim_1%SM = 1
  833.       colrad2d%dim_2%LB = 1
  833.       colrad2d%dim_2%EX = _zla( 0, jbmax )
  833.       colrad2d%dim_2%SM = _zla( 0, ibmax )
  833.       $_allo_P2(0) = 0x1000000000001L
  833.       $_allo_P2(1) = loc( colrad2d )
  833.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  834.       rcl%header%a_contig = 1
  834.       rcl%dim_1%LB = 1
  834.       rcl%dim_1%EX = _zla( 0, ibmax )
  834.       rcl%dim_1%SM = 1
  834.       rcl%dim_2%LB = 1
  834.       rcl%dim_2%EX = _zla( 0, jbmax )
  834.       rcl%dim_2%SM = _zla( 0, ibmax )
  834.       $_allo_P3(0) = 0x1000000000001L
  834.       $_allo_P3(1) = loc( rcl )
  834.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  835.       $F_A33 = _zla( 0, jbmax )
  835.       $F_A34 = _zla( 0, ibmax )
  835.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  835.          $I_L835_116 = 0
  835.          do
  835.             $I_L835_110 = 0
  835. !dir$ ivdep
  835.             do
  835.                (rcl%base_addr)(1 + $I_L835_110, 1 + $I_L835_116, 0) = 0.0
  835.                $I_L835_110 = 1 + $I_L835_110
  835.                if ( $I_L835_110 >= $F_A34 ) exit
  835.             enddo
  835.             $I_L835_116 = 1 + $I_L835_116
  835.             if ( $I_L835_116 >= $F_A33 ) exit
  835.          enddo
  835.       endif
  836.       cel_area%header%a_contig = 1
  836.       cel_area%dim_1%LB = 1
  836.       cel_area%dim_1%EX = ( max( 0, jmax ) )
  836.       cel_area%dim_1%SM = 1
  836.       $_allo_P4(0) = 0x1000000000001L
  836.       $_allo_P4(1) = loc( cel_area )
  836.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  837.       total_mass%header%a_contig = 1
  837.       total_mass%dim_1%LB = 0
  837.       total_mass%dim_1%EX = ( max( 0, 1 + nscalars ) )
  837.       total_mass%dim_1%SM = 1
  837.       $_allo_P5(0) = 0x1000000000001L
  837.       $_allo_P5(1) = loc( total_mass )
  837.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  838.       $F_A35 = ( 1 + nscalars )
  838.       if ( nscalars >= 0 ) then
  838.          $I_L838_112 = 0
  838. !dir$ ivdep
  838.          do
  838.             (total_mass%base_addr)($I_L838_112, 0) = 0.0
  838.             $I_L838_112 = 1 + $I_L838_112
  838.             if ( $I_L838_112 >= $F_A35 ) exit
  838.          enddo
  838.       endif
  839.       massconsrv%header%a_contig = 1
  839.       massconsrv%dim_1%LB = 1
  839.       massconsrv%dim_1%EX = ( max( 0, jmax ) )
  839.       massconsrv%dim_1%SM = 1
  839.       $_allo_P6(0) = 0x1000000000001L
  839.       $_allo_P6(1) = loc( massconsrv )
  839.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  840.       fconsrv%header%a_contig = 1
  840.       fconsrv%dim_1%LB = 1
  840.       fconsrv%dim_1%EX = ( max( 0, nscalars ) )
  840.       fconsrv%dim_1%SM = 1
  840.       fconsrv%dim_2%LB = 1
  840.       fconsrv%dim_2%EX = ( max( 0, jmax ) )
  840.       fconsrv%dim_2%SM = ( max( 0, nscalars ) )
  840.       $_allo_P7(0) = 0x1000000000001L
  840.       $_allo_P7(1) = loc( fconsrv )
  840.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  841.       totmas%header%a_contig = 1
  841.       totmas%dim_1%LB = 1
  841.       totmas%dim_1%EX = ( max( 0, nscalars ) )
  841.       totmas%dim_1%SM = 1
  841.       $_allo_P8(0) = 0x1000000000001L
  841.       $_allo_P8(1) = loc( totmas )
  841.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  842.       coslatj%header%a_contig = 1
  842.       coslatj%dim_1%LB = 1
  842.       coslatj%dim_1%EX = ( max( 0, jmax ) )
  842.       coslatj%dim_1%SM = 1
  842.       $_allo_P9(0) = 0x1000000000001L
  842.       $_allo_P9(1) = loc( coslatj )
  842.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  843.       sinlatj%header%a_contig = 1
  843.       sinlatj%dim_1%LB = 1
  843.       sinlatj%dim_1%EX = ( max( 0, jmax ) )
  843.       sinlatj%dim_1%SM = 1
  843.       $_allo_P10(0) = 0x1000000000001L
  843.       $_allo_P10(1) = loc( sinlatj )
  843.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  844.       coslat%header%a_contig = 1
  844.       coslat%dim_1%LB = 1
  844.       coslat%dim_1%EX = ( max( 0, ibmax ) )
  844.       coslat%dim_1%SM = 1
  844.       coslat%dim_2%LB = 1
  844.       coslat%dim_2%EX = ( max( 0, jbmax ) )
  844.       coslat%dim_2%SM = ( max( 0, ibmax ) )
  844.       $_allo_P11(0) = 0x1000000000001L
  844.       $_allo_P11(1) = loc( coslat )
  844.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
  845.       sinlat%header%a_contig = 1
  845.       sinlat%dim_1%LB = 1
  845.       sinlat%dim_1%EX = ( max( 0, ibmax ) )
  845.       sinlat%dim_1%SM = 1
  845.       sinlat%dim_2%LB = 1
  845.       sinlat%dim_2%EX = ( max( 0, jbmax ) )
  845.       sinlat%dim_2%SM = ( max( 0, ibmax ) )
  845.       $_allo_P12(0) = 0x1000000000001L
  845.       $_allo_P12(1) = loc( sinlat )
  845.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
  846.       coslon%header%a_contig = 1
  846.       coslon%dim_1%LB = 1
  846.       coslon%dim_1%EX = ( max( 0, ibmax ) )
  846.       coslon%dim_1%SM = 1
  846.       coslon%dim_2%LB = 1
  846.       coslon%dim_2%EX = ( max( 0, jbmax ) )
  846.       coslon%dim_2%SM = ( max( 0, ibmax ) )
  846.       $_allo_P13(0) = 0x1000000000001L
  846.       $_allo_P13(1) = loc( coslon )
  846.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
  847.       sinlon%header%a_contig = 1
  847.       sinlon%dim_1%LB = 1
  847.       sinlon%dim_1%EX = ( max( 0, ibmax ) )
  847.       sinlon%dim_1%SM = 1
  847.       sinlon%dim_2%LB = 1
  847.       sinlon%dim_2%EX = ( max( 0, jbmax ) )
  847.       sinlon%dim_2%SM = ( max( 0, ibmax ) )
  847.       $_allo_P14(0) = 0x1000000000001L
  847.       $_allo_P14(1) = loc( sinlon )
  847.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
  848.       cos2lat%header%a_contig = 1
  848.       cos2lat%dim_1%LB = 1
  848.       cos2lat%dim_1%EX = ( max( 0, ibmax ) )
  848.       cos2lat%dim_1%SM = 1
  848.       cos2lat%dim_2%LB = 1
  848.       cos2lat%dim_2%EX = ( max( 0, jbmax ) )
  848.       cos2lat%dim_2%SM = ( max( 0, ibmax ) )
  848.       $_allo_P15(0) = 0x1000000000001L
  848.       $_allo_P15(1) = loc( cos2lat )
  848.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
  849.       ercossin%header%a_contig = 1
  849.       ercossin%dim_1%LB = 1
  849.       ercossin%dim_1%EX = ( max( 0, ibmax ) )
  849.       ercossin%dim_1%SM = 1
  849.       ercossin%dim_2%LB = 1
  849.       ercossin%dim_2%EX = ( max( 0, jbmax ) )
  849.       ercossin%dim_2%SM = ( max( 0, ibmax ) )
  849.       $_allo_P16(0) = 0x1000000000001L
  849.       $_allo_P16(1) = loc( ercossin )
  849.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
  850.       fcor%header%a_contig = 1
  850.       fcor%dim_1%LB = 1
  850.       fcor%dim_1%EX = ( max( 0, ibmax ) )
  850.       fcor%dim_1%SM = 1
  850.       fcor%dim_2%LB = 1
  850.       fcor%dim_2%EX = ( max( 0, jbmax ) )
  850.       fcor%dim_2%SM = ( max( 0, ibmax ) )
  850.       $_allo_P17(0) = 0x1000000000001L
  850.       $_allo_P17(1) = loc( fcor )
  850.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
  851.       cosiv%header%a_contig = 1
  851.       cosiv%dim_1%LB = 1
  851.       cosiv%dim_1%EX = ( max( 0, ibmax ) )
  851.       cosiv%dim_1%SM = 1
  851.       cosiv%dim_2%LB = 1
  851.       cosiv%dim_2%EX = ( max( 0, jbmax ) )
  851.       cosiv%dim_2%SM = ( max( 0, ibmax ) )
  851.       $_allo_P18(0) = 0x1000000000001L
  851.       $_allo_P18(1) = loc( cosiv )
  851.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
  852.       longit%header%a_contig = 1
  852.       longit%dim_1%LB = 1
  852.       longit%dim_1%EX = ( max( 0, ibmax ) )
  852.       longit%dim_1%SM = 1
  852.       longit%dim_2%LB = 1
  852.       longit%dim_2%EX = ( max( 0, jbmax ) )
  852.       longit%dim_2%SM = ( max( 0, ibmax ) )
  852.       $_allo_P19(0) = 0x1000000000001L
  852.       $_allo_P19(1) = loc( longit )
  852.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
  853.       lonrad%header%a_contig = 1
  853.       lonrad%dim_1%LB = 1
  853.       lonrad%dim_1%EX = ( max( 0, ibmax ) )
  853.       lonrad%dim_1%SM = 1
  853.       lonrad%dim_2%LB = 1
  853.       lonrad%dim_2%EX = ( max( 0, jbmax ) )
  853.       lonrad%dim_2%SM = ( max( 0, ibmax ) )
  853.       $_allo_P20(0) = 0x1000000000001L
  853.       $_allo_P20(1) = loc( lonrad )
  853.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
  854.       lati%header%a_contig = 1
  854.       lati%dim_1%LB = 1
  854.       lati%dim_1%EX = ( max( 0, jmax ) )
  854.       lati%dim_1%SM = 1
  854.       $_allo_P21(0) = 0x1000000000001L
  854.       $_allo_P21(1) = loc( lati )
  854.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
  855.       long%header%a_contig = 1
  855.       long%dim_1%LB = 1
  855.       long%dim_1%EX = ( max( 0, imax ) )
  855.       long%dim_1%SM = 1
  855.       $_allo_P22(0) = 0x1000000000001L
  855.       $_allo_P22(1) = loc( long )
  855.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
  856.       cosz%header%a_contig = 1
  856.       cosz%dim_1%LB = 1
  856.       cosz%dim_1%EX = ( max( 0, jmax ) )
  856.       cosz%dim_1%SM = 1
  856.       $_allo_P23(0) = 0x1000000000001L
  856.       $_allo_P23(1) = loc( cosz )
  856.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
  857.       cos2d%header%a_contig = 1
  857.       cos2d%dim_1%LB = 1
  857.       cos2d%dim_1%EX = ( max( 0, ibmax ) )
  857.       cos2d%dim_1%SM = 1
  857.       cos2d%dim_2%LB = 1
  857.       cos2d%dim_2%EX = ( max( 0, jbmax ) )
  857.       cos2d%dim_2%SM = ( max( 0, ibmax ) )
  857.       $_allo_P24(0) = 0x1000000000001L
  857.       $_allo_P24(1) = loc( cos2d )
  857.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
  858.       vmax%header%a_contig = 1
  858.       vmax%dim_1%LB = 1
  858.       vmax%dim_1%EX = ( max( 0, kmax ) )
  858.       vmax%dim_1%SM = 1
  858.       vmax%dim_2%LB = 1
  858.       vmax%dim_2%EX = ( max( 0, jbmax ) )
  858.       vmax%dim_2%SM = ( max( 0, kmax ) )
  858.       $_allo_P25(0) = 0x1000000000001L
  858.       $_allo_P25(1) = loc( vmax )
  858.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
  859.       vaux%header%a_contig = 1
  859.       vaux%dim_1%LB = 1
  859.       vaux%dim_1%EX = ( max( 0, kmax ) )
  859.       vaux%dim_1%SM = 1
  859.       $_allo_P26(0) = 0x1000000000001L
  859.       $_allo_P26(1) = loc( vaux )
  859.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
  860.       vmaxvert%header%a_contig = 1
  860.       vmaxvert%dim_1%LB = 1
  860.       vmaxvert%dim_1%EX = ( max( 0, kmax ) )
  860.       vmaxvert%dim_1%SM = 1
  860.       $_allo_P27(0) = 0x1000000000001L
  860.       $_allo_P27(1) = loc( vmaxvert )
  860.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
  862.       if ( jmax > 0 ) then
  863.          $SC_colrad_I18 = colrad%dim_1%EX
  863.          $SC_colrad_I19 = colrad%dim_1%LB
  862.          $I_L862_100 = 0
  862. !dir$ ivdep
  862.          do
  863.             (lati%base_addr)(1 + $I_L862_100, 0) = (colrad%base_addr)(1 + $I_L862_100, 0)
  864.             $I_L862_100 = 1 + $I_L862_100
  862.             if ( $I_L862_100 >= jmax ) exit
  862.          enddo
  862.       endif
  865.       if ( imax > 0 ) then
  865.          $I_L865_102 = 0
  865. !dir$ ivdep
  865.          do
  866.             (long%base_addr)(1 + $I_L865_102, 0) = ( 1.0/imax * $I_L865_102 * 360.0 )
  867.             $I_L865_102 = 1 + $I_L865_102
  865.             if ( $I_L865_102 >= imax ) exit
  865.          enddo
  865.       endif
  868.       sinjm(0) = 1.0
  869.       if ( jmax >= 2 ) then
  869.          $I_L869_104 = 0
  869. !dir$ ivdep
  869.          do
  870.             sinjm(1 + $I_L869_104) = real( cos( 5.0e-1 * ( (lati%base_addr)(1 + $I_L869_104, 0) + (lati%base_addr)(2 + $I_L869_104, 0) ) ) )
  871.             $I_L869_104 = 1 + $I_L869_104
  869.             if ( $I_L869_104 >= jmax / 2 ) exit
  869.          enddo
  869.       endif
  874.       if ( jmax >= 2 ) then
  873.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  880.          $SC_imaxperj_I20 = imaxperj%dim_1%EX
  880.          $SC_imaxperj_I21 = imaxperj%dim_1%LB
  876.          $SC_colrad_I18 = colrad%dim_1%EX
  876.          $SC_colrad_I19 = colrad%dim_1%LB
  874.          $I_L874_106 = 0
  874. !dir$ ivdep
  874. !$omp do schedule(static)
  874.          do
  876.             $Coss_P0 = coss( (colrad%base_addr)(1 + $I_L874_106, 0) )
  876.             (sinlatj%base_addr)(1 + $I_L874_106, 0) = real( $Coss_P0, 8 )
  877.             (coslatj%base_addr)(1 + $I_L874_106, 0) = cimag( $Coss_P0 )
  878.             (sinlatj%base_addr)(jmax + -$I_L874_106, 0) = -( real( $Coss_P0, 8 ) )
  879.             (coslatj%base_addr)(jmax + -$I_L874_106, 0) = cimag( $Coss_P0 )
  880.             (cel_area%base_addr)(1 + $I_L874_106, 0) = ( 5.0e-1 * 1.0/(imaxperj%base_addr)(1 + $I_L874_106, 0) ) * ( sinjm($I_L874_106) + -sinjm(1 + $I_L874_106) )
  881.             (cel_area%base_addr)(jmax + -$I_L874_106, 0) = (cel_area%base_addr)(1 + $I_L874_106, 0)
  882.             $I_L874_106 = 1 + $I_L874_106
  874.             if ( $I_L874_106 >= jmax / 2 ) exit
  874.          enddo
  883.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  883.       endif
  887.       if ( jbmax > 0 ) then
  886.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  895.          $SC_rcs2_I34 = rcs2%dim_1%EX
  895.          $SC_rcs2_I35 = rcs2%dim_1%LB
  890.          $SC_iperijb_I29 = iperijb%dim_1%EX
  890.          $SC_iperijb_I30 = iperijb%dim_1%LB
  890.          $SC_iperijb_I32 = iperijb%dim_2%SM
  890.          $SC_iperijb_I31 = iperijb%dim_2%EX
  890.          $SC_iperijb_I33 = iperijb%dim_2%LB
  889.          $SC_jperijb_I24 = jperijb%dim_1%EX
  889.          $SC_jperijb_I25 = jperijb%dim_1%LB
  889.          $SC_jperijb_I27 = jperijb%dim_2%SM
  889.          $SC_jperijb_I26 = jperijb%dim_2%EX
  889.          $SC_jperijb_I28 = jperijb%dim_2%LB
  888.          $SC_ibmaxperjb_I22 = ibmaxperjb%dim_1%EX
  888.          $SC_ibmaxperjb_I23 = ibmaxperjb%dim_1%LB
  896.          $SC_imaxperj_I20 = imaxperj%dim_1%EX
  896.          $SC_imaxperj_I21 = imaxperj%dim_1%LB
  892.          $SC_colrad_I18 = colrad%dim_1%EX
  892.          $SC_colrad_I19 = colrad%dim_1%LB
  887.          $I_L887_114 = 0
  887. !$omp do schedule(static)
  887.          do
  888.             $t_S5 = (ibmaxperjb%base_addr)(1 + $I_L887_114, 0)
  888.             if ( $t_S5 > 0 ) then
  888.                $I_L888_108 = 0
  888. !dir$ ivdep
  888.                do
  889.                   $$_j = (jperijb%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0)
  890.                   $$_i = (iperijb%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0)
  892.                   (colrad2d%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = (colrad%base_addr)($$_j, 0)
  893.                   (sinlat%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = (sinlatj%base_addr)($$_j, 0)
  894.                   (coslat%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = (coslatj%base_addr)($$_j, 0)
  895.                   $rcl_WR0_R0 = (rcs2%base_addr)(min( $$_j, jmax + -$$_j + 1 ), 0)
  895.                   (rcl%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = $rcl_WR0_R0
  896.                   $longit_WR0_R1 = ( 1.0/(imaxperj%base_addr)($$_j, 0) * ( -1 + $$_i ) * 6.28318530717958 )
  896.                   (longit%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = $longit_WR0_R1
  897.                   (lonrad%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = ( 1.0/(imaxperj%base_addr)($$_j, 0) * ( -1 + $$_i ) * 360.0 )
  898.                   $Coss_P1 = coss( $longit_WR0_R1 )
  898.                   (sinlon%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = cimag( $Coss_P1 )
  899.                   (coslon%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = real( $Coss_P1, 8 )
  900.                   (cos2lat%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = 1.0/$rcl_WR0_R0
  907.                   (ercossin%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = cos( (colrad%base_addr)($$_j, 0) ) * $rcl_WR0_R0 * 1.5698587127158556e-7
  908.                   (fcor%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = 1.4584919999999999e-4 * cos( (colrad%base_addr)($$_j, 0) )
  909.                   (cosiv%base_addr)(1 + $I_L888_108, 1 + $I_L887_114, 0) = _sqrt( $rcl_WR0_R0 )
  911.                   $I_L888_108 = 1 + $I_L888_108
  888.                   if ( $I_L888_108 >= $t_S5 ) exit
  888.                enddo
  888.             endif
  912.             $I_L887_114 = 1 + $I_L887_114
  911.             if ( $I_L887_114 >= jbmax ) exit
  911.          enddo
  913.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
  913.       endif
  829.       _free( t$277 )
  915.       return
  915.       end
  915.       
  923.       
  923.       subroutine destroygaussquad
  928.       maxdegree = -1
  932.       call destroylegpol
  936.       $_allo_P0(0) = 0x1000000000001L
  936.       $_allo_P0(1) = loc( gausscolat )
  936.       call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  936.       gausscolat%header%assoc = 0
  937.       $_allo_P1(0) = 0x1000000000001L
  937.       $_allo_P1(1) = loc( singausscolat )
  937.       call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  937.       singausscolat%header%assoc = 0
  938.       $_allo_P2(0) = 0x1000000000001L
  938.       $_allo_P2(1) = loc( auxgausscolat )
  938.       call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  938.       auxgausscolat%header%assoc = 0
  939.       $_allo_P3(0) = 0x1000000000001L
  939.       $_allo_P3(1) = loc( gausspoints )
  939.       call __deallocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  939.       gausspoints%header%assoc = 0
  940.       $_allo_P4(0) = 0x1000000000001L
  940.       $_allo_P4(1) = loc( gaussweights )
  940.       call __deallocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  940.       gaussweights%header%assoc = 0
  941.       return
  941.       end
  941.       
  949.       
  949.       subroutine dumpgaussquad
  952.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$93,  _substr(t$92,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( maxdegree, 0x2000200000000L ) ) )
  953.       _f90_adjustl(  _substr(t$1065,1,10),  _substr(c1,1,10) )
  953.       t$1066 = _ltrim(  _substr(t$1065,1,10) )
  953.       t$1068 = int( _alloc( _zla( 0, t$1066 ) ), 8 )
  953.        _substr(t$1067,1,_zla( 0, t$1066 )) =  _substr(t$1065,1,_ltrim(  _substr(t$1065,1,10) ))
  953.       $Unit_temp_O0 = nfprt
  953.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(DumpGaussQuad)**', 0x800600000000L ), _iotype(  _substr(t$1067,1,_zla( 0, t$1066 )), 0x800600000000L ) ) )
  953.       _free( t$1068 )
  954.        _substr(t$1069,1,11) = 'GaussPoints'
  954.       $ipa_S0 = (boolean[32])( gausspoints%dim_1%LB )
  954.       t$269 = 11
  954.       gausspoints%dim_1%LB = 1
  954.       n1 = gausspoints%dim_1%EX
  954.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$10,  _substr(t$9,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( n1, 0x2000200000000L ) ) )
  954.       t$737 = int( _alloc( 11 ), 8 )
  954.       _f90_adjustl(  _substr(t$736,1,11),  _substr(t$1069,1,11) )
  954.       t$739 = _ltrim(  _substr(t$736,1,11) )
  954.       t$741 = int( _alloc( _zla( 0, t$739 ) ), 8 )
  954.        _substr(t$740,1,_zla( 0, t$739 )) =  _substr(t$736,1,_ltrim(  _substr(t$736,1,11) ))
  954.       _f90_adjustl(  _substr(t$738,1,10),  _substr(c1,1,10) )
  954.       t$742 = _ltrim(  _substr(t$738,1,10) )
  954.       t$744 = int( _alloc( _zla( 0, t$742 ) ), 8 )
  954.        _substr(t$743,1,_zla( 0, t$742 )) =  _substr(t$738,1,_ltrim(  _substr(t$738,1,10) ))
  954.       $Unit_temp_O1 = nfprt
  954.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$12,  _substr(t$11,1,29), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$740,1,_zla( 0, t$739 )), 0x800600000000L ), _iotype(  _substr(t$743,1,_zla( 0, t$742 )), 0x800600000000L ) ) )
  954.       _free( t$744 )
  954.       _free( t$741 )
  954.       _free( t$737 )
  954.       i1h = min( 10, gausspoints%dim_1%EX )
  954.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$14,  _substr(t$13,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i1h, 0x2000200000000L ) ) )
  954.       $Unit_temp_O2 = nfprt
  954.       _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  954.       t$746 = int( _alloc( 11 ), 8 )
  954.       _f90_adjustl(  _substr(t$745,1,11),  _substr(t$1069,1,11) )
  954.       t$748 = _ltrim(  _substr(t$745,1,11) )
  954.       t$750 = int( _alloc( _zla( 0, t$748 ) ), 8 )
  954.        _substr(t$749,1,_zla( 0, t$748 )) =  _substr(t$745,1,_ltrim(  _substr(t$745,1,11) ))
  954.       _f90_adjustl(  _substr(t$747,1,10),  _substr(c1,1,10) )
  954.       t$751 = _ltrim(  _substr(t$747,1,10) )
  954.       t$753 = int( _alloc( _zla( 0, t$751 ) ), 8 )
  954.        _substr(t$752,1,_zla( 0, t$751 )) =  _substr(t$747,1,_ltrim(  _substr(t$747,1,10) ))
  954.       $Unit_temp_O3 = nfprt
  954.       _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$749,1,_zla( 0, t$748 )), 0x800600000000L ), _iotype(  _substr(t$752,1,_zla( 0, t$751 )), 0x800600000000L ) ) )
  954.       _free( t$753 )
  954.       _free( t$750 )
  954.       _free( t$746 )
  954.       if ( gausspoints%dim_1%EX > 0 ) then
  954.          $I_L954_4 = 0
  954.          do
  954.             if ( ( 1 + $I_L954_4 ) <= 0 .or. ( 1 + $I_L954_4 ) > gausspoints%dim_1%EX ) then
  954.                 _substr(t$758,1,10) = 'Utils.f90'
  954.                 _substr(t$759,1,4) = 'M'
  954.                t$760 = gausspoints%dim_1%EX
  954.                t$761 = 1 + $I_L954_4
  954.                call _bounds_error(  _substr(t$758,1,10), 612,  _substr(t$759,1,2), 1, 1, t$760, t$761, t$757 )
  954.             endif
  954.             $Unit_temp_O4 = nfprt
  954.             $IOitem_O5 = (gausspoints%base_addr)(1 + $I_L954_4, 0)
  954.             _fwrite( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x804060300000000L ) ) )
  954.             $I_L954_4 = 1 + $I_L954_4
  954.             if ( $I_L954_4 >= 1 + max( 0, -1 + min( 10, n1 ) ) ) exit
  954.          enddo
  954.       endif
  954.       $Unit_temp_O6 = nfprt
  954.       _fwrite( _clist( 0, 0, 1, $Unit_temp_O6, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  954.       gausspoints%dim_1%LB = int( $ipa_S0, 8 )
  955.        _substr(t$1071,1,12) = 'GaussWeights'
  955.       t$1072 = gaussweights
  955.       call dumpmatrixreal1d(  _substr(t$1071,1,12), t$1072 )
  956.       return
  956.       end
  956.       
  986.       
  986.       subroutine createlegpol( maxdegree )
  992.       if ( maxdegree <= 0 ) then
  993.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$97,  _substr(t$96,1,50), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( maxdegree, 0x2000200000000L ) ) )
  994.           _substr(t$1073,1,4) = ' '
  994.          call _stop(  _substr(t$1073,1,1) )
  995.       else if ( created ) then
  996.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$99,  _substr(t$98,1,56), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  997.           _substr(t$1074,1,4) = ' '
  997.          call _stop(  _substr(t$1074,1,1) )
  997.       else
 1002.          nauxpoly = maxdegree
 1003.          auxpoly1%header%a_contig = 1
 1003.          auxpoly1%dim_1%LB = 1
 1003.          auxpoly1%dim_1%EX = _zla( 0, maxdegree )
 1003.          auxpoly1%dim_1%SM = 1
 1003.          $_allo_P0(0) = 0x1000000000001L
 1003.          $_allo_P0(1) = loc( auxpoly1 )
 1003.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1004.          auxpoly2%header%a_contig = 1
 1004.          auxpoly2%dim_1%LB = 1
 1004.          auxpoly2%dim_1%EX = _zla( 0, maxdegree )
 1004.          auxpoly2%dim_1%SM = 1
 1004.          $_allo_P1(0) = 0x1000000000001L
 1004.          $_allo_P1(1) = loc( auxpoly2 )
 1004.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1005.          $I_L1005_4 = 0
 1005. !dir$ ivdep
 1005.          do
 1006.             (auxpoly1%base_addr)(1 + $I_L1005_4, 0) = ( real( 1 + 2 * $I_L1005_4, 8 ) * 1.0/( real( 1 + $I_L1005_4, 8 ) ) )
 1007.             (auxpoly2%base_addr)(1 + $I_L1005_4, 0) = ( real( -$I_L1005_4, 8 ) * 1.0/( real( 1 + $I_L1005_4, 8 ) ) )
 1008.             $I_L1005_4 = 1 + $I_L1005_4
 1005.             if ( $I_L1005_4 >= maxdegree ) exit
 1005.          enddo
 1009.          created = .true.
 1009.       endif
 1010.       return
 1010.       end
 1010.       
 1017.       
 1017.       subroutine destroylegpol
 1018.       if ( created == 0 ) then
 1019.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$101,  _substr(t$100,1,54), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1020.           _substr(t$1078,1,4) = ' '
 1020.          call _stop(  _substr(t$1078,1,1) )
 1020.       else
 1022.          $_allo_P0(0) = 0x2000000000001L
 1022.          $_allo_P0(1) = loc( auxpoly1 )
 1022.          $_allo_P0(2) = loc( auxpoly2 )
 1022.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1022.          auxpoly2%header%assoc = 0
 1022.          auxpoly1%header%assoc = 0
 1023.          created = .false.
 1023.       endif
 1024.       return
 1024.       end
 1024.       
 1030.       
 1030.       subroutine legpol( legpol, degree, col )
 1030.       col%dim_1%LB = 1
 1030.       t$102 = _zla( 0, col%dim_1%EX )
 1033.       t$280 = _zla( 0, col%dim_1%EX )
 1037.       t$283 = 8 * _zla( 0, col%dim_1%EX )
 1038.       t$284 = 8 * _zla( 0, col%dim_1%EX )
 1038.       t$286 = 16 * _zla( 0, col%dim_1%EX )
 1039.       t$287 = 16 * _zla( 0, col%dim_1%EX )
 1039.       t$289 = 24 * _zla( 0, col%dim_1%EX )
 1030.       t$281 = int( _alloc( 24 * _zla( 0, col%dim_1%EX ) ), 8 )
 1037.       t$282 = t$281
 1038.       t$285 = t$281 + 8 * _zla( 0, col%dim_1%EX )
 1039.       t$288 = t$281 + 16 * _zla( 0, col%dim_1%EX )
 1045.       if ( created == 0 ) then
 1046.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1047.           _substr(t$1079,1,4) = ' '
 1047.          call _stop(  _substr(t$1079,1,1) )
 1048.       else if ( degree < 2 ) then
 1048.          goto 10
 1048.       else if ( degree <= nauxpoly ) then
 1056.          $left_S0 = mod( -1 + degree, 6 )
 1057.          $F_A33 = _zla( 0, col%dim_1%EX )
 1057.          if ( col%dim_1%EX > 0 ) then
 1057.             $SC_col_I28 = col%dim_1%SM
 1057.             $SC_col_I27 = col%dim_1%EX
 1057.             $I_L1057_42 = 0
 1057. !dir$ ivdep
 1057.             do
 1057.                x(1 + $I_L1057_42) = cos( (col%base_addr)(1 + $I_L1057_42, 0) )
 1057.                $I_L1057_42 = 1 + $I_L1057_42
 1057.                if ( $I_L1057_42 >= $F_A33 ) exit
 1057.             enddo
 1057.          endif
 1058.          $F_A34 = _zla( 0, col%dim_1%EX )
 1058.          if ( col%dim_1%EX > 0 ) then
 1058.             $SC_col_I27 = col%dim_1%EX
 1058.             $I_L1058_44 = 0
 1058. !dir$ ivdep
 1058.             do
 1058.                p0(1 + $I_L1058_44) = 1.0
 1058.                $I_L1058_44 = 1 + $I_L1058_44
 1058.                if ( $I_L1058_44 >= $F_A34 ) exit
 1058.             enddo
 1058.          endif
 1059.          $F_A35 = _zla( 0, col%dim_1%EX )
 1059.          if ( col%dim_1%EX > 0 ) then
 1059.             $SC_col_I27 = col%dim_1%EX
 1059.             $I_L1059_46 = 0
 1059. !dir$ ivdep
 1059.             do
 1059.                p1(1 + $I_L1059_46) = x(1 + $I_L1059_46)
 1059.                $I_L1059_46 = 1 + $I_L1059_46
 1059.                if ( $I_L1059_46 >= $F_A35 ) exit
 1059.             enddo
 1059.          endif
 1065.          if ( $left_S0 > 0 ) then
 1065.             $I_L1065_72 = 0
 1065.             do
 1066.                $F_A36 = _zla( 0, col%dim_1%EX )
 1066.                if ( col%dim_1%EX > 0 ) then
 1066.                   $SCA_auxpoly2_I10 = (auxpoly2%base_addr)(2 + $I_L1065_72, 0)
 1066.                   $SCA_auxpoly1_I11 = (auxpoly1%base_addr)(2 + $I_L1065_72, 0)
 1066.                   $I_L1066_48 = 0
 1066. !dir$ ivdep
 1066.                   do
 1066.                      legpol(1 + $I_L1066_48) = x(1 + $I_L1066_48) * p1(1 + $I_L1066_48) * $SCA_auxpoly1_I11 + p0(1 + $I_L1066_48) * $SCA_auxpoly2_I10
 1066.                      $I_L1066_48 = 1 + $I_L1066_48
 1066.                      if ( $I_L1066_48 >= $F_A36 ) exit
 1066.                   enddo
 1066.                endif
 1067.                $F_A37 = _zla( 0, col%dim_1%EX )
 1067.                if ( col%dim_1%EX > 0 ) then
 1067.                   $I_L1067_50 = 0
 1067. !dir$ ivdep
 1067.                   do
 1067.                      p0(1 + $I_L1067_50) = p1(1 + $I_L1067_50)
 1067.                      $I_L1067_50 = 1 + $I_L1067_50
 1067.                      if ( $I_L1067_50 >= $F_A37 ) exit
 1067.                   enddo
 1067.                endif
 1067.                $F_A38 = _zla( 0, col%dim_1%EX )
 1067.                if ( col%dim_1%EX > 0 ) then
 1067.                   $I_L1067_52 = 0
 1067. !dir$ ivdep
 1067.                   do
 1067.                      p1(1 + $I_L1067_52) = legpol(1 + $I_L1067_52)
 1067.                      $I_L1067_52 = 1 + $I_L1067_52
 1067.                      if ( $I_L1067_52 >= $F_A38 ) exit
 1067.                   enddo
 1067.                endif
 1068.                $I_L1065_72 = 1 + $I_L1065_72
 1065.                if ( $I_L1065_72 >= $left_S0 ) exit
 1065.             enddo
 1065.          endif
 1072.          if ( degree + -$left_S0 + -2 >= 0 ) then
 1072.             $t_S3 = ( degree + -$left_S0 + 4 ) / 6
 1072.             $I_L1072_74 = 0
 1072.             do
 1073.                $F_A39 = _zla( 0, col%dim_1%EX )
 1073.                if ( col%dim_1%EX > 0 ) then
 1073.                   $SCA_auxpoly2_I12 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 2, 0)
 1073.                   $SCA_auxpoly1_I13 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 2, 0)
 1073.                   $I_L1073_54 = 0
 1073. !dir$ ivdep
 1073.                   do
 1073.                      legpol(1 + $I_L1073_54) = x(1 + $I_L1073_54) * p1(1 + $I_L1073_54) * $SCA_auxpoly1_I13 + p0(1 + $I_L1073_54) * $SCA_auxpoly2_I12
 1073.                      $I_L1073_54 = 1 + $I_L1073_54
 1073.                      if ( $I_L1073_54 >= $F_A39 ) exit
 1073.                   enddo
 1073.                endif
 1074.                $F_A40 = _zla( 0, col%dim_1%EX )
 1074.                if ( col%dim_1%EX > 0 ) then
 1074.                   $SCA_auxpoly2_I14 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 3, 0)
 1074.                   $SCA_auxpoly1_I15 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 3, 0)
 1074.                   $I_L1074_56 = 0
 1074. !dir$ ivdep
 1074.                   do
 1074.                      p0(1 + $I_L1074_56) = x(1 + $I_L1074_56) * legpol(1 + $I_L1074_56) * $SCA_auxpoly1_I15 + p1(1 + $I_L1074_56) * $SCA_auxpoly2_I14
 1074.                      $I_L1074_56 = 1 + $I_L1074_56
 1074.                      if ( $I_L1074_56 >= $F_A40 ) exit
 1074.                   enddo
 1074.                endif
 1075.                $F_A41 = _zla( 0, col%dim_1%EX )
 1075.                if ( col%dim_1%EX > 0 ) then
 1075.                   $SCA_auxpoly2_I16 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 4, 0)
 1075.                   $SCA_auxpoly1_I17 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 4, 0)
 1075.                   $I_L1075_58 = 0
 1075. !dir$ ivdep
 1075.                   do
 1075.                      p1(1 + $I_L1075_58) = x(1 + $I_L1075_58) * p0(1 + $I_L1075_58) * $SCA_auxpoly1_I17 + legpol(1 + $I_L1075_58) * $SCA_auxpoly2_I16
 1075.                      $I_L1075_58 = 1 + $I_L1075_58
 1075.                      if ( $I_L1075_58 >= $F_A41 ) exit
 1075.                   enddo
 1075.                endif
 1076.                $F_A42 = _zla( 0, col%dim_1%EX )
 1076.                if ( col%dim_1%EX > 0 ) then
 1076.                   $SCA_auxpoly2_I18 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 5, 0)
 1076.                   $SCA_auxpoly1_I19 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 5, 0)
 1076.                   $I_L1076_60 = 0
 1076. !dir$ ivdep
 1076.                   do
 1076.                      legpol(1 + $I_L1076_60) = x(1 + $I_L1076_60) * p1(1 + $I_L1076_60) * $SCA_auxpoly1_I19 + p0(1 + $I_L1076_60) * $SCA_auxpoly2_I18
 1076.                      $I_L1076_60 = 1 + $I_L1076_60
 1076.                      if ( $I_L1076_60 >= $F_A42 ) exit
 1076.                   enddo
 1076.                endif
 1077.                $F_A43 = _zla( 0, col%dim_1%EX )
 1077.                if ( col%dim_1%EX > 0 ) then
 1077.                   $SCA_auxpoly2_I20 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 6, 0)
 1077.                   $SCA_auxpoly1_I21 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 6, 0)
 1077.                   $I_L1077_62 = 0
 1077. !dir$ ivdep
 1077.                   do
 1077.                      p0(1 + $I_L1077_62) = x(1 + $I_L1077_62) * legpol(1 + $I_L1077_62) * $SCA_auxpoly1_I21 + p1(1 + $I_L1077_62) * $SCA_auxpoly2_I20
 1077.                      $I_L1077_62 = 1 + $I_L1077_62
 1077.                      if ( $I_L1077_62 >= $F_A43 ) exit
 1077.                   enddo
 1077.                endif
 1078.                $F_A44 = _zla( 0, col%dim_1%EX )
 1078.                if ( col%dim_1%EX > 0 ) then
 1078.                   $SCA_auxpoly2_I22 = (auxpoly2%base_addr)($left_S0 + 6 * $I_L1072_74 + 7, 0)
 1078.                   $SCA_auxpoly1_I23 = (auxpoly1%base_addr)($left_S0 + 6 * $I_L1072_74 + 7, 0)
 1078.                   $I_L1078_64 = 0
 1078. !dir$ ivdep
 1078.                   do
 1078.                      p1(1 + $I_L1078_64) = x(1 + $I_L1078_64) * p0(1 + $I_L1078_64) * $SCA_auxpoly1_I23 + legpol(1 + $I_L1078_64) * $SCA_auxpoly2_I22
 1078.                      $I_L1078_64 = 1 + $I_L1078_64
 1078.                      if ( $I_L1078_64 >= $F_A44 ) exit
 1078.                   enddo
 1078.                endif
 1079.                $I_L1072_74 = 1 + $I_L1072_74
 1072.                if ( $I_L1072_74 >= $t_S3 ) exit
 1072.             enddo
 1072.          endif
 1080.          $F_A45 = _zla( 0, col%dim_1%EX )
 1080.          if ( col%dim_1%EX > 0 ) then
 1080.             $SC_col_I27 = col%dim_1%EX
 1080.             $I_L1080_66 = 0
 1080. !dir$ ivdep
 1080.             do
 1080.                legpol(1 + $I_L1080_66) = p1(1 + $I_L1080_66)
 1080.                $I_L1080_66 = 1 + $I_L1080_66
 1080.                if ( $I_L1080_66 >= $F_A45 ) exit
 1080.             enddo
 1080.          endif
 1080.          goto 20
 1080.       else
 1080.    10    continue
 1084.          if ( degree == 0 ) then
 1085.             $F_A46 = _zla( 0, col%dim_1%EX )
 1085.             if ( col%dim_1%EX > 0 ) then
 1085.                $SC_col_I27 = col%dim_1%EX
 1085.                $I_L1085_68 = 0
 1085. !dir$ ivdep
 1085.                do
 1085.                   legpol(1 + $I_L1085_68) = 1.0
 1085.                   $I_L1085_68 = 1 + $I_L1085_68
 1085.                   if ( $I_L1085_68 >= $F_A46 ) exit
 1085.                enddo
 1085.             endif
 1085.             goto 20
 1089.          else if ( degree == 1 ) then
 1090.             $F_A47 = _zla( 0, col%dim_1%EX )
 1090.             if ( col%dim_1%EX > 0 ) then
 1090.                $SC_col_I28 = col%dim_1%SM
 1090.                $SC_col_I27 = col%dim_1%EX
 1090.                $I_L1090_70 = 0
 1090. !dir$ ivdep
 1090.                do
 1090.                   legpol(1 + $I_L1090_70) = cos( (col%base_addr)(1 + $I_L1090_70, 0) )
 1090.                   $I_L1090_70 = 1 + $I_L1090_70
 1090.                   if ( $I_L1090_70 >= $F_A47 ) exit
 1090.                enddo
 1090.             endif
 1090.    20       continue
 1030.             _free( t$281 )
 1030.          else
 1095.             $Unit_temp_O0 = nfprt
 1095.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,57), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( degree, 0x2000200000000L ) ) )
 1097.              _substr(t$1087,1,4) = ' '
 1097.             call _stop(  _substr(t$1087,1,1) )
 1097.          endif
 1097.       endif
 1099.       return
 1099.       end
 1099.       
 1106.       
 1106.       subroutine legpolrootsandweights( degree )
 1106.       t$107 = degree / 2
 1108.       t$290 = _zla( 0, degree / 2 )
 1109.       t$293 = 8 * _zla( 0, degree / 2 )
 1115.       fsearch%header%el_len = 64
 1115.       fsearch%header%assoc = 0
 1115.       fsearch%header%ptr_alloc = 0
 1115.       fsearch%header%p_or_a = 2
 1115.       fsearch%header%a_contig = 1
 1115.       fsearch%header%dv_versn = 2
 1115.       fsearch%header%dv_smunit = 64
 1115.       fsearch%header%d_type = 0
 1115.       fsearch%header%n_params = 0
 1115.       fsearch%header%pad_codim = 0
 1115.       fsearch%header%n_codim = 0
 1115.       fsearch%header%pad_dim = 0
 1115.       fsearch%header%n_dim = 1
 1115.       fsearch%header%d_type_idx = 13
 1115.       fsearch%header%typ_code = 134481411
 1115.       fsearch%header%orig_base = 0
 1115.       fsearch%header%orig_size = 0
 1115.       fsearch%dim_1%LB = 1
 1115.       fsearch%dim_1%EX = 0
 1115.       fsearch%dim_1%SM = 1
 1108.       mask%header%el_len = 32
 1108.       mask%header%assoc = 0
 1108.       mask%header%ptr_alloc = 0
 1108.       mask%header%p_or_a = 2
 1108.       mask%header%a_contig = 1
 1108.       mask%header%dv_versn = 2
 1108.       mask%header%dv_smunit = 32
 1108.       mask%header%d_type = 0
 1108.       mask%header%n_params = 0
 1108.       mask%header%pad_codim = 0
 1108.       mask%header%n_codim = 0
 1108.       mask%header%pad_dim = 0
 1108.       mask%header%n_dim = 1
 1108.       mask%header%d_type_idx = 21
 1108.       mask%header%typ_code = 131077
 1108.       mask%header%orig_base = 0
 1108.       mask%header%orig_size = 0
 1108.       mask%dim_1%LB = 1
 1108.       mask%dim_1%EX = 0
 1108.       mask%dim_1%SM = 1
 1111.       t$294 = 8 * _zla( 0, degree / 2 )
 1111.       t$296 = 16 * _zla( 0, degree / 2 )
 1112.       t$297 = 16 * _zla( 0, degree / 2 )
 1112.       t$299 = 24 * _zla( 0, degree / 2 )
 1110.       t$300 = 24 * _zla( 0, degree / 2 )
 1110.       t$302 = 32 * _zla( 0, degree / 2 )
 1113.       t$303 = 32 * _zla( 0, degree / 2 )
 1113.       t$305 = 40 * _zla( 0, degree / 2 )
 1114.       t$306 = 40 * _zla( 0, degree / 2 )
 1109.       t$308 = 48 * _zla( 0, degree / 2 )
 1114.       xsearch%header%el_len = 64
 1114.       xsearch%header%assoc = 0
 1114.       xsearch%header%ptr_alloc = 0
 1114.       xsearch%header%p_or_a = 2
 1114.       xsearch%header%a_contig = 1
 1114.       xsearch%header%dv_versn = 2
 1114.       xsearch%header%dv_smunit = 64
 1114.       xsearch%header%d_type = 0
 1114.       xsearch%header%n_params = 0
 1114.       xsearch%header%pad_codim = 0
 1114.       xsearch%header%n_codim = 0
 1114.       xsearch%header%pad_dim = 0
 1114.       xsearch%header%n_dim = 1
 1114.       xsearch%header%d_type_idx = 13
 1114.       xsearch%header%typ_code = 134481411
 1114.       xsearch%header%orig_base = 0
 1114.       xsearch%header%orig_size = 0
 1114.       xsearch%dim_1%LB = 1
 1114.       xsearch%dim_1%EX = 0
 1114.       xsearch%dim_1%SM = 1
 1106.       t$291 = int( _alloc( 48 * _zla( 0, degree / 2 ) ), 8 )
 1108.       t$292 = t$291
 1111.       t$295 = t$291 + 8 * _zla( 0, degree / 2 )
 1112.       t$298 = t$291 + 16 * _zla( 0, degree / 2 )
 1110.       t$301 = t$291 + 24 * _zla( 0, degree / 2 )
 1113.       t$304 = t$291 + 32 * _zla( 0, degree / 2 )
 1114.       t$307 = t$291 + 40 * _zla( 0, degree / 2 )
 1132.       if ( created == 0 ) then
 1133.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$109,  _substr(t$108,1,62), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1134.           _substr(t$1088,1,4) = ' '
 1134.          call _stop(  _substr(t$1088,1,1) )
 1135.       else if ( degree <= 0 ) then
 1135.          goto 10
 1135.       else if ( degree > nauxpoly ) then
 1135.    10    continue
 1136.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,72), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( degree, 0x2000200000000L ) ) )
 1138.           _substr(t$1089,1,4) = ' '
 1138.          call _stop(  _substr(t$1089,1,1) )
 1138.       else if ( mod( degree, 2 ) /= 0 ) then
 1140.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$113,  _substr(t$112,1,59), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( degree, 0x2000200000000L ) ) )
 1141.           _substr(t$1090,1,4) = ' '
 1141.          call _stop(  _substr(t$1090,1,1) )
 1141.       else
 1147.          rootprecision = 2.2204460492503131e-14
 1160.          $step_S1 = ( 1.5707963267948966 * 1.0/( real( 4 * ( degree / 2 ), 8 ) ) )
 1161.          xsearch%header%a_contig = 1
 1161.          xsearch%dim_1%LB = 1
 1161.          xsearch%dim_1%EX = _zla( 0, ( 4 * ( degree / 2 ) ) )
 1161.          xsearch%dim_1%SM = 1
 1161.          $_allo_P10(0) = 0x1000000000001L
 1161.          $_allo_P10(1) = loc( xsearch )
 1161.          call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 1162.          fsearch%header%a_contig = 1
 1162.          fsearch%dim_1%LB = 1
 1162.          fsearch%dim_1%EX = _zla( 0, ( 4 * ( degree / 2 ) ) )
 1162.          fsearch%dim_1%SM = 1
 1162.          $_allo_P11(0) = 0x1000000000001L
 1162.          $_allo_P11(1) = loc( fsearch )
 1162.          call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 1163.          mask%header%a_contig = 1
 1163.          mask%dim_1%LB = 1
 1163.          mask%dim_1%EX = _zla( 0, ( -1 + 4 * ( degree / 2 ) ) )
 1163.          mask%dim_1%SM = 1
 1163.          $_allo_P12(0) = 0x1000000000001L
 1163.          $_allo_P12(1) = loc( mask )
 1163.          call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 1164.          if ( 4 * ( degree / 2 ) > 0 ) then
 1164.             $I_L1164_42 = 0
 1164. !dir$ ivdep
 1164.             do
 1165.                (xsearch%base_addr)(1 + $I_L1164_42, 0) = $step_S1 * real( $I_L1164_42, 8 )
 1166.                $I_L1164_42 = 1 + $I_L1164_42
 1164.                if ( $I_L1164_42 >= ( 4 * ( degree / 2 ) ) ) exit
 1164.             enddo
 1164.          endif
 1167.          t$1094 = xsearch
 1167.          call legpol( (fsearch%base_addr)(1, 0), degree, t$1094 )
 1171.          $F_A38 = ( -1 + 4 * ( degree / 2 ) )
 1171.          if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1171.             $I_L1171_44 = 0
 1171. !dir$ ivdep
 1171.             do
 1171.                (mask%base_addr)(1 + $I_L1171_44, 0) = (fsearch%base_addr)(1 + $I_L1171_44, 0) * (fsearch%base_addr)(2 + $I_L1171_44, 0) < 0.0
 1171.                $I_L1171_44 = 1 + $I_L1171_44
 1171.                if ( $I_L1171_44 >= $F_A38 ) exit
 1171.             enddo
 1171.          endif
 1175.          $Reduc_A39 = 0
 1175.          $F_A41 = _zla( 0, ( -1 + 4 * ( degree / 2 ) ) )
 1175.          if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1175.             $I_L1175_46 = 0
 1175. !dir$ ivdep
 1175.             do
 1175.                if ( (mask%base_addr)(1 + $I_L1175_46, 0) ) then
 1175.                   $Reduc_A39 = 1 + $Reduc_A39
 1175.                endif
 1175.                $I_L1175_46 = 1 + $I_L1175_46
 1175.                if ( $I_L1175_46 >= $F_A41 ) exit
 1175.             enddo
 1175.          endif
 1175.          if ( degree / 2 + -$Reduc_A39 /= 0 ) then
 1177.             $Reduc_A42 = 0
 1177.             $F_A44 = _zla( 0, ( -1 + 4 * ( degree / 2 ) ) )
 1177.             if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1177.                $I_L1177_48 = 0
 1177. !dir$ ivdep
 1177.                do
 1177.                   if ( (mask%base_addr)(1 + $I_L1177_48, 0) ) then
 1177.                      $Reduc_A42 = 1 + $Reduc_A42
 1177.                   endif
 1177.                   $I_L1177_48 = 1 + $I_L1177_48
 1177.                   if ( $I_L1177_48 >= $F_A44 ) exit
 1177.                enddo
 1177.             endif
 1176.             $Unit_temp_O0 = nfprt
 1176.             $_IOitem_P2(0) = $Reduc_A42
 1176.             $_IOitem_P2(1) = degree / 2
 1176.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$115,  _substr(t$114,1,70), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P2(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1178.              _substr(t$1101,1,4) = ' '
 1178.             call _stop(  _substr(t$1101,1,1) )
 1178.          else
 1183.             t$1102 = ( max( 0, -1 + 4 * ( degree / 2 ) ) )
 1183.             t$1105 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, -1 + 4 * ( degree / 2 ) ) ) ) ) ), 8 )
 1183.             $F_A45 = ( -1 + 4 * ( degree / 2 ) )
 1183.             if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1183.                $I_L1183_50 = 0
 1183. !dir$ ivdep
 1183.                do
 1183.                   t$1104(1 + $I_L1183_50) = (xsearch%base_addr)(1 + $I_L1183_50, 0)
 1183.                   $I_L1183_50 = 1 + $I_L1183_50
 1183.                   if ( $I_L1183_50 >= $F_A45 ) exit
 1183.                enddo
 1183.             endif
 1183.             t$1106 = _zla( 0, ( -1 + 4 * ( degree / 2 ) ) )
 1183.             t$1109 = int( _alloc( 4 * _zla( 0, ( -1 + 4 * ( degree / 2 ) ) ) ), 8 )
 1183.             $F_A46 = _zla( 0, -1 + 4 * ( degree / 2 ) )
 1183.             if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1183.                $I_L1183_52 = 0
 1183. !dir$ ivdep
 1183.                do
 1183.                   t$1108(1 + $I_L1183_52) = (mask%base_addr)(1 + $I_L1183_52, 0)
 1183.                   $I_L1183_52 = 1 + $I_L1183_52
 1183.                   if ( $I_L1183_52 >= $F_A46 ) exit
 1183.                enddo
 1183.             endif
 1184.             t$1110 = ( max( 0, -1 + 4 * ( degree / 2 ) ) )
 1184.             t$1113 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, -1 + 4 * ( degree / 2 ) ) ) ) ) ), 8 )
 1184.             $F_A47 = ( -1 + 4 * ( degree / 2 ) )
 1184.             if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1184.                $I_L1184_54 = 0
 1184. !dir$ ivdep
 1184.                do
 1184.                   t$1112(1 + $I_L1184_54) = (xsearch%base_addr)(2 + $I_L1184_54, 0)
 1184.                   $I_L1184_54 = 1 + $I_L1184_54
 1184.                   if ( $I_L1184_54 >= $F_A47 ) exit
 1184.                enddo
 1184.             endif
 1184.             t$1114 = _zla( 0, ( -1 + 4 * ( degree / 2 ) ) )
 1184.             t$1117 = int( _alloc( 4 * _zla( 0, ( -1 + 4 * ( degree / 2 ) ) ) ), 8 )
 1184.             $F_A48 = _zla( 0, -1 + 4 * ( degree / 2 ) )
 1184.             if ( -1 + 4 * ( degree / 2 ) > 0 ) then
 1184.                $I_L1184_56 = 0
 1184. !dir$ ivdep
 1184.                do
 1184.                   t$1116(1 + $I_L1184_56) = (mask%base_addr)(1 + $I_L1184_56, 0)
 1184.                   $I_L1184_56 = 1 + $I_L1184_56
 1184.                   if ( $I_L1184_56 >= $F_A48 ) exit
 1184.                enddo
 1184.             endif
 1183. !dir$ ref_suppress t$1112
 1183.             $_StackDv_P4%base_addr = pointer to array[1] of real (kind=8)( loc( t$1112(1) ) )
 1183.             $_StackDv_P4%header%el_len = 64
 1183.             $_StackDv_P4%header%assoc = 1
 1183.             $_StackDv_P4%header%ptr_alloc = 0
 1183.             $_StackDv_P4%header%p_or_a = 0
 1183.             $_StackDv_P4%header%a_contig = 0
 1183.             $_StackDv_P4%header%dv_versn = 2
 1183.             $_StackDv_P4%header%dv_smunit = 64
 1183.             $_StackDv_P4%header%d_type = 0
 1183.             $_StackDv_P4%header%n_params = 0
 1183.             $_StackDv_P4%header%pad_codim = 0
 1183.             $_StackDv_P4%header%n_codim = 0
 1183.             $_StackDv_P4%header%pad_dim = 0
 1183.             $_StackDv_P4%header%n_dim = 1
 1183.             $_StackDv_P4%header%d_type_idx = 0
 1183.             $_StackDv_P4%header%typ_code = 134479875
 1183.             $_StackDv_P4%header%orig_base = int( loc( t$1112(1) ), 8 )
 1183.             $_StackDv_P4%header%orig_size = 64
 1183.             $_StackDv_P4%dim_1%LB = 1
 1183.             $_StackDv_P4%dim_1%EX = ( max( 0, -1 + 4 * ( degree / 2 ) ) )
 1183.             $_StackDv_P4%dim_1%SM = 1
 1183. !dir$ ref_suppress t$1116
 1183.             $_StackDv_P5%base_addr = pointer to array[1] of logical( loc( t$1116(1) ) )
 1183.             $_StackDv_P5%header%el_len = 32
 1183.             $_StackDv_P5%header%assoc = 1
 1183.             $_StackDv_P5%header%ptr_alloc = 0
 1183.             $_StackDv_P5%header%p_or_a = 0
 1183.             $_StackDv_P5%header%a_contig = 0
 1183.             $_StackDv_P5%header%dv_versn = 2
 1183.             $_StackDv_P5%header%dv_smunit = 32
 1183.             $_StackDv_P5%header%d_type = 0
 1183.             $_StackDv_P5%header%n_params = 0
 1183.             $_StackDv_P5%header%pad_codim = 0
 1183.             $_StackDv_P5%header%n_codim = 0
 1183.             $_StackDv_P5%header%pad_dim = 0
 1183.             $_StackDv_P5%header%n_dim = 1
 1183.             $_StackDv_P5%header%d_type_idx = 0
 1183.             $_StackDv_P5%header%typ_code = 67239941
 1183.             $_StackDv_P5%header%orig_base = int( loc( t$1116(1) ), 8 )
 1183.             $_StackDv_P5%header%orig_size = 32
 1183.             $_StackDv_P5%dim_1%LB = 1
 1183.             $_StackDv_P5%dim_1%EX = _zla( 0, -1 + 4 * ( degree / 2 ) )
 1183.             $_StackDv_P5%dim_1%SM = 1
 1183.             $_ResultDv_A3%base_addr = pointer to array[1] of real (kind=8)( 0 )
 1183.             $_ResultDv_A3%header%el_len = 64
 1183.             $_ResultDv_A3%header%assoc = 0
 1183.             $_ResultDv_A3%header%ptr_alloc = 0
 1183.             $_ResultDv_A3%header%p_or_a = 0
 1183.             $_ResultDv_A3%header%a_contig = 0
 1183.             $_ResultDv_A3%header%dv_versn = 2
 1183.             $_ResultDv_A3%header%dv_smunit = 64
 1183.             $_ResultDv_A3%header%d_type = 0
 1183.             $_ResultDv_A3%header%n_params = 0
 1183.             $_ResultDv_A3%header%pad_codim = 0
 1183.             $_ResultDv_A3%header%n_codim = 0
 1183.             $_ResultDv_A3%header%pad_dim = 0
 1183.             $_ResultDv_A3%header%n_dim = 1
 1183.             $_ResultDv_A3%header%d_type_idx = 0
 1183.             $_ResultDv_A3%header%typ_code = 262147
 1183.             $_ResultDv_A3%header%orig_base = 0
 1183.             $_ResultDv_A3%header%orig_size = 0
 1183.             $_ResultDv_A3%dim_1%LB = 0
 1183.             $_ResultDv_A3%dim_1%EX = 0
 1183.             $_ResultDv_A3%dim_1%SM = 0
 1183.             _pack( $_ResultDv_A3, $_StackDv_P4, $_StackDv_P5, Null_Arg )
 1183. !dir$ ref_suppress t$1104
 1183.             $_StackDv_P7%base_addr = pointer to array[1] of real (kind=8)( loc( t$1104(1) ) )
 1183.             $_StackDv_P7%header%el_len = 64
 1183.             $_StackDv_P7%header%assoc = 1
 1183.             $_StackDv_P7%header%ptr_alloc = 0
 1183.             $_StackDv_P7%header%p_or_a = 0
 1183.             $_StackDv_P7%header%a_contig = 0
 1183.             $_StackDv_P7%header%dv_versn = 2
 1183.             $_StackDv_P7%header%dv_smunit = 64
 1183.             $_StackDv_P7%header%d_type = 0
 1183.             $_StackDv_P7%header%n_params = 0
 1183.             $_StackDv_P7%header%pad_codim = 0
 1183.             $_StackDv_P7%header%n_codim = 0
 1183.             $_StackDv_P7%header%pad_dim = 0
 1183.             $_StackDv_P7%header%n_dim = 1
 1183.             $_StackDv_P7%header%d_type_idx = 0
 1183.             $_StackDv_P7%header%typ_code = 134479875
 1183.             $_StackDv_P7%header%orig_base = int( loc( t$1104(1) ), 8 )
 1183.             $_StackDv_P7%header%orig_size = 64
 1183.             $_StackDv_P7%dim_1%LB = 1
 1183.             $_StackDv_P7%dim_1%EX = ( max( 0, -1 + 4 * ( degree / 2 ) ) )
 1183.             $_StackDv_P7%dim_1%SM = 1
 1183. !dir$ ref_suppress t$1108
 1183.             $_StackDv_P8%base_addr = pointer to array[1] of logical( loc( t$1108(1) ) )
 1183.             $_StackDv_P8%header%el_len = 32
 1183.             $_StackDv_P8%header%assoc = 1
 1183.             $_StackDv_P8%header%ptr_alloc = 0
 1183.             $_StackDv_P8%header%p_or_a = 0
 1183.             $_StackDv_P8%header%a_contig = 0
 1183.             $_StackDv_P8%header%dv_versn = 2
 1183.             $_StackDv_P8%header%dv_smunit = 32
 1183.             $_StackDv_P8%header%d_type = 0
 1183.             $_StackDv_P8%header%n_params = 0
 1183.             $_StackDv_P8%header%pad_codim = 0
 1183.             $_StackDv_P8%header%n_codim = 0
 1183.             $_StackDv_P8%header%pad_dim = 0
 1183.             $_StackDv_P8%header%n_dim = 1
 1183.             $_StackDv_P8%header%d_type_idx = 0
 1183.             $_StackDv_P8%header%typ_code = 67239941
 1183.             $_StackDv_P8%header%orig_base = int( loc( t$1108(1) ), 8 )
 1183.             $_StackDv_P8%header%orig_size = 32
 1183.             $_StackDv_P8%dim_1%LB = 1
 1183.             $_StackDv_P8%dim_1%EX = _zla( 0, -1 + 4 * ( degree / 2 ) )
 1183.             $_StackDv_P8%dim_1%SM = 1
 1183.             $_ResultDv_A4%base_addr = pointer to array[1] of real (kind=8)( 0 )
 1183.             $_ResultDv_A4%header%el_len = 64
 1183.             $_ResultDv_A4%header%assoc = 0
 1183.             $_ResultDv_A4%header%ptr_alloc = 0
 1183.             $_ResultDv_A4%header%p_or_a = 0
 1183.             $_ResultDv_A4%header%a_contig = 0
 1183.             $_ResultDv_A4%header%dv_versn = 2
 1183.             $_ResultDv_A4%header%dv_smunit = 64
 1183.             $_ResultDv_A4%header%d_type = 0
 1183.             $_ResultDv_A4%header%n_params = 0
 1183.             $_ResultDv_A4%header%pad_codim = 0
 1183.             $_ResultDv_A4%header%n_codim = 0
 1183.             $_ResultDv_A4%header%pad_dim = 0
 1183.             $_ResultDv_A4%header%n_dim = 1
 1183.             $_ResultDv_A4%header%d_type_idx = 0
 1183.             $_ResultDv_A4%header%typ_code = 262147
 1183.             $_ResultDv_A4%header%orig_base = 0
 1183.             $_ResultDv_A4%header%orig_size = 0
 1183.             $_ResultDv_A4%dim_1%LB = 0
 1183.             $_ResultDv_A4%dim_1%EX = 0
 1183.             $_ResultDv_A4%dim_1%SM = 0
 1183.             _pack( $_ResultDv_A4, $_StackDv_P7, $_StackDv_P8, Null_Arg )
 1183.             $Base_A49 = int( ($_ResultDv_A3%base_addr)(0), 8 )
 1183.             $Base_A51 = int( ($_ResultDv_A4%base_addr)(0), 8 )
 1183.             $F_A53 = _dv_ex( $_ResultDv_A4, 1 )
 1183.             if ( _dv_ex( $_ResultDv_A4, 1 ) > 0 ) then
 1183.                $I_L1183_58 = 0
 1183. !dir$ ivdep
 1183.                do
 1183.                   col(1 + $I_L1183_58) = 5.0e-1 * ( $A52($I_L1183_58) + $A50($I_L1183_58) )
 1183.                   $I_L1183_58 = 1 + $I_L1183_58
 1183.                   if ( $I_L1183_58 >= $F_A53 ) exit
 1183.                enddo
 1183.             endif
 1183.             $__P9(0) = 0x1000000000001L
 1183.             $__P9(1) = int( loc( $_ResultDv_A4 ), 8 )
 1183.             _dealloc( $__P9 )
 1183.             $__P6(0) = 0x1000000000001L
 1183.             $__P6(1) = int( loc( $_ResultDv_A3 ), 8 )
 1183.             _dealloc( $__P6 )
 1184.             _free( t$1117 )
 1184.             _free( t$1113 )
 1183.             _free( t$1109 )
 1183.             _free( t$1105 )
 1185.             $_allo_P13(0) = 0x1000000000001L
 1185.             $_allo_P13(1) = loc( xsearch )
 1185.             call __deallocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 1185.             xsearch%header%assoc = 0
 1186.             $_allo_P14(0) = 0x1000000000001L
 1186.             $_allo_P14(1) = loc( fsearch )
 1186.             call __deallocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 1186.             fsearch%header%assoc = 0
 1187.             $_allo_P15(0) = 0x1000000000001L
 1187.             $_allo_P15(1) = loc( mask )
 1187.             call __deallocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 1187.             mask%header%assoc = 0
 1191.             $it_S3 = 1
 1192.             $F_A54 = degree / 2
 1192.             if ( degree >= 2 ) then
 1192.                $I_L1192_60 = 0
 1192. !dir$ ivdep
 1192.                do
 1192.                   x(1 + $I_L1192_60) = cos( col(1 + $I_L1192_60) )
 1192.                   $I_L1192_60 = 1 + $I_L1192_60
 1192.                   if ( $I_L1192_60 >= $F_A54 ) exit
 1192.                enddo
 1192.             endif
 1193.             $scale_S9 = ( 2.0 * 1.0/( degree * degree ) )
 1194.             $left_S4 = mod( -1 + degree, 6 )
 1195.             t$1118 = ( 7.8539816339744828e-1 * 1.0/degree )
 1195.             $_IOitem_P3(0) = degree
 1195.             $_IOitem_P3(1) = 8
 1195.             $_IOitem_P3(2) = 8
 1195.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P3(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( rootprecision, 0x804060300000000L ), _iotype( t$1118, 0x4000300000000L ) ) )
 1196.             do
 1197.                if ( $it_S3 > 10 ) then
 1198.                   _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,64), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 10, 0x2000200000000L ) ) )
 1198.                   goto 20
 1198.                endif
 1205.                $it_S3 = 1 + $it_S3
 1206.                $F_A55 = degree / 2
 1206.                if ( degree >= 2 ) then
 1206.                   $I_L1206_62 = 0
 1206. !dir$ ivdep
 1206.                   do
 1206.                      p0(1 + $I_L1206_62) = 1.0
 1206.                      $I_L1206_62 = 1 + $I_L1206_62
 1206.                      if ( $I_L1206_62 >= $F_A55 ) exit
 1206.                   enddo
 1206.                endif
 1207.                $F_A56 = degree / 2
 1207.                if ( degree >= 2 ) then
 1207.                   $I_L1207_64 = 0
 1207. !dir$ ivdep
 1207.                   do
 1207.                      p1(1 + $I_L1207_64) = x(1 + $I_L1207_64)
 1207.                      $I_L1207_64 = 1 + $I_L1207_64
 1207.                      if ( $I_L1207_64 >= $F_A56 ) exit
 1207.                   enddo
 1207.                endif
 1213.                if ( $left_S4 > 0 ) then
 1213.                   $I_L1213_96 = 0
 1213.                   do
 1214.                      $F_A57 = degree / 2
 1214.                      if ( degree >= 2 ) then
 1214.                         $SCA_auxpoly2_I4 = (auxpoly2%base_addr)(2 + $I_L1213_96, 0)
 1214.                         $SCA_auxpoly1_I5 = (auxpoly1%base_addr)(2 + $I_L1213_96, 0)
 1214.                         $I_L1214_66 = 0
 1214. !dir$ ivdep
 1214.                         do
 1214.                            pol(1 + $I_L1214_66) = x(1 + $I_L1214_66) * p1(1 + $I_L1214_66) * $SCA_auxpoly1_I5 + p0(1 + $I_L1214_66) * $SCA_auxpoly2_I4
 1214.                            $I_L1214_66 = 1 + $I_L1214_66
 1214.                            if ( $I_L1214_66 >= $F_A57 ) exit
 1214.                         enddo
 1214.                      endif
 1215.                      $F_A58 = degree / 2
 1215.                      if ( degree >= 2 ) then
 1215.                         $I_L1215_68 = 0
 1215. !dir$ ivdep
 1215.                         do
 1215.                            p0(1 + $I_L1215_68) = p1(1 + $I_L1215_68)
 1215.                            $I_L1215_68 = 1 + $I_L1215_68
 1215.                            if ( $I_L1215_68 >= $F_A58 ) exit
 1215.                         enddo
 1215.                      endif
 1215.                      $F_A59 = degree / 2
 1215.                      if ( degree >= 2 ) then
 1215.                         $I_L1215_70 = 0
 1215. !dir$ ivdep
 1215.                         do
 1215.                            p1(1 + $I_L1215_70) = pol(1 + $I_L1215_70)
 1215.                            $I_L1215_70 = 1 + $I_L1215_70
 1215.                            if ( $I_L1215_70 >= $F_A59 ) exit
 1215.                         enddo
 1215.                      endif
 1216.                      $I_L1213_96 = 1 + $I_L1213_96
 1213.                      if ( $I_L1213_96 >= $left_S4 ) exit
 1213.                   enddo
 1213.                endif
 1220.                if ( degree + -$left_S4 + -2 >= 0 ) then
 1220.                   $t_S7 = ( degree + -$left_S4 + 4 ) / 6
 1220.                   $I_L1220_98 = 0
 1220.                   do
 1221.                      $F_A60 = degree / 2
 1221.                      if ( degree >= 2 ) then
 1221.                         $SCA_auxpoly2_I6 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 2, 0)
 1221.                         $SCA_auxpoly1_I7 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 2, 0)
 1221.                         $I_L1221_72 = 0
 1221. !dir$ ivdep
 1221.                         do
 1221.                            pol(1 + $I_L1221_72) = x(1 + $I_L1221_72) * p1(1 + $I_L1221_72) * $SCA_auxpoly1_I7 + p0(1 + $I_L1221_72) * $SCA_auxpoly2_I6
 1221.                            $I_L1221_72 = 1 + $I_L1221_72
 1221.                            if ( $I_L1221_72 >= $F_A60 ) exit
 1221.                         enddo
 1221.                      endif
 1222.                      $F_A61 = degree / 2
 1222.                      if ( degree >= 2 ) then
 1222.                         $SCA_auxpoly2_I8 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 3, 0)
 1222.                         $SCA_auxpoly1_I9 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 3, 0)
 1222.                         $I_L1222_74 = 0
 1222. !dir$ ivdep
 1222.                         do
 1222.                            p0(1 + $I_L1222_74) = x(1 + $I_L1222_74) * pol(1 + $I_L1222_74) * $SCA_auxpoly1_I9 + p1(1 + $I_L1222_74) * $SCA_auxpoly2_I8
 1222.                            $I_L1222_74 = 1 + $I_L1222_74
 1222.                            if ( $I_L1222_74 >= $F_A61 ) exit
 1222.                         enddo
 1222.                      endif
 1223.                      $F_A62 = degree / 2
 1223.                      if ( degree >= 2 ) then
 1223.                         $SCA_auxpoly2_I10 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 4, 0)
 1223.                         $SCA_auxpoly1_I11 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 4, 0)
 1223.                         $I_L1223_76 = 0
 1223. !dir$ ivdep
 1223.                         do
 1223.                            p1(1 + $I_L1223_76) = x(1 + $I_L1223_76) * p0(1 + $I_L1223_76) * $SCA_auxpoly1_I11 + pol(1 + $I_L1223_76) * $SCA_auxpoly2_I10
 1223.                            $I_L1223_76 = 1 + $I_L1223_76
 1223.                            if ( $I_L1223_76 >= $F_A62 ) exit
 1223.                         enddo
 1223.                      endif
 1224.                      $F_A63 = degree / 2
 1224.                      if ( degree >= 2 ) then
 1224.                         $SCA_auxpoly2_I12 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 5, 0)
 1224.                         $SCA_auxpoly1_I13 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 5, 0)
 1224.                         $I_L1224_78 = 0
 1224. !dir$ ivdep
 1224.                         do
 1224.                            pol(1 + $I_L1224_78) = x(1 + $I_L1224_78) * p1(1 + $I_L1224_78) * $SCA_auxpoly1_I13 + p0(1 + $I_L1224_78) * $SCA_auxpoly2_I12
 1224.                            $I_L1224_78 = 1 + $I_L1224_78
 1224.                            if ( $I_L1224_78 >= $F_A63 ) exit
 1224.                         enddo
 1224.                      endif
 1225.                      $F_A64 = degree / 2
 1225.                      if ( degree >= 2 ) then
 1225.                         $SCA_auxpoly2_I14 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 6, 0)
 1225.                         $SCA_auxpoly1_I15 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 6, 0)
 1225.                         $I_L1225_80 = 0
 1225. !dir$ ivdep
 1225.                         do
 1225.                            p0(1 + $I_L1225_80) = x(1 + $I_L1225_80) * pol(1 + $I_L1225_80) * $SCA_auxpoly1_I15 + p1(1 + $I_L1225_80) * $SCA_auxpoly2_I14
 1225.                            $I_L1225_80 = 1 + $I_L1225_80
 1225.                            if ( $I_L1225_80 >= $F_A64 ) exit
 1225.                         enddo
 1225.                      endif
 1226.                      $F_A65 = degree / 2
 1226.                      if ( degree >= 2 ) then
 1226.                         $SCA_auxpoly2_I16 = (auxpoly2%base_addr)($left_S4 + 6 * $I_L1220_98 + 7, 0)
 1226.                         $SCA_auxpoly1_I17 = (auxpoly1%base_addr)($left_S4 + 6 * $I_L1220_98 + 7, 0)
 1226.                         $I_L1226_82 = 0
 1226. !dir$ ivdep
 1226.                         do
 1226.                            p1(1 + $I_L1226_82) = x(1 + $I_L1226_82) * p0(1 + $I_L1226_82) * $SCA_auxpoly1_I17 + pol(1 + $I_L1226_82) * $SCA_auxpoly2_I16
 1226.                            $I_L1226_82 = 1 + $I_L1226_82
 1226.                            if ( $I_L1226_82 >= $F_A65 ) exit
 1226.                         enddo
 1226.                      endif
 1227.                      $I_L1220_98 = 1 + $I_L1220_98
 1220.                      if ( $I_L1220_98 >= $t_S7 ) exit
 1220.                   enddo
 1220.                endif
 1228.                $F_A66 = degree / 2
 1228.                if ( degree >= 2 ) then
 1228.                   $I_L1228_84 = 0
 1228. !dir$ ivdep
 1228.                   do
 1228.                      xc(1 + $I_L1228_84) = ( p1(1 + $I_L1228_84) * ( 1.0 + -( x(1 + $I_L1228_84) * x(1 + $I_L1228_84) ) ) * 1.0/( real( degree, 8 ) * ( p0(1 + $I_L1228_84) + -( x(1 + $I_L1228_84) * p1(1 + $I_L1228_84) ) ) ) )
 1228.                      $I_L1228_84 = 1 + $I_L1228_84
 1228.                      if ( $I_L1228_84 >= $F_A66 ) exit
 1228.                   enddo
 1228.                endif
 1229.                $F_A67 = degree / 2
 1229.                if ( degree >= 2 ) then
 1229.                   $I_L1229_86 = 0
 1229. !dir$ ivdep
 1229.                   do
 1229.                      x(1 + $I_L1229_86) = x(1 + $I_L1229_86) + -xc(1 + $I_L1229_86)
 1229.                      $I_L1229_86 = 1 + $I_L1229_86
 1229.                      if ( $I_L1229_86 >= $F_A67 ) exit
 1229.                   enddo
 1229.                endif
 1230.                $Reduc_A68 = -inf
 1230.                $F_A70 = degree / 2
 1230.                if ( degree >= 2 ) then
 1230.                   $I_L1230_88 = 0
 1230. !dir$ ivdep
 1230.                   do
 1230.                      $Reduc_A68 = max( $Reduc_A68, abs( xc(1 + $I_L1230_88) * 1.0/x(1 + $I_L1230_88) ) )
 1230.                      $I_L1230_88 = 1 + $I_L1230_88
 1230.                      if ( $I_L1230_88 >= $F_A70 ) exit
 1230.                   enddo
 1230.                endif
 1230.                if ( $Reduc_A68 < 2.2204460492503131e-14 ) exit
 1230.             enddo
 1231.             $F_A71 = degree / 2
 1231.             if ( degree >= 2 ) then
 1231.                $SC_gaussweights_I24 = gaussweights%dim_1%EX
 1231.                $SC_gaussweights_I25 = gaussweights%dim_1%LB
 1231.                $I_L1231_90 = 0
 1231. !dir$ ivdep
 1231.                do
 1231.                   (gaussweights%base_addr)(1 + $I_L1231_90, 0) = ( $scale_S9 * ( 1.0 + -( x(1 + $I_L1231_90) * x(1 + $I_L1231_90) ) ) * 1.0/( p0(1 + $I_L1231_90) * p0(1 + $I_L1231_90) ) )
 1231.                   $I_L1231_90 = 1 + $I_L1231_90
 1231.                   if ( $I_L1231_90 >= $F_A71 ) exit
 1231.                enddo
 1231.             endif
 1232.             $F_A72 = ( degree + degree / -2 )
 1232.             if ( degree + degree / -2 > 0 ) then
 1232.                $SC_gaussweights_I24 = gaussweights%dim_1%EX
 1232.                $SC_gaussweights_I25 = gaussweights%dim_1%LB
 1232.                $I_L1232_92 = 0
 1232. !dir$ ivdep
 1232.                do
 1232.                   (gaussweights%base_addr)($I_L1232_92 + degree / 2 + 1, 0) = (gaussweights%base_addr)(degree / 2 + -$I_L1232_92, 0)
 1232.                   $I_L1232_92 = 1 + $I_L1232_92
 1232.                   if ( $I_L1232_92 >= $F_A72 ) exit
 1232.                enddo
 1232.             endif
 1232.    20       continue
 1238.             $F_A73 = degree / 2
 1238.             if ( degree >= 2 ) then
 1238.                $SC_cosgausscolat_I26 = cosgausscolat%dim_1%EX
 1238.                $SC_cosgausscolat_I27 = cosgausscolat%dim_1%LB
 1238.                $I_L1238_94 = 0
 1238. !dir$ ivdep
 1238.                do
 1238.                   (cosgausscolat%base_addr)($SC_cosgausscolat_I27 + $I_L1238_94, 0) = x(1 + $I_L1238_94)
 1238.                   $I_L1238_94 = 1 + $I_L1238_94
 1238.                   if ( $I_L1238_94 >= $F_A73 ) exit
 1238.                enddo
 1238.             endif
 1109.             $_allo_P16(0) = 0x3000000000001L
 1109.             $_allo_P16(1) = loc( xsearch )
 1109.             $_allo_P16(2) = loc( mask )
 1109.             $_allo_P16(3) = loc( fsearch )
 1109.             call _dealloc( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 1106.             _free( t$291 )
 1106.          endif
 1106.       endif
 1106.    30 continue
 1240.       return
 1240.       end
 1240.       
 1251.       
 1251.       subroutine iminv( a, n, d, l, m )
 1251.       t$120 = n
 1255.       t$309 = _zla( 0, n )
 1267.       d = 1.0
 1269.       if ( n > 0 ) then
 1269.          $I_L1269_133 = 0
 1269.          do
 1271.             l(1 + $I_L1269_133) = ( 1 + $I_L1269_133 )
 1272.             m(1 + $I_L1269_133) = ( 1 + $I_L1269_133 )
 1274.             $biga_S4 = a($I_L1269_133 + n * $I_L1269_133 + 1)
 1275.             $I_L1275_125 = 0
 1275.             do
 1277.                $I_L1277_99 = 0
 1277. !dir$ unroll 4
 1277.                do
 1279.                   if ( abs( $biga_S4 ) < abs( a($I_L1277_99 + $I_L1269_133 + n * $I_L1275_125 + n * $I_L1269_133 + 1) ) ) then
 1280.                      $biga_S4 = a($I_L1277_99 + $I_L1269_133 + n * $I_L1275_125 + n * $I_L1269_133 + 1)
 1281.                      l(1 + $I_L1269_133) = ( $I_L1277_99 + $I_L1269_133 + 1 )
 1282.                      m(1 + $I_L1269_133) = ( $I_L1275_125 + $I_L1269_133 + 1 )
 1282.                   endif
 1284.                   $I_L1277_99 = 1 + $I_L1277_99
 1283.                   if ( $I_L1277_99 >= n + -$I_L1269_133 ) exit
 1283.                enddo
 1285.                $I_L1275_125 = 1 + $I_L1275_125
 1284.                if ( $I_L1275_125 >= n + -$I_L1269_133 ) exit
 1284.             enddo
 1289.             $j_S5 = l(1 + $I_L1269_133)
 1290.             if ( $j_S5 > ( 1 + $I_L1269_133 ) ) then
 1293.                $I_L1293_101 = 0
 1293. !dir$ unroll 4
 1293.                do
 1295.                   $hold_S7 = -a($I_L1269_133 + n * $I_L1293_101 + 1)
 1297.                   a($I_L1269_133 + n * $I_L1293_101 + 1) = a(n + $j_S5 + -n + n * $I_L1293_101)
 1298.                   a(n + $j_S5 + -n + n * $I_L1293_101) = $hold_S7
 1299.                   $I_L1293_101 = 1 + $I_L1293_101
 1293.                   if ( $I_L1293_101 >= n ) exit
 1293.                enddo
 1293.             endif
 1304.             $i_S9 = m(1 + $I_L1269_133)
 1305.             if ( $i_S9 > ( 1 + $I_L1269_133 ) ) then
 1308.                $I_L1308_103 = 0
 1308. !dir$ ivdep
 1308.                do
 1311.                   $hold_S11 = -a($I_L1308_103 + n * $I_L1269_133 + 1)
 1312.                   a($I_L1308_103 + n * $I_L1269_133 + 1) = a($I_L1308_103 + -n + n * $i_S9 + 1)
 1313.                   a($I_L1308_103 + -n + n * $i_S9 + 1) = $hold_S11
 1314.                   $I_L1308_103 = 1 + $I_L1308_103
 1308.                   if ( $I_L1308_103 >= n ) exit
 1308.                enddo
 1308.             endif
 1320.             if ( $biga_S4 == 0.0 ) then
 1321.                d = 0.0
 1321.                goto 110
 1321.             endif
 1324.             $I_L1324_55 = 0
 1329.             if ( 0 >= $I_L1269_133 ) then
 1329.                goto 10
 1329.             else
 1324.                $I_L1324_105 = 0
 1324. !dir$ ivdep
 1324.                do
 1327.                   a($I_L1324_105 + n * $I_L1269_133 + 1) = -( a($I_L1324_105 + n * $I_L1269_133 + 1) * 1.0/$biga_S4 )
 1329.                   $I_L1324_105 = 1 + $I_L1324_105
 1328.                   if ( $I_L1324_105 >= min( $I_L1269_133, n ) ) exit
 1328.                enddo
 1329.                $I_L1324_55 = min( $I_L1269_133, n )
 1329.                if ( $I_L1269_133 < n ) then
 1329.    10             continue
 1329.                   if ( $I_L1269_133 + -$I_L1324_55 == 0 ) then
 1329.                      $I_L1324_55 = 1 + $I_L1324_55
 1329.                      if ( $I_L1324_55 < n ) then
 1329.                         goto 20
 1329.                      endif
 1329.                   else
 1329.    20                continue
 1324.                      $I_L1324_123 = 0
 1324. !dir$ ivdep
 1324.                      do
 1327.                         a($I_L1324_55 + $I_L1324_123 + n * $I_L1269_133 + 1) = -( a($I_L1324_55 + $I_L1324_123 + n * $I_L1269_133 + 1) * 1.0/$biga_S4 )
 1329.                         $I_L1324_123 = 1 + $I_L1324_123
 1328.                         if ( $I_L1324_123 >= n + -$I_L1324_55 ) exit
 1328.                      enddo
 1328.                   endif
 1328.                endif
 1328.             endif
 1333.             $I_L1333_67 = 0
 1344.             if ( 0 >= $I_L1269_133 ) then
 1344.                goto 30
 1344.             else
 1333.                $I_L1333_127 = 0
 1333.                do
 1337.                   $I_L1337_107 = 0
 1337. !dir$ unroll 4
 1337.                   do
 1342.                      a($I_L1333_127 + n * $I_L1337_107 + 1) = a($I_L1333_127 + n * $I_L1269_133 + 1) * a($I_L1269_133 + n * $I_L1337_107 + 1) + a($I_L1333_127 + n * $I_L1337_107 + 1)
 1343.                      $I_L1337_107 = 1 + $I_L1337_107
 1343.                      if ( $I_L1337_107 >= min( $I_L1269_133, n ) ) exit
 1343.                   enddo
 1343.                   $I_L1337_57 = min( $I_L1269_133, n )
 1343.                   if ( $I_L1269_133 < n ) then
 1343.                      if ( $I_L1269_133 + -min( $I_L1269_133, n ) == 0 ) then
 1343.                         $I_L1337_57 = 1 + min( $I_L1269_133, n )
 1343.                         if ( 1 + min( $I_L1269_133, n ) < n ) then
 1343.                            goto 70
 1343.                         endif
 1343.                      else
 1343.    70                   continue
 1337.                         $I_L1337_117 = 0
 1337. !dir$ unroll 4
 1337.                         do
 1342.                            a($I_L1333_127 + n * $I_L1337_57 + n * $I_L1337_117 + 1) = a($I_L1333_127 + n * $I_L1269_133 + 1) * a($I_L1269_133 + n * $I_L1337_57 + n * $I_L1337_117 + 1) + a($I_L1333_127 + n * $I_L1337_57 + n * $I_L1337_117 + 1)
 1343.                            $I_L1337_117 = 1 + $I_L1337_117
 1343.                            if ( $I_L1337_117 >= n + -$I_L1337_57 ) exit
 1343.                         enddo
 1343.                      endif
 1343.                   endif
 1344.                   $I_L1333_127 = 1 + $I_L1333_127
 1343.                   if ( $I_L1333_127 >= min( $I_L1269_133, n ) ) exit
 1343.                enddo
 1344.                $I_L1333_67 = min( $I_L1269_133, n )
 1344.                if ( $I_L1269_133 < n ) then
 1344.    30             continue
 1344.                   if ( $I_L1269_133 + -$I_L1333_67 == 0 ) then
 1344.                      $I_L1333_67 = 1 + $I_L1333_67
 1344.                      if ( $I_L1333_67 < n ) then
 1344.                         goto 40
 1344.                      endif
 1344.                   else
 1344.    40                continue
 1333.                      $I_L1333_131 = 0
 1333.                      do
 1337.                         $I_L1337_57 = 0
 1343.                         if ( 0 >= $I_L1269_133 ) then
 1343.                            goto 50
 1343.                         else
 1337.                            $I_L1337_121 = 0
 1337. !dir$ unroll 4
 1337.                            do
 1342.                               a($I_L1333_67 + $I_L1333_131 + n * $I_L1337_121 + 1) = a($I_L1333_67 + $I_L1333_131 + n * $I_L1269_133 + 1) * a($I_L1269_133 + n * $I_L1337_121 + 1) + a($I_L1333_67 + $I_L1333_131 + n * $I_L1337_121 + 1)
 1343.                               $I_L1337_121 = 1 + $I_L1337_121
 1343.                               if ( $I_L1337_121 >= min( $I_L1269_133, n ) ) exit
 1343.                            enddo
 1343.                            $I_L1337_57 = min( $I_L1269_133, n )
 1343.                            if ( $I_L1269_133 < n ) then
 1343.    50                         continue
 1343.                               if ( $I_L1269_133 + -$I_L1337_57 == 0 ) then
 1343.                                  $I_L1337_57 = 1 + $I_L1337_57
 1343.                                  if ( $I_L1337_57 < n ) then
 1343.                                     goto 60
 1343.                                  endif
 1343.                               else
 1343.    60                            continue
 1337.                                  $I_L1337_119 = 0
 1337. !dir$ unroll 4
 1337.                                  do
 1342.                                     a($I_L1333_67 + $I_L1333_131 + n * $I_L1337_57 + n * $I_L1337_119 + 1) = a($I_L1333_67 + $I_L1333_131 + n * $I_L1269_133 + 1) * a($I_L1269_133 + n * $I_L1337_57 + n * $I_L1337_119 + 1) + a($I_L1333_67 + $I_L1333_131 + n * $I_L1337_57 + n * $I_L1337_119 + 1)
 1343.                                     $I_L1337_119 = 1 + $I_L1337_119
 1343.                                     if ( $I_L1337_119 >= n + -$I_L1337_57 ) exit
 1343.                                  enddo
 1343.                               endif
 1343.                            endif
 1343.                         endif
 1344.                         $I_L1333_131 = 1 + $I_L1333_131
 1343.                         if ( $I_L1333_131 >= n + -$I_L1333_67 ) exit
 1343.                      enddo
 1343.                   endif
 1343.                endif
 1343.             endif
 1349.             $I_L1349_59 = 0
 1353.             if ( 0 >= $I_L1269_133 ) then
 1353.                goto 80
 1353.             else
 1349.                $I_L1349_109 = 0
 1349. !dir$ ivdep
 1349.                do
 1352.                   a($I_L1269_133 + n * $I_L1349_109 + 1) = ( a($I_L1269_133 + n * $I_L1349_109 + 1) * 1.0/$biga_S4 )
 1353.                   $I_L1349_109 = 1 + $I_L1349_109
 1353.                   if ( $I_L1349_109 >= min( $I_L1269_133, n ) ) exit
 1353.                enddo
 1353.                $I_L1349_59 = min( $I_L1269_133, n )
 1353.                if ( $I_L1269_133 < n ) then
 1353.    80             continue
 1353.                   if ( $I_L1269_133 + -$I_L1349_59 == 0 ) then
 1353.                      $I_L1349_59 = 1 + $I_L1349_59
 1353.                      if ( $I_L1349_59 < n ) then
 1353.                         goto 90
 1353.                      endif
 1353.                   else
 1353.    90                continue
 1349.                      $I_L1349_115 = 0
 1349. !dir$ ivdep
 1349.                      do
 1352.                         a($I_L1269_133 + n * $I_L1349_59 + n * $I_L1349_115 + 1) = ( a($I_L1269_133 + n * $I_L1349_59 + n * $I_L1349_115 + 1) * 1.0/$biga_S4 )
 1353.                         $I_L1349_115 = 1 + $I_L1349_115
 1353.                         if ( $I_L1349_115 >= n + -$I_L1349_59 ) exit
 1353.                      enddo
 1353.                   endif
 1353.                endif
 1353.             endif
 1357.             d = d * $biga_S4
 1361.             a($I_L1269_133 + n * $I_L1269_133 + 1) = 1.0/$biga_S4
 1362.             $I_L1269_133 = 1 + $I_L1269_133
 1353.             if ( $I_L1269_133 >= n ) exit
 1353.          enddo
 1353.          goto 100
 1353.       else
 1353.   100    continue
 1369.          if ( -1 + n > 0 ) then
 1367.             $I_k_129 = 0
 1367.             do
 1370.                $i_S19 = l(n + -$I_k_129 + -1)
 1371.                if ( $i_S19 > ( n + -$I_k_129 + -1 ) ) then
 1375.                   $I_L1375_111 = 0
 1375. !dir$ ivdep
 1375.                   do
 1377.                      $hold_S21 = a($I_L1375_111 + -( n * $I_k_129 ) + n * n + -2 * n + 1)
 1379.                      a($I_L1375_111 + -( n * $I_k_129 ) + n * n + -2 * n + 1) = -a($I_L1375_111 + -n + n * $i_S19 + 1)
 1380.                      a($I_L1375_111 + -n + n * $i_S19 + 1) = $hold_S21
 1381.                      $I_L1375_111 = 1 + $I_L1375_111
 1375.                      if ( $I_L1375_111 >= n ) exit
 1375.                   enddo
 1375.                endif
 1383.                $j_S22 = m(n + -$I_k_129 + -1)
 1384.                if ( $j_S22 > ( n + -$I_k_129 + -1 ) ) then
 1387.                   if ( ( mod( $j_S22 + $I_k_129 + -n + 1, n ) == 0 .and. abs( ( $j_S22 + $I_k_129 + -n + 1 ) / n ) <= -1 + n ) /= 0 ) then
 1387.                      $I_L1387_113 = 0
 1387.                      do
 1389.                         $hold_S24 = a(n + -$I_k_129 + n * $I_L1387_113 + -1)
 1391.                         a(n + -$I_k_129 + n * $I_L1387_113 + -1) = -a($j_S22 + n * $I_L1387_113)
 1392.                         a($j_S22 + n * $I_L1387_113) = $hold_S24
 1393.                         $I_L1387_113 = 1 + $I_L1387_113
 1387.                         if ( $I_L1387_113 >= n ) exit
 1387.                      enddo
 1387.                   else
 1387.                      $I_L1387_113 = 0
 1387. !dir$ ivdep safevl = 2
 1387.                      do
 1389.                         $hold_S24 = a(n + -$I_k_129 + n * $I_L1387_113 + -1)
 1391.                         a(n + -$I_k_129 + n * $I_L1387_113 + -1) = -a($j_S22 + n * $I_L1387_113)
 1392.                         a($j_S22 + n * $I_L1387_113) = $hold_S24
 1393.                         $I_L1387_113 = 1 + $I_L1387_113
 1387.                         if ( $I_L1387_113 >= n ) exit
 1387.                      enddo
 1387.                   endif
 1387.                endif
 1369.                $I_k_129 = 1 + $I_k_129
 1367.                if ( $I_k_129 >= -1 + n ) exit
 1367.             enddo
 1367.          endif
 1367.       endif
 1367.   110 continue
 1396.       return
 1396.       end
 1396.       
 1397.       
 1397.       subroutine balanc( nm, n, a, low, igh, scal )
 1397.       $FROM_S0 = 1
 1397.       $FROM_S1 = 1
 1397.       t$121 = nm
 1403.       t$310 = _zla( 0, nm )
 1397.       t$311 = _zla( 0, nm )
 1397.       t$312 = _zla( 0, nm )
 1416.       $k_S5 = 1
 1417.       $l_S2 = n
 1422.       do
 1422.          if ( $FROM_S0 /= 1 ) then
 1422.             $FROM_S1 = 0
 1422.          endif
 1422.          do
 1422.             if ( $FROM_S1 /= 1 ) then
 1422.                scal(m) = real( j, 8 )
 1423.                if ( j + -m /= 0 ) then
 1425.                   if ( $l_S2 > 0 ) then
 1425.                      $I_L1425_71 = 0
 1425. !dir$ ivdep
 1425.                      do
 1426.                         $f_S4 = a(1 + $I_L1425_71, j)
 1427.                         a(1 + $I_L1425_71, j) = a(1 + $I_L1425_71, m)
 1428.                         a(1 + $I_L1425_71, m) = $f_S4
 1429.                         $I_L1425_71 = 1 + $I_L1425_71
 1425.                         if ( $I_L1425_71 >= $l_S2 ) exit
 1425.                      enddo
 1425.                   endif
 1431.                   if ( n + -$k_S5 >= 0 ) then
 1431.                      $I_L1431_73 = 0
 1431. !dir$ ivdep
 1431.                      do
 1432.                         $f_S7 = a(j, $k_S5 + $I_L1431_73)
 1433.                         a(j, $k_S5 + $I_L1431_73) = a(m, $k_S5 + $I_L1431_73)
 1434.                         a(m, $k_S5 + $I_L1431_73) = $f_S7
 1435.                         $I_L1431_73 = 1 + $I_L1431_73
 1431.                         if ( $I_L1431_73 >= n + -$k_S5 + 1 ) exit
 1431.                      enddo
 1431.                   endif
 1431.                endif
 1437.                if ( iexc == 1 .orelse. iexc /= 2 ) then
 1441.                   if ( $l_S2 /= 1 ) then
 1442.                      $l_S2 = -1 + $l_S2
 1442.                      goto 10
 1442.                   endif
 1442.                else
 1463.                   $k_S5 = 1 + $k_S5
 1463.                   goto 20
 1463.                endif
 1463.             else
 1463.    10          continue
 1446.                if ( $l_S2 <= 0 ) then
 1446.    20             continue
 1465.                   if ( $l_S2 + -$k_S5 >= 0 ) then
 1465.                      $I_L1465_91 = 0
 1465.                      do
 1467.                         $I_L1467_77 = 0
 1467. !dir$ ivdep
 1467.                         do
 1468.                            if ( $I_L1467_77 + -$I_L1465_91 == 0 .orelse. a($k_S5 + $I_L1467_77, $k_S5 + $I_L1465_91) == 0.0 ) then
 1470.                               $I_L1467_77 = 1 + $I_L1467_77
 1470.                            else
 1470.                            endif
 1470.                            if ( $I_L1467_77 >= $l_S2 + -$k_S5 + 1 ) exit
 1470.                         enddo
 1465.                         j = ( $k_S5 + $I_L1465_91 )
 1470.                         $FROM_S0 = 0
 1472.                         m = $k_S5
 1473.                         iexc = 2
 1473.                      else
 1479.                         if ( $l_S2 + -$k_S5 >= 0 ) then
 1479.                            $I_L1479_79 = 0
 1479. !dir$ ivdep
 1479.                            do
 1480.                               scal($k_S5 + $I_L1479_79) = 1.0
 1481.                               $I_L1479_79 = 1 + $I_L1479_79
 1479.                               if ( $I_L1479_79 >= $l_S2 + -$k_S5 + 1 ) exit
 1479.                            enddo
 1485.                            do
 1485.                               $noconv_S21 = .false.
 1487.                               $I_L1487_93 = 0
 1487.                               do
 1488.                                  c = 0.0
 1489.                                  r = 0.0
 1491.                                  $I_L1491_54 = 0
 1495.                                  if ( 0 >= $I_L1487_93 ) then
 1487.                                     goto 30
 1487.                                  else
 1491.                                     $I_L1491_81 = 0
 1491. !dir$ ivdep
 1491.                                     do
 1493.                                        c = c + abs( a($k_S5 + $I_L1491_81, $k_S5 + $I_L1487_93) )
 1494.                                        r = r + abs( a($k_S5 + $I_L1487_93, $k_S5 + $I_L1491_81) )
 1495.                                        $I_L1491_81 = 1 + $I_L1491_81
 1495.                                        if ( $I_L1491_81 >= min( $I_L1487_93, $l_S2 + -$k_S5 + 1 ) ) exit
 1495.                                     enddo
 1495.                                     $I_L1491_54 = min( $I_L1487_93, $l_S2 + -$k_S5 + 1 )
 1495.                                     if ( $I_L1487_93 < $l_S2 + -$k_S5 + 1 ) then
 1495.    30                                  continue
 1495.                                        if ( $I_L1487_93 + -$I_L1491_54 == 0 ) then
 1495.                                           $I_L1491_54 = 1 + $I_L1491_54
 1495.                                           if ( $I_L1491_54 < $l_S2 + -$k_S5 + 1 ) then
 1495.                                              goto 40
 1495.                                           endif
 1495.                                        else
 1495.    40                                     continue
 1491.                                           $I_L1491_87 = 0
 1491. !dir$ ivdep
 1491.                                           do
 1493.                                              c = c + abs( a($k_S5 + $I_L1491_54 + $I_L1491_87, $k_S5 + $I_L1487_93) )
 1494.                                              r = r + abs( a($k_S5 + $I_L1487_93, $k_S5 + $I_L1491_54 + $I_L1491_87) )
 1495.                                              $I_L1491_87 = 1 + $I_L1491_87
 1495.                                              if ( $I_L1491_87 >= $l_S2 + -$k_S5 + -$I_L1491_54 + 1 ) exit
 1495.                                           enddo
 1495.                                        endif
 1495.                                     endif
 1495.                                  endif
 1499.                                  if ( c /= 0.0 ) then
 1499.                                     if ( r /= 0.0 ) then
 1500.                                        $g_S15 = ( 5.0e-1 * r )
 1501.                                        f = 1.0
 1502.                                        $s_S17 = c + r
 1503.                                        do
 1503.                                           if ( c >= $g_S15 ) goto 220
 1504.                                           f = 2.0 * f
 1504.                                        enddo
 1504.   220                                  continue
 1507.                                        $g_S16 = 2.0 * r
 1508.                                        do
 1508.                                           if ( c < $g_S16 ) goto 240
 1509.                                           f = ( 5.0e-1 * f )
 1509.                                        enddo
 1509.   240                                  continue
 1515.                                        if ( ( ( c + r ) * 1.0/f ) < 9.4999999999999996e-1 * $s_S17 ) then
 1516.                                           $g_S18 = 1.0/f
 1517.                                           scal($k_S5 + $I_L1487_93) = scal($k_S5 + $I_L1487_93) * f
 1518.                                           $noconv_S21 = .true.
 1520.                                           if ( n + -$k_S5 >= 0 ) then
 1520.                                              $I_L1520_83 = 0
 1520. !dir$ ivdep
 1520.                                              do
 1521.                                                 a($k_S5 + $I_L1487_93, $k_S5 + $I_L1520_83) = a($k_S5 + $I_L1487_93, $k_S5 + $I_L1520_83) * $g_S18
 1522.                                                 $I_L1520_83 = 1 + $I_L1520_83
 1520.                                                 if ( $I_L1520_83 >= n + -$k_S5 + 1 ) exit
 1520.                                              enddo
 1520.                                           endif
 1524.                                           if ( $l_S2 > 0 ) then
 1524.                                              $I_L1524_85 = 0
 1524. !dir$ ivdep
 1524.                                              do
 1525.                                                 a(1 + $I_L1524_85, $k_S5 + $I_L1487_93) = a(1 + $I_L1524_85, $k_S5 + $I_L1487_93) * f
 1526.                                                 $I_L1524_85 = 1 + $I_L1524_85
 1524.                                                 if ( $I_L1524_85 >= $l_S2 ) exit
 1524.                                              enddo
 1524.                                           endif
 1524.                                        endif
 1524.                                     endif
 1524.                                  endif
 1528.                                  $I_L1487_93 = 1 + $I_L1487_93
 1528.                                  if ( $I_L1487_93 >= $l_S2 + -$k_S5 + 1 ) exit
 1528.                               enddo
 1528.                               if ( $noconv_S21 == 0 ) exit
 1528.                            enddo
 1528.                         endif
 1528.                      endif
 1528.                      goto 280
 1528.                   endif
 1446.                   $I_L1446_89 = 0
 1446.                   do
 1449.                      $I_L1449_75 = 0
 1449. !dir$ ivdep
 1449.                      do
 1450.                         if ( $I_L1449_75 + $I_L1446_89 + -$l_S2 + 1 == 0 .orelse. a($l_S2 + -$I_L1446_89, 1 + $I_L1449_75) == 0.0 ) then
 1452.                            $I_L1449_75 = 1 + $I_L1449_75
 1452.                         else
 1452.                         endif
 1452.                         if ( $I_L1449_75 >= $l_S2 ) exit
 1452.                      enddo
 1447.                      j = ( $l_S2 + -$I_L1446_89 )
 1452.                      $FROM_S1 = 0
 1454.                      m = $l_S2
 1455.                      iexc = 1
 1455.                   endif
 1455.   280             continue
 1532.                   low = $k_S5
 1533.                   igh = $l_S2
 1536.                   return
 1536.       end
 1536.       
 1537.       
 1537.       subroutine balbak( nm, n, low, igh, scal, m, z )
 1537.       t$123 = n
 1545.       t$313 = _zla( 0, n )
 1537.       t$122 = nm
 1544.       t$314 = _zla( 0, nm )
 1537.       t$315 = _zla( 0, nm )
 1537.       t$316 = _zla( 0, n ) * _zla( 0, nm )
 1550.       if ( m /= 0 ) then
 1551.          if ( low + -igh /= 0 ) then
 1553.             if ( igh + -low >= 0 ) then
 1559.                if ( m > 0 ) then
 1559.                   $SI_L1559_16_G2 = 0
 1559.                   do
 1553.                      $I_L1553_20 = 0
 1553. !dir$ ivdep
 1553. !dir$ blocking_size( 0, 0 )
 1553.                      do
 1554.                         $s_S1 = scal(low + $I_L1553_20)
 1559.                         $I_L1559_32 = 0
 1559. !dir$ unroll 4
 1559. !dir$ blocking_size( 256, 256 )
 1559.                         do
 1560.                            z(low + $I_L1553_20, $I_L1559_32 + 256 * $SI_L1559_16_G2 + 1) = z(low + $I_L1553_20, $I_L1559_32 + 256 * $SI_L1559_16_G2 + 1) * $s_S1
 1559.                            $I_L1559_32 = 1 + $I_L1559_32
 1559.                            if ( $I_L1559_32 >= min( m, 256 + 256 * $SI_L1559_16_G2 ) + -256 * $SI_L1559_16_G2 ) exit
 1559.                         enddo
 1563.                         $I_L1553_20 = 1 + $I_L1553_20
 1563.                         if ( $I_L1553_20 >= igh + -low + 1 ) exit
 1563.                      enddo
 1559.                      $SI_L1559_16_G2 = 1 + $SI_L1559_16_G2
 1561.                      if ( $SI_L1559_16_G2 >= _rsh( 255 + m, 8 ) ) exit
 1561.                   enddo
 1561.                endif
 1561.             endif
 1561.          endif
 1568.          if ( n > 0 ) then
 1575.             if ( m > 0 ) then
 1568.                $I_L1568_22 = 0
 1581.                if ( 0 > -1 + igh ) then
 1581.                   goto 10
 1581.                else
 1581.                   if ( 0 >= -1 + low ) then
 1581.                      goto 20
 1581.                   else
 1568.                      $I_L1568_27 = 0
 1568.                      do
 1572.                         $k_S4 = int( scal(cvmg( ( 1 + $I_L1568_27 ), ( low + -$I_L1568_27 + -1 ), ( 1 + $I_L1568_27 ) >= low )) )
 1573.                         if ( $k_S4 + -cvmg( ( 1 + $I_L1568_27 ), ( low + -$I_L1568_27 + -1 ), ( 1 + $I_L1568_27 ) >= low ) /= 0 ) then
 1575.                            $I_L1575_18 = 0
 1575. !dir$ ivdep
 1575.                            do
 1576.                               $s_S6 = z(cvmg( ( 1 + $I_L1568_27 ), ( low + -$I_L1568_27 + -1 ), ( 1 + $I_L1568_27 ) >= low ), 1 + $I_L1575_18)
 1577.                               z(cvmg( ( 1 + $I_L1568_27 ), ( low + -$I_L1568_27 + -1 ), ( 1 + $I_L1568_27 ) >= low ), 1 + $I_L1575_18) = z($k_S4, 1 + $I_L1575_18)
 1578.                               z($k_S4, 1 + $I_L1575_18) = $s_S6
 1579.                               $I_L1575_18 = 1 + $I_L1575_18
 1575.                               if ( $I_L1575_18 >= m ) exit
 1575.                            enddo
 1575.                         endif
 1581.                         $I_L1568_27 = 1 + $I_L1568_27
 1581.                         if ( $I_L1568_27 >= min( igh, min( n, -1 + low ) ) ) exit
 1581.                      enddo
 1581.                      $I_L1568_22 = min( igh, min( n, -1 + low ) )
 1581.                      if ( min( igh, min( n, -1 + low ) ) < min( igh, n ) ) then
 1581.    20                   continue
 1581.                         $I_L1568_22 = min( igh, n )
 1581.                      endif
 1581.                   endif
 1581.                   if ( $I_L1568_22 < n ) then
 1581.    10                continue
 1568.                      $I_L1568_29 = 0
 1568.                      do
 1572.                         $k_S4 = int( scal(cvmg( ( $I_L1568_22 + $I_L1568_29 + 1 ), ( low + -$I_L1568_22 + -$I_L1568_29 + -1 ), ( $I_L1568_22 + $I_L1568_29 + 1 ) >= low )) )
 1573.                         if ( $k_S4 + -cvmg( ( $I_L1568_22 + $I_L1568_29 + 1 ), ( low + -$I_L1568_22 + -$I_L1568_29 + -1 ), ( $I_L1568_22 + $I_L1568_29 + 1 ) >= low ) /= 0 ) then
 1575.                            $I_L1575_18 = 0
 1575. !dir$ ivdep
 1575.                            do
 1576.                               $s_S6 = z(cvmg( ( $I_L1568_22 + $I_L1568_29 + 1 ), ( low + -$I_L1568_22 + -$I_L1568_29 + -1 ), ( $I_L1568_22 + $I_L1568_29 + 1 ) >= low ), 1 + $I_L1575_18)
 1577.                               z(cvmg( ( $I_L1568_22 + $I_L1568_29 + 1 ), ( low + -$I_L1568_22 + -$I_L1568_29 + -1 ), ( $I_L1568_22 + $I_L1568_29 + 1 ) >= low ), 1 + $I_L1575_18) = z($k_S4, 1 + $I_L1575_18)
 1578.                               z($k_S4, 1 + $I_L1575_18) = $s_S6
 1579.                               $I_L1575_18 = 1 + $I_L1575_18
 1575.                               if ( $I_L1575_18 >= m ) exit
 1575.                            enddo
 1575.                         endif
 1581.                         $I_L1568_29 = 1 + $I_L1568_29
 1581.                         if ( $I_L1568_29 >= n + -$I_L1568_22 ) exit
 1581.                      enddo
 1581.                   endif
 1581.                endif
 1581.             endif
 1581.          endif
 1581.       endif
 1584.       return
 1584.       end
 1584.       
 1585.       
 1585.       integer
 1585.       function hqr2( nm, n, low, igh, h, wr, wi, z, ierr, matz, machep, tol, t$124 )
 1585.       t$125 = nm
 1585.       t$126 = n
 1594.       t$317 = _zla( 0, nm )
 1585.       t$318 = _zla( 0, nm )
 1594.       t$319 = _zla( 0, n )
 1585.       t$320 = _zla( 0, nm ) * _zla( 0, n )
 1608.       ierr = 0
 1609.       norm = 0.0
 1610.       $k_S0 = 1
 1614.       if ( n > 0 ) then
 1614.          $I_L1614_121 = 0
 1614. !dir$ loop_info (automatic) cache_nt( wi, wr )
 1614.          do
 1616.             if ( n + -$k_S0 >= 0 ) then
 1616.                $I_L1616_93 = 0
 1616. !dir$ ivdep
 1616.                do
 1617.                   if ( abs( h(1 + $I_L1614_121, $k_S0 + $I_L1616_93) ) < tol ) then
 1617.                      h(1 + $I_L1614_121, $k_S0 + $I_L1616_93) = tol
 1617.                   endif
 1618.                   norm = norm + abs( h(1 + $I_L1614_121, $k_S0 + $I_L1616_93) )
 1619.                   $I_L1616_93 = 1 + $I_L1616_93
 1617.                   if ( $I_L1616_93 >= n + -$k_S0 + 1 ) exit
 1617.                enddo
 1617.             endif
 1621.             $k_S0 = ( 1 + $I_L1614_121 )
 1622.             if ( ( 1 + $I_L1614_121 ) < low ) then
 1619.                goto 10
 1622.             else if ( ( 1 + $I_L1614_121 ) > igh ) then
 1622.    10          continue
 1623.                wr(1 + $I_L1614_121) = h(1 + $I_L1614_121, 1 + $I_L1614_121)
 1624.                wi(1 + $I_L1614_121) = 0.0
 1624.             endif
 1625.             $I_L1614_121 = 1 + $I_L1614_121
 1625.             if ( $I_L1614_121 >= n ) exit
 1625.          enddo
 1625.       endif
 1627.       $en_S3 = igh
 1628.       t = 0.0
 1632. !dir$ loop_info (automatic) cache_nt( wi, wr, h )
 1632.       do
 1632. !dir$ loop_info (automatic) cache_nt( wi, wr, h )
 1632.          do
 1632.             if ( $en_S3 < low ) then
 1842.                if ( matz /= 0 ) then
 1847.                   if ( norm /= 0.0 ) then
 1849.                      call hqr3( nm, n, low, igh, h(1, 1), wr(1), wi(1), z(1, 1), machep, norm )
 1849.                   endif
 1849.                endif
 1849.                goto 160
 1849.             endif
 1633.             $its_S7 = 0
 1640.             do
 1640.                if ( $en_S3 + -low >= 0 ) then
 1640.                   $I_L1640_95 = 0
 1640. !dir$ ivdep
 1640.                   do
 1642.                      if ( $en_S3 + -low + -$I_L1640_95 == 0 ) then
 1640.                         goto 20
 1640.                      endif
 1643.                      $s_S5 = abs( h($en_S3 + -$I_L1640_95 + -1, $en_S3 + -$I_L1640_95 + -1) ) + abs( h($en_S3 + -$I_L1640_95, $en_S3 + -$I_L1640_95) )
 1645.                      if ( abs( h($en_S3 + -$I_L1640_95, $en_S3 + -$I_L1640_95 + -1) ) <= machep * cvmg( $s_S5, norm, $s_S5 /= 0.0 ) ) then
 1643.    20                   continue
 1641.                         l = ( $en_S3 + -$I_L1640_95 )
 1641.                         goto 100
 1641.                      endif
 1646.                      $I_L1640_95 = 1 + $I_L1640_95
 1646.                      if ( $I_L1640_95 >= $en_S3 + -low + 1 ) exit
 1646.                   enddo
 1641.                   l = low
 1641.                endif
 1641.   100          continue
 1650.                $x_S8 = h($en_S3, $en_S3)
 1651.                if ( l + -$en_S3 == 0 ) then
 1770.                   h($en_S3, $en_S3) = $x_S8 + t
 1771.                   wr($en_S3) = ( $x_S8 + t )
 1772.                   wi($en_S3) = 0.0
 1773.                   $en_S3 = -1 + $en_S3
 1773.                   goto 160
 1773.                endif
 1652.                $y_S14 = h(-1 + $en_S3, -1 + $en_S3)
 1653.                $w_S12 = h($en_S3, -1 + $en_S3) * h(-1 + $en_S3, $en_S3)
 1654.                if ( l + -$en_S3 == -1 ) then
 1778.                   p = 5.0e-1 * ( $y_S14 + -$x_S8 )
 1779.                   q = ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) * ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) + $w_S12
 1780.                   $zz_S27 = _sqrt( abs( ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) * ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) + $w_S12 ) )
 1781.                   h($en_S3, $en_S3) = $x_S8 + t
 1782.                   $x_S29 = h($en_S3, $en_S3)
 1783.                   h(-1 + $en_S3, -1 + $en_S3) = $y_S14 + t
 1784.                   if ( ( ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) * ( 5.0e-1 * ( $y_S14 + -$x_S8 ) ) + $w_S12 ) >= 0.0 ) then
 1788.                      $zz_S28 = p + sign( $zz_S27, p )
 1789.                      wr(-1 + $en_S3) = $x_S29 + ( p + sign( $zz_S27, p ) )
 1790.                      wr($en_S3) = ( $x_S29 + ( p + sign( $zz_S27, p ) ) )
 1791.                      if ( ( p + sign( $zz_S27, p ) ) /= 0.0 ) then
 1791.                         wr($en_S3) = $x_S29 + -( $w_S12 * 1.0/$zz_S28 )
 1791.                      endif
 1792.                      wi(-1 + $en_S3) = 0.0
 1793.                      wi($en_S3) = 0.0
 1795.                      if ( matz /= 0 ) then
 1797.                         $x_S30 = h($en_S3, -1 + $en_S3)
 1801.                         r = _sqrt( ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) + ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) )
 1802.                         p = ( ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * 1.0/_sqrt( ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) + ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) ) )
 1803.                         q = ( ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * 1.0/_sqrt( ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $x_S30 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) + ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) * ( $zz_S28 * 1.0/( abs( $x_S30 ) + abs( $zz_S28 ) ) ) ) )
 1807.                         if ( n + -$en_S3 + 1 >= 0 ) then
 1807.                            $I_L1807_97 = 0
 1807. !dir$ ivdep
 1807.                            do
 1808.                               $zz_S32 = h(-1 + $en_S3, $en_S3 + $I_L1807_97 + -1)
 1809.                               h(-1 + $en_S3, $en_S3 + $I_L1807_97 + -1) = q * $zz_S32 + p * h($en_S3, $en_S3 + $I_L1807_97 + -1)
 1810.                               $LD_SPLT_P9 = h($en_S3, $en_S3 + $I_L1807_97 + -1)
 1810.                               h($en_S3, $en_S3 + $I_L1807_97 + -1) = q * $LD_SPLT_P9 + -( p * $zz_S32 )
 1811.                               $I_L1807_97 = 1 + $I_L1807_97
 1807.                               if ( $I_L1807_97 >= n + -$en_S3 + 2 ) exit
 1807.                            enddo
 1807.                         endif
 1815.                         if ( $en_S3 > 0 ) then
 1815.                            $I_L1815_99 = 0
 1815. !dir$ ivdep
 1815.                            do
 1816.                               $zz_S34 = h(1 + $I_L1815_99, -1 + $en_S3)
 1817.                               h(1 + $I_L1815_99, -1 + $en_S3) = q * $zz_S34 + p * h(1 + $I_L1815_99, $en_S3)
 1818.                               $LD_SPLT_P10 = h(1 + $I_L1815_99, $en_S3)
 1818.                               h(1 + $I_L1815_99, $en_S3) = q * $LD_SPLT_P10 + -( p * $zz_S34 )
 1819.                               $I_L1815_99 = 1 + $I_L1815_99
 1815.                               if ( $I_L1815_99 >= $en_S3 ) exit
 1815.                            enddo
 1815.                         endif
 1823.                         if ( igh + -low >= 0 ) then
 1823.                            $I_L1823_101 = 0
 1823. !dir$ ivdep
 1823. !dir$ loop_info (automatic) cache_nt( z )
 1823.                            do
 1824.                               $zz_S36 = z(low + $I_L1823_101, -1 + $en_S3)
 1825.                               z(low + $I_L1823_101, -1 + $en_S3) = q * $zz_S36 + p * z(low + $I_L1823_101, $en_S3)
 1826.                               $LD_SPLT_P11 = z(low + $I_L1823_101, $en_S3)
 1826.                               z(low + $I_L1823_101, $en_S3) = q * $LD_SPLT_P11 + -( p * $zz_S36 )
 1827.                               $I_L1823_101 = 1 + $I_L1823_101
 1823.                               if ( $I_L1823_101 >= igh + -low + 1 ) exit
 1823.                            enddo
 1823.                         endif
 1823.                      endif
 1823.                   else
 1833.                      wr(-1 + $en_S3) = $x_S29 + p
 1834.                      wr($en_S3) = $x_S29 + p
 1835.                      wi(-1 + $en_S3) = $zz_S27
 1836.                      wi($en_S3) = -$zz_S27
 1836.                   endif
 1838.                   $en_S3 = -2 + $en_S3
 1838.                   goto 160
 1838.                endif
 1655.                if ( $its_S7 == 30 ) then
 1856.                   ierr = $en_S3
 1856.                   goto 160
 1856.                endif
 1656.                if ( $its_S7 == 10 ) then
 1656.                   goto 100
 1656.                else if ( $its_S7 == 20 ) then
 1656.   100             continue
 1660.                   t = t + $x_S8
 1662.                   if ( $en_S3 + -low >= 0 ) then
 1662.                      $I_L1662_103 = 0
 1662. !dir$ ivdep
 1662.                      do
 1663.                         h(low + $I_L1662_103, low + $I_L1662_103) = h(low + $I_L1662_103, low + $I_L1662_103) + -$x_S8
 1664.                         $I_L1662_103 = 1 + $I_L1662_103
 1662.                         if ( $I_L1662_103 >= $en_S3 + -low + 1 ) exit
 1662.                      enddo
 1662.                   endif
 1666.                   $s_S10 = abs( h($en_S3, -1 + $en_S3) ) + abs( h(-1 + $en_S3, -2 + $en_S3) )
 1667.                   $x_S8 = 7.5e-1 * $s_S10
 1668.                   $y_S14 = ( 7.5e-1 * $s_S10 )
 1669.                   $w_S12 = $s_S10 * $s_S10 * -4.375e-1
 1669.                endif
 1670.                $its_S7 = 1 + $its_S7
 1675.                if ( $en_S3 + -l + -2 >= 0 ) then
 1675.                   $I_L1675_105 = 0
 1675. !dir$ ivdep
 1675.                   do
 1677.                      $zz_S13 = h($en_S3 + -$I_L1675_105 + -2, $en_S3 + -$I_L1675_105 + -2)
 1680.                      $p_S16 = ( ( ( $x_S8 + -$zz_S13 ) * ( $y_S14 + -$zz_S13 ) + -$w_S12 ) * 1.0/h($en_S3 + -$I_L1675_105 + -1, $en_S3 + -$I_L1675_105 + -2) ) + h($en_S3 + -$I_L1675_105 + -2, $en_S3 + -$I_L1675_105 + -1)
 1681.                      $q_S15 = h($en_S3 + -$I_L1675_105 + -1, $en_S3 + -$I_L1675_105 + -1) + -$zz_S13 + -( $x_S8 + -$zz_S13 ) + -( $y_S14 + -$zz_S13 )
 1682.                      $r_S17 = h($en_S3 + -$I_L1675_105, $en_S3 + -$I_L1675_105 + -1)
 1684.                      p = ( $p_S16 * 1.0/( abs( $p_S16 ) + abs( $q_S15 ) + abs( $r_S17 ) ) )
 1685.                      q = ( $q_S15 * 1.0/( abs( $p_S16 ) + abs( $q_S15 ) + abs( $r_S17 ) ) )
 1686.                      r = ( $r_S17 * 1.0/( abs( $p_S16 ) + abs( $q_S15 ) + abs( $r_S17 ) ) )
 1687.                      if ( $en_S3 + -l + -$I_L1675_105 + -2 == 0 ) then
 1675.                         goto 110
 1675.                      endif
 1688.                      if ( abs( h($en_S3 + -$I_L1675_105 + -2, $en_S3 + -$I_L1675_105 + -3) ) * ( abs( q ) + abs( r ) ) <= machep * abs( p ) * ( abs( h($en_S3 + -$I_L1675_105 + -3, $en_S3 + -$I_L1675_105 + -3) ) + abs( $zz_S13 ) + abs( h($en_S3 + -$I_L1675_105 + -1, $en_S3 + -$I_L1675_105 + -1) ) ) ) then
 1688.   110                   continue
 1676.                         m = ( $en_S3 + -$I_L1675_105 + -2 )
 1676.                         goto 150
 1676.                      endif
 1690.                      $I_L1675_105 = 1 + $I_L1675_105
 1690.                      if ( $I_L1675_105 >= $en_S3 + -l + -1 ) exit
 1690.                   enddo
 1676.                   m = l
 1676.                endif
 1676.   150          continue
 1694.                if ( $en_S3 + -m + -2 >= 0 ) then
 1695.                   h(2 + m, m) = 0.0
 1698.                   if ( $en_S3 + -m + -2 > 0 ) then
 1694.                      $I_L1694_107 = 0
 1694. !dir$ ivdep
 1694.                      do
 1695.                         h(m + $I_L1694_107 + 3, m + $I_L1694_107 + 1) = 0.0
 1697.                         h(m + $I_L1694_107 + 3, m + $I_L1694_107) = 0.0
 1698.                         $I_L1694_107 = 1 + $I_L1694_107
 1698.                         if ( $I_L1694_107 >= $en_S3 + -m + -2 ) exit
 1698.                      enddo
 1698.                   endif
 1698.                endif
 1702.                if ( $en_S3 + -m > 0 ) then
 1702.                   $I_L1702_123 = 0
 1702.                   do
 1704.                      if ( -$I_L1702_123 /= 0 ) then
 1705.                         p = h(m + $I_L1702_123, m + $I_L1702_123 + -1)
 1706.                         q = h(m + $I_L1702_123 + 1, m + $I_L1702_123 + -1)
 1707.                         r = 0.0
 1708.                         if ( $en_S3 + -m + -$I_L1702_123 + -1 /= 0 ) then
 1708.                            r = h(m + $I_L1702_123 + 2, m + $I_L1702_123 + -1)
 1708.                         endif
 1709.                         $x_S8 = abs( p ) + abs( q ) + abs( r )
 1710.                         if ( ( abs( p ) + abs( q ) + abs( r ) ) /= 0.0 ) then
 1711.                            p = ( p * 1.0/$x_S8 )
 1712.                            q = ( q * 1.0/$x_S8 )
 1713.                            r = ( r * 1.0/$x_S8 )
 1713.                            goto 150
 1713.                         endif
 1713.                      else
 1713.   150                   continue
 1714.                         $s_S21 = sign( _sqrt( p * p + q * q + r * r ), p )
 1715.                         if ( -$I_L1702_123 /= 0 ) then
 1716.                            h(m + $I_L1702_123, m + $I_L1702_123 + -1) = -( $s_S21 * $x_S8 )
 1718.                         else if ( m + -l /= 0 ) then
 1718.                            h(m + $I_L1702_123, m + $I_L1702_123 + -1) = -h(m + $I_L1702_123, m + $I_L1702_123 + -1)
 1718.                         endif
 1719.                         p = p + $s_S21
 1720.                         $x_S8 = ( p * 1.0/$s_S21 )
 1721.                         $y_S24 = ( q * 1.0/$s_S21 )
 1722.                         $zz_S23 = ( r * 1.0/$s_S21 )
 1723.                         q = ( q * 1.0/p )
 1724.                         r = ( r * 1.0/p )
 1728.                         if ( ( n + -m + -$I_L1702_123 ) >= 0 ) then
 1730.                            if ( $en_S3 + -m + -$I_L1702_123 + -1 /= 0 ) then
 1728.                               $I_L1728_109 = 0
 1728. !dir$ ivdep
 1728.                               do
 1729.                                  p = h(m + $I_L1702_123, m + $I_L1728_109 + $I_L1702_123) + q * h(m + $I_L1702_123 + 1, m + $I_L1728_109 + $I_L1702_123)
 1731.                                  p = p + r * h(m + $I_L1702_123 + 2, m + $I_L1728_109 + $I_L1702_123)
 1732.                                  h(m + $I_L1702_123 + 2, m + $I_L1728_109 + $I_L1702_123) = h(m + $I_L1702_123 + 2, m + $I_L1728_109 + $I_L1702_123) + -( p * $zz_S23 )
 1733.                                  $LD_SPLT_P0 = h(m + $I_L1702_123 + 1, m + $I_L1728_109 + $I_L1702_123)
 1733.                                  h(m + $I_L1702_123 + 1, m + $I_L1728_109 + $I_L1702_123) = $LD_SPLT_P0 + -( p * $y_S24 )
 1734.                                  $LD_SPLT_P1 = h(m + $I_L1702_123, m + $I_L1728_109 + $I_L1702_123)
 1734.                                  h(m + $I_L1702_123, m + $I_L1728_109 + $I_L1702_123) = $LD_SPLT_P1 + -( p * $x_S8 )
 1735.                                  $I_L1728_109 = 1 + $I_L1728_109
 1733.                                  if ( $I_L1728_109 >= n + -m + -$I_L1702_123 + 1 ) exit
 1733.                               enddo
 1733.                            else
 1728.                               $I_L1728_115 = 0
 1728. !dir$ ivdep
 1728.                               do
 1729.                                  p = h(m + $I_L1702_123, m + $I_L1728_115 + $I_L1702_123) + q * h(m + $I_L1702_123 + 1, m + $I_L1728_115 + $I_L1702_123)
 1733.                                  h(m + $I_L1702_123 + 1, m + $I_L1728_115 + $I_L1702_123) = h(m + $I_L1702_123 + 1, m + $I_L1728_115 + $I_L1702_123) + -( p * $y_S24 )
 1734.                                  $LD_SPLT_P2 = h(m + $I_L1702_123, m + $I_L1728_115 + $I_L1702_123)
 1734.                                  h(m + $I_L1702_123, m + $I_L1728_115 + $I_L1702_123) = $LD_SPLT_P2 + -( p * $x_S8 )
 1735.                                  $I_L1728_115 = 1 + $I_L1728_115
 1733.                                  if ( $I_L1728_115 >= n + -m + -$I_L1702_123 + 1 ) exit
 1733.                               enddo
 1733.                            endif
 1733.                         endif
 1741.                         if ( min( $en_S3, ( m + $I_L1702_123 + 3 ) ) > 0 ) then
 1743.                            if ( $en_S3 + -m + -$I_L1702_123 + -1 /= 0 ) then
 1741.                               $I_L1741_111 = 0
 1741. !dir$ ivdep
 1741.                               do
 1742.                                  p = $x_S8 * h(1 + $I_L1741_111, m + $I_L1702_123) + $y_S24 * h(1 + $I_L1741_111, m + $I_L1702_123 + 1)
 1744.                                  p = p + $zz_S23 * h(1 + $I_L1741_111, m + $I_L1702_123 + 2)
 1745.                                  h(1 + $I_L1741_111, m + $I_L1702_123 + 2) = h(1 + $I_L1741_111, m + $I_L1702_123 + 2) + -( p * r )
 1746.                                  $LD_SPLT_P3 = h(1 + $I_L1741_111, m + $I_L1702_123 + 1)
 1746.                                  h(1 + $I_L1741_111, m + $I_L1702_123 + 1) = $LD_SPLT_P3 + -( p * q )
 1747.                                  $LD_SPLT_P4 = h(1 + $I_L1741_111, m + $I_L1702_123)
 1747.                                  h(1 + $I_L1741_111, m + $I_L1702_123) = $LD_SPLT_P4 + -p
 1748.                                  $I_L1741_111 = 1 + $I_L1741_111
 1746.                                  if ( $I_L1741_111 >= ( min( $en_S3, ( m + $I_L1702_123 + 3 ) ) ) ) exit
 1746.                               enddo
 1746.                            else
 1741.                               $I_L1741_117 = 0
 1741. !dir$ ivdep
 1741.                               do
 1742.                                  p = $x_S8 * h(1 + $I_L1741_117, m + $I_L1702_123) + $y_S24 * h(1 + $I_L1741_117, m + $I_L1702_123 + 1)
 1746.                                  h(1 + $I_L1741_117, m + $I_L1702_123 + 1) = h(1 + $I_L1741_117, m + $I_L1702_123 + 1) + -( p * q )
 1747.                                  $LD_SPLT_P5 = h(1 + $I_L1741_117, m + $I_L1702_123)
 1747.                                  h(1 + $I_L1741_117, m + $I_L1702_123) = $LD_SPLT_P5 + -p
 1748.                                  $I_L1741_117 = 1 + $I_L1741_117
 1746.                                  if ( $I_L1741_117 >= ( min( $en_S3, ( m + $I_L1702_123 + 3 ) ) ) ) exit
 1746.                               enddo
 1746.                            endif
 1746.                         endif
 1750.                         if ( matz /= 0 ) then
 1754.                            if ( igh + -low >= 0 ) then
 1756.                               if ( $en_S3 + -m + -$I_L1702_123 + -1 /= 0 ) then
 1754.                                  $I_L1754_113 = 0
 1754. !dir$ ivdep
 1754.                                  do
 1755.                                     p = $x_S8 * z(low + $I_L1754_113, m + $I_L1702_123) + $y_S24 * z(low + $I_L1754_113, m + $I_L1702_123 + 1)
 1757.                                     p = p + $zz_S23 * z(low + $I_L1754_113, m + $I_L1702_123 + 2)
 1758.                                     z(low + $I_L1754_113, m + $I_L1702_123 + 2) = z(low + $I_L1754_113, m + $I_L1702_123 + 2) + -( p * r )
 1759.                                     p = cvmg( p, tol, abs( p ) >= tol )
 1760.                                     $LD_SPLT_P6 = z(low + $I_L1754_113, m + $I_L1702_123 + 1)
 1760.                                     z(low + $I_L1754_113, m + $I_L1702_123 + 1) = $LD_SPLT_P6 + -( p * q )
 1761.                                     $LD_SPLT_P7 = z(low + $I_L1754_113, m + $I_L1702_123)
 1761.                                     z(low + $I_L1754_113, m + $I_L1702_123) = $LD_SPLT_P7 + -p
 1762.                                     $I_L1754_113 = 1 + $I_L1754_113
 1759.                                     if ( $I_L1754_113 >= igh + -low + 1 ) exit
 1759.                                  enddo
 1759.                               else
 1754.                                  $I_L1754_119 = 0
 1754. !dir$ ivdep
 1754.                                  do
 1755.                                     p = $x_S8 * z(low + $I_L1754_119, m + $I_L1702_123) + $y_S24 * z(low + $I_L1754_119, m + $I_L1702_123 + 1)
 1759.                                     p = cvmg( p, tol, abs( p ) >= tol )
 1760.                                     z(low + $I_L1754_119, m + $I_L1702_123 + 1) = z(low + $I_L1754_119, m + $I_L1702_123 + 1) + -( p * q )
 1761.                                     $LD_SPLT_P8 = z(low + $I_L1754_119, m + $I_L1702_123)
 1761.                                     z(low + $I_L1754_119, m + $I_L1702_123) = $LD_SPLT_P8 + -p
 1762.                                     $I_L1754_119 = 1 + $I_L1754_119
 1759.                                     if ( $I_L1754_119 >= igh + -low + 1 ) exit
 1759.                                  enddo
 1759.                               endif
 1759.                            endif
 1759.                         endif
 1759.                      endif
 1764.                      $I_L1702_123 = 1 + $I_L1702_123
 1764.                      if ( $I_L1702_123 >= ( $en_S3 + -m ) ) exit
 1764.                   enddo
 1764.                endif
 1764.             enddo
 1764.   160       continue
 1858.             hqr2 = 0
 1858.             return
 1858.       end
 1858.       
 2025.       
 2025.       real (kind=8)
 2025.       function zd( a1, a2, a3, a4 )
 2030.       zd = ( ( a1 * a3 + a2 * a4 ) * 1.0/( a3 * a3 + a4 * a4 ) )
 2030.       return
 2030.       end
 2030.       
 1859.       
 1859.       subroutine hqr3( nm, n, low, igh, h, wr, wi, z, machep, norm )
 1859.       t$127 = nm
 1859.       t$128 = n
 1865.       t$321 = _zla( 0, nm )
 1859.       t$322 = _zla( 0, nm )
 1865.       t$323 = _zla( 0, n )
 1859.       t$324 = _zla( 0, nm ) * _zla( 0, n )
 1875.       if ( n > 0 ) then
 1875.          $I_L1875_94 = 0
 1875.          do
 1877.             $p_S2 = wr(n + -$I_L1875_94)
 1878.             $q_S1 = wi(n + -$I_L1875_94)
 1880.             if ( $q_S1 < 0.0 ) then
 1931.                $m_S16 = ( n + -$I_L1875_94 + -1 )
 1936.                if ( abs( h(n + -$I_L1875_94, n + -$I_L1875_94 + -1) ) > abs( h(n + -$I_L1875_94 + -1, n + -$I_L1875_94) ) ) then
 1937.                   h(n + -$I_L1875_94 + -1, n + -$I_L1875_94 + -1) = ( $q_S1 * 1.0/h(n + -$I_L1875_94, n + -$I_L1875_94 + -1) )
 1938.                   $SCF_P6 = 1.0/h(n + -$I_L1875_94, n + -$I_L1875_94 + -1)
 1938.                   h(n + -$I_L1875_94 + -1, n + -$I_L1875_94) = -( ( h(n + -$I_L1875_94, n + -$I_L1875_94) + -$p_S2 ) * $SCF_P6 )
 1938.                else
 1940.                   $t_S12 = -h(n + -$I_L1875_94 + -1, n + -$I_L1875_94)
 1940.                   $LD_SPLT_P0 = h(n + -$I_L1875_94 + -1, n + -$I_L1875_94 + -1)
 1940.                   h(n + -$I_L1875_94 + -1, n + -$I_L1875_94 + -1) = ( ( $t_S12 * $q_S1 ) * 1.0/( ( $LD_SPLT_P0 + -$p_S2 ) * ( $LD_SPLT_P0 + -$p_S2 ) + $q_S1 * $q_S1 ) )
 1941.                   $t_S14 = -h(n + -$I_L1875_94 + -1, n + -$I_L1875_94)
 1941.                   h(n + -$I_L1875_94 + -1, n + -$I_L1875_94) = ( ( $t_S14 * ( ( ( $t_S12 * $q_S1 ) * 1.0/( ( $LD_SPLT_P0 + -$p_S2 ) * ( $LD_SPLT_P0 + -$p_S2 ) + $q_S1 * $q_S1 ) ) + -$p_S2 ) ) * 1.0/( ( ( ( $t_S12 * $q_S1 ) * 1.0/( ( $LD_SPLT_P0 + -$p_S2 ) * ( $LD_SPLT_P0 + -$p_S2 ) + $q_S1 * $q_S1 ) ) + -$p_S2 ) * ( ( ( $t_S12 * $q_S1 ) * 1.0/( ( $LD_SPLT_P0 + -$p_S2 ) * ( $LD_SPLT_P0 + -$p_S2 ) + $q_S1 * $q_S1 ) ) + -$p_S2 ) + $q_S1 * $q_S1 ) )
 1941.                endif
 1942.                h(n + -$I_L1875_94, n + -$I_L1875_94 + -1) = 0.0
 1943.                h(n + -$I_L1875_94, n + -$I_L1875_94) = 1.0
 1945.                if ( n + -$I_L1875_94 + -2 /= 0 ) then
 1949.                   if ( ( n + -$I_L1875_94 + -2 ) > 0 ) then
 1949.                      $I_L1949_84 = 0
 1949.                      do
 1951.                         $w_S18 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1949_84 + -$I_L1875_94 + -2) + -$p_S2
 1952.                         ra = 0.0
 1953.                         sa = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94)
 1955.                         if ( ( n + -$m_S16 + -$I_L1875_94 + -1 ) >= 0 ) then
 1955.                            $I_L1955_72 = 0
 1955. !dir$ ivdep
 1955.                            do
 1956.                               ra = ra + h(n + -$I_L1949_84 + -$I_L1875_94 + -2, $m_S16 + $I_L1955_72) * h($m_S16 + $I_L1955_72, n + -$I_L1875_94 + -1)
 1957.                               sa = sa + h(n + -$I_L1949_84 + -$I_L1875_94 + -2, $m_S16 + $I_L1955_72) * h($m_S16 + $I_L1955_72, n + -$I_L1875_94)
 1958.                               $I_L1955_72 = 1 + $I_L1955_72
 1955.                               if ( $I_L1955_72 >= n + -$m_S16 + -$I_L1875_94 ) exit
 1955.                            enddo
 1955.                         endif
 1960.                         if ( wi(n + -$I_L1949_84 + -$I_L1875_94 + -2) < 0.0 ) then
 1961.                            zz = $w_S18
 1962.                            r = ra
 1963.                            s = sa
 1963.                         else
 1965.                            $m_S16 = ( n + -$I_L1949_84 + -$I_L1875_94 + -2 )
 1966.                            if ( wi(n + -$I_L1949_84 + -$I_L1875_94 + -2) == 0.0 ) then
 1967.                               h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1) = ( ( -( ra * $w_S18 ) + -( sa * $q_S1 ) ) * 1.0/( $w_S18 * $w_S18 + $q_S1 * $q_S1 ) )
 1968.                               h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94) = ( ( -( sa * $w_S18 ) + ra * $q_S1 ) * 1.0/( $w_S18 * $w_S18 + $q_S1 * $q_S1 ) )
 1968.                            else
 1973.                               $x_S19 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1949_84 + -$I_L1875_94 + -1)
 1974.                               $y_S22 = h(n + -$I_L1949_84 + -$I_L1875_94 + -1, n + -$I_L1949_84 + -$I_L1875_94 + -2)
 1975.                               $ar_S24 = $x_S19 * r + -( zz * ra ) + $q_S1 * sa
 1976.                               $ai_S23 = $x_S19 * s + -( zz * sa ) + -( $q_S1 * ra )
 1977.                               $br_S20 = ( wr(n + -$I_L1949_84 + -$I_L1875_94 + -2) + -$p_S2 ) * ( wr(n + -$I_L1949_84 + -$I_L1875_94 + -2) + -$p_S2 ) + wi(n + -$I_L1949_84 + -$I_L1875_94 + -2) * wi(n + -$I_L1949_84 + -$I_L1875_94 + -2) + -( $q_S1 * $q_S1 )
 1978.                               $bi_S21 = $q_S1 * ( wr(n + -$I_L1949_84 + -$I_L1875_94 + -2) + -$p_S2 ) * 2.0
 1979.                               if ( $br_S20 == 0.0 ) then
 1979.                                  if ( $bi_S21 == 0.0 ) then
 1979.                                     $br_S20 = machep * norm * ( abs( $w_S18 ) + abs( $q_S1 ) + abs( $x_S19 ) + abs( $y_S22 ) + abs( zz ) )
 1979.                                  endif
 1979.                               endif
 1981.                               h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1) = ( ( $ar_S24 * $br_S20 + $ai_S23 * $bi_S21 ) * 1.0/( $br_S20 * $br_S20 + $bi_S21 * $bi_S21 ) )
 1982.                               $t_S25 = ( ( $ai_S23 * $br_S20 + -( $ar_S24 * $bi_S21 ) ) * 1.0/( $br_S20 * $br_S20 + $bi_S21 * $bi_S21 ) )
 1982.                               h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94) = ( ( $ai_S23 * $br_S20 + -( $ar_S24 * $bi_S21 ) ) * 1.0/( $br_S20 * $br_S20 + $bi_S21 * $bi_S21 ) )
 1983.                               if ( abs( $x_S19 ) > ( abs( zz ) + abs( $q_S1 ) ) ) then
 1984.                                  $LD_SPLT_P1 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1)
 1984.                                  h(n + -$I_L1949_84 + -$I_L1875_94 + -1, n + -$I_L1875_94 + -1) = ( ( -ra + -( $w_S18 * $LD_SPLT_P1 ) + $q_S1 * $t_S25 ) * 1.0/$x_S19 )
 1985.                                  $LD_SPLT_P2 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1)
 1985.                                  h(n + -$I_L1949_84 + -$I_L1875_94 + -1, n + -$I_L1875_94) = ( ( -sa + -( $w_S18 * h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94) ) + -( $q_S1 * $LD_SPLT_P2 ) ) * 1.0/$x_S19 )
 1985.                               else
 1987.                                  $LD_SPLT_P3 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1)
 1987.                                  h(n + -$I_L1949_84 + -$I_L1875_94 + -1, n + -$I_L1875_94 + -1) = ( ( ( -r + -( $y_S22 * $LD_SPLT_P3 ) ) * zz + ( -s + -( $y_S22 * $t_S25 ) ) * $q_S1 ) * 1.0/( zz * zz + $q_S1 * $q_S1 ) )
 1988.                                  $LD_SPLT_P5 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94)
 1988.                                  $LD_SPLT_P4 = h(n + -$I_L1949_84 + -$I_L1875_94 + -2, n + -$I_L1875_94 + -1)
 1988.                                  h(n + -$I_L1949_84 + -$I_L1875_94 + -1, n + -$I_L1875_94) = ( ( ( -s + -( $y_S22 * $LD_SPLT_P5 ) ) * zz + ( r + $y_S22 * $LD_SPLT_P4 ) * $q_S1 ) * 1.0/( zz * zz + $q_S1 * $q_S1 ) )
 1988.                               endif
 1988.                            endif
 1988.                         endif
 1989.                         $I_L1949_84 = 1 + $I_L1949_84
 1989.                         if ( $I_L1949_84 >= n + -$I_L1875_94 + -2 ) exit
 1989.                      enddo
 1989.                   endif
 1989.                endif
 1880.             else if ( $q_S1 == 0.0 ) then
 1884.                $m_S4 = ( n + -$I_L1875_94 )
 1885.                h(n + -$I_L1875_94, n + -$I_L1875_94) = 1.0
 1886.                if ( n + -$I_L1875_94 + -1 /= 0 ) then
 1890.                   if ( ( n + -$I_L1875_94 + -1 ) > 0 ) then
 1890.                      $I_L1890_86 = 0
 1890.                      do
 1892.                         $w_S6 = h(n + -$I_L1890_86 + -$I_L1875_94 + -1, n + -$I_L1890_86 + -$I_L1875_94 + -1) + -$p_S2
 1893.                         r = h(n + -$I_L1890_86 + -$I_L1875_94 + -1, n + -$I_L1875_94)
 1894.                         if ( $m_S4 <= ( n + -$I_L1875_94 + -1 ) ) then
 1896.                            if ( ( n + -$m_S4 + -$I_L1875_94 + -1 ) >= 0 ) then
 1896.                               $I_L1896_74 = 0
 1896. !dir$ ivdep
 1896.                               do
 1897.                                  r = r + h(n + -$I_L1890_86 + -$I_L1875_94 + -1, $m_S4 + $I_L1896_74) * h($m_S4 + $I_L1896_74, n + -$I_L1875_94)
 1898.                                  $I_L1896_74 = 1 + $I_L1896_74
 1896.                                  if ( $I_L1896_74 >= n + -$m_S4 + -$I_L1875_94 ) exit
 1896.                               enddo
 1896.                            endif
 1896.                         endif
 1900.                         if ( wi(n + -$I_L1890_86 + -$I_L1875_94 + -1) < 0.0 ) then
 1901.                            zz = $w_S6
 1902.                            s = r
 1902.                         else
 1904.                            $m_S4 = ( n + -$I_L1890_86 + -$I_L1875_94 + -1 )
 1905.                            if ( wi(n + -$I_L1890_86 + -$I_L1875_94 + -1) == 0.0 ) then
 1906.                               $t_S7 = $w_S6
 1907.                               if ( $w_S6 == 0.0 ) then
 1907.                                  $t_S7 = machep * norm
 1907.                               endif
 1908.                               h(n + -$I_L1890_86 + -$I_L1875_94 + -1, n + -$I_L1875_94) = -( r * 1.0/$t_S7 )
 1908.                            else
 1913.                               $x_S9 = h(n + -$I_L1890_86 + -$I_L1875_94 + -1, n + -$I_L1890_86 + -$I_L1875_94)
 1914.                               $y_S10 = h(n + -$I_L1890_86 + -$I_L1875_94, n + -$I_L1890_86 + -$I_L1875_94 + -1)
 1915.                               $q_S8 = ( wr(n + -$I_L1890_86 + -$I_L1875_94 + -1) + -$p_S2 ) * ( wr(n + -$I_L1890_86 + -$I_L1875_94 + -1) + -$p_S2 ) + wi(n + -$I_L1890_86 + -$I_L1875_94 + -1) * wi(n + -$I_L1890_86 + -$I_L1875_94 + -1)
 1917.                               h(n + -$I_L1890_86 + -$I_L1875_94 + -1, n + -$I_L1875_94) = ( ( $x_S9 * s + -( zz * r ) ) * 1.0/$q_S8 )
 1918.                               h(n + -$I_L1890_86 + -$I_L1875_94, n + -$I_L1875_94) = cvmg( ( ( -s + -( $y_S10 * ( ( $x_S9 * s + -( zz * r ) ) * 1.0/$q_S8 ) ) ) * 1.0/zz ), ( ( -r + -( $w_S6 * ( ( $x_S9 * s + -( zz * r ) ) * 1.0/$q_S8 ) ) ) * 1.0/$x_S9 ), abs( $x_S9 ) <= abs( zz ) )
 1918.                            endif
 1918.                         endif
 1923.                         $I_L1890_86 = 1 + $I_L1890_86
 1923.                         if ( $I_L1890_86 >= n + -$I_L1875_94 + -1 ) exit
 1923.                      enddo
 1923.                   endif
 1923.                endif
 1923.             endif
 1993.             $I_L1875_94 = 1 + $I_L1875_94
 1993.             if ( $I_L1875_94 >= n ) exit
 1993.          enddo
 1998.          $I_L1998_56 = 0
 2004.          if ( 0 > -1 + igh ) then
 2004.             goto 10
 2004.          else
 2004.             if ( 0 >= -1 + low ) then
 2004.                goto 20
 2004.             else
 1998.                $I_L1998_88 = 0
 1998.                do
 2000.                   $I_L2000_76 = 0
 2000. !dir$ ivdep
 2000.                   do
 2001.                      z(1 + $I_L1998_88, $I_L2000_76 + $I_L1998_88 + 1) = h(1 + $I_L1998_88, $I_L2000_76 + $I_L1998_88 + 1)
 2002.                      $I_L2000_76 = 1 + $I_L2000_76
 2000.                      if ( $I_L2000_76 >= n + -$I_L1998_88 ) exit
 2000.                   enddo
 2004.                   $I_L1998_88 = 1 + $I_L1998_88
 2004.                   if ( $I_L1998_88 >= min( igh, min( n, -1 + low ) ) ) exit
 2004.                enddo
 2004.                $I_L1998_56 = min( igh, min( n, -1 + low ) )
 2004.                if ( min( igh, min( n, -1 + low ) ) < min( igh, n ) ) then
 2004.    20             continue
 2004.                   $I_L1998_56 = min( igh, n )
 2004.                endif
 2004.             endif
 2004.             if ( $I_L1998_56 < n ) then
 2004.    10          continue
 1998.                $I_L1998_92 = 0
 1998.                do
 2000.                   $I_L2000_82 = 0
 2000. !dir$ ivdep
 2000.                   do
 2001.                      z($I_L1998_56 + $I_L1998_92 + 1, $I_L1998_56 + $I_L2000_82 + $I_L1998_92 + 1) = h($I_L1998_56 + $I_L1998_92 + 1, $I_L1998_56 + $I_L2000_82 + $I_L1998_92 + 1)
 2002.                      $I_L2000_82 = 1 + $I_L2000_82
 2000.                      if ( $I_L2000_82 >= n + -$I_L1998_56 + -$I_L1998_92 ) exit
 2000.                   enddo
 2004.                   $I_L1998_92 = 1 + $I_L1998_92
 2004.                   if ( $I_L1998_92 >= n + -$I_L1998_56 ) exit
 2004.                enddo
 2004.             endif
 2004.          endif
 2004.       endif
 2010.       if ( n + -low >= 0 ) then
 2014.          if ( igh + -low >= 0 ) then
 2010.             $I_L2010_96 = 0
 2010.             do
 2017.                if ( min( igh, ( n + -$I_L2010_96 ) ) + -low >= 0 ) then
 2014.                   $I_L2014_90 = 0
 2014. !dir$ ivdep
 2014.                   do
 2015.                      zz = 0.0
 2017.                      $I_L2017_78 = 0
 2017. !dir$ unroll 4
 2017.                      do
 2018.                         zz = zz + z(low + $I_L2014_90, low + $I_L2017_78) * h(low + $I_L2017_78, n + -$I_L2010_96)
 2019.                         $I_L2017_78 = 1 + $I_L2017_78
 2017.                         if ( $I_L2017_78 >= min( igh, ( n + -$I_L2010_96 ) ) + -low + 1 ) exit
 2017.                      enddo
 2021.                      z(low + $I_L2014_90, n + -$I_L2010_96) = zz
 2022.                      $I_L2014_90 = 1 + $I_L2014_90
 2019.                      if ( $I_L2014_90 >= igh + -low + 1 ) exit
 2019.                   enddo
 2019.                else
 2014.                   $I_L2014_80 = 0
 2014. !dir$ ivdep
 2014.                   do
 2021.                      z(low + $I_L2014_80, n + -$I_L2010_96) = 0.0
 2022.                      $I_L2014_80 = 1 + $I_L2014_80
 2019.                      if ( $I_L2014_80 >= igh + -low + 1 ) exit
 2019.                   enddo
 2019.                endif
 2022.                $I_L2010_96 = 1 + $I_L2010_96
 2022.                if ( $I_L2010_96 >= n + -low + 1 ) exit
 2022.             enddo
 2022.          endif
 2022.       endif
 2031.       return
 2031.       end
 2031.       
 2032.       
 2032.       subroutine ortran( nm, n, low, igh, a, ort, z, tolh )
 2032.       t$129 = nm
 2032.       t$130 = n
 2040.       t$325 = _zla( 0, nm )
 2032.       t$326 = _zla( 0, nm )
 2040.       t$327 = _zla( 0, n )
 2032.       t$328 = _zla( 0, nm ) * _zla( 0, n )
 2048.       if ( n > 0 ) then
 2049.          $I_L2049_58 = 0
 2049.          do
 2048.             $I_L2048_52 = 0
 2048. !dir$ ivdep
 2048.             do
 2050.                z(1 + $I_L2048_52, 1 + $I_L2049_58) = 0.0
 2053.                $I_L2048_52 = 1 + $I_L2048_52
 2049.                if ( $I_L2048_52 >= n ) exit
 2049.             enddo
 2051.             $I_L2049_58 = 1 + $I_L2049_58
 2051.             if ( $I_L2049_58 >= n ) exit
 2051.          enddo
 2048.          $I_L2048_54 = 0
 2048. !dir$ ivdep
 2048.          do
 2052.             z(1 + $I_L2048_54, 1 + $I_L2048_54) = 1.0
 2053.             $I_L2048_54 = 1 + $I_L2048_54
 2051.             if ( $I_L2048_54 >= n ) exit
 2051.          enddo
 2051.       endif
 2056.       if ( igh + -low + -1 > 0 ) then
 2060.          $I_L2060_60 = 0
 2060.          do
 2062.             if ( a(igh + -$I_L2060_60 + -1, igh + -$I_L2060_60 + -2) /= 0.0 ) then
 2065.                $I_L2065_46 = 0
 2065. !dir$ ivdep
 2065.                do
 2066.                   ort(igh + $I_L2065_46 + -$I_L2060_60) = a(igh + $I_L2065_46 + -$I_L2060_60, igh + -$I_L2060_60 + -2)
 2067.                   $I_L2065_46 = 1 + $I_L2065_46
 2065.                   if ( $I_L2065_46 >= 1 + $I_L2060_60 ) exit
 2065.                enddo
 2069.                $SCA_a_I0 = a(igh + -$I_L2060_60 + -1, igh + -$I_L2060_60 + -2)
 2069.                $SCA_ort_I1 = ort(igh + -$I_L2060_60 + -1)
 2069.                $I_L2069_56 = 0
 2069.                do
 2070.                   g = 0.0
 2072.                   $I_L2072_48 = 0
 2072. !dir$ ivdep
 2072.                   do
 2073.                      g = g + ort(igh + $I_L2072_48 + -$I_L2060_60 + -1) * z(igh + $I_L2072_48 + -$I_L2060_60 + -1, igh + $I_L2069_56 + -$I_L2060_60 + -1)
 2074.                      $I_L2072_48 = 1 + $I_L2072_48
 2072.                      if ( $I_L2072_48 >= 2 + $I_L2060_60 ) exit
 2072.                   enddo
 2079.                   $g_S7 = ( ( g * 1.0/$SCA_ort_I1 ) * 1.0/$SCA_a_I0 )
 2081.                   $I_L2081_50 = 0
 2081. !dir$ ivdep
 2081.                   do
 2082.                      $z_WR0_R0 = z(igh + $I_L2081_50 + -$I_L2060_60 + -1, igh + $I_L2069_56 + -$I_L2060_60 + -1) + $g_S7 * ort(igh + $I_L2081_50 + -$I_L2060_60 + -1)
 2082.                      z(igh + $I_L2081_50 + -$I_L2060_60 + -1, igh + $I_L2069_56 + -$I_L2060_60 + -1) = $z_WR0_R0
 2083.                      if ( abs( $z_WR0_R0 ) < tolh ) then
 2083.                         z(igh + $I_L2081_50 + -$I_L2060_60 + -1, igh + $I_L2069_56 + -$I_L2060_60 + -1) = tolh
 2083.                      endif
 2084.                      $I_L2081_50 = 1 + $I_L2081_50
 2083.                      if ( $I_L2081_50 >= 2 + $I_L2060_60 ) exit
 2083.                   enddo
 2086.                   $I_L2069_56 = 1 + $I_L2069_56
 2084.                   if ( $I_L2069_56 >= 2 + $I_L2060_60 ) exit
 2084.                enddo
 2084.             endif
 2088.             $I_L2060_60 = 1 + $I_L2060_60
 2088.             if ( $I_L2060_60 >= igh + -low + -1 ) exit
 2088.          enddo
 2088.       endif
 2091.       return
 2091.       end
 2091.       
 2093.       
 2093.       subroutine orthes( nm, n, low, igh, a, ort, tolh )
 2093.       t$131 = nm
 2093.       t$132 = n
 2099.       t$329 = _zla( 0, nm )
 2093.       t$330 = _zla( 0, nm )
 2099.       t$331 = _zla( 0, n )
 2093.       t$332 = _zla( 0, nm ) * _zla( 0, n )
 2093.       t$133 = igh
 2100.       t$333 = _zla( 0, igh )
 2108.       if ( -1 + igh >= 1 + low ) then
 2110.          if ( igh + -low + -2 >= 0 ) then
 2110.             $I_L2110_70 = 0
 2110.             do
 2111.                h = 0.0
 2112.                ort(low + $I_L2110_70 + 1) = 0.0
 2113.                scal = 0.0
 2117.                $I_L2117_54 = 0
 2117. !dir$ ivdep
 2117.                do
 2118.                   scal = scal + abs( a(low + $I_L2117_54 + $I_L2110_70 + 1, low + $I_L2110_70) )
 2119.                   $I_L2117_54 = 1 + $I_L2117_54
 2117.                   if ( $I_L2117_54 >= igh + -low + -$I_L2110_70 ) exit
 2117.                enddo
 2121.                if ( scal /= 0.0 ) then
 2126.                   $I_L2126_56 = 0
 2126. !dir$ ivdep
 2126.                   do
 2128.                      $ort_WR0_R0 = ( a(igh + -$I_L2126_56, low + $I_L2110_70) * 1.0/scal )
 2128.                      ort(igh + -$I_L2126_56) = $ort_WR0_R0
 2129.                      h = h + $ort_WR0_R0 * $ort_WR0_R0
 2130.                      $I_L2126_56 = 1 + $I_L2126_56
 2126.                      if ( $I_L2126_56 >= igh + -low + -$I_L2110_70 ) exit
 2126.                   enddo
 2132.                   $g_S3 = -sign( _sqrt( h ), ort(low + $I_L2110_70 + 1) )
 2133.                   $h_S6 = h + -( ort(low + $I_L2110_70 + 1) * $g_S3 )
 2134.                   ort(low + $I_L2110_70 + 1) = ort(low + $I_L2110_70 + 1) + -$g_S3
 2138.                   if ( ( n + -low + -$I_L2110_70 + -1 ) >= 0 ) then
 2138.                      $I_L2138_66 = 0
 2138.                      do
 2139.                         f = 0.0
 2143.                         $I_L2143_58 = 0
 2143. !dir$ ivdep
 2143.                         do
 2145.                            f = f + ort(igh + -$I_L2143_58) * a(igh + -$I_L2143_58, low + $I_L2138_66 + $I_L2110_70 + 1)
 2146.                            $I_L2143_58 = 1 + $I_L2143_58
 2143.                            if ( $I_L2143_58 >= igh + -low + -$I_L2110_70 ) exit
 2143.                         enddo
 2148.                         $f_S8 = ( f * 1.0/$h_S6 )
 2150.                         $I_L2150_60 = 0
 2150. !dir$ ivdep
 2150.                         do
 2151.                            $a_WR0_R1 = a(low + $I_L2150_60 + $I_L2110_70 + 1, low + $I_L2138_66 + $I_L2110_70 + 1) + -( $f_S8 * ort(low + $I_L2150_60 + $I_L2110_70 + 1) )
 2151.                            a(low + $I_L2150_60 + $I_L2110_70 + 1, low + $I_L2138_66 + $I_L2110_70 + 1) = $a_WR0_R1
 2152.                            if ( abs( $a_WR0_R1 ) < tolh ) then
 2152.                               a(low + $I_L2150_60 + $I_L2110_70 + 1, low + $I_L2138_66 + $I_L2110_70 + 1) = tolh
 2152.                            endif
 2153.                            $I_L2150_60 = 1 + $I_L2150_60
 2152.                            if ( $I_L2150_60 >= igh + -low + -$I_L2110_70 ) exit
 2152.                         enddo
 2155.                         $I_L2138_66 = 1 + $I_L2138_66
 2153.                         if ( $I_L2138_66 >= n + -low + -$I_L2110_70 ) exit
 2153.                      enddo
 2153.                   endif
 2159.                   if ( igh > 0 ) then
 2159.                      $I_L2159_68 = 0
 2159. !dir$ ivdep
 2159.                      do
 2160.                         f = 0.0
 2164.                         $I_L2164_62 = 0
 2164. !dir$ unroll 4
 2164.                         do
 2166.                            f = f + ort(igh + -$I_L2164_62) * a(1 + $I_L2159_68, igh + -$I_L2164_62)
 2167.                            $I_L2164_62 = 1 + $I_L2164_62
 2164.                            if ( $I_L2164_62 >= igh + -low + -$I_L2110_70 ) exit
 2164.                         enddo
 2169.                         $f_S12 = ( f * 1.0/$h_S6 )
 2171.                         $I_L2171_64 = 0
 2171. !dir$ unroll 4
 2171.                         do
 2172.                            $a_WR0_R2 = a(1 + $I_L2159_68, low + $I_L2171_64 + $I_L2110_70 + 1) + -( $f_S12 * ort(low + $I_L2171_64 + $I_L2110_70 + 1) )
 2172.                            a(1 + $I_L2159_68, low + $I_L2171_64 + $I_L2110_70 + 1) = $a_WR0_R2
 2173.                            if ( abs( $a_WR0_R2 ) < tolh ) then
 2173.                               a(1 + $I_L2159_68, low + $I_L2171_64 + $I_L2110_70 + 1) = tolh
 2173.                            endif
 2174.                            $I_L2171_64 = 1 + $I_L2171_64
 2173.                            if ( $I_L2171_64 >= igh + -low + -$I_L2110_70 ) exit
 2173.                         enddo
 2176.                         $I_L2159_68 = 1 + $I_L2159_68
 2174.                         if ( $I_L2159_68 >= igh ) exit
 2174.                      enddo
 2174.                   endif
 2178.                   ort(low + $I_L2110_70 + 1) = scal * ort(low + $I_L2110_70 + 1)
 2179.                   a(low + $I_L2110_70 + 1, low + $I_L2110_70) = scal * $g_S3
 2180.                   if ( abs( scal * $g_S3 ) < tolh ) then
 2180.                      a(low + $I_L2110_70 + 1, low + $I_L2110_70) = tolh
 2180.                   endif
 2180.                endif
 2181.                $I_L2110_70 = 1 + $I_L2110_70
 2181.                if ( $I_L2110_70 >= igh + -low + -1 ) exit
 2181.             enddo
 2181.          endif
 2181.       endif
 2184.       return
 2184.       end
 2184.       
 2187.       
 2187.       subroutine rg( nm, n, a, wr, wi, matz, z, ierr, eps, scal, ort )
 2187.       t$134 = nm
 2187.       t$135 = n
 2263.       t$334 = _zla( 0, nm )
 2187.       t$335 = _zla( 0, nm )
 2263.       t$336 = _zla( 0, n )
 2187.       t$337 = _zla( 0, nm ) * _zla( 0, n )
 2271.       tolh = eps
 2272.       tolw = eps
 2273.       tolz = eps
 2275.       if ( n > nm ) then
 2276.          ierr = 10 * n
 2276.       else
 2283.          call balanc( nm, n, a(1, 1), low, igh, scal(1) )
 2289.          call orthes( nm, n, low, igh, a(1, 1), ort(1), tolh )
 2291.          if ( matz /= 0 ) then
 2295.             call ortran( nm, n, low, igh, a(1, 1), ort(1), z(1, 1), tolh )
 2295.          endif
 2301.          $t_S0 = hqr2( nm, n, low, igh, a(1, 1), wr(1), wi(1), z(1, 1), ierr, matz, eps, tolh, 0 )
 2301.          if ( $t_S0 /= 1 ) then
 2303.             if ( ierr == 0 ) then
 2308.                call balbak( nm, n, low, igh, scal(1), n, z(1, 1) )
 2313.                call znorma( nm, n, wr(1), wi(1), z(1, 1), matz, a(1, 1), tolw, tolz )
 2313.             endif
 2313.          endif
 2316.          if ( ierr /= 0 ) then
 2317.             $Unit_temp_O0 = nfprt
 2317.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,83), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
 2317.          endif
 2317.       endif
 2322.       return
 2322.       end
 2322.       
 2323.       
 2323.       subroutine tql2_i( nm, n, d, e, z, eps, ierr )
 2323.       t$138 = n
 2331.       t$338 = _zla( 0, n )
 2323.       t$139 = nm
 2331.       t$339 = _zla( 0, nm )
 2323.       t$340 = _zla( 0, nm )
 2323.       t$341 = _zla( 0, n ) * _zla( 0, nm )
 2344.       ierr = 0
 2346.       if ( -2 + n >= 0 ) then
 2346.          $I_L2346_56 = 0
 2346. !dir$ ivdep
 2346.          do
 2347.             e(1 + $I_L2346_56) = e(2 + $I_L2346_56)
 2348.             $I_L2346_56 = 1 + $I_L2346_56
 2346.             if ( $I_L2346_56 >= -1 + n ) exit
 2346.          enddo
 2346.       endif
 2350.       f = 0.0
 2351.       b = 0.0
 2352.       e(n) = 0.0
 2354.       if ( n > 0 ) then
 2354.          $I_L2354_72 = 0
 2354.          do
 2356.             $h_S2 = eps * ( abs( d(1 + $I_L2354_72) ) + abs( e(1 + $I_L2354_72) ) )
 2357.             b = max( b, $h_S2 )
 2361.             $I_L2361_58 = 0
 2361. !dir$ ivdep
 2361.             do
 2362.                if ( abs( e($I_L2361_58 + $I_L2354_72 + 1) ) <= b ) then
 2361.                   $m_S4 = ( $I_L2361_58 + $I_L2354_72 + 1 )
 2361.                   goto 120
 2361.                endif
 2367.                $I_L2361_58 = 1 + $I_L2361_58
 2367.                if ( $I_L2361_58 >= n + -$I_L2354_72 ) exit
 2367.             enddo
 2367.             $m_S4 = ( 1 + n )
 2367.   120       continue
 2369.             if ( $m_S4 + -$I_L2354_72 + -1 /= 0 ) then
 2370.                $I_j_70 = 0
 2370.                do
 2385.                   $g_S6 = d(1 + $I_L2354_72)
 2386.                   $p_S7 = ( 1.0/e(1 + $I_L2354_72) * ( d(2 + $I_L2354_72) + -$g_S6 ) * 5.0e-1 )
 2388.                   d(1 + $I_L2354_72) = ( e(1 + $I_L2354_72) * 1.0/( $p_S7 + sign( _sqrt( 1.0 + $p_S7 * $p_S7 ), $p_S7 ) ) )
 2389.                   $h_S8 = $g_S6 + -d(1 + $I_L2354_72)
 2391.                   if ( ( n + -$I_L2354_72 + -2 ) >= 0 ) then
 2391.                      $I_L2391_60 = 0
 2391. !dir$ ivdep
 2391.                      do
 2392.                         d($I_L2391_60 + $I_L2354_72 + 2) = d($I_L2391_60 + $I_L2354_72 + 2) + -$h_S8
 2393.                         $I_L2391_60 = 1 + $I_L2391_60
 2391.                         if ( $I_L2391_60 >= n + -$I_L2354_72 + -1 ) exit
 2391.                      enddo
 2391.                   endif
 2395.                   f = f + $h_S8
 2399.                   $p_S12 = d($m_S4)
 2400.                   $c_S11 = 1.0
 2401.                   $s_S13 = 0.0
 2406.                   if ( ( $m_S4 + -$I_L2354_72 + -1 ) > 0 ) then
 2406.                      $I_L2406_66 = 0
 2406.                      do
 2408.                         $g_S16 = $c_S11 * e($m_S4 + -$I_L2406_66 + -1)
 2409.                         $h_S17 = $c_S11 * $p_S12
 2411.                         if ( abs( $p_S12 ) < abs( e($m_S4 + -$I_L2406_66 + -1) ) ) then
 2412.                            $SCF_P2 = 1.0/e($m_S4 + -$I_L2406_66 + -1)
 2414.                            $SCF_P3 = e($m_S4 + -$I_L2406_66 + -1) * _sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2414.                            e($m_S4 + -$I_L2406_66) = $s_S13 * $SCF_P3
 2415.                            $s_S13 = 1.0/_sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2416.                            $c_S11 = ( $p_S12 * $SCF_P2 ) * 1.0/_sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2416.                         else
 2418.                            $LD_SPLT_P0 = e($m_S4 + -$I_L2406_66 + -1)
 2420.                            e($m_S4 + -$I_L2406_66) = $s_S13 * $p_S12 * _sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) )
 2421.                            $s_S13 = ( ( $LD_SPLT_P0 * 1.0/$p_S12 ) * 1.0/_sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) ) )
 2422.                            $c_S11 = 1.0/_sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) )
 2422.                         endif
 2425.                         $p_S12 = $c_S11 * d($m_S4 + -$I_L2406_66 + -1) + -( $s_S13 * $g_S16 )
 2426.                         d($m_S4 + -$I_L2406_66) = $h_S17 + $s_S13 * ( $c_S11 * $g_S16 + $s_S13 * d($m_S4 + -$I_L2406_66 + -1) )
 2430.                         $I_L2430_62 = 0
 2430. !dir$ ivdep
 2430.                         do
 2431.                            $h_S19 = z(1 + $I_L2430_62, $m_S4 + -$I_L2406_66)
 2432.                            z(1 + $I_L2430_62, $m_S4 + -$I_L2406_66) = $s_S13 * z(1 + $I_L2430_62, $m_S4 + -$I_L2406_66 + -1) + $c_S11 * $h_S19
 2433.                            $LD_SPLT_P1 = z(1 + $I_L2430_62, $m_S4 + -$I_L2406_66 + -1)
 2433.                            z(1 + $I_L2430_62, $m_S4 + -$I_L2406_66 + -1) = $c_S11 * $LD_SPLT_P1 + -( $s_S13 * $h_S19 )
 2434.                            $I_L2430_62 = 1 + $I_L2430_62
 2430.                            if ( $I_L2430_62 >= n ) exit
 2430.                         enddo
 2436.                         $I_L2406_66 = 1 + $I_L2406_66
 2434.                         if ( $I_L2406_66 >= $m_S4 + -$I_L2354_72 + -1 ) exit
 2434.                      enddo
 2434.                   endif
 2438.                   e(1 + $I_L2354_72) = $s_S13 * $p_S12
 2439.                   d(1 + $I_L2354_72) = $c_S11 * $p_S12
 2440.                   if ( abs( $s_S13 * $p_S12 ) <= b ) then
 2436.                      goto 120
 2436.                   endif
 2370.                   $I_j_70 = 1 + $I_j_70
 2370.                   if ( $I_j_70 >= 50 ) exit
 2370.                enddo
 2354.                l = ( 1 + $I_L2354_72 )
 2374.                ierr = ( 1 + $I_L2354_72 )
 2375.                $Unit_temp_O0 = nfprt
 2375.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$141,  _substr(t$140,1,60), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( l, 0x2000200000000L ) ) )
 2375.             else
 2375.   120          continue
 2441.                d(1 + $I_L2354_72) = d(1 + $I_L2354_72) + f
 2442.                $I_L2354_72 = 1 + $I_L2354_72
 2441.             endif
 2441.             if ( $I_L2354_72 >= n ) exit
 2441.          enddo
 2441.          goto 130
 2441.       else
 2441.   130    continue
 2446.          if ( -2 + n >= 0 ) then
 2446.             $I_L2446_68 = 0
 2446.             do
 2448.                $k_S23 = ( 1 + $I_L2446_68 )
 2449.                $p_S21 = d(1 + $I_L2446_68)
 2451.                if ( ( n + -$I_L2446_68 + -2 ) >= 0 ) then
 2452.                   $W1 = n + -$I_L2446_68 + -1
 2452.                   $W2 = 1
 2452.                   $Maxmin_x_W0 = _idmin( $W1, d(2 + $I_L2446_68), $W2 )
 2452.                   $k_S23 = cvmg( $Maxmin_x_W0 + $I_L2446_68 + 1, 1 + $I_L2446_68, d($Maxmin_x_W0 + $I_L2446_68 + 1) < $p_S21 )
 2452.                   $p_S21 = cvmg( d($Maxmin_x_W0 + $I_L2446_68 + 1), $p_S21, d($Maxmin_x_W0 + $I_L2446_68 + 1) < $p_S21 )
 2452.                endif
 2458.                if ( $k_S23 + -$I_L2446_68 + -1 /= 0 ) then
 2459.                   d($k_S23) = d(1 + $I_L2446_68)
 2460.                   d(1 + $I_L2446_68) = $p_S21
 2462.                   $I_L2462_64 = 0
 2462. !dir$ ivdep
 2462.                   do
 2463.                      $p_S25 = z(1 + $I_L2462_64, 1 + $I_L2446_68)
 2464.                      z(1 + $I_L2462_64, 1 + $I_L2446_68) = z(1 + $I_L2462_64, $k_S23)
 2465.                      z(1 + $I_L2462_64, $k_S23) = $p_S25
 2466.                      $I_L2462_64 = 1 + $I_L2462_64
 2462.                      if ( $I_L2462_64 >= n ) exit
 2462.                   enddo
 2462.                endif
 2469.                $I_L2446_68 = 1 + $I_L2446_68
 2467.                if ( $I_L2446_68 >= -1 + n ) exit
 2467.             enddo
 2467.          endif
 2467.       endif
 2467.   140 continue
 2472.       return
 2472.       end
 2472.       
 2473.       
 2473.       subroutine tql2_i8( nm, n, d, e, z, eps, ierr )
 2473.       t$142 = n
 2481.       t$342 = _zla( 0, n )
 2473.       t$143 = nm
 2481.       t$343 = _zla( 0, nm )
 2473.       t$344 = _zla( 0, nm )
 2473.       t$345 = _zla( 0, n ) * _zla( 0, nm )
 2494.       ierr = 0
 2496.       if ( -2 + n >= 0 ) then
 2496.          $I_L2496_56 = 0
 2496. !dir$ ivdep
 2496.          do
 2497.             e(1 + $I_L2496_56) = e(2 + $I_L2496_56)
 2498.             $I_L2496_56 = 1 + $I_L2496_56
 2496.             if ( $I_L2496_56 >= -1 + n ) exit
 2496.          enddo
 2496.       endif
 2500.       f = 0.0
 2501.       b = 0.0
 2502.       e(n) = 0.0
 2504.       if ( n > 0 ) then
 2504.          $I_L2504_72 = 0
 2504.          do
 2506.             $h_S2 = eps * ( abs( d(1 + $I_L2504_72) ) + abs( e(1 + $I_L2504_72) ) )
 2507.             b = max( b, $h_S2 )
 2511.             $m_S4 = ( 1 + $I_L2504_72 )
 2511.             if ( ( n + -$I_L2504_72 + -1 ) >= 0 ) then
 2511.                $I_L2511_58 = 0
 2511. !dir$ ivdep
 2511.                do
 2512.                   if ( abs( e($I_L2511_58 + $I_L2504_72 + 1) ) <= b ) then
 2511.                      $m_S4 = ( $I_L2511_58 + $I_L2504_72 + 1 )
 2511.                      goto 120
 2511.                   endif
 2517.                   $I_L2511_58 = 1 + $I_L2511_58
 2517.                   if ( $I_L2511_58 >= n + -$I_L2504_72 ) exit
 2517.                enddo
 2517.                $m_S4 = ( 1 + n )
 2517.             endif
 2517.   120       continue
 2519.             if ( $m_S4 + -$I_L2504_72 + -1 /= 0 ) then
 2520.                $I_j_70 = 0
 2520.                do
 2535.                   $g_S6 = d(1 + $I_L2504_72)
 2536.                   $p_S7 = ( 1.0/e(1 + $I_L2504_72) * ( d(2 + $I_L2504_72) + -$g_S6 ) * 5.0e-1 )
 2538.                   d(1 + $I_L2504_72) = ( e(1 + $I_L2504_72) * 1.0/( $p_S7 + sign( _sqrt( 1.0 + $p_S7 * $p_S7 ), $p_S7 ) ) )
 2539.                   $h_S8 = $g_S6 + -d(1 + $I_L2504_72)
 2541.                   if ( ( n + -$I_L2504_72 + -2 ) >= 0 ) then
 2541.                      $I_L2541_60 = 0
 2541. !dir$ ivdep
 2541.                      do
 2542.                         d($I_L2541_60 + $I_L2504_72 + 2) = d($I_L2541_60 + $I_L2504_72 + 2) + -$h_S8
 2543.                         $I_L2541_60 = 1 + $I_L2541_60
 2541.                         if ( $I_L2541_60 >= n + -$I_L2504_72 + -1 ) exit
 2541.                      enddo
 2541.                   endif
 2545.                   f = f + $h_S8
 2549.                   $p_S12 = d($m_S4)
 2550.                   $c_S11 = 1.0
 2551.                   $s_S13 = 0.0
 2556.                   if ( ( $m_S4 + -$I_L2504_72 + -1 ) > 0 ) then
 2556.                      $I_L2556_66 = 0
 2556.                      do
 2558.                         $g_S16 = $c_S11 * e($m_S4 + -$I_L2556_66 + -1)
 2559.                         $h_S17 = $c_S11 * $p_S12
 2561.                         if ( abs( $p_S12 ) < abs( e($m_S4 + -$I_L2556_66 + -1) ) ) then
 2562.                            $SCF_P2 = 1.0/e($m_S4 + -$I_L2556_66 + -1)
 2564.                            $SCF_P3 = e($m_S4 + -$I_L2556_66 + -1) * _sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2564.                            e($m_S4 + -$I_L2556_66) = $s_S13 * $SCF_P3
 2565.                            $s_S13 = 1.0/_sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2566.                            $c_S11 = ( $p_S12 * $SCF_P2 ) * 1.0/_sqrt( 1.0 + ( $p_S12 * $SCF_P2 ) * ( $p_S12 * $SCF_P2 ) )
 2566.                         else
 2568.                            $LD_SPLT_P0 = e($m_S4 + -$I_L2556_66 + -1)
 2570.                            e($m_S4 + -$I_L2556_66) = $s_S13 * $p_S12 * _sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) )
 2571.                            $s_S13 = ( ( $LD_SPLT_P0 * 1.0/$p_S12 ) * 1.0/_sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) ) )
 2572.                            $c_S11 = 1.0/_sqrt( 1.0 + ( $LD_SPLT_P0 * 1.0/$p_S12 ) * ( $LD_SPLT_P0 * 1.0/$p_S12 ) )
 2572.                         endif
 2575.                         $p_S12 = $c_S11 * d($m_S4 + -$I_L2556_66 + -1) + -( $s_S13 * $g_S16 )
 2576.                         d($m_S4 + -$I_L2556_66) = $h_S17 + $s_S13 * ( $c_S11 * $g_S16 + $s_S13 * d($m_S4 + -$I_L2556_66 + -1) )
 2580.                         $I_L2580_62 = 0
 2580. !dir$ ivdep
 2580.                         do
 2581.                            $h_S19 = z(1 + $I_L2580_62, $m_S4 + -$I_L2556_66)
 2582.                            z(1 + $I_L2580_62, $m_S4 + -$I_L2556_66) = $s_S13 * z(1 + $I_L2580_62, $m_S4 + -$I_L2556_66 + -1) + $c_S11 * $h_S19
 2583.                            $LD_SPLT_P1 = z(1 + $I_L2580_62, $m_S4 + -$I_L2556_66 + -1)
 2583.                            z(1 + $I_L2580_62, $m_S4 + -$I_L2556_66 + -1) = $c_S11 * $LD_SPLT_P1 + -( $s_S13 * $h_S19 )
 2584.                            $I_L2580_62 = 1 + $I_L2580_62
 2580.                            if ( $I_L2580_62 >= n ) exit
 2580.                         enddo
 2586.                         $I_L2556_66 = 1 + $I_L2556_66
 2584.                         if ( $I_L2556_66 >= $m_S4 + -$I_L2504_72 + -1 ) exit
 2584.                      enddo
 2584.                   endif
 2588.                   e(1 + $I_L2504_72) = $s_S13 * $p_S12
 2589.                   d(1 + $I_L2504_72) = $c_S11 * $p_S12
 2590.                   if ( abs( $s_S13 * $p_S12 ) <= b ) then
 2586.                      goto 120
 2586.                   endif
 2520.                   $I_j_70 = 1 + $I_j_70
 2520.                   if ( $I_j_70 >= 50 ) exit
 2520.                enddo
 2504.                l = ( 1 + $I_L2504_72 )
 2524.                ierr = ( 1 + $I_L2504_72 )
 2525.                $Unit_temp_O0 = nfprt
 2525.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$145,  _substr(t$144,1,60), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( l, 0x2000200000000L ) ) )
 2525.             else
 2525.   120          continue
 2591.                d(1 + $I_L2504_72) = d(1 + $I_L2504_72) + f
 2592.                $I_L2504_72 = 1 + $I_L2504_72
 2591.             endif
 2591.             if ( $I_L2504_72 >= n ) exit
 2591.          enddo
 2591.          goto 130
 2591.       else
 2591.   130    continue
 2596.          if ( -2 + n >= 0 ) then
 2596.             $I_L2596_68 = 0
 2596.             do
 2598.                $k_S23 = ( 1 + $I_L2596_68 )
 2599.                $p_S21 = d(1 + $I_L2596_68)
 2601.                if ( ( n + -$I_L2596_68 + -2 ) >= 0 ) then
 2602.                   $W1 = n + -$I_L2596_68 + -1
 2602.                   $W2 = 1
 2602.                   $Maxmin_x_W0 = _idmin( $W1, d(2 + $I_L2596_68), $W2 )
 2602.                   $k_S23 = cvmg( $Maxmin_x_W0 + $I_L2596_68 + 1, 1 + $I_L2596_68, d($Maxmin_x_W0 + $I_L2596_68 + 1) < $p_S21 )
 2602.                   $p_S21 = cvmg( d($Maxmin_x_W0 + $I_L2596_68 + 1), $p_S21, d($Maxmin_x_W0 + $I_L2596_68 + 1) < $p_S21 )
 2602.                endif
 2608.                if ( $k_S23 + -$I_L2596_68 + -1 /= 0 ) then
 2609.                   d($k_S23) = d(1 + $I_L2596_68)
 2610.                   d(1 + $I_L2596_68) = $p_S21
 2612.                   $I_L2612_64 = 0
 2612. !dir$ ivdep
 2612.                   do
 2613.                      $p_S25 = z(1 + $I_L2612_64, 1 + $I_L2596_68)
 2614.                      z(1 + $I_L2612_64, 1 + $I_L2596_68) = z(1 + $I_L2612_64, $k_S23)
 2615.                      z(1 + $I_L2612_64, $k_S23) = $p_S25
 2616.                      $I_L2612_64 = 1 + $I_L2612_64
 2612.                      if ( $I_L2612_64 >= n ) exit
 2612.                   enddo
 2612.                endif
 2619.                $I_L2596_68 = 1 + $I_L2596_68
 2617.                if ( $I_L2596_68 >= -1 + n ) exit
 2617.             enddo
 2617.          endif
 2617.       endif
 2617.   140 continue
 2622.       return
 2622.       end
 2622.       
 2623.       
 2623.       subroutine tred2( nm, n, a, d, e, z )
 2623.       t$146 = nm
 2623.       t$147 = n
 2627.       t$346 = _zla( 0, nm )
 2623.       t$347 = _zla( 0, nm )
 2627.       t$348 = _zla( 0, n )
 2623.       t$349 = _zla( 0, nm ) * _zla( 0, n )
 2633.       if ( n > 0 ) then
 2633.          $I_L2633_114 = 0
 2633.          do
 2634.             $I_L2634_94 = 0
 2634. !dir$ ivdep
 2634.             do
 2635.                z(1 + $I_L2633_114, 1 + $I_L2634_94) = a(1 + $I_L2633_114, 1 + $I_L2634_94)
 2636.                $I_L2634_94 = 1 + $I_L2634_94
 2634.                if ( $I_L2634_94 >= 1 + $I_L2633_114 ) exit
 2634.             enddo
 2636.             $I_L2633_114 = 1 + $I_L2633_114
 2636.             if ( $I_L2633_114 >= n ) exit
 2636.          enddo
 2636.       endif
 2638.       if ( n /= 1 ) then
 2640.          if ( -2 + n >= 0 ) then
 2640.             $I_L2640_122 = 0
 2640.             do
 2643.                h = 0.0
 2644.                scal = 0.0
 2645.                if ( -3 + ( n + -$I_L2640_122 ) >= 0 ) then
 2647.                   $I_L2647_96 = 0
 2647. !dir$ ivdep
 2647.                   do
 2648.                      scal = scal + abs( z(n + -$I_L2640_122, 1 + $I_L2647_96) )
 2649.                      $I_L2647_96 = 1 + $I_L2647_96
 2647.                      if ( $I_L2647_96 >= -1 + ( n + -$I_L2640_122 ) ) exit
 2647.                   enddo
 2651.                   if ( scal /= 0.0 ) then
 2655.                      $I_L2655_98 = 0
 2655. !dir$ ivdep
 2655.                      do
 2656.                         $z_WR0_R0 = ( z(n + -$I_L2640_122, 1 + $I_L2655_98) * 1.0/scal )
 2656.                         z(n + -$I_L2640_122, 1 + $I_L2655_98) = $z_WR0_R0
 2657.                         h = h + $z_WR0_R0 * $z_WR0_R0
 2658.                         $I_L2655_98 = 1 + $I_L2655_98
 2655.                         if ( $I_L2655_98 >= -1 + ( n + -$I_L2640_122 ) ) exit
 2655.                      enddo
 2660.                      $f_S5 = z(n + -$I_L2640_122, -1 + ( n + -$I_L2640_122 ))
 2661.                      $g_S6 = -sign( _sqrt( h ), $f_S5 )
 2662.                      e(n + -$I_L2640_122) = scal * ( -sign( _sqrt( h ), $f_S5 ) )
 2663.                      h = h + -( $f_S5 * ( -sign( _sqrt( h ), $f_S5 ) ) )
 2664.                      z(n + -$I_L2640_122, -1 + ( n + -$I_L2640_122 )) = $f_S5 + -$g_S6
 2665.                      f = 0.0
 2667.                      $I_L2667_116 = 0
 2667.                      do
 2668.                         z(1 + $I_L2667_116, n + -$I_L2640_122) = ( z(n + -$I_L2640_122, 1 + $I_L2667_116) * 1.0/h )
 2669.                         g = 0.0
 2671.                         $I_L2671_100 = 0
 2671. !dir$ ivdep
 2671.                         do
 2672.                            g = g + z(1 + $I_L2667_116, 1 + $I_L2671_100) * z(n + -$I_L2640_122, 1 + $I_L2671_100)
 2673.                            $I_L2671_100 = 1 + $I_L2671_100
 2671.                            if ( $I_L2671_100 >= 1 + $I_L2667_116 ) exit
 2671.                         enddo
 2678.                         if ( ( -$I_L2667_116 + ( n + -$I_L2640_122 ) + -3 ) >= 0 ) then
 2678.                            $I_L2678_102 = 0
 2678. !dir$ ivdep
 2678.                            do
 2679.                               g = g + z($I_L2678_102 + $I_L2667_116 + 2, 1 + $I_L2667_116) * z(n + -$I_L2640_122, $I_L2678_102 + $I_L2667_116 + 2)
 2680.                               $I_L2678_102 = 1 + $I_L2678_102
 2678.                               if ( $I_L2678_102 >= -$I_L2667_116 + ( n + -$I_L2640_122 ) + -2 ) exit
 2678.                            enddo
 2678.                         endif
 2682.                         e(1 + $I_L2667_116) = ( g * 1.0/h )
 2683.                         $LD_SPLT_P0 = z(n + -$I_L2640_122, 1 + $I_L2667_116)
 2683.                         f = f + ( g * 1.0/h ) * $LD_SPLT_P0
 2684.                         $I_L2667_116 = 1 + $I_L2667_116
 2682.                         if ( $I_L2667_116 >= -2 + ( n + -$I_L2640_122 ) ) exit
 2682.                      enddo
 2668.                      z(-1 + ( n + -$I_L2640_122 ), n + -$I_L2640_122) = ( z(n + -$I_L2640_122, -1 + ( n + -$I_L2640_122 )) * 1.0/h )
 2669.                      g = 0.0
 2671.                      $I_L2671_112 = 0
 2671. !dir$ ivdep
 2671.                      do
 2672.                         g = g + z(-1 + ( n + -$I_L2640_122 ), 1 + $I_L2671_112) * z(n + -$I_L2640_122, 1 + $I_L2671_112)
 2673.                         $I_L2671_112 = 1 + $I_L2671_112
 2671.                         if ( $I_L2671_112 >= -1 + ( n + -$I_L2640_122 ) ) exit
 2671.                      enddo
 2682.                      e(-1 + ( n + -$I_L2640_122 )) = ( g * 1.0/h )
 2683.                      $LD_SPLT_P0 = z(n + -$I_L2640_122, -1 + ( n + -$I_L2640_122 ))
 2683.                      f = f + ( g * 1.0/h ) * $LD_SPLT_P0
 2686.                      $hh_S12 = ( 1.0/h * f * 5.0e-1 )
 2688.                      $I_L2688_118 = 0
 2688.                      do
 2689.                         $f_S11 = z(n + -$I_L2640_122, 1 + $I_L2688_118)
 2690.                         $g_S13 = e(1 + $I_L2688_118) + -( $hh_S12 * $f_S11 )
 2691.                         e(1 + $I_L2688_118) = $g_S13
 2693.                         $I_L2693_104 = 0
 2693. !dir$ ivdep
 2693.                         do
 2694.                            z(1 + $I_L2688_118, 1 + $I_L2693_104) = z(1 + $I_L2688_118, 1 + $I_L2693_104) + -( $f_S11 * e(1 + $I_L2693_104) ) + -( $g_S13 * z(n + -$I_L2640_122, 1 + $I_L2693_104) )
 2695.                            $I_L2693_104 = 1 + $I_L2693_104
 2693.                            if ( $I_L2693_104 >= 1 + $I_L2688_118 ) exit
 2693.                         enddo
 2695.                         $I_L2688_118 = 1 + $I_L2688_118
 2695.                         if ( $I_L2688_118 >= -1 + ( n + -$I_L2640_122 ) ) exit
 2695.                      enddo
 2695.                   else
 2695.                      goto 10
 2695.                   endif
 2695.                else
 2695.    10             continue
 2652.                   e(n + -$I_L2640_122) = z(n + -$I_L2640_122, -1 + ( n + -$I_L2640_122 ))
 2652.                endif
 2697.                d(n + -$I_L2640_122) = h
 2698.                $I_L2640_122 = 1 + $I_L2640_122
 2697.                if ( $I_L2640_122 >= -1 + n ) exit
 2697.             enddo
 2697.          endif
 2697.       endif
 2700.       d(1) = 0.0
 2701.       e(1) = 0.0
 2703.       if ( n > 0 ) then
 2718.          d(1) = z(1, 1)
 2719.          z(1, 1) = 1.0
 2727.          if ( 1 < n ) then
 2703.             $I_L2703_124 = 0
 2703.             do
 2705.                if ( d(2 + $I_L2703_124) /= 0.0 ) then
 2707.                   $I_L2707_120 = 0
 2707.                   do
 2708.                      g = 0.0
 2710.                      $I_L2710_106 = 0
 2710. !dir$ ivdep
 2710.                      do
 2711.                         g = g + z(2 + $I_L2703_124, 1 + $I_L2710_106) * z(1 + $I_L2710_106, 1 + $I_L2707_120)
 2712.                         $I_L2710_106 = 1 + $I_L2710_106
 2710.                         if ( $I_L2710_106 >= 1 + $I_L2703_124 ) exit
 2710.                      enddo
 2714.                      $I_L2714_108 = 0
 2714. !dir$ ivdep
 2714.                      do
 2715.                         z(1 + $I_L2714_108, 1 + $I_L2707_120) = z(1 + $I_L2714_108, 1 + $I_L2707_120) + -( g * z(1 + $I_L2714_108, 2 + $I_L2703_124) )
 2716.                         $I_L2714_108 = 1 + $I_L2714_108
 2714.                         if ( $I_L2714_108 >= 1 + $I_L2703_124 ) exit
 2714.                      enddo
 2716.                      $I_L2707_120 = 1 + $I_L2707_120
 2716.                      if ( $I_L2707_120 >= 1 + $I_L2703_124 ) exit
 2716.                   enddo
 2716.                endif
 2718.                d(2 + $I_L2703_124) = z(2 + $I_L2703_124, 2 + $I_L2703_124)
 2719.                z(2 + $I_L2703_124, 2 + $I_L2703_124) = 1.0
 2720.                if ( ( 1 + $I_L2703_124 ) > 0 ) then
 2722.                   $I_L2722_110 = 0
 2722. !dir$ ivdep
 2722.                   do
 2723.                      z(2 + $I_L2703_124, 1 + $I_L2722_110) = 0.0
 2724.                      z(1 + $I_L2722_110, 2 + $I_L2703_124) = 0.0
 2725.                      $I_L2722_110 = 1 + $I_L2722_110
 2722.                      if ( $I_L2722_110 >= 1 + $I_L2703_124 ) exit
 2722.                   enddo
 2722.                endif
 2727.                $I_L2703_124 = 1 + $I_L2703_124
 2727.                if ( $I_L2703_124 >= -1 + n ) exit
 2727.             enddo
 2727.          endif
 2727.       endif
 2730.       return
 2730.       end
 2730.       
 2731.       
 2731.       subroutine znorma( nm, n, wr, wi, z, matz, h, tolw, tolz )
 2731.       t$149 = n
 2744.       t$350 = _zla( 0, n )
 2731.       t$148 = nm
 2744.       t$351 = _zla( 0, nm )
 2731.       t$352 = _zla( 0, nm )
 2731.       t$353 = _zla( 0, n ) * _zla( 0, nm )
 2751.       if ( matz /= 2 ) then
 2753.          if ( n > 0 ) then
 2753.             $I_L2753_78 = 0
 2753.             do
 2754.                $I_L2754_64 = 0
 2754. !dir$ ivdep
 2754.                do
 2755.                   h(1 + $I_L2754_64, 1 + $I_L2753_78) = z(1 + $I_L2754_64, 1 + $I_L2753_78)
 2756.                   $I_L2754_64 = 1 + $I_L2754_64
 2754.                   if ( $I_L2754_64 >= n ) exit
 2754.                enddo
 2756.                $I_L2753_78 = 1 + $I_L2753_78
 2756.                if ( $I_L2753_78 >= n ) exit
 2756.             enddo
 2758.             $I_L2758_80 = 0
 2758.             do
 2760.                if ( wi(1 + $I_L2758_80) == 0.0 ) then
 2762.                   zz = 0.0
 2763.                   $I_L2763_70 = 0
 2763. !dir$ unroll 4
 2763.                   do
 2764.                      zz = max( zz, abs( h(1 + $I_L2763_70, 1 + $I_L2758_80) ) )
 2765.                      if ( abs( h(1 + $I_L2763_70, 1 + $I_L2758_80) ) == zz ) then
 2765.                         ic = ( 1 + $I_L2763_70 )
 2765.                      endif
 2766.                      $I_L2763_70 = 1 + $I_L2763_70
 2765.                      if ( $I_L2763_70 >= n ) exit
 2765.                   enddo
 2768.                   $SCA_h_I0 = h(ic, 1 + $I_L2758_80)
 2768.                   $I_L2768_72 = 0
 2768. !dir$ ivdep
 2768.                   do
 2769.                      z(1 + $I_L2768_72, 1 + $I_L2758_80) = ( h(1 + $I_L2768_72, 1 + $I_L2758_80) * 1.0/$SCA_h_I0 )
 2770.                      $I_L2768_72 = 1 + $I_L2768_72
 2768.                      if ( $I_L2768_72 >= n ) exit
 2768.                   enddo
 2772.                else if ( wi(1 + $I_L2758_80) > 0.0 ) then
 2774.                   zz = 0.0
 2776.                   $I_L2776_66 = 0
 2776. !dir$ unroll 4
 2776.                   do
 2777.                      $div_S6 = h(1 + $I_L2776_66, 1 + $I_L2758_80) * h(1 + $I_L2776_66, 1 + $I_L2758_80) + h(1 + $I_L2776_66, 2 + $I_L2758_80) * h(1 + $I_L2776_66, 2 + $I_L2758_80)
 2778.                      zz = max( zz, $div_S6 )
 2779.                      if ( $div_S6 == zz ) then
 2779.                         ic = ( 1 + $I_L2776_66 )
 2779.                      endif
 2780.                      $I_L2776_66 = 1 + $I_L2776_66
 2779.                      if ( $I_L2776_66 >= n ) exit
 2779.                   enddo
 2781.                   if ( abs( h(ic, 1 + $I_L2758_80) ) < abs( h(ic, 2 + $I_L2758_80) ) ) then
 2782.                      $div_S7 = 1.0/h(ic, 2 + $I_L2758_80)
 2782.                   else
 2784.                      $div_S7 = 1.0/h(ic, 1 + $I_L2758_80)
 2784.                   endif
 2786.                   if ( $div_S7 /= 0.0 ) then
 2787.                      $I_L2787_68 = 0
 2787. !dir$ ivdep
 2787.                      do
 2788.                         z(1 + $I_L2787_68, 1 + $I_L2758_80) = h(1 + $I_L2787_68, 1 + $I_L2758_80) * $div_S7
 2789.                         z(1 + $I_L2787_68, 2 + $I_L2758_80) = h(1 + $I_L2787_68, 2 + $I_L2758_80) * $div_S7
 2790.                         $I_L2787_68 = 1 + $I_L2787_68
 2787.                         if ( $I_L2787_68 >= n ) exit
 2787.                      enddo
 2787.                   endif
 2787.                endif
 2795.                $I_L2758_80 = 1 + $I_L2758_80
 2793.                if ( $I_L2758_80 >= n ) exit
 2793.             enddo
 2793.          endif
 2797.          if ( matz /= 3 ) then
 2799.             div = 0.0
 2800.             if ( n > 0 ) then
 2800.                $I_L2800_74 = 0
 2800. !dir$ ivdep
 2800.                do
 2801.                   $zz_S10 = _sqrt( wr(1 + $I_L2800_74) * wr(1 + $I_L2800_74) + wi(1 + $I_L2800_74) * wi(1 + $I_L2800_74) )
 2802.                   div = max( div, $zz_S10 )
 2803.                   $I_L2800_74 = 1 + $I_L2800_74
 2800.                   if ( $I_L2800_74 >= n ) exit
 2800.                enddo
 2800.             endif
 2804.             $div_S11 = cvmg( div, 1.0, div > 0.0 )
 2806.             if ( n > 0 ) then
 2806.                $I_L2806_82 = 0
 2806.                do
 2807.                   if ( abs( wr(1 + $I_L2806_82) * 1.0/$div_S11 ) < tolw ) then
 2807.                      wr(1 + $I_L2806_82) = 0.0
 2807.                   endif
 2808.                   if ( abs( wi(1 + $I_L2806_82) * 1.0/$div_S11 ) < tolw ) then
 2808.                      wi(1 + $I_L2806_82) = 0.0
 2808.                   endif
 2809.                   $I_L2809_76 = 0
 2809. !dir$ ivdep
 2809.                   do
 2810.                      if ( abs( z(1 + $I_L2809_76, 1 + $I_L2806_82) ) < tolz ) then
 2810.                         z(1 + $I_L2809_76, 1 + $I_L2806_82) = 0.0
 2810.                      endif
 2811.                      $I_L2809_76 = 1 + $I_L2809_76
 2810.                      if ( $I_L2809_76 >= n ) exit
 2810.                   enddo
 2811.                   $I_L2806_82 = 1 + $I_L2806_82
 2811.                   if ( $I_L2806_82 >= n ) exit
 2811.                enddo
 2811.             endif
 2811.          endif
 2811.       endif
 2813.       return
 2813.       end
 2813.       
 2817.       
 2817.       subroutine tmstmp2( id, ifday, tod, ihr, iday, mon, iyr )
 2861.       $ctim_S0 = tod + 3600.0 * id(1)
 2863.       if ( tod + 3600.0 * id(1) >= 86400.0 ) then
 2864.          $kday_S1 = 1
 2865.          $ctim_S0 = -86400.0 + $ctim_S0
 2865.       else
 2867.          $kday_S1 = 0
 2867.       endif
 2872.       iday = id(3) + ifday + $kday_S1
 2874.       ihr = int( ( 2.7777777777777778e-4 * ( 1.5625e-2 + $ctim_S0 ) ) )
 2875.       mon = id(2)
 2876.       iyr = id(4)
 2877.       do
 2878.          $idaymn_S2 = monl(mon)
 2879.          if ( mod( iyr, 4 ) == 0 ) then
 2879.             if ( mon == 2 ) then
 2880.                $idaymn_S2 = 29
 2880.             endif
 2880.          endif
 2881.          if ( iday <= $idaymn_S2 ) goto 10
 2882.          iday = iday + -$idaymn_S2
 2883.          mon = 1 + mon
 2884.          if ( mon >= 13 ) then
 2885.             mon = 1
 2886.             iyr = 1 + iyr
 2886.          endif
 2887.       enddo
 2887.    10 continue
 2888.       return
 2888.       end
 2888.       
 2890.       
 2890.       subroutine inittimestamp( dateinit_s, idate )
 2898.       yyyyi = idate(4)
 2899.       mmi = idate(2)
 2900.       ddi = idate(3)
 2901.       hhi = idate(1)
 2903.        _substr(dateinit_s,1,10) = '          '
 2904.       $_IOitem_P0(0) = yyyyi
 2904.       $_IOitem_P0(1) = mmi
 2904.       $_IOitem_P0(2) = ddi
 2904.       $_IOitem_P0(3) = hhi
 2904.       _fwrite( _clist( 0, 0, 3,  _substr(dateinit_s,1,10), Null_Arg, Null_Arg, t$151,  _substr(t$150,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2908.       juliandayinitintegration = julday( mmi, ddi, yyyyi )
 2909.       return
 2909.       end
 2909.       
 2916.       
 2916.       subroutine timestamp( datenow_s, idatec, jdt, dt )
 2924.       juliandaynow = juliandayinitintegration + jdt * int( dt ) / 86400
 2925.       call caldat( juliandaynow, mmc, ddc, yyyyc )
 2926.       hhc = idatec(1) + mod( jdt * int( dt ) / 3600, 24 )
 2927.        _substr(datenow_s,1,10) = '          '
 2928.       $_IOitem_P0(0) = yyyyc
 2928.       $_IOitem_P0(1) = mmc
 2928.       $_IOitem_P0(2) = ddc
 2928.       $_IOitem_P0(3) = hhc
 2928.       _fwrite( _clist( 0, 0, 3,  _substr(datenow_s,1,10), Null_Arg, Null_Arg, t$153,  _substr(t$152,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2929.       t$1502(1) = hhc
 2929.       t$1502(2) = mmc
 2929.       t$1502(3) = ddc
 2929.       t$1502(4) = yyyyc
 2929.       $I_A1 = 0
 2929. !dir$ ivdep
 2929.       do
 2929.          idatec(1 + $I_A1) = t$1502(1 + $I_A1)
 2929.          $I_A1 = 1 + $I_A1
 2929.          if ( $I_A1 >= 4 ) exit
 2929.       enddo
 2930.       return
 2930.       end
 2930.       
 2936.       
 2936.       subroutine caldat( julian, mm, id, iyyy )
 2946.       if ( julian >= 2299161 ) then
 2948.          $ja_S0 = julian + int( 2.7379070069885075e-5 * ( -2.5e-1 + ( -1867216 + julian ) ) ) + -( int( 2.5e-1 * int( 2.7379070069885075e-5 * ( -2.5e-1 + ( -1867216 + julian ) ) ) ) ) + 1
 2948.       else
 2950.          $ja_S0 = julian
 2950.       endif
 2953.       $jc_S1 = int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) )
 2956.       id = $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + -( int( 30.600100000000001 * int( 3.267963176590926e-2 * ( $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 1524 ) ) ) ) + 1524
 2958.       mm = int( 3.267963176590926e-2 * ( $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 1524 ) ) + cvmg( 0, -12, -13 + int( 3.267963176590926e-2 * ( $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 1524 ) ) <= 0 ) + -1
 2959.       $iyyy_S2 = -4715 + int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) )
 2960.       if ( int( 3.267963176590926e-2 * ( $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 1524 ) ) + cvmg( 0, -12, -13 + int( 3.267963176590926e-2 * ( $ja_S0 + -( int( 2.5e-1 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 365 * int( 6680.0 + 2.7378507871321013e-3 * ( -122.09999999999999 + ( -2438346 + $ja_S0 ) ) ) ) + 1524 ) ) <= 0 ) + -3 > 0 ) then
 2960.          $iyyy_S2 = -4716 + $jc_S1
 2960.       endif
 2961.       iyyy = $iyyy_S2 + cvmg( 0, -1, $iyyy_S2 > 0 )
 2962.       return
 2962.       end
 2962.       
 2965.       
 2965.       integer
 2965.       function julday( mm, id, iyyy )
 2973.       if ( iyyy == 0 ) then
 2974.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'there is no year zero.', 0x800600000000L ) ) )
 2975.           _substr(t$1503,1,15) = 'ERROR AT julday'
 2975.          call _stop(  _substr(t$1503,1,15) )
 2975.          return
 2975.       else
 2977.          iyyy = iyyy + ( iyyy < 0 )
 2978.          if ( mm > 2 ) then
 2979.             $jy_S0 = iyyy
 2980.             $jm_S1 = 1 + mm
 2980.          else
 2982.             $jy_S0 = -1 + iyyy
 2983.             $jm_S1 = 13 + mm
 2983.          endif
 2985.          julday = id + int( 365.25 * $jy_S0 ) + int( 30.600100000000001 * $jm_S1 ) + 1720995
 2986.          if ( id + 31 * mm + 372 * iyyy >= 588829 ) then
 2988.             julday = julday + -( int( 1.0e-2 * $jy_S0 ) ) + int( 2.5e-1 * int( 1.0e-2 * $jy_S0 ) ) + 2
 2988.          endif
 2988.       endif
 2990.       julday = julday
 2990.       return
 2990.       end
 2990.       
 2994.       
 2994.       subroutine ibjbtoij_r( var_in, var_out )
 2994.       var_in%dim_1%LB = 1
 2994.       var_in%dim_2%LB = 1
 2994.       var_out%dim_1%LB = 1
 2994.       var_out%dim_2%LB = 1
 3002.       if ( jbmax > 0 ) then
 3001.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3006.          $SC_var_in_I33 = var_in%dim_1%SM
 3006.          $SC_var_in_I32 = var_in%dim_1%EX
 3006.          $SC_var_in_I35 = var_in%dim_2%SM
 3006.          $SC_var_in_I34 = var_in%dim_2%EX
 3006.          $SC_var_out_I37 = var_out%dim_1%SM
 3006.          $SC_var_out_I36 = var_out%dim_1%EX
 3006.          $SC_var_out_I39 = var_out%dim_2%SM
 3006.          $SC_var_out_I38 = var_out%dim_2%EX
 3005.          $SC_jperijb_I27 = jperijb%dim_1%EX
 3005.          $SC_jperijb_I28 = jperijb%dim_1%LB
 3005.          $SC_jperijb_I30 = jperijb%dim_2%SM
 3005.          $SC_jperijb_I29 = jperijb%dim_2%EX
 3005.          $SC_jperijb_I31 = jperijb%dim_2%LB
 3004.          $SC_iperijb_I22 = iperijb%dim_1%EX
 3004.          $SC_iperijb_I23 = iperijb%dim_1%LB
 3004.          $SC_iperijb_I25 = iperijb%dim_2%SM
 3004.          $SC_iperijb_I24 = iperijb%dim_2%EX
 3004.          $SC_iperijb_I26 = iperijb%dim_2%LB
 3003.          $SC_ibmaxperjb_I20 = ibmaxperjb%dim_1%EX
 3003.          $SC_ibmaxperjb_I21 = ibmaxperjb%dim_1%LB
 3002.          $I_L3002_32 = 0
 3002. !$omp do schedule(static)
 3002.          do
 3003.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3002_32, 0)
 3003.             if ( $t_S1 > 0 ) then
 3003.                $I_L3003_30 = 0
 3003. !dir$ ivdep
 3003.                do
 3004.                   $$_i = (iperijb%base_addr)(1 + $I_L3003_30, 1 + $I_L3002_32, 0)
 3005.                   $$_j = (jperijb%base_addr)(1 + $I_L3003_30, 1 + $I_L3002_32, 0) + -myfirstlat + 1
 3006.                   (var_out%base_addr)($$_i, $$_j, 0) = (var_in%base_addr)(1 + $I_L3003_30, 1 + $I_L3002_32, 0)
 3007.                   $I_L3003_30 = 1 + $I_L3003_30
 3003.                   if ( $I_L3003_30 >= $t_S1 ) exit
 3003.                enddo
 3003.             endif
 3008.             $I_L3002_32 = 1 + $I_L3002_32
 3007.             if ( $I_L3002_32 >= jbmax ) exit
 3007.          enddo
 3009.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3009.       endif
 3010.       return
 3010.       end
 3010.       
 3014.       
 3014.       subroutine ijtoibjb_r( var_in, var_out )
 3014.       var_in%dim_1%LB = 1
 3014.       var_in%dim_2%LB = 1
 3014.       var_out%dim_1%LB = 1
 3014.       var_out%dim_2%LB = 1
 3022.       if ( jbmax > 0 ) then
 3021.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3026.          $SC_var_in_I33 = var_in%dim_1%SM
 3026.          $SC_var_in_I32 = var_in%dim_1%EX
 3026.          $SC_var_in_I35 = var_in%dim_2%SM
 3026.          $SC_var_in_I34 = var_in%dim_2%EX
 3026.          $SC_var_out_I37 = var_out%dim_1%SM
 3026.          $SC_var_out_I36 = var_out%dim_1%EX
 3026.          $SC_var_out_I39 = var_out%dim_2%SM
 3026.          $SC_var_out_I38 = var_out%dim_2%EX
 3025.          $SC_jperijb_I27 = jperijb%dim_1%EX
 3025.          $SC_jperijb_I28 = jperijb%dim_1%LB
 3025.          $SC_jperijb_I30 = jperijb%dim_2%SM
 3025.          $SC_jperijb_I29 = jperijb%dim_2%EX
 3025.          $SC_jperijb_I31 = jperijb%dim_2%LB
 3024.          $SC_iperijb_I22 = iperijb%dim_1%EX
 3024.          $SC_iperijb_I23 = iperijb%dim_1%LB
 3024.          $SC_iperijb_I25 = iperijb%dim_2%SM
 3024.          $SC_iperijb_I24 = iperijb%dim_2%EX
 3024.          $SC_iperijb_I26 = iperijb%dim_2%LB
 3023.          $SC_ibmaxperjb_I20 = ibmaxperjb%dim_1%EX
 3023.          $SC_ibmaxperjb_I21 = ibmaxperjb%dim_1%LB
 3022.          $I_L3022_32 = 0
 3022. !$omp do schedule(static)
 3022.          do
 3023.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3022_32, 0)
 3023.             if ( $t_S1 > 0 ) then
 3023.                $I_L3023_30 = 0
 3023. !dir$ ivdep
 3023.                do
 3024.                   $$_i = (iperijb%base_addr)(1 + $I_L3023_30, 1 + $I_L3022_32, 0)
 3025.                   $$_j = (jperijb%base_addr)(1 + $I_L3023_30, 1 + $I_L3022_32, 0)
 3026.                   (var_out%base_addr)(1 + $I_L3023_30, 1 + $I_L3022_32, 0) = (var_in%base_addr)($$_i, $$_j, 0)
 3027.                   $I_L3023_30 = 1 + $I_L3023_30
 3023.                   if ( $I_L3023_30 >= $t_S1 ) exit
 3023.                enddo
 3023.             endif
 3028.             $I_L3022_32 = 1 + $I_L3022_32
 3027.             if ( $I_L3022_32 >= jbmax ) exit
 3027.          enddo
 3029.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3029.       endif
 3030.       return
 3030.       end
 3030.       
 3033.       
 3033.       subroutine ijtoibjb3_r( var_in, var_out )
 3033.       t$154 = imax
 3033.       t$155 = kmax
 3033.       t$156 = jmax
 3034.       t$354 = _zla( 0, imax )
 3033.       t$355 = _zla( 0, imax )
 3034.       t$356 = _zla( 0, kmax )
 3033.       t$357 = _zla( 0, imax ) * _zla( 0, kmax )
 3034.       t$358 = _zla( 0, jmax )
 3033.       t$359 = _zla( 0, imax ) * _zla( 0, kmax ) * _zla( 0, jmax )
 3033.       t$157 = ibmax
 3033.       t$158 = jbmax
 3035.       t$360 = _zla( 0, ibmax )
 3033.       t$361 = _zla( 0, ibmax )
 3033.       t$362 = _zla( 0, kmax ) * _zla( 0, ibmax )
 3035.       t$363 = _zla( 0, jbmax )
 3033.       t$364 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
 3041.       if ( jbmax > 0 ) then
 3040.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3044.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3044.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3044.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3044.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3044.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3043.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3043.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3043.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3043.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3043.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3042.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3042.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3041.          $I_L3041_38 = 0
 3041. !$omp do schedule(static)
 3041.          do
 3042.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3041_38, 0)
 3042.             if ( $t_S1 > 0 ) then
 3042.                $I_L3042_36 = 0
 3042.                do
 3043.                   $$_i = (iperijb%base_addr)(1 + $I_L3042_36, 1 + $I_L3041_38, 0)
 3044.                   $$_j = (jperijb%base_addr)(1 + $I_L3042_36, 1 + $I_L3041_38, 0)
 3045.                   $F_A33 = kmax
 3045.                   if ( kmax > 0 ) then
 3045.                      $I_L3045_34 = 0
 3045. !dir$ ivdep
 3045.                      do
 3045.                         var_out(1 + $I_L3042_36, 1 + $I_L3045_34, 1 + $I_L3041_38) = var_in($$_i, 1 + $I_L3045_34, $$_j)
 3045.                         $I_L3045_34 = 1 + $I_L3045_34
 3045.                         if ( $I_L3045_34 >= $F_A33 ) exit
 3045.                      enddo
 3045.                   endif
 3046.                   $I_L3042_36 = 1 + $I_L3042_36
 3042.                   if ( $I_L3042_36 >= $t_S1 ) exit
 3042.                enddo
 3042.             endif
 3047.             $I_L3041_38 = 1 + $I_L3041_38
 3046.             if ( $I_L3041_38 >= jbmax ) exit
 3046.          enddo
 3048.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3048.       endif
 3049.       return
 3049.       end
 3049.       
 3051.       
 3051.       subroutine ibjbtoij_i( var_in, var_out )
 3051.       var_in%dim_1%LB = 1
 3051.       var_in%dim_2%LB = 1
 3051.       var_out%dim_1%LB = 1
 3051.       var_out%dim_2%LB = 1
 3059.       if ( jbmax > 0 ) then
 3058.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3063.          $SC_var_in_I33 = var_in%dim_1%SM
 3063.          $SC_var_in_I32 = var_in%dim_1%EX
 3063.          $SC_var_in_I35 = var_in%dim_2%SM
 3063.          $SC_var_in_I34 = var_in%dim_2%EX
 3063.          $SC_var_out_I37 = var_out%dim_1%SM
 3063.          $SC_var_out_I36 = var_out%dim_1%EX
 3063.          $SC_var_out_I39 = var_out%dim_2%SM
 3063.          $SC_var_out_I38 = var_out%dim_2%EX
 3062.          $SC_jperijb_I27 = jperijb%dim_1%EX
 3062.          $SC_jperijb_I28 = jperijb%dim_1%LB
 3062.          $SC_jperijb_I30 = jperijb%dim_2%SM
 3062.          $SC_jperijb_I29 = jperijb%dim_2%EX
 3062.          $SC_jperijb_I31 = jperijb%dim_2%LB
 3061.          $SC_iperijb_I22 = iperijb%dim_1%EX
 3061.          $SC_iperijb_I23 = iperijb%dim_1%LB
 3061.          $SC_iperijb_I25 = iperijb%dim_2%SM
 3061.          $SC_iperijb_I24 = iperijb%dim_2%EX
 3061.          $SC_iperijb_I26 = iperijb%dim_2%LB
 3060.          $SC_ibmaxperjb_I20 = ibmaxperjb%dim_1%EX
 3060.          $SC_ibmaxperjb_I21 = ibmaxperjb%dim_1%LB
 3059.          $I_L3059_32 = 0
 3059. !$omp do schedule(static)
 3059.          do
 3060.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3059_32, 0)
 3060.             if ( $t_S1 > 0 ) then
 3060.                $I_L3060_30 = 0
 3060. !dir$ ivdep
 3060.                do
 3061.                   $$_i = (iperijb%base_addr)(1 + $I_L3060_30, 1 + $I_L3059_32, 0)
 3062.                   $$_j = (jperijb%base_addr)(1 + $I_L3060_30, 1 + $I_L3059_32, 0) + -myfirstlat + 1
 3063.                   (var_out%base_addr)($$_i, $$_j, 0) = (var_in%base_addr)(1 + $I_L3060_30, 1 + $I_L3059_32, 0)
 3064.                   $I_L3060_30 = 1 + $I_L3060_30
 3060.                   if ( $I_L3060_30 >= $t_S1 ) exit
 3060.                enddo
 3060.             endif
 3065.             $I_L3059_32 = 1 + $I_L3059_32
 3064.             if ( $I_L3059_32 >= jbmax ) exit
 3064.          enddo
 3066.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3066.       endif
 3067.       return
 3067.       end
 3067.       
 3071.       
 3071.       subroutine ijtoibjb_i( var_in, var_out )
 3071.       var_in%dim_1%LB = 1
 3071.       var_in%dim_2%LB = 1
 3071.       var_out%dim_1%LB = 1
 3071.       var_out%dim_2%LB = 1
 3079.       if ( jbmax > 0 ) then
 3078.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3083.          $SC_var_in_I33 = var_in%dim_1%SM
 3083.          $SC_var_in_I32 = var_in%dim_1%EX
 3083.          $SC_var_in_I35 = var_in%dim_2%SM
 3083.          $SC_var_in_I34 = var_in%dim_2%EX
 3083.          $SC_var_out_I37 = var_out%dim_1%SM
 3083.          $SC_var_out_I36 = var_out%dim_1%EX
 3083.          $SC_var_out_I39 = var_out%dim_2%SM
 3083.          $SC_var_out_I38 = var_out%dim_2%EX
 3082.          $SC_jperijb_I27 = jperijb%dim_1%EX
 3082.          $SC_jperijb_I28 = jperijb%dim_1%LB
 3082.          $SC_jperijb_I30 = jperijb%dim_2%SM
 3082.          $SC_jperijb_I29 = jperijb%dim_2%EX
 3082.          $SC_jperijb_I31 = jperijb%dim_2%LB
 3081.          $SC_iperijb_I22 = iperijb%dim_1%EX
 3081.          $SC_iperijb_I23 = iperijb%dim_1%LB
 3081.          $SC_iperijb_I25 = iperijb%dim_2%SM
 3081.          $SC_iperijb_I24 = iperijb%dim_2%EX
 3081.          $SC_iperijb_I26 = iperijb%dim_2%LB
 3080.          $SC_ibmaxperjb_I20 = ibmaxperjb%dim_1%EX
 3080.          $SC_ibmaxperjb_I21 = ibmaxperjb%dim_1%LB
 3079.          $I_L3079_32 = 0
 3079. !$omp do schedule(static)
 3079.          do
 3080.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3079_32, 0)
 3080.             if ( $t_S1 > 0 ) then
 3080.                $I_L3080_30 = 0
 3080. !dir$ ivdep
 3080.                do
 3081.                   $$_i = (iperijb%base_addr)(1 + $I_L3080_30, 1 + $I_L3079_32, 0)
 3082.                   $$_j = (jperijb%base_addr)(1 + $I_L3080_30, 1 + $I_L3079_32, 0)
 3083.                   (var_out%base_addr)(1 + $I_L3080_30, 1 + $I_L3079_32, 0) = (var_in%base_addr)($$_i, $$_j, 0)
 3084.                   $I_L3080_30 = 1 + $I_L3080_30
 3080.                   if ( $I_L3080_30 >= $t_S1 ) exit
 3080.                enddo
 3080.             endif
 3085.             $I_L3079_32 = 1 + $I_L3079_32
 3084.             if ( $I_L3079_32 >= jbmax ) exit
 3084.          enddo
 3086.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3086.       endif
 3087.       return
 3087.       end
 3087.       
 3089.       
 3089.       subroutine ijtoibjb3_i( var_in, var_out )
 3089.       t$159 = imax
 3089.       t$160 = kmax
 3089.       t$161 = jmax
 3090.       t$365 = _zla( 0, imax )
 3089.       t$366 = _zla( 0, imax )
 3090.       t$367 = _zla( 0, kmax )
 3089.       t$368 = _zla( 0, imax ) * _zla( 0, kmax )
 3090.       t$369 = _zla( 0, jmax )
 3089.       t$370 = _zla( 0, imax ) * _zla( 0, kmax ) * _zla( 0, jmax )
 3089.       t$162 = ibmax
 3089.       t$163 = jbmax
 3091.       t$371 = _zla( 0, ibmax )
 3089.       t$372 = _zla( 0, ibmax )
 3089.       t$373 = _zla( 0, kmax ) * _zla( 0, ibmax )
 3091.       t$374 = _zla( 0, jbmax )
 3089.       t$375 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
 3097.       if ( jbmax > 0 ) then
 3096.          $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3100.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3100.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3100.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3100.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3100.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3099.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3099.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3099.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3099.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3099.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3098.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3098.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3097.          $I_L3097_38 = 0
 3097. !$omp do schedule(static)
 3097.          do
 3098.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L3097_38, 0)
 3098.             if ( $t_S1 > 0 ) then
 3098.                $I_L3098_36 = 0
 3098.                do
 3099.                   $$_i = (iperijb%base_addr)(1 + $I_L3098_36, 1 + $I_L3097_38, 0)
 3100.                   $$_j = (jperijb%base_addr)(1 + $I_L3098_36, 1 + $I_L3097_38, 0)
 3101.                   $F_A33 = kmax
 3101.                   if ( kmax > 0 ) then
 3101.                      $I_L3101_34 = 0
 3101. !dir$ ivdep
 3101.                      do
 3101.                         var_out(1 + $I_L3098_36, 1 + $I_L3101_34, 1 + $I_L3097_38) = var_in($$_i, 1 + $I_L3101_34, $$_j)
 3101.                         $I_L3101_34 = 1 + $I_L3101_34
 3101.                         if ( $I_L3101_34 >= $F_A33 ) exit
 3101.                      enddo
 3101.                   endif
 3102.                   $I_L3098_36 = 1 + $I_L3098_36
 3098.                   if ( $I_L3098_36 >= $t_S1 ) exit
 3098.                enddo
 3098.             endif
 3103.             $I_L3097_38 = 1 + $I_L3097_38
 3102.             if ( $I_L3097_38 >= jbmax ) exit
 3102.          enddo
 3104.          $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3104.       endif
 3105.       return
 3105.       end
 3105.       
 3109.       
 3109.       subroutine splineijtoibjb_r2d( fieldin, fieldout )
 3109.       t$164 = imax
 3109.       t$165 = jmax
 3110.       t$376 = _zla( 0, imax )
 3109.       t$377 = _zla( 0, imax )
 3110.       t$378 = _zla( 0, jmax )
 3109.       t$379 = _zla( 0, imax ) * _zla( 0, jmax )
 3109.       t$166 = ibmax
 3109.       t$167 = jbmax
 3111.       t$380 = _zla( 0, ibmax )
 3109.       t$381 = _zla( 0, ibmax )
 3111.       t$382 = _zla( 0, jbmax )
 3109.       t$383 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3113.       t$386 = 8 * _zla( 0, imax )
 3109.       t$384 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 3113.       t$385 = t$384
 3123.       _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**SplineIJtoIBJB**', 0x800600000000L ) ) )
 3125.       if ( reducedgrid ) then
 3127.          if ( mylastlat + -myfirstlat >= 0 ) then
 3126.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3126.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 3126.             $pvt_Abase_seg17_D0 = $$_fout_BASE
 3126.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3134.             $SC_jbperij_I39 = jbperij%dim_1%EX
 3134.             $SC_jbperij_I40 = jbperij%dim_1%LB
 3134.             $SC_jbperij_I42 = jbperij%dim_2%SM
 3134.             $SC_jbperij_I41 = jbperij%dim_2%EX
 3134.             $SC_jbperij_I43 = jbperij%dim_2%LB
 3133.             $SC_ibperij_I34 = ibperij%dim_1%EX
 3133.             $SC_ibperij_I35 = ibperij%dim_1%LB
 3133.             $SC_ibperij_I37 = ibperij%dim_2%SM
 3133.             $SC_ibperij_I36 = ibperij%dim_2%EX
 3133.             $SC_ibperij_I38 = ibperij%dim_2%LB
 3130.             $SC_imaxperj_I32 = imaxperj%dim_1%EX
 3130.             $SC_imaxperj_I33 = imaxperj%dim_1%LB
 3129.             $SC_mylastlon_I30 = mylastlon%dim_1%EX
 3129.             $SC_mylastlon_I31 = mylastlon%dim_1%LB
 3128.             $SC_myfirstlon_I28 = myfirstlon%dim_1%EX
 3128.             $SC_myfirstlon_I29 = myfirstlon%dim_1%LB
 3127.             $I_L3127_176 = 0
 3127. !$omp do schedule(static)
 3127.             do
 3128.                $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3127_176, 0)
 3129.                $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3127_176, 0)
 3130.                t$172 = imax
 3130.                t$395 = max( 0, imax )
 3130.                t$173 = (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0)
 3130.                t$396 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0) )
 3130.                t$174 = ( 2 + imax )
 3130.                t$397 = max( 0, ( 2 + imax ) )
 3130.                t$400 = 8 * max( 0, ( 2 + imax ) )
 3130.                t$401 = 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 )
 3130.                t$403 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 )
 3130.                t$404 = 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 )
 3130.                t$406 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 )
 3130.                t$407 = 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$409 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$410 = 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$412 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$413 = 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$415 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$416 = 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$418 = 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$398 = int( _alloc( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 3130.                t$399 = t$398
 3130.                t$402 = t$398 + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 )
 3130.                t$405 = t$398 + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 )
 3130.                t$408 = t$398 + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$411 = t$398 + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$414 = t$398 + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                t$417 = t$398 + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 8 * max( 0, ( 2 + imax ) ) + 8 * ( ( 7 + 8 * max( 0, ( 2 + imax ) ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 3130.                $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0)
 3130.                if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0) == 0 ) then
 3130.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3130.                      $I_L3130_158 = 0
 3130. !dir$ ivdep
 3130.                      do
 3130.                         $$_fout($$_ifirst + $I_L3130_158) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3130_158 + 1, myfirstlat + $I_L3127_176)
 3130.                         $I_L3130_158 = 1 + $I_L3130_158
 3130.                         if ( $I_L3130_158 >= $$_ilast + -$$_ifirst + 1 ) exit
 3130.                      enddo
 3130.                   endif
 3130.                   _free( t$398 )
 3130.                else if ( imax < 4 ) then
 3130.                    _substr(t$1568,1,52) = '**(CyclicCubicSpline)** ERROR: Few input data points'
 3130.                   call _stop(  _substr(t$1568,1,52) )
 3130.                else
 3130.                   $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0), 8 ) ) )
 3130.                   $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0), 8 ) * $$_ratio )
 3130.                   if ( $$_iin > 2 + imax ) then
 3130.                       _substr(t$1569,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3130.                      call _stop(  _substr(t$1569,1,64) )
 3130.                   else
 3130.                      $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3130.                      $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L3127_176, 0) )
 3130.                      $$_hin2 = ( 6.2831853071795862 * 1.0/imax ) * ( 6.2831853071795862 * 1.0/imax )
 3130.                      alfa(2) = 0.0
 3130.                      beta(2) = 6.0
 3130.                      gama(2) = 0.0
 3130.                      delta(2) = ( 6.0 * 1.0/( ( 6.2831853071795862 * 1.0/imax ) * ( 6.2831853071795862 * 1.0/imax ) ) ) * ( fieldin(1, myfirstlat + $I_L3127_176) + -2.0 * fieldin(2, myfirstlat + $I_L3127_176) + fieldin(3, myfirstlat + $I_L3127_176) )
 3130.                      $I_L3130_160 = 0
 3130. !dir$ ivdep
 3130.                      do
 3130.                         alfa(3 + $I_L3130_160) = 1.0
 3130.                         beta(3 + $I_L3130_160) = 4.0
 3130.                         gama(3 + $I_L3130_160) = 1.0
 3130.                         delta(3 + $I_L3130_160) = ( 6.0 * 1.0/$$_hin2 ) * ( fieldin(2 + $I_L3130_160, myfirstlat + $I_L3127_176) + -2.0 * fieldin(3 + $I_L3130_160, myfirstlat + $I_L3127_176) + fieldin(4 + $I_L3130_160, myfirstlat + $I_L3127_176) )
 3130.                         $I_L3130_160 = 1 + $I_L3130_160
 3130.                         if ( $I_L3130_160 >= -3 + imax ) exit
 3130.                      enddo
 3130.                      alfa(imax) = 1.0
 3130.                      beta(imax) = 4.0
 3130.                      gama(imax) = 1.0
 3130.                      delta(imax) = ( 6.0 * 1.0/$$_hin2 ) * ( fieldin(-1 + imax, myfirstlat + $I_L3127_176) + -2.0 * fieldin(imax, myfirstlat + $I_L3127_176) + fieldin(1, myfirstlat + $I_L3127_176) )
 3130.                      alfa(1 + imax) = 0.0
 3130.                      beta(1 + imax) = 6.0
 3130.                      gama(1 + imax) = 0.0
 3130.                      delta(1 + imax) = ( 6.0 * 1.0/$$_hin2 ) * ( fieldin(imax, myfirstlat + $I_L3127_176) + -2.0 * fieldin(1, myfirstlat + $I_L3127_176) + fieldin(2, myfirstlat + $I_L3127_176) )
 3130.                      $beta_WR1_R1 = beta(2)
 3130.                      $delta_WR0_R2 = delta(2)
 3130.                      $I_L3130_162 = 0
 3130. !dir$ unroll 2
 3130.                      do
 3130.                         $beta_WR0_R0 = beta(3 + $I_L3130_162) + -( ( gama(2 + $I_L3130_162) * alfa(3 + $I_L3130_162) ) * 1.0/$beta_WR1_R1 )
 3130.                         beta(3 + $I_L3130_162) = $beta_WR0_R0
 3130.                         $delta_WR0_R2 = delta(3 + $I_L3130_162) + -( ( $delta_WR0_R2 * alfa(3 + $I_L3130_162) ) * 1.0/$beta_WR1_R1 )
 3130.                         delta(3 + $I_L3130_162) = $delta_WR0_R2
 3130.                         $beta_WR1_R1 = $beta_WR0_R0
 3130.                         $I_L3130_162 = 1 + $I_L3130_162
 3130.                         if ( $I_L3130_162 >= -2 + imax ) exit
 3130.                      enddo
 3130.                      der(1 + imax) = ( delta(1 + imax) * 1.0/beta(1 + imax) )
 3130.                      if ( 2 + -imax <= 0 ) then
 3130.                         $der_WR0_R3 = der(1 + imax)
 3130.                         $I_L3130_164 = 0
 3130. !dir$ unroll 4
 3130.                         do
 3130.                            $SCF_P1 = 1.0/beta(imax + -$I_L3130_164)
 3130.                            $der_WR0_R3 = ( ( delta(imax + -$I_L3130_164) + -( gama(imax + -$I_L3130_164) * $der_WR0_R3 ) ) * $SCF_P1 )
 3130.                            der(imax + -$I_L3130_164) = $der_WR0_R3
 3130.                            $I_L3130_164 = 1 + $I_L3130_164
 3130.                            if ( $I_L3130_164 >= -1 + imax ) exit
 3130.                         enddo
 3130.                      endif
 3130.                      der(1) = 2.0 * der(2) + -der(3)
 3130.                      der(2 + imax) = 2.0 * der(1 + imax) + -der(imax)
 3130.                      $I_L3130_166 = 0
 3130. !dir$ ivdep
 3130.                      do
 3130.                         c1(1 + $I_L3130_166) = ( 1.0/$$_hin * der(1 + $I_L3130_166) * 1.6666666666666666e-1 )
 3130.                         $I_L3130_166 = 1 + $I_L3130_166
 3130.                         if ( $I_L3130_166 >= 2 + imax ) exit
 3130.                      enddo
 3130.                      $I_L3130_168 = 0
 3130. !dir$ ivdep
 3130.                      do
 3130.                         c2(1 + $I_L3130_168) = ( fieldin(1 + $I_L3130_168, myfirstlat + $I_L3127_176) * 1.0/$$_hin ) + -( der(1 + $I_L3130_168) * ( 1.6666666666666666e-1 * $$_hin ) )
 3130.                         $I_L3130_168 = 1 + $I_L3130_168
 3130.                         if ( $I_L3130_168 >= imax ) exit
 3130.                      enddo
 3130.                      c2(1 + imax) = ( fieldin(1, myfirstlat + $I_L3127_176) * 1.0/$$_hin ) + -( der(1 + imax) * ( 1.6666666666666666e-1 * $$_hin ) )
 3130.                      c2(2 + imax) = ( fieldin(2, myfirstlat + $I_L3127_176) * 1.0/$$_hin ) + -( der(2 + imax) * ( 1.6666666666666666e-1 * $$_hin ) )
 3130.                      if ( $$_ilast + -$$_ifirst >= 0 ) then
 3130.                         $I_L3130_170 = 0
 3130. !dir$ ivdep
 3130.                         do
 3130.                            $$_iin = 2 + int( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_ratio )
 3130.                            $$_dxm = real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_hout + -( real( -2 + ( 2 + int( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_ratio ) ), 8 ) * $$_hin )
 3130.                            $$_dx = real( -1 + ( 2 + int( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_ratio ) ), 8 ) * $$_hin + -( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_hout )
 3130.                            $$_fout($$_ifirst + $I_L3130_170) = ( ( $$_dxm * $$_dxm ) * c1($$_iin) + c2($$_iin) ) * ( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_hout + -( real( -2 + $$_iin, 8 ) * $$_hin ) ) + ( ( $$_dx * $$_dx ) * c1(-1 + $$_iin) + c2(-1 + $$_iin) ) * ( real( -1 + $$_iin, 8 ) * $$_hin + -( real( $$_ifirst + $I_L3130_170 + -1, 8 ) * $$_hout ) )
 3130.                            $I_L3130_170 = 1 + $I_L3130_170
 3130.                            if ( $I_L3130_170 >= $$_ilast + -$$_ifirst + 1 ) exit
 3130.                         enddo
 3130.                      endif
 3130.                      _free( t$398 )
 3130.                   endif
 3130.                endif
 3132.                if ( $$_ilast + -$$_ifirst >= 0 ) then
 3132.                   $I_L3132_172 = 0
 3132. !dir$ ivdep
 3132.                   do
 3133.                      $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3132_172, myfirstlat + $I_L3127_176, 0)
 3134.                      $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3132_172, myfirstlat + $I_L3127_176, 0)
 3135.                      fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L3132_172)
 3136.                      $I_L3132_172 = 1 + $I_L3132_172
 3132.                      if ( $I_L3132_172 >= $$_ilast + -$$_ifirst + 1 ) exit
 3132.                   enddo
 3132.                endif
 3137.                $I_L3127_176 = 1 + $I_L3127_176
 3136.                if ( $I_L3127_176 >= mylastlat + -myfirstlat + 1 ) exit
 3136.             enddo
 3126.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3126.             _free( $pvt_Abase_seg17_D0 )
 3138.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3138.          endif
 3138.       else if ( jbmax > 0 ) then
 3140.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3144.          $SC_jperijb_I51 = jperijb%dim_1%EX
 3144.          $SC_jperijb_I52 = jperijb%dim_1%LB
 3144.          $SC_jperijb_I54 = jperijb%dim_2%SM
 3144.          $SC_jperijb_I53 = jperijb%dim_2%EX
 3144.          $SC_jperijb_I55 = jperijb%dim_2%LB
 3143.          $SC_iperijb_I46 = iperijb%dim_1%EX
 3143.          $SC_iperijb_I47 = iperijb%dim_1%LB
 3143.          $SC_iperijb_I49 = iperijb%dim_2%SM
 3143.          $SC_iperijb_I48 = iperijb%dim_2%EX
 3143.          $SC_iperijb_I50 = iperijb%dim_2%LB
 3142.          $SC_ibmaxperjb_I44 = ibmaxperjb%dim_1%EX
 3142.          $SC_ibmaxperjb_I45 = ibmaxperjb%dim_1%LB
 3141.          $I_L3141_178 = 0
 3141. !$omp do schedule(static)
 3141.          do
 3142.             $t_S10 = (ibmaxperjb%base_addr)(1 + $I_L3141_178, 0)
 3142.             if ( $t_S10 > 0 ) then
 3142.                $I_L3142_174 = 0
 3142. !dir$ ivdep
 3142.                do
 3143.                   $$_i = (iperijb%base_addr)(1 + $I_L3142_174, 1 + $I_L3141_178, 0)
 3144.                   $$_j = (jperijb%base_addr)(1 + $I_L3142_174, 1 + $I_L3141_178, 0)
 3145.                   fieldout(1 + $I_L3142_174, 1 + $I_L3141_178) = fieldin($$_i, $$_j)
 3146.                   $I_L3142_174 = 1 + $I_L3142_174
 3142.                   if ( $I_L3142_174 >= $t_S10 ) exit
 3142.                enddo
 3142.             endif
 3147.             $I_L3141_178 = 1 + $I_L3141_178
 3146.             if ( $I_L3141_178 >= jbmax ) exit
 3146.          enddo
 3148.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3148.       endif
 3109.       _free( t$384 )
 3150.       return
 3150.       end
 3150.       
 3155.       
 3155.       subroutine splineibjbtoij_r2d( fieldin, fieldout )
 3155.       t$168 = ibmax
 3155.       t$169 = jbmax
 3156.       t$387 = _zla( 0, ibmax )
 3155.       t$388 = _zla( 0, ibmax )
 3156.       t$389 = _zla( 0, jbmax )
 3155.       t$390 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3155.       t$170 = imax
 3155.       t$171 = jmax
 3157.       t$391 = _zla( 0, imax )
 3155.       t$392 = _zla( 0, imax )
 3157.       t$393 = _zla( 0, jmax )
 3155.       t$394 = _zla( 0, imax ) * _zla( 0, jmax )
 3168.       _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**SplineIBJBtoIJ**', 0x800600000000L ) ) )
 3169.       if ( reducedgrid ) then
 3171.          if ( mylastlat + -myfirstlat >= 0 ) then
 3170.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3171.             $I_L3171_46 = 0
 3171. !$omp do schedule(static)
 3171.             do
 3177.                $I_L3171_46 = 1 + $I_L3171_46
 3171.                if ( $I_L3171_46 >= mylastlat + -myfirstlat + 1 ) exit
 3171.             enddo
 3178.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3178.          endif
 3178.       else if ( jbmax > 0 ) then
 3180.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3184.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3184.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3184.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3184.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3184.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3183.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3183.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3183.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3183.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3183.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3182.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3182.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3181.          $I_L3181_50 = 0
 3181. !$omp do schedule(static)
 3181.          do
 3182.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L3181_50, 0)
 3182.             if ( $t_S2 > 0 ) then
 3182.                $I_L3182_48 = 0
 3182. !dir$ ivdep
 3182.                do
 3183.                   $$_i = (iperijb%base_addr)(1 + $I_L3182_48, 1 + $I_L3181_50, 0)
 3184.                   $$_j = (jperijb%base_addr)(1 + $I_L3182_48, 1 + $I_L3181_50, 0) + -myfirstlat + 1
 3185.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L3182_48, 1 + $I_L3181_50)
 3186.                   $I_L3182_48 = 1 + $I_L3182_48
 3182.                   if ( $I_L3182_48 >= $t_S2 ) exit
 3182.                enddo
 3182.             endif
 3187.             $I_L3181_50 = 1 + $I_L3181_50
 3186.             if ( $I_L3181_50 >= jbmax ) exit
 3186.          enddo
 3188.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3188.       endif
 3190.       return
 3190.       end
 3190.       
 3210.       
 3210.       subroutine cycliccubicspline( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3210.       t$172 = dimin
 3215.       t$395 = _zla( 0, dimin )
 3210.       t$173 = dimout
 3216.       t$396 = _zla( 0, dimout )
 3210.       t$174 = ( 2 + dimin )
 3222.       t$397 = _zla( 0, ( 2 + dimin ) )
 3222.       t$400 = 8 * _zla( 0, ( 2 + dimin ) )
 3223.       t$401 = 8 * _zla( 0, ( 2 + dimin ) )
 3223.       t$403 = 16 * _zla( 0, ( 2 + dimin ) )
 3227.       t$404 = 16 * _zla( 0, ( 2 + dimin ) )
 3227.       t$406 = 24 * _zla( 0, ( 2 + dimin ) )
 3228.       t$407 = 24 * _zla( 0, ( 2 + dimin ) )
 3228.       t$409 = 32 * _zla( 0, ( 2 + dimin ) )
 3225.       t$410 = 32 * _zla( 0, ( 2 + dimin ) )
 3225.       t$412 = 40 * _zla( 0, ( 2 + dimin ) )
 3226.       t$413 = 40 * _zla( 0, ( 2 + dimin ) )
 3226.       t$415 = 48 * _zla( 0, ( 2 + dimin ) )
 3224.       t$416 = 48 * _zla( 0, ( 2 + dimin ) )
 3224.       t$418 = 56 * _zla( 0, ( 2 + dimin ) )
 3210.       t$398 = int( _alloc( 56 * _zla( 0, ( 2 + dimin ) ) ), 8 )
 3222.       t$399 = t$398
 3223.       t$402 = t$398 + 8 * _zla( 0, ( 2 + dimin ) )
 3227.       t$405 = t$398 + 16 * _zla( 0, ( 2 + dimin ) )
 3228.       t$408 = t$398 + 24 * _zla( 0, ( 2 + dimin ) )
 3225.       t$411 = t$398 + 32 * _zla( 0, ( 2 + dimin ) )
 3226.       t$414 = t$398 + 40 * _zla( 0, ( 2 + dimin ) )
 3224.       t$417 = t$398 + 48 * _zla( 0, ( 2 + dimin ) )
 3241.       $iratio_S0 = dimin / dimout
 3242.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 3243.          if ( ilast + -ifirst >= 0 ) then
 3243.             $I_L3243_42 = 0
 3243. !dir$ ivdep
 3243.             do
 3245.                fieldout(ifirst + $I_L3243_42) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L3243_42 + 1)
 3246.                $I_L3243_42 = 1 + $I_L3243_42
 3243.                if ( $I_L3243_42 >= ilast + -ifirst + 1 ) exit
 3243.             enddo
 3243.          endif
 3210.          _free( t$398 )
 3248.       else if ( dimin < 4 ) then
 3253.           _substr(t$1568,1,52) = '**(CyclicCubicSpline)** ERROR: Few input data points'
 3253.          call _stop(  _substr(t$1568,1,52) )
 3253.       else
 3258.          $ratio_S9 = ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) )
 3260.          if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 2 + dimin ) then
 3261.              _substr(t$1569,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3261.             call _stop(  _substr(t$1569,1,64) )
 3261.          else
 3267.             $hin_S7 = ( 6.2831853071795862 * 1.0/dimin )
 3268.             $hout_S11 = ( 6.2831853071795862 * 1.0/dimout )
 3269.             $hin2_S3 = ( 6.2831853071795862 * 1.0/dimin ) * ( 6.2831853071795862 * 1.0/dimin )
 3275.             alfa(2) = 0.0
 3276.             beta(2) = 6.0
 3277.             gama(2) = 0.0
 3278.             delta(2) = ( 6.0 * 1.0/( ( 6.2831853071795862 * 1.0/dimin ) * ( 6.2831853071795862 * 1.0/dimin ) ) ) * ( fieldin(1) + -2.0 * fieldin(2) + fieldin(3) )
 3280.             $I_L3280_44 = 0
 3280. !dir$ ivdep
 3280.             do
 3281.                alfa(3 + $I_L3280_44) = 1.0
 3282.                beta(3 + $I_L3280_44) = 4.0
 3283.                gama(3 + $I_L3280_44) = 1.0
 3284.                delta(3 + $I_L3280_44) = ( 6.0 * 1.0/$hin2_S3 ) * ( fieldin(2 + $I_L3280_44) + -2.0 * fieldin(3 + $I_L3280_44) + fieldin(4 + $I_L3280_44) )
 3286.                $I_L3280_44 = 1 + $I_L3280_44
 3280.                if ( $I_L3280_44 >= -3 + dimin ) exit
 3280.             enddo
 3287.             alfa(dimin) = 1.0
 3288.             beta(dimin) = 4.0
 3289.             gama(dimin) = 1.0
 3290.             delta(dimin) = ( 6.0 * 1.0/$hin2_S3 ) * ( fieldin(-1 + dimin) + -2.0 * fieldin(dimin) + fieldin(1) )
 3292.             alfa(1 + dimin) = 0.0
 3293.             beta(1 + dimin) = 6.0
 3294.             gama(1 + dimin) = 0.0
 3295.             delta(1 + dimin) = ( 6.0 * 1.0/$hin2_S3 ) * ( fieldin(dimin) + -2.0 * fieldin(1) + fieldin(2) )
 3300.             $beta_WR1_R1 = beta(2)
 3300.             $delta_WR0_R2 = delta(2)
 3300.             $I_L3300_46 = 0
 3300. !dir$ unroll 2
 3300.             do
 3301.                $beta_WR0_R0 = beta(3 + $I_L3300_46) + -( ( gama(2 + $I_L3300_46) * alfa(3 + $I_L3300_46) ) * 1.0/$beta_WR1_R1 )
 3301.                beta(3 + $I_L3300_46) = $beta_WR0_R0
 3302.                $delta_WR0_R2 = delta(3 + $I_L3300_46) + -( ( $delta_WR0_R2 * alfa(3 + $I_L3300_46) ) * 1.0/$beta_WR1_R1 )
 3302.                delta(3 + $I_L3300_46) = $delta_WR0_R2
 3300.                $beta_WR1_R1 = $beta_WR0_R0
 3303.                $I_L3300_46 = 1 + $I_L3300_46
 3300.                if ( $I_L3300_46 >= -2 + dimin ) exit
 3300.             enddo
 3307.             der(1 + dimin) = ( delta(1 + dimin) * 1.0/beta(1 + dimin) )
 3308.             if ( 2 + -dimin <= 0 ) then
 3308.                $der_WR0_R3 = der(1 + dimin)
 3308.                $I_L3308_48 = 0
 3308. !dir$ unroll 4
 3308.                do
 3309.                   $SCF_P1 = 1.0/beta(dimin + -$I_L3308_48)
 3309.                   $der_WR0_R3 = ( ( delta(dimin + -$I_L3308_48) + -( gama(dimin + -$I_L3308_48) * $der_WR0_R3 ) ) * $SCF_P1 )
 3309.                   der(dimin + -$I_L3308_48) = $der_WR0_R3
 3310.                   $I_L3308_48 = 1 + $I_L3308_48
 3308.                   if ( $I_L3308_48 >= -1 + dimin ) exit
 3308.                enddo
 3308.             endif
 3312.             der(1) = 2.0 * der(2) + -der(3)
 3313.             der(2 + dimin) = 2.0 * der(1 + dimin) + -der(dimin)
 3317.             $I_L3317_50 = 0
 3317. !dir$ ivdep
 3317.             do
 3318.                c1(1 + $I_L3317_50) = ( 1.0/$hin_S7 * der(1 + $I_L3317_50) * 1.6666666666666666e-1 )
 3319.                $I_L3317_50 = 1 + $I_L3317_50
 3317.                if ( $I_L3317_50 >= 2 + dimin ) exit
 3317.             enddo
 3320.             $I_L3320_52 = 0
 3320. !dir$ ivdep
 3320.             do
 3321.                c2(1 + $I_L3320_52) = ( fieldin(1 + $I_L3320_52) * 1.0/$hin_S7 ) + -( der(1 + $I_L3320_52) * ( 1.6666666666666666e-1 * $hin_S7 ) )
 3322.                $I_L3320_52 = 1 + $I_L3320_52
 3320.                if ( $I_L3320_52 >= dimin ) exit
 3320.             enddo
 3323.             c2(1 + dimin) = ( fieldin(1) * 1.0/$hin_S7 ) + -( der(1 + dimin) * ( 1.6666666666666666e-1 * $hin_S7 ) )
 3324.             c2(2 + dimin) = ( fieldin(2) * 1.0/$hin_S7 ) + -( der(2 + dimin) * ( 1.6666666666666666e-1 * $hin_S7 ) )
 3325.             if ( ilast + -ifirst >= 0 ) then
 3325.                $I_L3325_54 = 0
 3325. !dir$ ivdep
 3325.                do
 3327.                   $dxm_S13 = real( ifirst + $I_L3325_54 + -1, 8 ) * $hout_S11 + -( real( -2 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) ), 8 ) * $hin_S7 )
 3329.                   $dx_S12 = real( -1 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) ), 8 ) * $hin_S7 + -( real( ifirst + $I_L3325_54 + -1, 8 ) * $hout_S11 )
 3331.                   fieldout(ifirst + $I_L3325_54) = ( ( $dxm_S13 * $dxm_S13 ) * c1(2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 )) + c2(2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 )) ) * ( real( ifirst + $I_L3325_54 + -1, 8 ) * $hout_S11 + -( real( -2 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) ), 8 ) * $hin_S7 ) ) + ( ( $dx_S12 * $dx_S12 ) * c1(-1 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) )) + c2(-1 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) )) ) * ( real( -1 + ( 2 + int( real( ifirst + $I_L3325_54 + -1, 8 ) * $ratio_S9 ) ), 8 ) * $hin_S7 + -( real( ifirst + $I_L3325_54 + -1, 8 ) * $hout_S11 ) )
 3334.                   $I_L3325_54 = 1 + $I_L3325_54
 3325.                   if ( $I_L3325_54 >= ilast + -ifirst + 1 ) exit
 3325.                enddo
 3325.             endif
 3210.             _free( t$398 )
 3210.          endif
 3210.       endif
 3335.       return
 3335.       end
 3335.       
 3342.       
 3342.       subroutine linearijtoibjb_r2d( fieldin, fieldout )
 3342.       t$175 = imax
 3342.       t$176 = jmax
 3343.       t$419 = _zla( 0, imax )
 3342.       t$420 = _zla( 0, imax )
 3343.       t$421 = _zla( 0, jmax )
 3342.       t$422 = _zla( 0, imax ) * _zla( 0, jmax )
 3342.       t$177 = ibmax
 3342.       t$178 = jbmax
 3344.       t$423 = _zla( 0, ibmax )
 3342.       t$424 = _zla( 0, ibmax )
 3344.       t$425 = _zla( 0, jbmax )
 3342.       t$426 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3346.       t$429 = 8 * _zla( 0, imax )
 3342.       t$427 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 3346.       t$428 = t$427
 3356.       if ( reducedgrid ) then
 3358.          if ( mylastlat + -myfirstlat >= 0 ) then
 3357.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3357.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 3357.             $pvt_Abase_seg17_D0 = $$_fout_BASE
 3357.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3365.             $SC_jbperij_I39 = jbperij%dim_1%EX
 3365.             $SC_jbperij_I40 = jbperij%dim_1%LB
 3365.             $SC_jbperij_I42 = jbperij%dim_2%SM
 3365.             $SC_jbperij_I41 = jbperij%dim_2%EX
 3365.             $SC_jbperij_I43 = jbperij%dim_2%LB
 3364.             $SC_ibperij_I34 = ibperij%dim_1%EX
 3364.             $SC_ibperij_I35 = ibperij%dim_1%LB
 3364.             $SC_ibperij_I37 = ibperij%dim_2%SM
 3364.             $SC_ibperij_I36 = ibperij%dim_2%EX
 3364.             $SC_ibperij_I38 = ibperij%dim_2%LB
 3361.             $SC_imaxperj_I32 = imaxperj%dim_1%EX
 3361.             $SC_imaxperj_I33 = imaxperj%dim_1%LB
 3360.             $SC_mylastlon_I30 = mylastlon%dim_1%EX
 3360.             $SC_mylastlon_I31 = mylastlon%dim_1%LB
 3359.             $SC_myfirstlon_I28 = myfirstlon%dim_1%EX
 3359.             $SC_myfirstlon_I29 = myfirstlon%dim_1%LB
 3358.             $I_L3358_112 = 0
 3358. !$omp do schedule(static)
 3358.             do
 3359.                $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3358_112, 0)
 3360.                $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3358_112, 0)
 3361.                t$183 = imax
 3361.                t$438 = max( 0, imax )
 3361.                t$184 = (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0)
 3361.                t$439 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0) )
 3361.                t$185 = ( 1 + imax )
 3361.                t$440 = max( 0, ( 1 + imax ) )
 3361.                t$443 = 8 * max( 0, ( 1 + imax ) )
 3361.                t$441 = int( _alloc( 8 * max( 0, ( 1 + imax ) ) ), 8 )
 3361.                t$442 = t$441
 3361.                $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0)
 3361.                if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0) == 0 ) then
 3361.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3361.                      $I_L3361_102 = 0
 3361. !dir$ ivdep
 3361.                      do
 3361.                         $$_fout($$_ifirst + $I_L3361_102) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3361_102 + 1, myfirstlat + $I_L3358_112)
 3361.                         $I_L3361_102 = 1 + $I_L3361_102
 3361.                         if ( $I_L3361_102 >= $$_ilast + -$$_ifirst + 1 ) exit
 3361.                      enddo
 3361.                   endif
 3361.                   _free( t$441 )
 3361.                else if ( imax <= 0 ) then
 3361.                    _substr(t$1617,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 3361.                   call _stop(  _substr(t$1617,1,47) )
 3361.                else
 3361.                   $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0), 8 ) ) )
 3361.                   $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0), 8 ) * $$_ratio )
 3361.                   if ( $$_iin > 1 + imax ) then
 3361.                       _substr(t$1618,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3361.                      call _stop(  _substr(t$1618,1,64) )
 3361.                   else
 3361.                      $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3361.                      $$_hininv = 1.0/( 6.2831853071795862 * 1.0/imax )
 3361.                      $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L3358_112, 0) )
 3361.                      $I_L3361_104 = 0
 3361. !dir$ ivdep
 3361.                      do
 3361.                         c(1 + $I_L3361_104) = fieldin(1 + $I_L3361_104, myfirstlat + $I_L3358_112) * $$_hininv
 3361.                         $I_L3361_104 = 1 + $I_L3361_104
 3361.                         if ( $I_L3361_104 >= imax ) exit
 3361.                      enddo
 3361.                      c(1 + imax) = fieldin(1, myfirstlat + $I_L3358_112) * $$_hininv
 3361.                      if ( $$_ilast + -$$_ifirst >= 0 ) then
 3361.                         $I_L3361_106 = 0
 3361. !dir$ ivdep
 3361.                         do
 3361.                            $$_iin = 2 + int( real( $$_ifirst + $I_L3361_106 + -1, 8 ) * $$_ratio )
 3361.                            $$_fout($$_ifirst + $I_L3361_106) = ( real( $$_ifirst + $I_L3361_106 + -1, 8 ) * $$_hout + -( real( -2 + $$_iin, 8 ) * $$_hin ) ) * c($$_iin) + ( real( -1 + $$_iin, 8 ) * $$_hin + -( real( $$_ifirst + $I_L3361_106 + -1, 8 ) * $$_hout ) ) * c(-1 + $$_iin)
 3361.                            $I_L3361_106 = 1 + $I_L3361_106
 3361.                            if ( $I_L3361_106 >= $$_ilast + -$$_ifirst + 1 ) exit
 3361.                         enddo
 3361.                      endif
 3361.                      _free( t$441 )
 3361.                   endif
 3361.                endif
 3363.                if ( $$_ilast + -$$_ifirst >= 0 ) then
 3363.                   $I_L3363_108 = 0
 3363. !dir$ ivdep
 3363.                   do
 3364.                      $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3363_108, myfirstlat + $I_L3358_112, 0)
 3365.                      $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3363_108, myfirstlat + $I_L3358_112, 0)
 3366.                      fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L3363_108)
 3367.                      $I_L3363_108 = 1 + $I_L3363_108
 3363.                      if ( $I_L3363_108 >= $$_ilast + -$$_ifirst + 1 ) exit
 3363.                   enddo
 3363.                endif
 3368.                $I_L3358_112 = 1 + $I_L3358_112
 3367.                if ( $I_L3358_112 >= mylastlat + -myfirstlat + 1 ) exit
 3367.             enddo
 3357.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3357.             _free( $pvt_Abase_seg17_D0 )
 3369.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3369.          endif
 3369.       else if ( jbmax > 0 ) then
 3371.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3375.          $SC_jperijb_I51 = jperijb%dim_1%EX
 3375.          $SC_jperijb_I52 = jperijb%dim_1%LB
 3375.          $SC_jperijb_I54 = jperijb%dim_2%SM
 3375.          $SC_jperijb_I53 = jperijb%dim_2%EX
 3375.          $SC_jperijb_I55 = jperijb%dim_2%LB
 3374.          $SC_iperijb_I46 = iperijb%dim_1%EX
 3374.          $SC_iperijb_I47 = iperijb%dim_1%LB
 3374.          $SC_iperijb_I49 = iperijb%dim_2%SM
 3374.          $SC_iperijb_I48 = iperijb%dim_2%EX
 3374.          $SC_iperijb_I50 = iperijb%dim_2%LB
 3373.          $SC_ibmaxperjb_I44 = ibmaxperjb%dim_1%EX
 3373.          $SC_ibmaxperjb_I45 = ibmaxperjb%dim_1%LB
 3372.          $I_L3372_114 = 0
 3372. !$omp do schedule(static)
 3372.          do
 3373.             $t_S6 = (ibmaxperjb%base_addr)(1 + $I_L3372_114, 0)
 3373.             if ( $t_S6 > 0 ) then
 3373.                $I_L3373_110 = 0
 3373. !dir$ ivdep
 3373.                do
 3374.                   $$_i = (iperijb%base_addr)(1 + $I_L3373_110, 1 + $I_L3372_114, 0)
 3375.                   $$_j = (jperijb%base_addr)(1 + $I_L3373_110, 1 + $I_L3372_114, 0)
 3376.                   fieldout(1 + $I_L3373_110, 1 + $I_L3372_114) = fieldin($$_i, $$_j)
 3377.                   $I_L3373_110 = 1 + $I_L3373_110
 3373.                   if ( $I_L3373_110 >= $t_S6 ) exit
 3373.                enddo
 3373.             endif
 3378.             $I_L3372_114 = 1 + $I_L3372_114
 3377.             if ( $I_L3372_114 >= jbmax ) exit
 3377.          enddo
 3379.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3379.       endif
 3342.       _free( t$427 )
 3381.       return
 3381.       end
 3381.       
 3386.       
 3386.       subroutine linearibjbtoij_r2d( fieldin, fieldout )
 3386.       t$179 = ibmax
 3386.       t$180 = jbmax
 3387.       t$430 = _zla( 0, ibmax )
 3386.       t$431 = _zla( 0, ibmax )
 3387.       t$432 = _zla( 0, jbmax )
 3386.       t$433 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3386.       t$181 = imax
 3386.       t$182 = jmax
 3388.       t$434 = _zla( 0, imax )
 3386.       t$435 = _zla( 0, imax )
 3388.       t$436 = _zla( 0, jmax )
 3386.       t$437 = _zla( 0, imax ) * _zla( 0, jmax )
 3399.       if ( reducedgrid ) then
 3401.          if ( mylastlat + -myfirstlat >= 0 ) then
 3400.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3401.             $I_L3401_46 = 0
 3401. !$omp do schedule(static)
 3401.             do
 3407.                $I_L3401_46 = 1 + $I_L3401_46
 3401.                if ( $I_L3401_46 >= mylastlat + -myfirstlat + 1 ) exit
 3401.             enddo
 3408.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3408.          endif
 3408.       else if ( jbmax > 0 ) then
 3410.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3414.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3414.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3414.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3414.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3414.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3413.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3413.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3413.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3413.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3413.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3412.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3412.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3411.          $I_L3411_50 = 0
 3411. !$omp do schedule(static)
 3411.          do
 3412.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L3411_50, 0)
 3412.             if ( $t_S2 > 0 ) then
 3412.                $I_L3412_48 = 0
 3412. !dir$ ivdep
 3412.                do
 3413.                   $$_i = (iperijb%base_addr)(1 + $I_L3412_48, 1 + $I_L3411_50, 0)
 3414.                   $$_j = (jperijb%base_addr)(1 + $I_L3412_48, 1 + $I_L3411_50, 0) + -myfirstlat + 1
 3415.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L3412_48, 1 + $I_L3411_50)
 3416.                   $I_L3412_48 = 1 + $I_L3412_48
 3412.                   if ( $I_L3412_48 >= $t_S2 ) exit
 3412.                enddo
 3412.             endif
 3417.             $I_L3411_50 = 1 + $I_L3411_50
 3416.             if ( $I_L3411_50 >= jbmax ) exit
 3416.          enddo
 3418.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3418.       endif
 3420.       return
 3420.       end
 3420.       
 3440.       
 3440.       subroutine cycliclinear( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3440.       t$183 = dimin
 3445.       t$438 = _zla( 0, dimin )
 3440.       t$184 = dimout
 3446.       t$439 = _zla( 0, dimout )
 3440.       t$185 = ( 1 + dimin )
 3452.       t$440 = _zla( 0, ( 1 + dimin ) )
 3452.       t$443 = 8 * _zla( 0, ( 1 + dimin ) )
 3440.       t$441 = int( _alloc( 8 * _zla( 0, ( 1 + dimin ) ) ), 8 )
 3452.       t$442 = t$441
 3463.       $iratio_S0 = dimin / dimout
 3464.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 3465.          if ( ilast + -ifirst >= 0 ) then
 3465.             $I_L3465_12 = 0
 3465. !dir$ ivdep
 3465.             do
 3467.                fieldout(ifirst + $I_L3465_12) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L3465_12 + 1)
 3468.                $I_L3465_12 = 1 + $I_L3465_12
 3465.                if ( $I_L3465_12 >= ilast + -ifirst + 1 ) exit
 3465.             enddo
 3465.          endif
 3440.          _free( t$441 )
 3470.       else if ( dimin <= 0 ) then
 3475.           _substr(t$1617,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 3475.          call _stop(  _substr(t$1617,1,47) )
 3475.       else
 3480.          $ratio_S4 = ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) )
 3482.          if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 3483.              _substr(t$1618,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3483.             call _stop(  _substr(t$1618,1,64) )
 3483.          else
 3489.             $hin_S8 = ( 6.2831853071795862 * 1.0/dimin )
 3490.             $hininv_S2 = 1.0/( 6.2831853071795862 * 1.0/dimin )
 3491.             $hout_S7 = ( 6.2831853071795862 * 1.0/dimout )
 3495.             $I_L3495_14 = 0
 3495. !dir$ ivdep
 3495.             do
 3496.                c(1 + $I_L3495_14) = fieldin(1 + $I_L3495_14) * $hininv_S2
 3497.                $I_L3495_14 = 1 + $I_L3495_14
 3495.                if ( $I_L3495_14 >= dimin ) exit
 3495.             enddo
 3498.             c(1 + dimin) = fieldin(1) * $hininv_S2
 3500.             if ( ilast + -ifirst >= 0 ) then
 3500.                $I_L3500_16 = 0
 3500. !dir$ ivdep
 3500.                do
 3501.                   $iin_S6 = 2 + int( real( ifirst + $I_L3500_16 + -1, 8 ) * $ratio_S4 )
 3504.                   fieldout(ifirst + $I_L3500_16) = ( real( ifirst + $I_L3500_16 + -1, 8 ) * $hout_S7 + -( real( -2 + $iin_S6, 8 ) * $hin_S8 ) ) * c($iin_S6) + ( real( -1 + $iin_S6, 8 ) * $hin_S8 + -( real( ifirst + $I_L3500_16 + -1, 8 ) * $hout_S7 ) ) * c(-1 + $iin_S6)
 3505.                   $I_L3500_16 = 1 + $I_L3500_16
 3500.                   if ( $I_L3500_16 >= ilast + -ifirst + 1 ) exit
 3500.                enddo
 3500.             endif
 3440.             _free( t$441 )
 3440.          endif
 3440.       endif
 3506.       return
 3506.       end
 3506.       
 3508.       
 3508.       subroutine cycliclinear_abs( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3508.       t$186 = dimin
 3513.       t$444 = _zla( 0, dimin )
 3508.       t$187 = dimout
 3514.       t$445 = _zla( 0, dimout )
 3508.       t$188 = ( 1 + dimin )
 3520.       t$446 = _zla( 0, ( 1 + dimin ) )
 3520.       t$449 = 8 * _zla( 0, ( 1 + dimin ) )
 3508.       t$447 = int( _alloc( 8 * _zla( 0, ( 1 + dimin ) ) ), 8 )
 3520.       t$448 = t$447
 3531.       $iratio_S0 = dimin / dimout
 3532.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 3533.          if ( ilast + -ifirst >= 0 ) then
 3533.             $I_L3533_12 = 0
 3533. !dir$ ivdep
 3533.             do
 3535.                fieldout(ifirst + $I_L3533_12) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L3533_12 + 1)
 3536.                $I_L3533_12 = 1 + $I_L3533_12
 3533.                if ( $I_L3533_12 >= ilast + -ifirst + 1 ) exit
 3533.             enddo
 3533.          endif
 3508.          _free( t$447 )
 3538.       else if ( dimin <= 0 ) then
 3543.           _substr(t$1630,1,51) = '**(CyclicLinear_ABS)** ERROR: Few input data points'
 3543.          call _stop(  _substr(t$1630,1,51) )
 3543.       else
 3548.          $ratio_S4 = ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) )
 3550.          if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 3551.              _substr(t$1631,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3551.             call _stop(  _substr(t$1631,1,64) )
 3551.          else
 3557.             $hin_S8 = ( 6.2831853071795862 * 1.0/dimin )
 3558.             $hininv_S2 = 1.0/( 6.2831853071795862 * 1.0/dimin )
 3559.             $hout_S7 = ( 6.2831853071795862 * 1.0/dimout )
 3563.             $I_L3563_14 = 0
 3563. !dir$ ivdep
 3563.             do
 3564.                c(1 + $I_L3563_14) = abs( fieldin(1 + $I_L3563_14) ) * $hininv_S2
 3565.                $I_L3563_14 = 1 + $I_L3563_14
 3563.                if ( $I_L3563_14 >= dimin ) exit
 3563.             enddo
 3566.             c(1 + dimin) = abs( fieldin(1) ) * $hininv_S2
 3567.             if ( ilast + -ifirst >= 0 ) then
 3567.                $I_L3567_16 = 0
 3567. !dir$ ivdep
 3567.                do
 3568.                   $iin_S6 = 2 + int( real( ifirst + $I_L3567_16 + -1, 8 ) * $ratio_S4 )
 3571.                   fieldout(ifirst + $I_L3567_16) = ( real( ifirst + $I_L3567_16 + -1, 8 ) * $hout_S7 + -( real( -2 + $iin_S6, 8 ) * $hin_S8 ) ) * c($iin_S6) + ( real( -1 + $iin_S6, 8 ) * $hin_S8 + -( real( ifirst + $I_L3567_16 + -1, 8 ) * $hout_S7 ) ) * c(-1 + $iin_S6)
 3572.                   $I_L3567_16 = 1 + $I_L3567_16
 3567.                   if ( $I_L3567_16 >= ilast + -ifirst + 1 ) exit
 3567.                enddo
 3567.             endif
 3508.             _free( t$447 )
 3508.          endif
 3508.       endif
 3573.       return
 3573.       end
 3573.       
 3575.       
 3575.       subroutine nearestijtoibjb_i2d( fieldin, fieldout )
 3575.       t$189 = imax
 3575.       t$190 = jmax
 3576.       t$450 = _zla( 0, imax )
 3575.       t$451 = _zla( 0, imax )
 3576.       t$452 = _zla( 0, jmax )
 3575.       t$453 = _zla( 0, imax ) * _zla( 0, jmax )
 3575.       t$191 = ibmax
 3575.       t$192 = jbmax
 3577.       t$454 = _zla( 0, ibmax )
 3575.       t$455 = _zla( 0, ibmax )
 3577.       t$456 = _zla( 0, jbmax )
 3575.       t$457 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3579.       t$460 = 4 * _zla( 0, imax )
 3575.       t$458 = int( _alloc( 4 * _zla( 0, imax ) ), 8 )
 3579.       t$459 = t$458
 3589.       if ( reducedgrid ) then
 3591.          if ( mylastlat + -myfirstlat >= 0 ) then
 3590.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3590.             $$_fout_BASE = _alloc( 8 * _rsh( 63 + 32 * _zla( 0, imax ), 6 ) )
 3590.             $pvt_Abase_seg17_D0 = $$_fout_BASE
 3590.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3598.             $SC_jbperij_I39 = jbperij%dim_1%EX
 3598.             $SC_jbperij_I40 = jbperij%dim_1%LB
 3598.             $SC_jbperij_I42 = jbperij%dim_2%SM
 3598.             $SC_jbperij_I41 = jbperij%dim_2%EX
 3598.             $SC_jbperij_I43 = jbperij%dim_2%LB
 3597.             $SC_ibperij_I34 = ibperij%dim_1%EX
 3597.             $SC_ibperij_I35 = ibperij%dim_1%LB
 3597.             $SC_ibperij_I37 = ibperij%dim_2%SM
 3597.             $SC_ibperij_I36 = ibperij%dim_2%EX
 3597.             $SC_ibperij_I38 = ibperij%dim_2%LB
 3594.             $SC_imaxperj_I32 = imaxperj%dim_1%EX
 3594.             $SC_imaxperj_I33 = imaxperj%dim_1%LB
 3593.             $SC_mylastlon_I30 = mylastlon%dim_1%EX
 3593.             $SC_mylastlon_I31 = mylastlon%dim_1%LB
 3592.             $SC_myfirstlon_I28 = myfirstlon%dim_1%EX
 3592.             $SC_myfirstlon_I29 = myfirstlon%dim_1%LB
 3591.             $I_L3591_130 = 0
 3591. !$omp do schedule(static)
 3591.             do
 3592.                $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3591_130, 0)
 3593.                $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3591_130, 0)
 3594.                t$215 = imax
 3594.                t$516 = max( 0, imax )
 3594.                t$216 = (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0)
 3594.                t$517 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0) )
 3594.                t$520 = 4 * (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0)
 3594.                t$518 = int( _alloc( t$520 ), 8 )
 3594.                t$519 = t$518
 3594.                $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0)
 3594.                if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0) == 0 ) then
 3594.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3594.                      $I_L3594_116 = 0
 3594. !dir$ ivdep
 3594.                      do
 3594.                         $$_fout($$_ifirst + $I_L3594_116) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3594_116 + 1, myfirstlat + $I_L3591_130)
 3594.                         $I_L3594_116 = 1 + $I_L3594_116
 3594.                         if ( $I_L3594_116 >= $$_ilast + -$$_ifirst + 1 ) exit
 3594.                      enddo
 3594.                   endif
 3594.                   _free( t$518 )
 3594.                else if ( imax <= 0 ) then
 3594.                    _substr(t$1725,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3594.                   call _stop(  _substr(t$1725,1,48) )
 3594.                else
 3594.                   $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0), 8 ) ) )
 3594.                   $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0), 8 ) * $$_ratio )
 3594.                   if ( $$_iin > 1 + imax ) then
 3594.                       _substr(t$1726,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3594.                      call _stop(  _substr(t$1726,1,64) )
 3594.                   else
 3594.                      $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3594.                      $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L3591_130, 0) )
 3594.                      if ( $$_ilast + -$$_ifirst >= 0 ) then
 3594.                         $I_L3594_126 = 0
 3594. !dir$ ivdep
 3594.                         do
 3594.                            $$_alfaout = ( $$_ifirst + $I_L3594_126 + -1 ) * $$_hout
 3594.                            $$_difalfa = 9.99999986991104e14
 3594.                            $I_L3594_118 = 0
 3594.                            do
 3594.                               $alfain_S3 = real( $I_L3594_118, 8 ) * $$_hin
 3594.                               $$_difalfa = min( $$_difalfa, abs( $alfain_S3 + -$$_alfaout ) )
 3594.                               $I_L3594_118 = 1 + $I_L3594_118
 3594.                               if ( $I_L3594_118 >= imax ) exit
 3594.                            enddo
 3594.                            $I_L3594_120 = 0
 3594.                            do
 3594.                               $$_alfain = real( $I_L3594_120, 8 ) * $$_hin
 3594.                               if ( abs( $$_alfain + -$$_alfaout ) == $$_difalfa ) then
 3594.                                  $$_fout($$_ifirst + $I_L3594_126) = fieldin(1 + $I_L3594_120, myfirstlat + $I_L3591_130)
 3594.                               endif
 3594.                               $I_L3594_120 = 1 + $I_L3594_120
 3594.                               if ( $I_L3594_120 >= imax ) exit
 3594.                            enddo
 3594.                            $I_L3594_126 = 1 + $I_L3594_126
 3594.                            if ( $I_L3594_126 >= $$_ilast + -$$_ifirst + 1 ) exit
 3594.                         enddo
 3594.                      endif
 3594.                      _free( t$518 )
 3594.                   endif
 3594.                endif
 3596.                if ( $$_ilast + -$$_ifirst >= 0 ) then
 3596.                   $I_L3596_122 = 0
 3596. !dir$ ivdep
 3596.                   do
 3597.                      $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3596_122, myfirstlat + $I_L3591_130, 0)
 3598.                      $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3596_122, myfirstlat + $I_L3591_130, 0)
 3599.                      fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L3596_122)
 3600.                      $I_L3596_122 = 1 + $I_L3596_122
 3596.                      if ( $I_L3596_122 >= $$_ilast + -$$_ifirst + 1 ) exit
 3596.                   enddo
 3596.                endif
 3601.                $I_L3591_130 = 1 + $I_L3591_130
 3600.                if ( $I_L3591_130 >= mylastlat + -myfirstlat + 1 ) exit
 3600.             enddo
 3590.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3590.             _free( $pvt_Abase_seg17_D0 )
 3602.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3602.          endif
 3602.       else if ( jbmax > 0 ) then
 3604.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3608.          $SC_jperijb_I51 = jperijb%dim_1%EX
 3608.          $SC_jperijb_I52 = jperijb%dim_1%LB
 3608.          $SC_jperijb_I54 = jperijb%dim_2%SM
 3608.          $SC_jperijb_I53 = jperijb%dim_2%EX
 3608.          $SC_jperijb_I55 = jperijb%dim_2%LB
 3607.          $SC_iperijb_I46 = iperijb%dim_1%EX
 3607.          $SC_iperijb_I47 = iperijb%dim_1%LB
 3607.          $SC_iperijb_I49 = iperijb%dim_2%SM
 3607.          $SC_iperijb_I48 = iperijb%dim_2%EX
 3607.          $SC_iperijb_I50 = iperijb%dim_2%LB
 3606.          $SC_ibmaxperjb_I44 = ibmaxperjb%dim_1%EX
 3606.          $SC_ibmaxperjb_I45 = ibmaxperjb%dim_1%LB
 3605.          $I_L3605_128 = 0
 3605. !$omp do schedule(static)
 3605.          do
 3606.             $t_S8 = (ibmaxperjb%base_addr)(1 + $I_L3605_128, 0)
 3606.             if ( $t_S8 > 0 ) then
 3606.                $I_L3606_124 = 0
 3606. !dir$ ivdep
 3606.                do
 3607.                   $$_i = (iperijb%base_addr)(1 + $I_L3606_124, 1 + $I_L3605_128, 0)
 3608.                   $$_j = (jperijb%base_addr)(1 + $I_L3606_124, 1 + $I_L3605_128, 0)
 3609.                   fieldout(1 + $I_L3606_124, 1 + $I_L3605_128) = fieldin($$_i, $$_j)
 3610.                   $I_L3606_124 = 1 + $I_L3606_124
 3606.                   if ( $I_L3606_124 >= $t_S8 ) exit
 3606.                enddo
 3606.             endif
 3611.             $I_L3605_128 = 1 + $I_L3605_128
 3610.             if ( $I_L3605_128 >= jbmax ) exit
 3610.          enddo
 3612.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3612.       endif
 3575.       _free( t$458 )
 3614.       return
 3614.       end
 3614.       
 3618.       
 3618.       subroutine nearestijtoibjb_r2d( fieldin, fieldout )
 3618.       t$193 = imax
 3618.       t$194 = jmax
 3619.       t$461 = _zla( 0, imax )
 3618.       t$462 = _zla( 0, imax )
 3619.       t$463 = _zla( 0, jmax )
 3618.       t$464 = _zla( 0, imax ) * _zla( 0, jmax )
 3618.       t$195 = ibmax
 3618.       t$196 = jbmax
 3620.       t$465 = _zla( 0, ibmax )
 3618.       t$466 = _zla( 0, ibmax )
 3620.       t$467 = _zla( 0, jbmax )
 3618.       t$468 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3622.       t$471 = 8 * _zla( 0, imax )
 3618.       t$469 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 3622.       t$470 = t$469
 3632.       if ( reducedgrid ) then
 3634.          if ( mylastlat + -myfirstlat >= 0 ) then
 3633.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3633.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 3633.             $pvt_Abase_seg16_D0 = $$_fout_BASE
 3633.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3637.             if ( imax <= 0 ) then
 3641.                $SC_jbperij_I40 = jbperij%dim_1%EX
 3641.                $SC_jbperij_I41 = jbperij%dim_1%LB
 3641.                $SC_jbperij_I43 = jbperij%dim_2%SM
 3641.                $SC_jbperij_I42 = jbperij%dim_2%EX
 3641.                $SC_jbperij_I44 = jbperij%dim_2%LB
 3640.                $SC_ibperij_I35 = ibperij%dim_1%EX
 3640.                $SC_ibperij_I36 = ibperij%dim_1%LB
 3640.                $SC_ibperij_I38 = ibperij%dim_2%SM
 3640.                $SC_ibperij_I37 = ibperij%dim_2%EX
 3640.                $SC_ibperij_I39 = ibperij%dim_2%LB
 3637.                $SC_imaxperj_I33 = imaxperj%dim_1%EX
 3637.                $SC_imaxperj_I34 = imaxperj%dim_1%LB
 3636.                $SC_mylastlon_I31 = mylastlon%dim_1%EX
 3636.                $SC_mylastlon_I32 = mylastlon%dim_1%LB
 3635.                $SC_myfirstlon_I29 = myfirstlon%dim_1%EX
 3635.                $SC_myfirstlon_I30 = myfirstlon%dim_1%LB
 3634.                $I_L3634_138 = 0
 3634. !$omp do schedule(static)
 3634.                do
 3635.                   $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3634_138, 0)
 3636.                   $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3634_138, 0)
 3637.                   t$217 = imax
 3637.                   t$521 = max( 0, imax )
 3637.                   t$218 = (imaxperj%base_addr)(myfirstlat + $I_L3634_138, 0)
 3637.                   t$522 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L3634_138, 0) )
 3637.                    _substr(t$1737,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3637.                   call _stop(  _substr(t$1737,1,48) )
 3639.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3639.                      $I_L3639_126 = 0
 3639. !dir$ ivdep
 3639.                      do
 3640.                         $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3639_126, myfirstlat + $I_L3634_138, 0)
 3641.                         $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3639_126, myfirstlat + $I_L3634_138, 0)
 3642.                         fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L3639_126)
 3643.                         $I_L3639_126 = 1 + $I_L3639_126
 3639.                         if ( $I_L3639_126 >= $$_ilast + -$$_ifirst + 1 ) exit
 3639.                      enddo
 3639.                   endif
 3644.                   $I_L3634_138 = 1 + $I_L3634_138
 3643.                   if ( $I_L3634_138 >= mylastlat + -myfirstlat + 1 ) exit
 3643.                enddo
 3643.             else
 3641.                $SC_jbperij_I40 = jbperij%dim_1%EX
 3641.                $SC_jbperij_I41 = jbperij%dim_1%LB
 3641.                $SC_jbperij_I43 = jbperij%dim_2%SM
 3641.                $SC_jbperij_I42 = jbperij%dim_2%EX
 3641.                $SC_jbperij_I44 = jbperij%dim_2%LB
 3640.                $SC_ibperij_I35 = ibperij%dim_1%EX
 3640.                $SC_ibperij_I36 = ibperij%dim_1%LB
 3640.                $SC_ibperij_I38 = ibperij%dim_2%SM
 3640.                $SC_ibperij_I37 = ibperij%dim_2%EX
 3640.                $SC_ibperij_I39 = ibperij%dim_2%LB
 3637.                $SC_imaxperj_I33 = imaxperj%dim_1%EX
 3637.                $SC_imaxperj_I34 = imaxperj%dim_1%LB
 3636.                $SC_mylastlon_I31 = mylastlon%dim_1%EX
 3636.                $SC_mylastlon_I32 = mylastlon%dim_1%LB
 3635.                $SC_myfirstlon_I29 = myfirstlon%dim_1%EX
 3635.                $SC_myfirstlon_I30 = myfirstlon%dim_1%LB
 3634.                $I_L3634_144 = 0
 3634. !$omp do schedule(static)
 3634.                do
 3635.                   $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3634_144, 0)
 3636.                   $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3634_144, 0)
 3637.                   t$217 = imax
 3637.                   t$521 = max( 0, imax )
 3637.                   t$218 = (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0)
 3637.                   t$522 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0) )
 3637.                   $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0)
 3637.                   if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0) /= 0 ) then
 3637.                      $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0), 8 ) ) )
 3637.                      $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0), 8 ) * $$_ratio )
 3637.                      if ( $$_iin > 1 + imax ) then
 3637.                          _substr(t$1742,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3637.                         call _stop(  _substr(t$1742,1,64) )
 3637.                      else
 3637.                         $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3637.                         $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L3634_144, 0) )
 3637.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 3637.                            if ( -2 + imax >= 0 ) then
 3637.                               $I_L3637_142 = 0
 3637. !dir$ ivdep
 3637.                               do
 3637.                                  $$_alfaout = ( $$_ifirst + $I_L3637_142 + -1 ) * $$_hout
 3637.                                  $$_difalfa = min( ( ( $$_ifirst + $I_L3637_142 + -1 ) * $$_hout ), 6.2831853071795862 + -( ( $$_ifirst + $I_L3637_142 + -1 ) * $$_hout ) )
 3637.                                  $$_lonout = 1
 3637.                                  $I_L3637_132 = 0
 3637.                                  do
 3637.                                     $$_difinout = abs( ( ( 1 + $I_L3637_132 ) * $$_hin ) + -$$_alfaout )
 3637.                                     if ( abs( ( ( 1 + $I_L3637_132 ) * $$_hin ) + -$$_alfaout ) < $$_difalfa ) then
 3637.                                        $$_difalfa = $$_difinout
 3637.                                        $$_lonout = ( 2 + $I_L3637_132 )
 3637.                                     endif
 3637.                                     $I_L3637_132 = 1 + $I_L3637_132
 3637.                                     if ( $I_L3637_132 >= -1 + imax ) exit
 3637.                                  enddo
 3637.                                  $$_fout($$_ifirst + $I_L3637_142) = fieldin($$_lonout, myfirstlat + $I_L3634_144)
 3637.                                  $I_L3637_142 = 1 + $I_L3637_142
 3637.                                  if ( $I_L3637_142 >= $$_ilast + -$$_ifirst + 1 ) exit
 3637.                               enddo
 3637.                            else
 3637.                               $SC_fieldin_I28 = fieldin(1, myfirstlat + $I_L3634_144)
 3637.                               $I_L3637_134 = 0
 3637. !dir$ ivdep
 3637.                               do
 3637.                                  $$_fout($$_ifirst + $I_L3637_134) = $SC_fieldin_I28
 3637.                                  $I_L3637_134 = 1 + $I_L3637_134
 3637.                                  if ( $I_L3637_134 >= $$_ilast + -$$_ifirst + 1 ) exit
 3637.                               enddo
 3637.                            endif
 3637.                         endif
 3637.                      endif
 3637.                   else if ( $$_ilast + -$$_ifirst >= 0 ) then
 3637.                      $I_L3637_130 = 0
 3637. !dir$ ivdep
 3637.                      do
 3637.                         $$_fout($$_ifirst + $I_L3637_130) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3637_130 + 1, myfirstlat + $I_L3634_144)
 3637.                         $I_L3637_130 = 1 + $I_L3637_130
 3637.                         if ( $I_L3637_130 >= $$_ilast + -$$_ifirst + 1 ) exit
 3637.                      enddo
 3637.                   endif
 3639.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3639.                      $I_L3639_136 = 0
 3639. !dir$ ivdep
 3639.                      do
 3640.                         $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3639_136, myfirstlat + $I_L3634_144, 0)
 3641.                         $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3639_136, myfirstlat + $I_L3634_144, 0)
 3642.                         fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L3639_136)
 3643.                         $I_L3639_136 = 1 + $I_L3639_136
 3639.                         if ( $I_L3639_136 >= $$_ilast + -$$_ifirst + 1 ) exit
 3639.                      enddo
 3639.                   endif
 3644.                   $I_L3634_144 = 1 + $I_L3634_144
 3643.                   if ( $I_L3634_144 >= mylastlat + -myfirstlat + 1 ) exit
 3643.                enddo
 3643.             endif
 3633.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3633.             _free( $pvt_Abase_seg16_D0 )
 3645.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3645.          endif
 3645.       else if ( jbmax > 0 ) then
 3647.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3651.          $SC_jperijb_I52 = jperijb%dim_1%EX
 3651.          $SC_jperijb_I53 = jperijb%dim_1%LB
 3651.          $SC_jperijb_I55 = jperijb%dim_2%SM
 3651.          $SC_jperijb_I54 = jperijb%dim_2%EX
 3651.          $SC_jperijb_I56 = jperijb%dim_2%LB
 3650.          $SC_iperijb_I47 = iperijb%dim_1%EX
 3650.          $SC_iperijb_I48 = iperijb%dim_1%LB
 3650.          $SC_iperijb_I50 = iperijb%dim_2%SM
 3650.          $SC_iperijb_I49 = iperijb%dim_2%EX
 3650.          $SC_iperijb_I51 = iperijb%dim_2%LB
 3649.          $SC_ibmaxperjb_I45 = ibmaxperjb%dim_1%EX
 3649.          $SC_ibmaxperjb_I46 = ibmaxperjb%dim_1%LB
 3648.          $I_L3648_140 = 0
 3648. !$omp do schedule(static)
 3648.          do
 3649.             $t_S6 = (ibmaxperjb%base_addr)(1 + $I_L3648_140, 0)
 3649.             if ( $t_S6 > 0 ) then
 3649.                $I_L3649_128 = 0
 3649. !dir$ ivdep
 3649.                do
 3650.                   $$_i = (iperijb%base_addr)(1 + $I_L3649_128, 1 + $I_L3648_140, 0)
 3651.                   $$_j = (jperijb%base_addr)(1 + $I_L3649_128, 1 + $I_L3648_140, 0)
 3652.                   fieldout(1 + $I_L3649_128, 1 + $I_L3648_140) = fieldin($$_i, $$_j)
 3653.                   $I_L3649_128 = 1 + $I_L3649_128
 3649.                   if ( $I_L3649_128 >= $t_S6 ) exit
 3649.                enddo
 3649.             endif
 3654.             $I_L3648_140 = 1 + $I_L3648_140
 3653.             if ( $I_L3648_140 >= jbmax ) exit
 3653.          enddo
 3655.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3655.       endif
 3618.       _free( t$469 )
 3657.       return
 3657.       end
 3657.       
 3660.       
 3660.       subroutine nearestijtoibjb_i3d( fieldin, fieldout )
 3660.       t$197 = imax
 3660.       t$198 = kmax
 3660.       t$199 = jmax
 3661.       t$472 = _zla( 0, imax )
 3660.       t$473 = _zla( 0, imax )
 3661.       t$474 = _zla( 0, kmax )
 3660.       t$475 = _zla( 0, imax ) * _zla( 0, kmax )
 3661.       t$476 = _zla( 0, jmax )
 3660.       t$477 = _zla( 0, imax ) * _zla( 0, kmax ) * _zla( 0, jmax )
 3660.       t$200 = ibmax
 3660.       t$201 = jbmax
 3662.       t$478 = _zla( 0, ibmax )
 3660.       t$479 = _zla( 0, ibmax )
 3660.       t$480 = _zla( 0, kmax ) * _zla( 0, ibmax )
 3662.       t$481 = _zla( 0, jbmax )
 3660.       t$482 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
 3664.       t$485 = 4 * _zla( 0, imax )
 3660.       t$483 = int( _alloc( 4 * _zla( 0, imax ) ), 8 )
 3664.       t$484 = t$483
 3674.       if ( reducedgrid ) then
 3676.          if ( mylastlat + -myfirstlat >= 0 ) then
 3675.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3675.             $$_fout_BASE = _alloc( 8 * _rsh( 63 + 32 * _zla( 0, imax ), 6 ) )
 3675.             $pvt_Abase_seg17_D0 = $$_fout_BASE
 3675.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3679.             if ( kmax > 0 ) then
 3684.                $SC_jbperij_I40 = jbperij%dim_1%EX
 3684.                $SC_jbperij_I41 = jbperij%dim_1%LB
 3684.                $SC_jbperij_I43 = jbperij%dim_2%SM
 3684.                $SC_jbperij_I42 = jbperij%dim_2%EX
 3684.                $SC_jbperij_I44 = jbperij%dim_2%LB
 3683.                $SC_ibperij_I35 = ibperij%dim_1%EX
 3683.                $SC_ibperij_I36 = ibperij%dim_1%LB
 3683.                $SC_ibperij_I38 = ibperij%dim_2%SM
 3683.                $SC_ibperij_I37 = ibperij%dim_2%EX
 3683.                $SC_ibperij_I39 = ibperij%dim_2%LB
 3680.                $SC_imaxperj_I33 = imaxperj%dim_1%EX
 3680.                $SC_imaxperj_I34 = imaxperj%dim_1%LB
 3678.                $SC_mylastlon_I31 = mylastlon%dim_1%EX
 3678.                $SC_mylastlon_I32 = mylastlon%dim_1%LB
 3677.                $SC_myfirstlon_I29 = myfirstlon%dim_1%EX
 3677.                $SC_myfirstlon_I30 = myfirstlon%dim_1%LB
 3676.                $I_L3676_162 = 0
 3676. !$omp do schedule(static)
 3676.                do
 3677.                   $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3676_162, 0)
 3678.                   $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3676_162, 0)
 3680.                   $SC_imaxperj_I6 = (imaxperj%base_addr)(myfirstlat + $I_L3676_162, 0)
 3679.                   $I_L3679_158 = 0
 3679.                   do
 3680.                      t$215 = imax
 3680.                      t$516 = max( 0, imax )
 3680.                      t$216 = $SC_imaxperj_I6
 3680.                      t$517 = max( 0, $SC_imaxperj_I6 )
 3680.                      t$520 = 4 * $SC_imaxperj_I6
 3680.                      t$518 = int( _alloc( 4 * $SC_imaxperj_I6 ), 8 )
 3680.                      t$519 = t$518
 3680.                      $$_iratio = imax / $SC_imaxperj_I6
 3680.                      if ( -imax + $$_iratio * $SC_imaxperj_I6 == 0 ) then
 3680.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 3680.                            $I_L3680_142 = 0
 3680. !dir$ ivdep
 3680.                            do
 3680.                               $$_fout($$_ifirst + $I_L3680_142) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3680_142 + 1, 1 + $I_L3679_158, myfirstlat + $I_L3676_162)
 3680.                               $I_L3680_142 = 1 + $I_L3680_142
 3680.                               if ( $I_L3680_142 >= $$_ilast + -$$_ifirst + 1 ) exit
 3680.                            enddo
 3680.                         endif
 3680.                         _free( t$518 )
 3680.                      else if ( imax <= 0 ) then
 3680.                          _substr(t$1725,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3680.                         call _stop(  _substr(t$1725,1,48) )
 3680.                      else if ( ( 2 + int( real( -1 + $SC_imaxperj_I6, 8 ) * ( real( imax, 8 ) * 1.0/( real( $SC_imaxperj_I6, 8 ) ) ) ) ) > 1 + imax ) then
 3680.                          _substr(t$1726,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3680.                         call _stop(  _substr(t$1726,1,64) )
 3680.                      else
 3680.                         $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3680.                         $$_hout = ( 6.2831853071795862 * 1.0/$SC_imaxperj_I6 )
 3680.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 3680.                            $I_L3680_154 = 0
 3680. !dir$ ivdep
 3680.                            do
 3680.                               $$_alfaout = ( $$_ifirst + $I_L3680_154 + -1 ) * $$_hout
 3680.                               $$_difalfa = 9.99999986991104e14
 3680.                               $I_L3680_144 = 0
 3680.                               do
 3680.                                  $alfain_S4 = real( $I_L3680_144, 8 ) * $$_hin
 3680.                                  $$_difalfa = min( $$_difalfa, abs( $alfain_S4 + -$$_alfaout ) )
 3680.                                  $I_L3680_144 = 1 + $I_L3680_144
 3680.                                  if ( $I_L3680_144 >= imax ) exit
 3680.                               enddo
 3680.                               $I_L3680_146 = 0
 3680.                               do
 3680.                                  $$_alfain = real( $I_L3680_146, 8 ) * $$_hin
 3680.                                  if ( abs( $$_alfain + -$$_alfaout ) == $$_difalfa ) then
 3680.                                     $$_fout($$_ifirst + $I_L3680_154) = fieldin(1 + $I_L3680_146, 1 + $I_L3679_158, myfirstlat + $I_L3676_162)
 3680.                                  endif
 3680.                                  $I_L3680_146 = 1 + $I_L3680_146
 3680.                                  if ( $I_L3680_146 >= imax ) exit
 3680.                               enddo
 3680.                               $I_L3680_154 = 1 + $I_L3680_154
 3680.                               if ( $I_L3680_154 >= $$_ilast + -$$_ifirst + 1 ) exit
 3680.                            enddo
 3680.                         endif
 3680.                         _free( t$518 )
 3680.                      endif
 3682.                      if ( $$_ilast + -$$_ifirst >= 0 ) then
 3682.                         $I_L3682_148 = 0
 3682. !dir$ ivdep
 3682.                         do
 3683.                            $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3682_148, myfirstlat + $I_L3676_162, 0)
 3684.                            $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3682_148, myfirstlat + $I_L3676_162, 0)
 3685.                            fieldout($$_ib, 1 + $I_L3679_158, $$_jb) = $$_fout($$_ifirst + $I_L3682_148)
 3686.                            $I_L3682_148 = 1 + $I_L3682_148
 3682.                            if ( $I_L3682_148 >= $$_ilast + -$$_ifirst + 1 ) exit
 3682.                         enddo
 3682.                      endif
 3687.                      $I_L3679_158 = 1 + $I_L3679_158
 3686.                      if ( $I_L3679_158 >= kmax ) exit
 3686.                   enddo
 3688.                   $I_L3676_162 = 1 + $I_L3676_162
 3687.                   if ( $I_L3676_162 >= mylastlat + -myfirstlat + 1 ) exit
 3687.                enddo
 3687.             else
 3676.                $I_L3676_150 = 0
 3676. !$omp do schedule(static)
 3676.                do
 3688.                   $I_L3676_150 = 1 + $I_L3676_150
 3687.                   if ( $I_L3676_150 >= mylastlat + -myfirstlat + 1 ) exit
 3687.                enddo
 3687.             endif
 3675.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3675.             _free( $pvt_Abase_seg17_D0 )
 3689.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3689.          endif
 3689.       else if ( jbmax > 0 ) then
 3691.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3695.          $SC_jperijb_I52 = jperijb%dim_1%EX
 3695.          $SC_jperijb_I53 = jperijb%dim_1%LB
 3695.          $SC_jperijb_I55 = jperijb%dim_2%SM
 3695.          $SC_jperijb_I54 = jperijb%dim_2%EX
 3695.          $SC_jperijb_I56 = jperijb%dim_2%LB
 3694.          $SC_iperijb_I47 = iperijb%dim_1%EX
 3694.          $SC_iperijb_I48 = iperijb%dim_1%LB
 3694.          $SC_iperijb_I50 = iperijb%dim_2%SM
 3694.          $SC_iperijb_I49 = iperijb%dim_2%EX
 3694.          $SC_iperijb_I51 = iperijb%dim_2%LB
 3693.          $SC_ibmaxperjb_I45 = ibmaxperjb%dim_1%EX
 3693.          $SC_ibmaxperjb_I46 = ibmaxperjb%dim_1%LB
 3692.          $I_L3692_160 = 0
 3692. !$omp do schedule(static)
 3692.          do
 3693.             $t_S9 = (ibmaxperjb%base_addr)(1 + $I_L3692_160, 0)
 3693.             if ( $t_S9 > 0 ) then
 3693.                $I_L3693_156 = 0
 3693.                do
 3694.                   $$_i = (iperijb%base_addr)(1 + $I_L3693_156, 1 + $I_L3692_160, 0)
 3695.                   $$_j = (jperijb%base_addr)(1 + $I_L3693_156, 1 + $I_L3692_160, 0)
 3696.                   $F_A33 = kmax
 3696.                   if ( kmax > 0 ) then
 3696.                      $I_L3696_152 = 0
 3696. !dir$ ivdep
 3696.                      do
 3696.                         fieldout(1 + $I_L3693_156, 1 + $I_L3696_152, 1 + $I_L3692_160) = fieldin($$_i, 1 + $I_L3696_152, $$_j)
 3696.                         $I_L3696_152 = 1 + $I_L3696_152
 3696.                         if ( $I_L3696_152 >= $F_A33 ) exit
 3696.                      enddo
 3696.                   endif
 3697.                   $I_L3693_156 = 1 + $I_L3693_156
 3693.                   if ( $I_L3693_156 >= $t_S9 ) exit
 3693.                enddo
 3693.             endif
 3698.             $I_L3692_160 = 1 + $I_L3692_160
 3697.             if ( $I_L3692_160 >= jbmax ) exit
 3697.          enddo
 3699.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3699.       endif
 3660.       _free( t$483 )
 3701.       return
 3701.       end
 3701.       
 3705.       
 3705.       subroutine nearestijtoibjb_r3d( fieldin, fieldout )
 3705.       t$202 = imax
 3705.       t$203 = kmax
 3705.       t$204 = jmax
 3706.       t$486 = _zla( 0, imax )
 3705.       t$487 = _zla( 0, imax )
 3706.       t$488 = _zla( 0, kmax )
 3705.       t$489 = _zla( 0, imax ) * _zla( 0, kmax )
 3706.       t$490 = _zla( 0, jmax )
 3705.       t$491 = _zla( 0, imax ) * _zla( 0, kmax ) * _zla( 0, jmax )
 3705.       t$205 = ibmax
 3705.       t$206 = jbmax
 3707.       t$492 = _zla( 0, ibmax )
 3705.       t$493 = _zla( 0, ibmax )
 3705.       t$494 = _zla( 0, kmax ) * _zla( 0, ibmax )
 3707.       t$495 = _zla( 0, jbmax )
 3705.       t$496 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
 3709.       t$499 = 8 * _zla( 0, imax )
 3705.       t$497 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 3709.       t$498 = t$497
 3719.       if ( reducedgrid ) then
 3721.          if ( mylastlat + -myfirstlat >= 0 ) then
 3720.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3720.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 3720.             $pvt_Abase_seg16_D0 = $$_fout_BASE
 3720.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 3724.             if ( kmax <= 0 ) then
 3721.                $I_L3721_172 = 0
 3721. !$omp do schedule(static)
 3721.                do
 3733.                   $I_L3721_172 = 1 + $I_L3721_172
 3732.                   if ( $I_L3721_172 >= mylastlat + -myfirstlat + 1 ) exit
 3732.                enddo
 3732.             else if ( imax <= 0 ) then
 3729.                $SC_jbperij_I41 = jbperij%dim_1%EX
 3729.                $SC_jbperij_I42 = jbperij%dim_1%LB
 3729.                $SC_jbperij_I44 = jbperij%dim_2%SM
 3729.                $SC_jbperij_I43 = jbperij%dim_2%EX
 3729.                $SC_jbperij_I45 = jbperij%dim_2%LB
 3728.                $SC_ibperij_I36 = ibperij%dim_1%EX
 3728.                $SC_ibperij_I37 = ibperij%dim_1%LB
 3728.                $SC_ibperij_I39 = ibperij%dim_2%SM
 3728.                $SC_ibperij_I38 = ibperij%dim_2%EX
 3728.                $SC_ibperij_I40 = ibperij%dim_2%LB
 3725.                $SC_imaxperj_I34 = imaxperj%dim_1%EX
 3725.                $SC_imaxperj_I35 = imaxperj%dim_1%LB
 3723.                $SC_mylastlon_I32 = mylastlon%dim_1%EX
 3723.                $SC_mylastlon_I33 = mylastlon%dim_1%LB
 3722.                $SC_myfirstlon_I30 = myfirstlon%dim_1%EX
 3722.                $SC_myfirstlon_I31 = myfirstlon%dim_1%LB
 3721.                $I_L3721_190 = 0
 3721. !$omp do schedule(static)
 3721.                do
 3722.                   $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3721_190, 0)
 3723.                   $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3721_190, 0)
 3725.                   $SC_imaxperj_I6 = (imaxperj%base_addr)(myfirstlat + $I_L3721_190, 0)
 3727.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 3724.                      $I_L3724_184 = 0
 3724.                      do
 3725.                         t$217 = imax
 3725.                         t$521 = max( 0, imax )
 3725.                         t$218 = $SC_imaxperj_I6
 3725.                         t$522 = max( 0, $SC_imaxperj_I6 )
 3725.                          _substr(t$1737,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3725.                         call _stop(  _substr(t$1737,1,48) )
 3727.                         $I_L3727_168 = 0
 3727. !dir$ ivdep
 3727.                         do
 3728.                            $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3727_168, myfirstlat + $I_L3721_190, 0)
 3729.                            $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3727_168, myfirstlat + $I_L3721_190, 0)
 3730.                            fieldout($$_ib, 1 + $I_L3724_184, $$_jb) = $$_fout($$_ifirst + $I_L3727_168)
 3731.                            $I_L3727_168 = 1 + $I_L3727_168
 3727.                            if ( $I_L3727_168 >= $$_ilast + -$$_ifirst + 1 ) exit
 3727.                         enddo
 3732.                         $I_L3724_184 = 1 + $I_L3724_184
 3731.                         if ( $I_L3724_184 >= kmax ) exit
 3731.                      enddo
 3731.                   else
 3724.                      $I_L3724_170 = 0
 3724.                      do
 3725.                         t$217 = imax
 3725.                         t$521 = max( 0, imax )
 3725.                         t$218 = $SC_imaxperj_I6
 3725.                         t$522 = max( 0, $SC_imaxperj_I6 )
 3725.                          _substr(t$1737,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3725.                         call _stop(  _substr(t$1737,1,48) )
 3732.                         $I_L3724_170 = 1 + $I_L3724_170
 3731.                         if ( $I_L3724_170 >= kmax ) exit
 3731.                      enddo
 3731.                   endif
 3733.                   $I_L3721_190 = 1 + $I_L3721_190
 3732.                   if ( $I_L3721_190 >= mylastlat + -myfirstlat + 1 ) exit
 3732.                enddo
 3732.             else
 3729.                $SC_jbperij_I41 = jbperij%dim_1%EX
 3729.                $SC_jbperij_I42 = jbperij%dim_1%LB
 3729.                $SC_jbperij_I44 = jbperij%dim_2%SM
 3729.                $SC_jbperij_I43 = jbperij%dim_2%EX
 3729.                $SC_jbperij_I45 = jbperij%dim_2%LB
 3728.                $SC_ibperij_I36 = ibperij%dim_1%EX
 3728.                $SC_ibperij_I37 = ibperij%dim_1%LB
 3728.                $SC_ibperij_I39 = ibperij%dim_2%SM
 3728.                $SC_ibperij_I38 = ibperij%dim_2%EX
 3728.                $SC_ibperij_I40 = ibperij%dim_2%LB
 3725.                $SC_imaxperj_I34 = imaxperj%dim_1%EX
 3725.                $SC_imaxperj_I35 = imaxperj%dim_1%LB
 3723.                $SC_mylastlon_I32 = mylastlon%dim_1%EX
 3723.                $SC_mylastlon_I33 = mylastlon%dim_1%LB
 3722.                $SC_myfirstlon_I30 = myfirstlon%dim_1%EX
 3722.                $SC_myfirstlon_I31 = myfirstlon%dim_1%LB
 3721.                $I_L3721_196 = 0
 3721. !$omp do schedule(static)
 3721.                do
 3722.                   $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L3721_196, 0)
 3723.                   $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L3721_196, 0)
 3725.                   $SC_imaxperj_I6 = (imaxperj%base_addr)(myfirstlat + $I_L3721_196, 0)
 3724.                   $I_L3724_194 = 0
 3724.                   do
 3725.                      t$217 = imax
 3725.                      t$521 = max( 0, imax )
 3725.                      t$218 = $SC_imaxperj_I6
 3725.                      t$522 = max( 0, $SC_imaxperj_I6 )
 3725.                      $$_iratio = imax / $SC_imaxperj_I6
 3725.                      if ( -imax + $$_iratio * $SC_imaxperj_I6 == 0 ) then
 3725.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 3725.                            $I_L3725_174 = 0
 3725. !dir$ ivdep
 3725.                            do
 3725.                               $$_fout($$_ifirst + $I_L3725_174) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L3725_174 + 1, 1 + $I_L3724_194, myfirstlat + $I_L3721_196)
 3725.                               $I_L3725_174 = 1 + $I_L3725_174
 3725.                               if ( $I_L3725_174 >= $$_ilast + -$$_ifirst + 1 ) exit
 3725.                            enddo
 3725.                         endif
 3725.                      else if ( ( 2 + int( real( -1 + $SC_imaxperj_I6, 8 ) * ( real( imax, 8 ) * 1.0/( real( $SC_imaxperj_I6, 8 ) ) ) ) ) > 1 + imax ) then
 3725.                          _substr(t$1742,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3725.                         call _stop(  _substr(t$1742,1,64) )
 3725.                      else
 3725.                         $$_hin = ( 6.2831853071795862 * 1.0/imax )
 3725.                         $$_hout = ( 6.2831853071795862 * 1.0/$SC_imaxperj_I6 )
 3725.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 3725.                            if ( -2 + imax >= 0 ) then
 3725.                               $I_L3725_188 = 0
 3725. !dir$ ivdep
 3725.                               do
 3725.                                  $$_alfaout = ( $$_ifirst + $I_L3725_188 + -1 ) * $$_hout
 3725.                                  $$_difalfa = min( ( ( $$_ifirst + $I_L3725_188 + -1 ) * $$_hout ), 6.2831853071795862 + -( ( $$_ifirst + $I_L3725_188 + -1 ) * $$_hout ) )
 3725.                                  $$_lonout = 1
 3725.                                  $I_L3725_176 = 0
 3725.                                  do
 3725.                                     $$_difinout = abs( ( ( 1 + $I_L3725_176 ) * $$_hin ) + -$$_alfaout )
 3725.                                     if ( abs( ( ( 1 + $I_L3725_176 ) * $$_hin ) + -$$_alfaout ) < $$_difalfa ) then
 3725.                                        $$_difalfa = $$_difinout
 3725.                                        $$_lonout = ( 2 + $I_L3725_176 )
 3725.                                     endif
 3725.                                     $I_L3725_176 = 1 + $I_L3725_176
 3725.                                     if ( $I_L3725_176 >= -1 + imax ) exit
 3725.                                  enddo
 3725.                                  $$_fout($$_ifirst + $I_L3725_188) = fieldin($$_lonout, 1 + $I_L3724_194, myfirstlat + $I_L3721_196)
 3725.                                  $I_L3725_188 = 1 + $I_L3725_188
 3725.                                  if ( $I_L3725_188 >= $$_ilast + -$$_ifirst + 1 ) exit
 3725.                               enddo
 3725.                            else
 3725.                               $SC_fieldin_I29 = fieldin(1, 1 + $I_L3724_194, myfirstlat + $I_L3721_196)
 3725.                               $I_L3725_178 = 0
 3725. !dir$ ivdep
 3725.                               do
 3725.                                  $$_fout($$_ifirst + $I_L3725_178) = $SC_fieldin_I29
 3725.                                  $I_L3725_178 = 1 + $I_L3725_178
 3725.                                  if ( $I_L3725_178 >= $$_ilast + -$$_ifirst + 1 ) exit
 3725.                               enddo
 3725.                            endif
 3725.                         endif
 3725.                      endif
 3727.                      if ( $$_ilast + -$$_ifirst >= 0 ) then
 3727.                         $I_L3727_180 = 0
 3727. !dir$ ivdep
 3727.                         do
 3728.                            $$_ib = (ibperij%base_addr)($$_ifirst + $I_L3727_180, myfirstlat + $I_L3721_196, 0)
 3729.                            $$_jb = (jbperij%base_addr)($$_ifirst + $I_L3727_180, myfirstlat + $I_L3721_196, 0)
 3730.                            fieldout($$_ib, 1 + $I_L3724_194, $$_jb) = $$_fout($$_ifirst + $I_L3727_180)
 3731.                            $I_L3727_180 = 1 + $I_L3727_180
 3727.                            if ( $I_L3727_180 >= $$_ilast + -$$_ifirst + 1 ) exit
 3727.                         enddo
 3727.                      endif
 3732.                      $I_L3724_194 = 1 + $I_L3724_194
 3731.                      if ( $I_L3724_194 >= kmax ) exit
 3731.                   enddo
 3733.                   $I_L3721_196 = 1 + $I_L3721_196
 3732.                   if ( $I_L3721_196 >= mylastlat + -myfirstlat + 1 ) exit
 3732.                enddo
 3732.             endif
 3720.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 3720.             _free( $pvt_Abase_seg16_D0 )
 3734.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3734.          endif
 3734.       else if ( jbmax > 0 ) then
 3736.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3740.          $SC_jperijb_I53 = jperijb%dim_1%EX
 3740.          $SC_jperijb_I54 = jperijb%dim_1%LB
 3740.          $SC_jperijb_I56 = jperijb%dim_2%SM
 3740.          $SC_jperijb_I55 = jperijb%dim_2%EX
 3740.          $SC_jperijb_I57 = jperijb%dim_2%LB
 3739.          $SC_iperijb_I48 = iperijb%dim_1%EX
 3739.          $SC_iperijb_I49 = iperijb%dim_1%LB
 3739.          $SC_iperijb_I51 = iperijb%dim_2%SM
 3739.          $SC_iperijb_I50 = iperijb%dim_2%EX
 3739.          $SC_iperijb_I52 = iperijb%dim_2%LB
 3738.          $SC_ibmaxperjb_I46 = ibmaxperjb%dim_1%EX
 3738.          $SC_ibmaxperjb_I47 = ibmaxperjb%dim_1%LB
 3737.          $I_L3737_192 = 0
 3737. !$omp do schedule(static)
 3737.          do
 3738.             $t_S7 = (ibmaxperjb%base_addr)(1 + $I_L3737_192, 0)
 3738.             if ( $t_S7 > 0 ) then
 3738.                $I_L3738_186 = 0
 3738.                do
 3739.                   $$_i = (iperijb%base_addr)(1 + $I_L3738_186, 1 + $I_L3737_192, 0)
 3740.                   $$_j = (jperijb%base_addr)(1 + $I_L3738_186, 1 + $I_L3737_192, 0)
 3741.                   $F_A33 = kmax
 3741.                   if ( kmax > 0 ) then
 3741.                      $I_L3741_182 = 0
 3741. !dir$ ivdep
 3741.                      do
 3741.                         fieldout(1 + $I_L3738_186, 1 + $I_L3741_182, 1 + $I_L3737_192) = fieldin($$_i, 1 + $I_L3741_182, $$_j)
 3741.                         $I_L3741_182 = 1 + $I_L3741_182
 3741.                         if ( $I_L3741_182 >= $F_A33 ) exit
 3741.                      enddo
 3741.                   endif
 3742.                   $I_L3738_186 = 1 + $I_L3738_186
 3738.                   if ( $I_L3738_186 >= $t_S7 ) exit
 3738.                enddo
 3738.             endif
 3743.             $I_L3737_192 = 1 + $I_L3737_192
 3742.             if ( $I_L3737_192 >= jbmax ) exit
 3742.          enddo
 3744.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3744.       endif
 3705.       _free( t$497 )
 3746.       return
 3746.       end
 3746.       
 3749.       
 3749.       subroutine nearestibjbtoij_i2d( fieldin, fieldout )
 3749.       t$207 = ibmax
 3749.       t$208 = jbmax
 3750.       t$500 = _zla( 0, ibmax )
 3749.       t$501 = _zla( 0, ibmax )
 3750.       t$502 = _zla( 0, jbmax )
 3749.       t$503 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3749.       t$209 = imax
 3749.       t$210 = jmax
 3751.       t$504 = _zla( 0, imax )
 3749.       t$505 = _zla( 0, imax )
 3751.       t$506 = _zla( 0, jmax )
 3749.       t$507 = _zla( 0, imax ) * _zla( 0, jmax )
 3762.       if ( reducedgrid ) then
 3764.          if ( mylastlat + -myfirstlat >= 0 ) then
 3763.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3764.             $I_L3764_46 = 0
 3764. !$omp do schedule(static)
 3764.             do
 3770.                $I_L3764_46 = 1 + $I_L3764_46
 3764.                if ( $I_L3764_46 >= mylastlat + -myfirstlat + 1 ) exit
 3764.             enddo
 3771.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3771.          endif
 3771.       else if ( jbmax > 0 ) then
 3773.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3777.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3777.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3777.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3777.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3777.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3776.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3776.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3776.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3776.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3776.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3775.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3775.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3774.          $I_L3774_50 = 0
 3774. !$omp do schedule(static)
 3774.          do
 3775.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L3774_50, 0)
 3775.             if ( $t_S2 > 0 ) then
 3775.                $I_L3775_48 = 0
 3775. !dir$ ivdep
 3775.                do
 3776.                   $$_i = (iperijb%base_addr)(1 + $I_L3775_48, 1 + $I_L3774_50, 0)
 3777.                   $$_j = (jperijb%base_addr)(1 + $I_L3775_48, 1 + $I_L3774_50, 0) + -myfirstlat + 1
 3778.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L3775_48, 1 + $I_L3774_50)
 3779.                   $I_L3775_48 = 1 + $I_L3775_48
 3775.                   if ( $I_L3775_48 >= $t_S2 ) exit
 3775.                enddo
 3775.             endif
 3780.             $I_L3774_50 = 1 + $I_L3774_50
 3779.             if ( $I_L3774_50 >= jbmax ) exit
 3779.          enddo
 3781.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3781.       endif
 3783.       return
 3783.       end
 3783.       
 3786.       
 3786.       subroutine nearestibjbtoij_r2d( fieldin, fieldout )
 3786.       t$211 = ibmax
 3786.       t$212 = jbmax
 3787.       t$508 = _zla( 0, ibmax )
 3786.       t$509 = _zla( 0, ibmax )
 3787.       t$510 = _zla( 0, jbmax )
 3786.       t$511 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3786.       t$213 = imax
 3786.       t$214 = jmax
 3788.       t$512 = _zla( 0, imax )
 3786.       t$513 = _zla( 0, imax )
 3788.       t$514 = _zla( 0, jmax )
 3786.       t$515 = _zla( 0, imax ) * _zla( 0, jmax )
 3799.       if ( reducedgrid ) then
 3801.          if ( mylastlat + -myfirstlat >= 0 ) then
 3800.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3801.             $I_L3801_46 = 0
 3801. !$omp do schedule(static)
 3801.             do
 3807.                $I_L3801_46 = 1 + $I_L3801_46
 3801.                if ( $I_L3801_46 >= mylastlat + -myfirstlat + 1 ) exit
 3801.             enddo
 3808.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 3808.          endif
 3808.       else if ( jbmax > 0 ) then
 3810.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 3814.          $SC_jperijb_I19 = jperijb%dim_1%EX
 3814.          $SC_jperijb_I20 = jperijb%dim_1%LB
 3814.          $SC_jperijb_I22 = jperijb%dim_2%SM
 3814.          $SC_jperijb_I21 = jperijb%dim_2%EX
 3814.          $SC_jperijb_I23 = jperijb%dim_2%LB
 3813.          $SC_iperijb_I14 = iperijb%dim_1%EX
 3813.          $SC_iperijb_I15 = iperijb%dim_1%LB
 3813.          $SC_iperijb_I17 = iperijb%dim_2%SM
 3813.          $SC_iperijb_I16 = iperijb%dim_2%EX
 3813.          $SC_iperijb_I18 = iperijb%dim_2%LB
 3812.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 3812.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 3811.          $I_L3811_50 = 0
 3811. !$omp do schedule(static)
 3811.          do
 3812.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L3811_50, 0)
 3812.             if ( $t_S2 > 0 ) then
 3812.                $I_L3812_48 = 0
 3812. !dir$ ivdep
 3812.                do
 3813.                   $$_i = (iperijb%base_addr)(1 + $I_L3812_48, 1 + $I_L3811_50, 0)
 3814.                   $$_j = (jperijb%base_addr)(1 + $I_L3812_48, 1 + $I_L3811_50, 0) + -myfirstlat + 1
 3815.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L3812_48, 1 + $I_L3811_50)
 3816.                   $I_L3812_48 = 1 + $I_L3812_48
 3812.                   if ( $I_L3812_48 >= $t_S2 ) exit
 3812.                enddo
 3812.             endif
 3817.             $I_L3811_50 = 1 + $I_L3811_50
 3816.             if ( $I_L3811_50 >= jbmax ) exit
 3816.          enddo
 3818.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 3818.       endif
 3820.       return
 3820.       end
 3820.       
 3822.       
 3822.       subroutine cyclicnearest_i( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3822.       t$215 = dimin
 3828.       t$516 = _zla( 0, dimin )
 3822.       t$216 = dimout
 3829.       t$517 = _zla( 0, dimout )
 3842.       t$520 = 4 * _zla( 0, dimout )
 3822.       t$518 = int( _alloc( 4 * _zla( 0, dimout ) ), 8 )
 3842.       t$519 = t$518
 3846.       $iratio_S0 = dimin / dimout
 3847.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 3848.          if ( ilast + -ifirst >= 0 ) then
 3848.             $I_L3848_16 = 0
 3848. !dir$ ivdep
 3848.             do
 3850.                fieldout(ifirst + $I_L3848_16) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L3848_16 + 1)
 3851.                $I_L3848_16 = 1 + $I_L3848_16
 3848.                if ( $I_L3848_16 >= ilast + -ifirst + 1 ) exit
 3848.             enddo
 3848.          endif
 3822.          _free( t$518 )
 3853.       else if ( dimin <= 0 ) then
 3858.           _substr(t$1725,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3858.          call _stop(  _substr(t$1725,1,48) )
 3858.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 3866.           _substr(t$1726,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3866.          call _stop(  _substr(t$1726,1,64) )
 3866.       else
 3872.          $hin_S6 = ( 6.2831853071795862 * 1.0/dimin )
 3873.          $hout_S2 = ( 6.2831853071795862 * 1.0/dimout )
 3879.          if ( ilast + -ifirst >= 0 ) then
 3879.             $I_L3879_22 = 0
 3879. !dir$ ivdep
 3879.             do
 3880.                $alfaout_S4 = ( ifirst + $I_L3879_22 + -1 ) * $hout_S2
 3881.                difalfa = 9.99999986991104e14
 3883.                $I_L3883_18 = 0
 3883.                do
 3885.                   $alfain_S5 = real( $I_L3883_18, 8 ) * $hin_S6
 3884.                   difalfa = min( difalfa, abs( $alfain_S5 + -$alfaout_S4 ) )
 3886.                   $I_L3883_18 = 1 + $I_L3883_18
 3883.                   if ( $I_L3883_18 >= dimin ) exit
 3883.                enddo
 3888.                $I_L3888_20 = 0
 3888.                do
 3893.                   $alfain_S8 = real( $I_L3888_20, 8 ) * $hin_S6
 3889.                   if ( abs( $alfain_S8 + -$alfaout_S4 ) == difalfa ) then
 3891.                      fieldout(ifirst + $I_L3879_22) = fieldin(1 + $I_L3888_20)
 3891.                   endif
 3894.                   $I_L3888_20 = 1 + $I_L3888_20
 3892.                   if ( $I_L3888_20 >= dimin ) exit
 3892.                enddo
 3895.                $I_L3879_22 = 1 + $I_L3879_22
 3894.                if ( $I_L3879_22 >= ilast + -ifirst + 1 ) exit
 3894.             enddo
 3894.          endif
 3822.          _free( t$518 )
 3822.       endif
 3897.       return
 3897.       end
 3897.       
 3901.       
 3901.       subroutine cyclicnearest_r( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3901.       t$217 = dimin
 3907.       t$521 = _zla( 0, dimin )
 3901.       t$218 = dimout
 3908.       t$522 = _zla( 0, dimout )
 3925.       if ( dimin <= 0 ) then
 3926.           _substr(t$1737,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 3926.          call _stop(  _substr(t$1737,1,48) )
 3926.       else
 3931.          $iratio_S0 = dimin / dimout
 3932.          if ( -dimin + dimout * $iratio_S0 == 0 ) then
 3933.             if ( ilast + -ifirst >= 0 ) then
 3933.                $I_L3933_22 = 0
 3933. !dir$ ivdep
 3933.                do
 3935.                   fieldout(ifirst + $I_L3933_22) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L3933_22 + 1)
 3936.                   $I_L3933_22 = 1 + $I_L3933_22
 3933.                   if ( $I_L3933_22 >= ilast + -ifirst + 1 ) exit
 3933.                enddo
 3933.             endif
 3938.          else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 3945.              _substr(t$1742,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 3945.             call _stop(  _substr(t$1742,1,64) )
 3945.          else
 3951.             $hin_S5 = ( 6.2831853071795862 * 1.0/dimin )
 3952.             $hout_S2 = ( 6.2831853071795862 * 1.0/dimout )
 3956.             if ( ilast + -ifirst >= 0 ) then
 3961.                if ( -2 + dimin >= 0 ) then
 3956.                   $I_L3956_28 = 0
 3956. !dir$ ivdep
 3956.                   do
 3957.                      $alfaout_S4 = ( ifirst + $I_L3956_28 + -1 ) * $hout_S2
 3959.                      $difalfa_S7 = min( ( ( ifirst + $I_L3956_28 + -1 ) * $hout_S2 ), 6.2831853071795862 + -( ( ifirst + $I_L3956_28 + -1 ) * $hout_S2 ) )
 3960.                      $lonout_S9 = 1
 3961.                      $I_L3961_24 = 0
 3961.                      do
 3963.                         $difinout_S8 = abs( ( ( 1 + $I_L3961_24 ) * $hin_S5 ) + -$alfaout_S4 )
 3964.                         if ( abs( ( ( 1 + $I_L3961_24 ) * $hin_S5 ) + -$alfaout_S4 ) < $difalfa_S7 ) then
 3965.                            $difalfa_S7 = $difinout_S8
 3966.                            $lonout_S9 = ( 2 + $I_L3961_24 )
 3966.                         endif
 3968.                         $I_L3961_24 = 1 + $I_L3961_24
 3967.                         if ( $I_L3961_24 >= -1 + dimin ) exit
 3967.                      enddo
 3969.                      fieldout(ifirst + $I_L3956_28) = fieldin($lonout_S9)
 3970.                      $I_L3956_28 = 1 + $I_L3956_28
 3968.                      if ( $I_L3956_28 >= ilast + -ifirst + 1 ) exit
 3968.                   enddo
 3968.                else
 3969.                   $SC_fieldin_I0 = fieldin(1)
 3956.                   $I_L3956_26 = 0
 3956. !dir$ ivdep
 3956.                   do
 3969.                      fieldout(ifirst + $I_L3956_26) = $SC_fieldin_I0
 3970.                      $I_L3956_26 = 1 + $I_L3956_26
 3968.                      if ( $I_L3956_26 >= ilast + -ifirst + 1 ) exit
 3968.                   enddo
 3968.                endif
 3968.             endif
 3968.          endif
 3968.       endif
 3972.       return
 3972.       end
 3972.       
 3974.       
 3974.       subroutine cyclicnearest_r2( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 3974.       t$219 = dimin
 3980.       t$523 = _zla( 0, dimin )
 3974.       t$220 = dimout
 3981.       t$524 = _zla( 0, dimout )
 3994.       t$527 = 4 * _zla( 0, dimout )
 3974.       t$525 = int( _alloc( 4 * _zla( 0, dimout ) ), 8 )
 3994.       t$526 = t$525
 3998.       $iratio_S0 = dimin / dimout
 3999.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 4000.          if ( ilast + -ifirst >= 0 ) then
 4000.             $I_L4000_16 = 0
 4000. !dir$ ivdep
 4000.             do
 4002.                fieldout(ifirst + $I_L4000_16) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L4000_16 + 1)
 4003.                $I_L4000_16 = 1 + $I_L4000_16
 4000.                if ( $I_L4000_16 >= ilast + -ifirst + 1 ) exit
 4000.             enddo
 4000.          endif
 3974.          _free( t$525 )
 4005.       else if ( dimin <= 0 ) then
 4010.           _substr(t$1754,1,48) = '**(CyclicNearest)** ERROR: Few input data points'
 4010.          call _stop(  _substr(t$1754,1,48) )
 4010.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 4018.           _substr(t$1755,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 4018.          call _stop(  _substr(t$1755,1,64) )
 4018.       else
 4024.          $hin_S6 = ( 6.2831853071795862 * 1.0/dimin )
 4025.          $hout_S2 = ( 6.2831853071795862 * 1.0/dimout )
 4030.          if ( ilast + -ifirst >= 0 ) then
 4030.             $I_L4030_22 = 0
 4030. !dir$ ivdep
 4030.             do
 4031.                $alfaout_S4 = ( ifirst + $I_L4030_22 + -1 ) * $hout_S2
 4032.                difalfa = 9.99999986991104e14
 4034.                $I_L4034_18 = 0
 4034.                do
 4036.                   $alfain_S5 = real( $I_L4034_18, 8 ) * $hin_S6
 4035.                   difalfa = min( difalfa, abs( $alfain_S5 + -$alfaout_S4 ) )
 4037.                   $I_L4034_18 = 1 + $I_L4034_18
 4034.                   if ( $I_L4034_18 >= dimin ) exit
 4034.                enddo
 4039.                $I_L4039_20 = 0
 4039.                do
 4044.                   $alfain_S8 = real( $I_L4039_20, 8 ) * $hin_S6
 4040.                   if ( abs( $alfain_S8 + -$alfaout_S4 ) == difalfa ) then
 4042.                      fieldout(ifirst + $I_L4030_22) = fieldin(1 + $I_L4039_20)
 4042.                   endif
 4045.                   $I_L4039_20 = 1 + $I_L4039_20
 4043.                   if ( $I_L4039_20 >= dimin ) exit
 4043.                enddo
 4046.                $I_L4030_22 = 1 + $I_L4030_22
 4045.                if ( $I_L4030_22 >= ilast + -ifirst + 1 ) exit
 4045.             enddo
 4045.          endif
 3974.          _free( t$525 )
 3974.       endif
 4048.       return
 4048.       end
 4048.       
 4051.       
 4051.       subroutine freqboxijtoibjb_i2d( fieldin, fieldout )
 4051.       t$221 = imax
 4051.       t$222 = jmax
 4052.       t$528 = _zla( 0, imax )
 4051.       t$529 = _zla( 0, imax )
 4052.       t$530 = _zla( 0, jmax )
 4051.       t$531 = _zla( 0, imax ) * _zla( 0, jmax )
 4051.       t$223 = ibmax
 4051.       t$224 = jbmax
 4053.       t$532 = _zla( 0, ibmax )
 4051.       t$533 = _zla( 0, ibmax )
 4053.       t$534 = _zla( 0, jbmax )
 4051.       t$535 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 4055.       t$538 = 8 * _zla( 0, imax )
 4051.       t$536 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 4055.       t$537 = t$536
 4065.       if ( reducedgrid ) then
 4067.          if ( mylastlat + -myfirstlat >= 0 ) then
 4067.             $t_S3 = ( mylastlat + -myfirstlat + 1 )
 4066.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4066.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 4066.             $pvt_Abase_seg15_D0 = $$_fout_BASE
 4066.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 4067.             $t_S1 = myfirstlat
 4067.             $I_L4067_64 = 0
 4067. !$omp do schedule(static)
 4067.             do
 4068.                $$_ifirst = (myfirstlon%base_addr)($t_S1 + $I_L4067_64, 0)
 4069.                $$_ilast = (mylastlon%base_addr)($t_S1 + $I_L4067_64, 0)
 4070.                call cyclicfreqbox_i( imax, (imaxperj%base_addr)($t_S1 + $I_L4067_64, 0), fieldin(1, $t_S1 + $I_L4067_64), $$_fout(1), $$_ifirst, $$_ilast )
 4072.                if ( $$_ilast + -$$_ifirst >= 0 ) then
 4074.                   $SC_jbperij_I27 = jbperij%dim_1%EX
 4074.                   $SC_jbperij_I28 = jbperij%dim_1%LB
 4074.                   $SC_jbperij_I30 = jbperij%dim_2%SM
 4074.                   $SC_jbperij_I29 = jbperij%dim_2%EX
 4074.                   $SC_jbperij_I31 = jbperij%dim_2%LB
 4073.                   $SC_ibperij_I22 = ibperij%dim_1%EX
 4073.                   $SC_ibperij_I23 = ibperij%dim_1%LB
 4073.                   $SC_ibperij_I25 = ibperij%dim_2%SM
 4073.                   $SC_ibperij_I24 = ibperij%dim_2%EX
 4073.                   $SC_ibperij_I26 = ibperij%dim_2%LB
 4072.                   $I_L4072_60 = 0
 4072. !dir$ ivdep
 4072.                   do
 4073.                      $$_ib = (ibperij%base_addr)($$_ifirst + $I_L4072_60, $t_S1 + $I_L4067_64, 0)
 4074.                      $$_jb = (jbperij%base_addr)($$_ifirst + $I_L4072_60, $t_S1 + $I_L4067_64, 0)
 4075.                      fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L4072_60)
 4076.                      $I_L4072_60 = 1 + $I_L4072_60
 4072.                      if ( $I_L4072_60 >= $$_ilast + -$$_ifirst + 1 ) exit
 4072.                   enddo
 4072.                endif
 4077.                $I_L4067_64 = 1 + $I_L4067_64
 4076.                if ( $I_L4067_64 >= $t_S3 ) exit
 4076.             enddo
 4066.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 4066.             _free( $pvt_Abase_seg15_D0 )
 4078.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 4078.          endif
 4078.       else if ( jbmax > 0 ) then
 4080.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4084.          $SC_jperijb_I39 = jperijb%dim_1%EX
 4084.          $SC_jperijb_I40 = jperijb%dim_1%LB
 4084.          $SC_jperijb_I42 = jperijb%dim_2%SM
 4084.          $SC_jperijb_I41 = jperijb%dim_2%EX
 4084.          $SC_jperijb_I43 = jperijb%dim_2%LB
 4083.          $SC_iperijb_I34 = iperijb%dim_1%EX
 4083.          $SC_iperijb_I35 = iperijb%dim_1%LB
 4083.          $SC_iperijb_I37 = iperijb%dim_2%SM
 4083.          $SC_iperijb_I36 = iperijb%dim_2%EX
 4083.          $SC_iperijb_I38 = iperijb%dim_2%LB
 4082.          $SC_ibmaxperjb_I32 = ibmaxperjb%dim_1%EX
 4082.          $SC_ibmaxperjb_I33 = ibmaxperjb%dim_1%LB
 4081.          $I_L4081_66 = 0
 4081. !$omp do schedule(static)
 4081.          do
 4082.             $t_S5 = (ibmaxperjb%base_addr)(1 + $I_L4081_66, 0)
 4082.             if ( $t_S5 > 0 ) then
 4082.                $I_L4082_62 = 0
 4082. !dir$ ivdep
 4082.                do
 4083.                   $$_i = (iperijb%base_addr)(1 + $I_L4082_62, 1 + $I_L4081_66, 0)
 4084.                   $$_j = (jperijb%base_addr)(1 + $I_L4082_62, 1 + $I_L4081_66, 0)
 4085.                   fieldout(1 + $I_L4082_62, 1 + $I_L4081_66) = fieldin($$_i, $$_j)
 4086.                   $I_L4082_62 = 1 + $I_L4082_62
 4082.                   if ( $I_L4082_62 >= $t_S5 ) exit
 4082.                enddo
 4082.             endif
 4087.             $I_L4081_66 = 1 + $I_L4081_66
 4086.             if ( $I_L4081_66 >= jbmax ) exit
 4086.          enddo
 4088.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 4088.       endif
 4051.       _free( t$536 )
 4090.       return
 4090.       end
 4090.       
 4092.       
 4092.       subroutine freqboxijtoibjb_r2d( fieldin, fieldout )
 4092.       t$225 = imax
 4092.       t$226 = jmax
 4093.       t$539 = _zla( 0, imax )
 4092.       t$540 = _zla( 0, imax )
 4093.       t$541 = _zla( 0, jmax )
 4092.       t$542 = _zla( 0, imax ) * _zla( 0, jmax )
 4092.       t$227 = ibmax
 4092.       t$228 = jbmax
 4094.       t$543 = _zla( 0, ibmax )
 4092.       t$544 = _zla( 0, ibmax )
 4094.       t$545 = _zla( 0, jbmax )
 4092.       t$546 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 4096.       t$549 = 8 * _zla( 0, imax )
 4092.       t$547 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 4096.       t$548 = t$547
 4106.       if ( reducedgrid ) then
 4108.          if ( mylastlat + -myfirstlat >= 0 ) then
 4108.             $t_S3 = ( mylastlat + -myfirstlat + 1 )
 4107.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4107.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 4107.             $pvt_Abase_seg15_D0 = $$_fout_BASE
 4107.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 4108.             $t_S1 = myfirstlat
 4108.             $I_L4108_64 = 0
 4108. !$omp do schedule(static)
 4108.             do
 4109.                $$_ifirst = (myfirstlon%base_addr)($t_S1 + $I_L4108_64, 0)
 4110.                $$_ilast = (mylastlon%base_addr)($t_S1 + $I_L4108_64, 0)
 4111.                call cyclicfreqbox_r( imax, (imaxperj%base_addr)($t_S1 + $I_L4108_64, 0), fieldin(1, $t_S1 + $I_L4108_64), $$_fout(1), $$_ifirst, $$_ilast )
 4113.                if ( $$_ilast + -$$_ifirst >= 0 ) then
 4115.                   $SC_jbperij_I27 = jbperij%dim_1%EX
 4115.                   $SC_jbperij_I28 = jbperij%dim_1%LB
 4115.                   $SC_jbperij_I30 = jbperij%dim_2%SM
 4115.                   $SC_jbperij_I29 = jbperij%dim_2%EX
 4115.                   $SC_jbperij_I31 = jbperij%dim_2%LB
 4114.                   $SC_ibperij_I22 = ibperij%dim_1%EX
 4114.                   $SC_ibperij_I23 = ibperij%dim_1%LB
 4114.                   $SC_ibperij_I25 = ibperij%dim_2%SM
 4114.                   $SC_ibperij_I24 = ibperij%dim_2%EX
 4114.                   $SC_ibperij_I26 = ibperij%dim_2%LB
 4113.                   $I_L4113_60 = 0
 4113. !dir$ ivdep
 4113.                   do
 4114.                      $$_ib = (ibperij%base_addr)($$_ifirst + $I_L4113_60, $t_S1 + $I_L4108_64, 0)
 4115.                      $$_jb = (jbperij%base_addr)($$_ifirst + $I_L4113_60, $t_S1 + $I_L4108_64, 0)
 4116.                      fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L4113_60)
 4117.                      $I_L4113_60 = 1 + $I_L4113_60
 4113.                      if ( $I_L4113_60 >= $$_ilast + -$$_ifirst + 1 ) exit
 4113.                   enddo
 4113.                endif
 4118.                $I_L4108_64 = 1 + $I_L4108_64
 4117.                if ( $I_L4108_64 >= $t_S3 ) exit
 4117.             enddo
 4107.             $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 4107.             _free( $pvt_Abase_seg15_D0 )
 4119.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 4119.          endif
 4119.       else if ( jbmax > 0 ) then
 4121.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4125.          $SC_jperijb_I39 = jperijb%dim_1%EX
 4125.          $SC_jperijb_I40 = jperijb%dim_1%LB
 4125.          $SC_jperijb_I42 = jperijb%dim_2%SM
 4125.          $SC_jperijb_I41 = jperijb%dim_2%EX
 4125.          $SC_jperijb_I43 = jperijb%dim_2%LB
 4124.          $SC_iperijb_I34 = iperijb%dim_1%EX
 4124.          $SC_iperijb_I35 = iperijb%dim_1%LB
 4124.          $SC_iperijb_I37 = iperijb%dim_2%SM
 4124.          $SC_iperijb_I36 = iperijb%dim_2%EX
 4124.          $SC_iperijb_I38 = iperijb%dim_2%LB
 4123.          $SC_ibmaxperjb_I32 = ibmaxperjb%dim_1%EX
 4123.          $SC_ibmaxperjb_I33 = ibmaxperjb%dim_1%LB
 4122.          $I_L4122_66 = 0
 4122. !$omp do schedule(static)
 4122.          do
 4123.             $t_S5 = (ibmaxperjb%base_addr)(1 + $I_L4122_66, 0)
 4123.             if ( $t_S5 > 0 ) then
 4123.                $I_L4123_62 = 0
 4123. !dir$ ivdep
 4123.                do
 4124.                   $$_i = (iperijb%base_addr)(1 + $I_L4123_62, 1 + $I_L4122_66, 0)
 4125.                   $$_j = (jperijb%base_addr)(1 + $I_L4123_62, 1 + $I_L4122_66, 0)
 4126.                   fieldout(1 + $I_L4123_62, 1 + $I_L4122_66) = fieldin($$_i, $$_j)
 4127.                   $I_L4123_62 = 1 + $I_L4123_62
 4123.                   if ( $I_L4123_62 >= $t_S5 ) exit
 4123.                enddo
 4123.             endif
 4128.             $I_L4122_66 = 1 + $I_L4122_66
 4127.             if ( $I_L4122_66 >= jbmax ) exit
 4127.          enddo
 4129.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 4129.       endif
 4092.       _free( t$547 )
 4131.       return
 4131.       end
 4131.       
 4138.       
 4138.       subroutine cyclicfreqbox_i( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 4138.       t$229 = dimin
 4144.       t$550 = _zla( 0, dimin )
 4138.       t$230 = dimout
 4145.       t$551 = _zla( 0, dimout )
 4138.       t$231 = ( 2 * dimin + 2 * dimout + 4 )
 4163.       t$552 = _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4163.       t$555 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4138.       t$232 = ( dimin + dimout + 2 )
 4165.       t$556 = _zla( 0, ( dimin + dimout + 2 ) )
 4138.       t$557 = _zla( 0, ( dimin + dimout + 2 ) )
 4138.       t$558 = 2 * _zla( 0, ( dimin + dimout + 2 ) )
 4165.       t$560 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4138.       t$561 = 13 * _zla( 0, dimout )
 4166.       t$562 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4166.       t$564 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout )
 4167.       t$565 = 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout ) + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4167.       t$567 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4164.       t$568 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4164.       t$570 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 112 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) )
 4138.       t$553 = int( _alloc( 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 112 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) ) ), 8 )
 4163.       t$554 = t$553
 4165.       t$559 = t$553 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4166.       t$563 = t$553 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4167.       t$566 = t$553 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout )
 4164.       t$569 = t$553 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4203.       $iratio_S0 = dimin / dimout
 4204.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 4205.          if ( ilast + -ifirst >= 0 ) then
 4205.             $I_L4205_52 = 0
 4205. !dir$ ivdep
 4205.             do
 4207.                fieldout(ifirst + $I_L4205_52) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L4205_52 + 1)
 4208.                $I_L4205_52 = 1 + $I_L4205_52
 4205.                if ( $I_L4205_52 >= ilast + -ifirst + 1 ) exit
 4205.             enddo
 4205.          endif
 4138.          _free( t$553 )
 4210.       else if ( dimin <= 0 ) then
 4215.           _substr(t$1798,1,48) = '**(CyclicFreqBox)** ERROR: Few input data points'
 4215.          call _stop(  _substr(t$1798,1,48) )
 4215.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 4223.           _substr(t$1799,1,60) = '**(CyclicFreqBox)** ERROR: Output data out of input interval'
 4223.          call _stop(  _substr(t$1799,1,60) )
 4223.       else
 4241.          flgin(1) = .true.
 4242.          flgin(2) = .true.
 4243.          flgin(3) = .false.
 4244.          flgin(4) = .true.
 4245.          flgin(5) = .true.
 4246.          flgout(1) = .true.
 4247.          flgout(2) = .true.
 4248.          flgout(3) = .false.
 4249.          flgout(4) = .true.
 4250.          flgout(5) = .true.
 4258.          $hin_S2 = ( 6.2831853071795862 * 1.0/dimin )
 4266.          $I_L4266_54 = 0
 4266. !dir$ ivdep
 4266.          do
 4267.             dwork(dimin + dimout + $I_L4266_54 + 3) = ( 5.0e-1 + real( $I_L4266_54, 8 ) ) * $hin_S2
 4268.             $I_L4266_54 = 1 + $I_L4266_54
 4266.             if ( $I_L4266_54 >= dimin ) exit
 4266.          enddo
 4273.          $hout_S4 = ( 6.2831853071795862 * 1.0/dimout )
 4282.          if ( dimout > 0 ) then
 4282.             $I_L4282_56 = 0
 4282. !dir$ ivdep
 4282.             do
 4283.                dwork(dimout + $I_L4282_56 + 2 * dimin + 4) = ( 5.0e-1 + real( $I_L4282_56, 8 ) ) * $hout_S4
 4284.                $I_L4282_56 = 1 + $I_L4282_56
 4282.                if ( $I_L4282_56 >= dimout ) exit
 4282.             enddo
 4282.          endif
 4289.          $i1_S6 = 1
 4290.          $i2_S7 = 1
 4291.          $i3_S8 = 1
 4303.          $SC_flgout_I1 = flgout(2)
 4298.          $SC_flgin_I0 = flgin(2)
 4292.          do
 4293.             if ( dwork(dimout + $i2_S7 + 2 * dimin + 3) == dwork(dimin + dimout + $i1_S6 + 2) ) then
 4294.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 4295.                if ( $i3_S8 /= 1 ) then
 4296.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4297.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4298.                   if ( $SC_flgin_I0 == 0 ) then
 4299.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4300.                      if ( $i1_S6 > dimin / 2 ) then
 4300.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4300.                      endif
 4300.                   endif
 4302.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4303.                   if ( $SC_flgout_I1 == 0 ) then
 4304.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4305.                      if ( $i2_S7 > dimout / 2 ) then
 4305.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4305.                      endif
 4305.                   endif
 4305.                endif
 4308.                $i1_S6 = 1 + $i1_S6
 4309.                $i2_S7 = 1 + $i2_S7
 4311.             else if ( dwork(dimin + dimout + $i1_S6 + 2) < dwork(dimout + $i2_S7 + 2 * dimin + 3) ) then
 4312.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 4313.                if ( $i3_S8 /= 1 ) then
 4314.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4315.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4316.                   if ( $SC_flgin_I0 == 0 ) then
 4317.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4318.                      if ( $i1_S6 > dimin / 2 ) then
 4318.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4318.                      endif
 4318.                   endif
 4320.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4321.                   if ( $SC_flgout_I1 == 0 ) then
 4322.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4323.                      if ( $i2_S7 > dimout / 2 ) then
 4323.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4323.                      endif
 4323.                   endif
 4323.                endif
 4326.                $i1_S6 = 1 + $i1_S6
 4326.             else
 4329.                dwork($i3_S8) = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 4330.                if ( $i3_S8 /= 1 ) then
 4331.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4332.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4333.                   if ( $SC_flgin_I0 == 0 ) then
 4334.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4335.                      if ( $i1_S6 > dimin / 2 ) then
 4335.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4335.                      endif
 4335.                   endif
 4337.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4338.                   if ( $SC_flgout_I1 == 0 ) then
 4339.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4340.                      if ( $i2_S7 > dimout / 2 ) then
 4340.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4340.                      endif
 4340.                   endif
 4340.                endif
 4343.                $i2_S7 = 1 + $i2_S7
 4343.             endif
 4344.             $i3_S8 = 1 + $i3_S8
 4346.             if ( $i1_S6 > dimin ) exit
 4346.             if ( $i2_S7 > dimout ) exit
 4346.          enddo
 4349.          $i1_S11 = cvmg( $i1_S6, 1, $i1_S6 <= dimin )
 4350.          if ( $i2_S7 > dimout ) then
 4350.             $i2_S7 = 1
 4350.          endif
 4362.          $SC_flgout_I1 = flgout(2)
 4357.          $SC_flgin_I0 = flgin(2)
 4351.          do
 4351.             do
 4352.                if ( $i2_S7 /= 1 ) then
 4353.                   $SVU_P2 = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 4353.                   dwork($i3_S8) = $SVU_P2
 4354.                   wtlon(-1 + $i3_S8) = $SVU_P2 + -dwork(-1 + $i3_S8)
 4355.                   mplon(-1 + $i3_S8, 1) = 1
 4357.                   if ( $SC_flgin_I0 == 0 ) then
 4358.                      mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 4358.                   endif
 4361.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4362.                   if ( $SC_flgout_I1 == 0 ) then
 4363.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4364.                      if ( $i2_S7 > dimout / 2 ) then
 4364.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4364.                      endif
 4364.                   endif
 4367.                   $i2_S7 = cvmg( 1 + $i2_S7, 1, 1 + $i2_S7 <= dimout )
 4368.                   $i3_S8 = 1 + $i3_S8
 4368.                endif
 4370.                if ( $i1_S11 /= 1 ) then
 4371.                   dwork($i3_S8) = dwork(dimin + dimout + $i1_S11 + 2)
 4372.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4373.                   mplon(-1 + $i3_S8, 1) = $i1_S11
 4374.                   if ( $SC_flgin_I0 == 0 ) then
 4375.                      mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / 2
 4376.                      if ( $i1_S11 > dimin / 2 ) then
 4376.                         mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / -2
 4376.                      endif
 4376.                   endif
 4378.                   mplon(-1 + $i3_S8, 2) = 1
 4380.                   if ( $SC_flgout_I1 == 0 ) then
 4381.                      mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 4381.                   endif
 4385.                   $i1_S11 = cvmg( 1 + $i1_S11, 1, 1 + $i1_S11 <= dimin )
 4386.                   $i3_S8 = 1 + $i3_S8
 4386.                endif
 4388.                if ( $i1_S11 /= 1 ) then
 4388.                   goto 20
 4388.                endif
 4388.                if ( $i2_S7 == 1 ) exit
 4388.             enddo
 4390.             wtlon(-1 + $i3_S8) = -dwork(-1 + $i3_S8) + dwork(1) + 6.2831853071795862
 4391.             mplon(-1 + $i3_S8, 1) = 1
 4393.             if ( $SC_flgin_I0 == 0 ) then
 4394.                mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 4394.             endif
 4397.             mplon(-1 + $i3_S8, 2) = 1
 4399.             if ( $SC_flgout_I1 == 0 ) then
 4400.                mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 4400.             endif
 4409.             $F_A33 = ( ilast + -ifirst + 1 )
 4409.             if ( ilast + -ifirst >= 0 ) then
 4409.                $I_L4409_64 = 0
 4409. !dir$ ivdep
 4409.                do
 4409.                   fieldout(ifirst + $I_L4409_64) = 0
 4409.                   $I_L4409_64 = 1 + $I_L4409_64
 4409.                   if ( $I_L4409_64 >= $F_A33 ) exit
 4409.                enddo
 4409.             endif
 4410.             $F_A34 = dimout
 4410.             if ( dimout > 0 ) then
 4410.                $I_L4410_66 = 0
 4410. !dir$ ivdep
 4410.                do
 4410.                   wrk2(1 + $I_L4410_66) = 0.0
 4410.                   $I_L4410_66 = 1 + $I_L4410_66
 4410.                   if ( $I_L4410_66 >= $F_A34 ) exit
 4410.                enddo
 4410.             endif
 4411.             $F_A35 = dimout
 4411.             if ( dimout > 0 ) then
 4411.                $I_L4411_72 = 0
 4411.                do
 4411.                   $I_L4411_68 = 0
 4411. !dir$ ivdep
 4411.                   do
 4411.                      work(1 + $I_L4411_68, 1 + $I_L4411_72) = 0.0
 4411.                      $I_L4411_68 = 1 + $I_L4411_68
 4411.                      if ( $I_L4411_68 >= 13 ) exit
 4411.                   enddo
 4411.                   $I_L4411_72 = 1 + $I_L4411_72
 4411.                   if ( $I_L4411_72 >= $F_A35 ) exit
 4411.                enddo
 4411.             endif
 4413.             if ( -1 + $i3_S8 > 0 ) then
 4413.                $I_L4413_58 = 0
 4413.                do
 4415.                   $wln_S13 = wtlon(1 + $I_L4413_58)
 4416.                   lni = mplon(1 + $I_L4413_58, 1)
 4417.                   lno = mplon(1 + $I_L4413_58, 2)
 4419.                   if ( fieldin(lni) /= 0 ) then
 4421.                      nc = fieldin(lni)
 4423.                      if ( nc > 13 .orelse. lno > dimout ) then
 4424.                         $Unit_temp_O1 = nfprt
 4424.                         $_IOitem_P1(0) = nc
 4424.                         $_IOitem_P1(1) = lno
 4424.                         $_IOitem_P1(2) = ( 1 + $I_L4413_58 )
 4424.                         $_IOitem_P1(3) = lni
 4424.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 4425.                          _substr(t$1809,1,31) = 'ERROR IN nc,lno,i and lni point'
 4425.                         call _stop(  _substr(t$1809,1,31) )
 4425.                      else
 4428.                         if ( nc <= 0 ) then
 4429.                            $Unit_temp_O0 = nfprt
 4429.                            $_IOitem_P0(0) = nc
 4429.                            $_IOitem_P0(1) = lno
 4429.                            $_IOitem_P0(2) = ( 1 + $I_L4413_58 )
 4429.                            $_IOitem_P0(3) = lni
 4429.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 4430.                             _substr(t$1810,1,31) = 'ERROR IN nc,lno,i and lni point'
 4430.                            call _stop(  _substr(t$1810,1,31) )
 4428.                         else if ( lno > 0 ) then
 4432.                            work(nc, lno) = work(nc, lno) + $wln_S13
 4433.                            wrk2(lno) = wrk2(lno) + $wln_S13
 4434.                            $I_L4413_58 = 1 + $I_L4413_58
 4434.                         else
 4434.                         endif
 4434.                      endif
 4434.                   else
 4434.                   endif
 4434.                   if ( $I_L4413_58 >= -1 + $i3_S8 ) exit
 4434.                enddo
 4434.                goto 10
 4434.             else
 4434.    10          continue
 4440.                if ( ilast + -ifirst >= 0 ) then
 4440.                   $I_L4440_70 = 0
 4440.                   do
 4442.                      fieldout(ifirst + $I_L4440_70) = 0
 4444.                      if ( wrk2(ifirst + $I_L4440_70) /= 0.0 ) then
 4446.                         $fm_S17 = 0.0
 4447.                         $nx_S22 = 0
 4450.                         b(1) = 0.0
 4451.                         b(2) = 0.0
 4452.                         b(3) = 0.0
 4453.                         b(4) = 0.0
 4454.                         b(5) = 0.0
 4456.                         $SCA_wrk2_I2 = wrk2(ifirst + $I_L4440_70)
 4456.                         $I_L4456_60 = 0
 4456. !dir$ ivdep
 4456. !dir$ loop_info (automatic) cache_nt( b )
 4456.                         do
 4457.                            $fr_S16 = ( work(1 + $I_L4456_60, ifirst + $I_L4440_70) * 1.0/$SCA_wrk2_I2 )
 4459.                            if ( $fm_S17 < $fr_S16 ) then
 4460.                               $fm_S17 = $fr_S16
 4461.                               $nx_S22 = ( 1 + $I_L4456_60 )
 4461.                            endif
 4464.                            $kl_S18 = klass(1 + $I_L4456_60)
 4465.                            b($kl_S18) = _vu_plus( b($kl_S18), $fr_S16 )
 4469.                            $I_L4456_60 = 1 + $I_L4456_60
 4462.                            if ( $I_L4456_60 >= 13 ) exit
 4462.                         enddo
 4475.                         $W1 = 5
 4475.                         $W2 = 1
 4475.                         $Maxmin_x_W0 = _idmax( $W1, b(1), $W2 )
 4475.                         $kmx_S21 = cvmg( $Maxmin_x_W0, 0, b($Maxmin_x_W0) > 0.0 )
 4481.                         if ( klass($nx_S22) + -$kmx_S21 == 0 ) then
 4482.                            fieldout(ifirst + $I_L4440_70) = $nx_S22
 4482.                         else
 4492.                            $fmk_S25 = 0.0
 4494.                            $I_L4494_62 = 0
 4494. !dir$ ivdep
 4494.                            do
 4495.                               if ( $kmx_S21 + -klass(1 + $I_L4494_62) == 0 ) then
 4496.                                  $frk_S24 = ( work(1 + $I_L4494_62, ifirst + $I_L4440_70) * 1.0/$SCA_wrk2_I2 )
 4497.                                  if ( $fmk_S25 < $frk_S24 ) then
 4498.                                     $fmk_S25 = $frk_S24
 4499.                                     nxk = ( 1 + $I_L4494_62 )
 4499.                                  endif
 4499.                               endif
 4501.                               $I_L4494_62 = 1 + $I_L4494_62
 4501.                               if ( $I_L4494_62 >= 13 ) exit
 4501.                            enddo
 4503.                            fieldout(ifirst + $I_L4440_70) = nxk
 4503.                         endif
 4503.                      endif
 4516.                      $I_L4440_70 = 1 + $I_L4440_70
 4516.                      if ( $I_L4440_70 >= ilast + -ifirst + 1 ) exit
 4516.                   enddo
 4516.                endif
 4138.                _free( t$553 )
 4138.             endif
 4138.          endif
 4138.    20    continue
 4518.          return
 4518.       end
 4518.       
 4521.       
 4521.       subroutine cyclicfreqbox_r( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 4521.       t$234 = dimin
 4527.       t$571 = _zla( 0, dimin )
 4521.       t$235 = dimout
 4528.       t$572 = _zla( 0, dimout )
 4521.       t$236 = ( 2 * dimin + 2 * dimout + 4 )
 4546.       t$573 = _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4546.       t$576 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4521.       t$237 = ( dimin + dimout + 2 )
 4548.       t$577 = _zla( 0, ( dimin + dimout + 2 ) )
 4521.       t$578 = _zla( 0, ( dimin + dimout + 2 ) )
 4521.       t$579 = 2 * _zla( 0, ( dimin + dimout + 2 ) )
 4548.       t$581 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4521.       t$582 = 13 * _zla( 0, dimout )
 4549.       t$583 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4549.       t$585 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout )
 4550.       t$586 = 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout ) + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4550.       t$588 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4547.       t$589 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4547.       t$591 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 112 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) )
 4521.       t$574 = int( _alloc( 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 112 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) ) ), 8 )
 4546.       t$575 = t$574
 4548.       t$580 = t$574 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4549.       t$584 = t$574 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 4550.       t$587 = t$574 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 104 * _zla( 0, dimout )
 4547.       t$590 = t$574 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 112 * _zla( 0, dimout )
 4586.       $iratio_S0 = dimin / dimout
 4587.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 4588.          if ( ilast + -ifirst >= 0 ) then
 4588.             $I_L4588_52 = 0
 4588. !dir$ ivdep
 4588.             do
 4590.                fieldout(ifirst + $I_L4588_52) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L4588_52 + 1)
 4591.                $I_L4588_52 = 1 + $I_L4588_52
 4588.                if ( $I_L4588_52 >= ilast + -ifirst + 1 ) exit
 4588.             enddo
 4588.          endif
 4521.          _free( t$574 )
 4593.       else if ( dimin <= 0 ) then
 4598.           _substr(t$1822,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 4598.          call _stop(  _substr(t$1822,1,47) )
 4598.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 4606.           _substr(t$1823,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 4606.          call _stop(  _substr(t$1823,1,64) )
 4606.       else
 4624.          flgin(1) = .true.
 4625.          flgin(2) = .true.
 4626.          flgin(3) = .false.
 4627.          flgin(4) = .true.
 4628.          flgin(5) = .true.
 4629.          flgout(1) = .true.
 4630.          flgout(2) = .true.
 4631.          flgout(3) = .false.
 4632.          flgout(4) = .true.
 4633.          flgout(5) = .true.
 4641.          $hin_S2 = ( 6.2831853071795862 * 1.0/dimin )
 4649.          $I_L4649_54 = 0
 4649. !dir$ ivdep
 4649.          do
 4650.             dwork(dimin + dimout + $I_L4649_54 + 3) = ( 5.0e-1 + real( $I_L4649_54, 8 ) ) * $hin_S2
 4651.             $I_L4649_54 = 1 + $I_L4649_54
 4649.             if ( $I_L4649_54 >= dimin ) exit
 4649.          enddo
 4656.          $hout_S4 = ( 6.2831853071795862 * 1.0/dimout )
 4665.          if ( dimout > 0 ) then
 4665.             $I_L4665_56 = 0
 4665. !dir$ ivdep
 4665.             do
 4666.                dwork(dimout + $I_L4665_56 + 2 * dimin + 4) = ( 5.0e-1 + real( $I_L4665_56, 8 ) ) * $hout_S4
 4667.                $I_L4665_56 = 1 + $I_L4665_56
 4665.                if ( $I_L4665_56 >= dimout ) exit
 4665.             enddo
 4665.          endif
 4672.          $i1_S6 = 1
 4673.          $i2_S7 = 1
 4674.          $i3_S8 = 1
 4686.          $SC_flgout_I1 = flgout(2)
 4681.          $SC_flgin_I0 = flgin(2)
 4675.          do
 4676.             if ( dwork(dimout + $i2_S7 + 2 * dimin + 3) == dwork(dimin + dimout + $i1_S6 + 2) ) then
 4677.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 4678.                if ( $i3_S8 /= 1 ) then
 4679.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4680.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4681.                   if ( $SC_flgin_I0 == 0 ) then
 4682.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4683.                      if ( $i1_S6 > dimin / 2 ) then
 4683.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4683.                      endif
 4683.                   endif
 4685.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4686.                   if ( $SC_flgout_I1 == 0 ) then
 4687.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4688.                      if ( $i2_S7 > dimout / 2 ) then
 4688.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4688.                      endif
 4688.                   endif
 4688.                endif
 4691.                $i1_S6 = 1 + $i1_S6
 4692.                $i2_S7 = 1 + $i2_S7
 4694.             else if ( dwork(dimin + dimout + $i1_S6 + 2) < dwork(dimout + $i2_S7 + 2 * dimin + 3) ) then
 4695.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 4696.                if ( $i3_S8 /= 1 ) then
 4697.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4698.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4699.                   if ( $SC_flgin_I0 == 0 ) then
 4700.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4701.                      if ( $i1_S6 > dimin / 2 ) then
 4701.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4701.                      endif
 4701.                   endif
 4703.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4704.                   if ( $SC_flgout_I1 == 0 ) then
 4705.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4706.                      if ( $i2_S7 > dimout / 2 ) then
 4706.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4706.                      endif
 4706.                   endif
 4706.                endif
 4709.                $i1_S6 = 1 + $i1_S6
 4709.             else
 4712.                dwork($i3_S8) = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 4713.                if ( $i3_S8 /= 1 ) then
 4714.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4715.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 4716.                   if ( $SC_flgin_I0 == 0 ) then
 4717.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 4718.                      if ( $i1_S6 > dimin / 2 ) then
 4718.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 4718.                      endif
 4718.                   endif
 4720.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4721.                   if ( $SC_flgout_I1 == 0 ) then
 4722.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4723.                      if ( $i2_S7 > dimout / 2 ) then
 4723.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4723.                      endif
 4723.                   endif
 4723.                endif
 4726.                $i2_S7 = 1 + $i2_S7
 4726.             endif
 4727.             $i3_S8 = 1 + $i3_S8
 4729.             if ( $i1_S6 > dimin ) exit
 4729.             if ( $i2_S7 > dimout ) exit
 4729.          enddo
 4732.          $i1_S11 = cvmg( $i1_S6, 1, $i1_S6 <= dimin )
 4733.          if ( $i2_S7 > dimout ) then
 4733.             $i2_S7 = 1
 4733.          endif
 4745.          $SC_flgout_I1 = flgout(2)
 4740.          $SC_flgin_I0 = flgin(2)
 4734.          do
 4734.             do
 4735.                if ( $i2_S7 /= 1 ) then
 4736.                   $SVU_P2 = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 4736.                   dwork($i3_S8) = $SVU_P2
 4737.                   wtlon(-1 + $i3_S8) = $SVU_P2 + -dwork(-1 + $i3_S8)
 4738.                   mplon(-1 + $i3_S8, 1) = 1
 4740.                   if ( $SC_flgin_I0 == 0 ) then
 4741.                      mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 4741.                   endif
 4744.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 4745.                   if ( $SC_flgout_I1 == 0 ) then
 4746.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 4747.                      if ( $i2_S7 > dimout / 2 ) then
 4747.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 4747.                      endif
 4747.                   endif
 4750.                   $i2_S7 = cvmg( 1 + $i2_S7, 1, 1 + $i2_S7 <= dimout )
 4751.                   $i3_S8 = 1 + $i3_S8
 4751.                endif
 4753.                if ( $i1_S11 /= 1 ) then
 4754.                   dwork($i3_S8) = dwork(dimin + dimout + $i1_S11 + 2)
 4755.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 4756.                   mplon(-1 + $i3_S8, 1) = $i1_S11
 4757.                   if ( $SC_flgin_I0 == 0 ) then
 4758.                      mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / 2
 4759.                      if ( $i1_S11 > dimin / 2 ) then
 4759.                         mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / -2
 4759.                      endif
 4759.                   endif
 4761.                   mplon(-1 + $i3_S8, 2) = 1
 4763.                   if ( $SC_flgout_I1 == 0 ) then
 4764.                      mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 4764.                   endif
 4768.                   $i1_S11 = cvmg( 1 + $i1_S11, 1, 1 + $i1_S11 <= dimin )
 4769.                   $i3_S8 = 1 + $i3_S8
 4769.                endif
 4771.                if ( $i1_S11 /= 1 ) then
 4771.                   goto 20
 4771.                endif
 4771.                if ( $i2_S7 == 1 ) exit
 4771.             enddo
 4773.             wtlon(-1 + $i3_S8) = -dwork(-1 + $i3_S8) + dwork(1) + 6.2831853071795862
 4774.             mplon(-1 + $i3_S8, 1) = 1
 4776.             if ( $SC_flgin_I0 == 0 ) then
 4777.                mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 4777.             endif
 4780.             mplon(-1 + $i3_S8, 2) = 1
 4782.             if ( $SC_flgout_I1 == 0 ) then
 4783.                mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 4783.             endif
 4792.             $F_A33 = ( ilast + -ifirst + 1 )
 4792.             if ( ilast + -ifirst >= 0 ) then
 4792.                $I_L4792_64 = 0
 4792. !dir$ ivdep
 4792.                do
 4792.                   fieldout(ifirst + $I_L4792_64) = 0.0
 4792.                   $I_L4792_64 = 1 + $I_L4792_64
 4792.                   if ( $I_L4792_64 >= $F_A33 ) exit
 4792.                enddo
 4792.             endif
 4793.             $F_A34 = dimout
 4793.             if ( dimout > 0 ) then
 4793.                $I_L4793_66 = 0
 4793. !dir$ ivdep
 4793.                do
 4793.                   wrk2(1 + $I_L4793_66) = 0.0
 4793.                   $I_L4793_66 = 1 + $I_L4793_66
 4793.                   if ( $I_L4793_66 >= $F_A34 ) exit
 4793.                enddo
 4793.             endif
 4794.             $F_A35 = dimout
 4794.             if ( dimout > 0 ) then
 4794.                $I_L4794_72 = 0
 4794.                do
 4794.                   $I_L4794_68 = 0
 4794. !dir$ ivdep
 4794.                   do
 4794.                      work(1 + $I_L4794_68, 1 + $I_L4794_72) = 0.0
 4794.                      $I_L4794_68 = 1 + $I_L4794_68
 4794.                      if ( $I_L4794_68 >= 13 ) exit
 4794.                   enddo
 4794.                   $I_L4794_72 = 1 + $I_L4794_72
 4794.                   if ( $I_L4794_72 >= $F_A35 ) exit
 4794.                enddo
 4794.             endif
 4796.             if ( -1 + $i3_S8 > 0 ) then
 4796.                $I_L4796_58 = 0
 4796.                do
 4798.                   $wln_S13 = wtlon(1 + $I_L4796_58)
 4799.                   lni = mplon(1 + $I_L4796_58, 1)
 4800.                   lno = mplon(1 + $I_L4796_58, 2)
 4802.                   if ( fieldin(lni) /= 0.0 ) then
 4804.                      nc = int( fieldin(lni) )
 4806.                      if ( nc > 13 .orelse. lno > dimout ) then
 4807.                         $Unit_temp_O1 = nfprt
 4807.                         $_IOitem_P1(0) = nc
 4807.                         $_IOitem_P1(1) = lno
 4807.                         $_IOitem_P1(2) = ( 1 + $I_L4796_58 )
 4807.                         $_IOitem_P1(3) = lni
 4807.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 4808.                          _substr(t$1833,1,31) = 'ERROR IN nc,lno,i and lni point'
 4808.                         call _stop(  _substr(t$1833,1,31) )
 4808.                      else
 4811.                         if ( nc <= 0 ) then
 4812.                            $Unit_temp_O0 = nfprt
 4812.                            $_IOitem_P0(0) = nc
 4812.                            $_IOitem_P0(1) = lno
 4812.                            $_IOitem_P0(2) = ( 1 + $I_L4796_58 )
 4812.                            $_IOitem_P0(3) = lni
 4812.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 4813.                             _substr(t$1834,1,31) = 'ERROR IN nc,lno,i and lni point'
 4813.                            call _stop(  _substr(t$1834,1,31) )
 4811.                         else if ( lno > 0 ) then
 4815.                            work(nc, lno) = work(nc, lno) + $wln_S13
 4816.                            wrk2(lno) = wrk2(lno) + $wln_S13
 4817.                            $I_L4796_58 = 1 + $I_L4796_58
 4817.                         else
 4817.                         endif
 4817.                      endif
 4817.                   else
 4817.                   endif
 4817.                   if ( $I_L4796_58 >= -1 + $i3_S8 ) exit
 4817.                enddo
 4817.                goto 10
 4817.             else
 4817.    10          continue
 4823.                if ( ilast + -ifirst >= 0 ) then
 4823.                   $I_L4823_70 = 0
 4823.                   do
 4825.                      fieldout(ifirst + $I_L4823_70) = 0.0
 4827.                      if ( wrk2(ifirst + $I_L4823_70) /= 0.0 ) then
 4829.                         $fm_S17 = 0.0
 4830.                         $nx_S22 = 0
 4833.                         b(1) = 0.0
 4834.                         b(2) = 0.0
 4835.                         b(3) = 0.0
 4836.                         b(4) = 0.0
 4837.                         b(5) = 0.0
 4839.                         $SCA_wrk2_I2 = wrk2(ifirst + $I_L4823_70)
 4839.                         $I_L4839_60 = 0
 4839. !dir$ ivdep
 4839. !dir$ loop_info (automatic) cache_nt( b )
 4839.                         do
 4840.                            $fr_S16 = ( work(1 + $I_L4839_60, ifirst + $I_L4823_70) * 1.0/$SCA_wrk2_I2 )
 4842.                            if ( $fm_S17 < $fr_S16 ) then
 4843.                               $fm_S17 = $fr_S16
 4844.                               $nx_S22 = ( 1 + $I_L4839_60 )
 4844.                            endif
 4847.                            $kl_S18 = klass(1 + $I_L4839_60)
 4848.                            b($kl_S18) = _vu_plus( b($kl_S18), $fr_S16 )
 4852.                            $I_L4839_60 = 1 + $I_L4839_60
 4845.                            if ( $I_L4839_60 >= 13 ) exit
 4845.                         enddo
 4858.                         $W1 = 5
 4858.                         $W2 = 1
 4858.                         $Maxmin_x_W0 = _idmax( $W1, b(1), $W2 )
 4858.                         $kmx_S21 = cvmg( $Maxmin_x_W0, 0, b($Maxmin_x_W0) > 0.0 )
 4864.                         if ( klass($nx_S22) + -$kmx_S21 == 0 ) then
 4865.                            fieldout(ifirst + $I_L4823_70) = real( $nx_S22, 8 )
 4865.                         else
 4875.                            $fmk_S25 = 0.0
 4877.                            $I_L4877_62 = 0
 4877. !dir$ ivdep
 4877.                            do
 4878.                               if ( $kmx_S21 + -klass(1 + $I_L4877_62) == 0 ) then
 4879.                                  $frk_S24 = ( work(1 + $I_L4877_62, ifirst + $I_L4823_70) * 1.0/$SCA_wrk2_I2 )
 4880.                                  if ( $fmk_S25 < $frk_S24 ) then
 4881.                                     $fmk_S25 = $frk_S24
 4882.                                     nxk = ( 1 + $I_L4877_62 )
 4882.                                  endif
 4882.                               endif
 4884.                               $I_L4877_62 = 1 + $I_L4877_62
 4884.                               if ( $I_L4877_62 >= 13 ) exit
 4884.                            enddo
 4886.                            fieldout(ifirst + $I_L4823_70) = real( nxk, 8 )
 4886.                         endif
 4886.                      endif
 4899.                      $I_L4823_70 = 1 + $I_L4823_70
 4899.                      if ( $I_L4823_70 >= ilast + -ifirst + 1 ) exit
 4899.                   enddo
 4899.                endif
 4521.                _free( t$574 )
 4521.             endif
 4521.          endif
 4521.    20    continue
 4901.          return
 4901.       end
 4901.       
 4906.       
 4906.       subroutine seamaskijtoibjb_r2d( fieldin, fieldout )
 4906.       t$239 = imax
 4906.       t$240 = jmax
 4907.       t$592 = _zla( 0, imax )
 4906.       t$593 = _zla( 0, imax )
 4907.       t$594 = _zla( 0, jmax )
 4906.       t$595 = _zla( 0, imax ) * _zla( 0, jmax )
 4906.       t$241 = ibmax
 4906.       t$242 = jbmax
 4908.       t$596 = _zla( 0, ibmax )
 4906.       t$597 = _zla( 0, ibmax )
 4908.       t$598 = _zla( 0, jbmax )
 4906.       t$599 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 4910.       t$602 = 8 * _zla( 0, imax )
 4906.       t$600 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 4910.       t$601 = t$600
 4920.       if ( reducedgrid ) then
 4922.          if ( mylastlat + -myfirstlat >= 0 ) then
 4921.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4921.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 4921.             $pvt_Abase_seg18_D0 = $$_fout_BASE
 4921.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 4929.             $SC_jbperij_I49 = jbperij%dim_1%EX
 4929.             $SC_jbperij_I50 = jbperij%dim_1%LB
 4929.             $SC_jbperij_I52 = jbperij%dim_2%SM
 4929.             $SC_jbperij_I51 = jbperij%dim_2%EX
 4929.             $SC_jbperij_I53 = jbperij%dim_2%LB
 4928.             $SC_ibperij_I44 = ibperij%dim_1%EX
 4928.             $SC_ibperij_I45 = ibperij%dim_1%LB
 4928.             $SC_ibperij_I47 = ibperij%dim_2%SM
 4928.             $SC_ibperij_I46 = ibperij%dim_2%EX
 4928.             $SC_ibperij_I48 = ibperij%dim_2%LB
 4925.             $SC_imaxperj_I42 = imaxperj%dim_1%EX
 4925.             $SC_imaxperj_I43 = imaxperj%dim_1%LB
 4924.             $SC_mylastlon_I40 = mylastlon%dim_1%EX
 4924.             $SC_mylastlon_I41 = mylastlon%dim_1%LB
 4923.             $SC_myfirstlon_I38 = myfirstlon%dim_1%EX
 4923.             $SC_myfirstlon_I39 = myfirstlon%dim_1%LB
 4922.             $I_L4922_158 = 0
 4922. !$omp do schedule(static)
 4922.             do
 4923.                $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L4922_158, 0)
 4924.                $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L4922_158, 0)
 4925.                t$247 = imax
 4925.                t$611 = max( 0, imax )
 4925.                t$248 = (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0)
 4925.                t$612 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) )
 4925.                t$249 = ( 2 * imax + 2 * (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) + 4 )
 4925.                t$613 = max( 0, t$249 )
 4925.                t$616 = 8 * max( 0, t$249 )
 4925.                t$250 = ( imax + (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) + 2 )
 4925.                t$617 = max( 0, t$250 )
 4925.                t$618 = max( 0, t$250 )
 4925.                t$619 = 2 * max( 0, t$250 )
 4925.                t$621 = 8 * max( 0, t$249 ) + 8 * max( 0, t$250 )
 4925.                t$622 = 8 * ( ( 8 * max( 0, t$249 ) + 8 * max( 0, t$250 ) + 7 ) / 8 )
 4925.                t$624 = 8 * ( ( 8 * max( 0, t$249 ) + 8 * max( 0, t$250 ) + 7 ) / 8 ) + 8 * (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0)
 4925.                t$625 = 8 * ( ( 7 + t$624 ) / 8 )
 4925.                t$627 = 8 * ( ( 7 + t$624 ) / 8 ) + 8 * max( 0, t$250 )
 4925.                t$614 = int( _alloc( 8 * ( ( 7 + t$624 ) / 8 ) + 8 * max( 0, t$250 ) ), 8 )
 4925.                t$615 = t$614
 4925.                t$620 = t$614 + 8 * max( 0, t$249 )
 4925.                t$623 = t$614 + 8 * ( ( 8 * max( 0, t$249 ) + 8 * max( 0, t$250 ) + 7 ) / 8 )
 4925.                t$626 = t$614 + 8 * ( ( 7 + t$624 ) / 8 )
 4925.                $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0)
 4925.                if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) == 0 ) then
 4925.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 4925.                      $I_L4925_138 = 0
 4925. !dir$ ivdep
 4925.                      do
 4925.                         $$_fout($$_ifirst + $I_L4925_138) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L4925_138 + 1, myfirstlat + $I_L4922_158)
 4925.                         $I_L4925_138 = 1 + $I_L4925_138
 4925.                         if ( $I_L4925_138 >= $$_ilast + -$$_ifirst + 1 ) exit
 4925.                      enddo
 4925.                   endif
 4925.                   _free( t$614 )
 4925.                else if ( imax <= 0 ) then
 4925.                    _substr(t$1870,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 4925.                   call _stop(  _substr(t$1870,1,47) )
 4925.                else
 4925.                   $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0), 8 ) ) )
 4925.                   $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0), 8 ) * $$_ratio )
 4925.                   if ( $$_iin > 1 + imax ) then
 4925.                       _substr(t$1871,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 4925.                      call _stop(  _substr(t$1871,1,64) )
 4925.                   else
 4925.                      $$_ioi = imax + (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) + 2
 4925.                      $$_hin = ( 6.2831853071795862 * 1.0/imax )
 4925.                      $I_L4925_140 = 0
 4925. !dir$ ivdep
 4925.                      do
 4925.                         dwork($$_ioi + $I_L4925_140 + 1) = ( 5.0e-1 + real( $I_L4925_140, 8 ) ) * $$_hin
 4925.                         $I_L4925_140 = 1 + $I_L4925_140
 4925.                         if ( $I_L4925_140 >= imax ) exit
 4925.                      enddo
 4925.                      $$_ioo = (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) + 2 * imax + 3
 4925.                      $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0) )
 4925.                      $t_S3 = (imaxperj%base_addr)(myfirstlat + $I_L4922_158, 0)
 4925.                      if ( $t_S3 > 0 ) then
 4925.                         $I_L4925_142 = 0
 4925. !dir$ ivdep
 4925.                         do
 4925.                            dwork($$_ioo + $I_L4925_142 + 1) = ( 5.0e-1 + $I_L4925_142 ) * $$_hout
 4925.                            $I_L4925_142 = 1 + $I_L4925_142
 4925.                            if ( $I_L4925_142 >= $t_S3 ) exit
 4925.                         enddo
 4925.                      endif
 4925.                      $i1_S5 = 1
 4925.                      $$_i2 = 1
 4925.                      $$_i3 = 1
 4925.                      do
 4925.                         if ( dwork($$_ioi + $i1_S5) == dwork($$_i2 + $$_ioo) ) then
 4925.                            dwork($$_i3) = dwork($$_ioi + $i1_S5)
 4925.                            if ( $$_i3 /= 1 ) then
 4925.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 4925.                               mplon(-1 + $$_i3, 1) = $i1_S5
 4925.                               mplon(-1 + $$_i3, 2) = $$_i2
 4925.                            endif
 4925.                            $i1_S5 = 1 + $i1_S5
 4925.                            $$_i2 = 1 + $$_i2
 4925.                         else if ( dwork($$_ioi + $i1_S5) < dwork($$_i2 + $$_ioo) ) then
 4925.                            dwork($$_i3) = dwork($$_ioi + $i1_S5)
 4925.                            if ( $$_i3 /= 1 ) then
 4925.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 4925.                               mplon(-1 + $$_i3, 1) = $i1_S5
 4925.                               mplon(-1 + $$_i3, 2) = $$_i2
 4925.                            endif
 4925.                            $i1_S5 = 1 + $i1_S5
 4925.                         else
 4925.                            dwork($$_i3) = dwork($$_i2 + $$_ioo)
 4925.                            if ( $$_i3 /= 1 ) then
 4925.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 4925.                               mplon(-1 + $$_i3, 1) = $i1_S5
 4925.                               mplon(-1 + $$_i3, 2) = $$_i2
 4925.                            endif
 4925.                            $$_i2 = 1 + $$_i2
 4925.                         endif
 4925.                         $$_i3 = 1 + $$_i3
 4925.                         if ( $i1_S5 > imax ) exit
 4925.                         if ( $$_i2 > $t_S3 ) exit
 4925.                      enddo
 4925.                      $$_i1 = cvmg( $i1_S5, 1, $i1_S5 <= imax )
 4925.                      if ( $$_i2 > $t_S3 ) then
 4925.                         $$_i2 = 1
 4925.                      endif
 4925.                      do
 4925.                         do
 4925.                            if ( $$_i2 /= 1 ) then
 4925.                               $SVU_P0 = dwork($$_i2 + $$_ioo)
 4925.                               dwork($$_i3) = $SVU_P0
 4925.                               wtlon(-1 + $$_i3) = $SVU_P0 + -dwork(-1 + $$_i3)
 4925.                               mplon(-1 + $$_i3, 1) = 1
 4925.                               mplon(-1 + $$_i3, 2) = $$_i2
 4925.                               $$_i2 = cvmg( 1 + $$_i2, 1, 1 + $$_i2 <= $t_S3 )
 4925.                               $$_i3 = 1 + $$_i3
 4925.                            endif
 4925.                            if ( $$_i1 /= 1 ) then
 4925.                               dwork($$_i3) = dwork($$_i1 + $$_ioi)
 4925.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 4925.                               mplon(-1 + $$_i3, 1) = $$_i1
 4925.                               mplon(-1 + $$_i3, 2) = 1
 4925.                               $$_i1 = cvmg( 1 + $$_i1, 1, 1 + $$_i1 <= imax )
 4925.                               $$_i3 = 1 + $$_i3
 4925.                            endif
 4925.                            if ( $$_i1 /= 1 ) then
 4925.                               goto 10
 4925.                            endif
 4925.                            if ( $$_i2 == 1 ) exit
 4925.                         enddo
 4925.                         wtlon(-1 + $$_i3) = -dwork(-1 + $$_i3) + dwork(1) + 6.2831853071795862
 4925.                         mplon(-1 + $$_i3, 1) = 1
 4925.                         mplon(-1 + $$_i3, 2) = 1
 4925.                         $F_A33 = $t_S3
 4925.                         if ( $t_S3 > 0 ) then
 4925.                            $I_L4925_152 = 0
 4925. !dir$ ivdep
 4925.                            do
 4925.                               $$_fout(1 + $I_L4925_152) = 0.0
 4925.                               $I_L4925_152 = 1 + $I_L4925_152
 4925.                               if ( $I_L4925_152 >= $F_A33 ) exit
 4925.                            enddo
 4925.                         endif
 4925.                         $F_A34 = $t_S3
 4925.                         if ( $t_S3 > 0 ) then
 4925.                            $I_L4925_154 = 0
 4925. !dir$ ivdep
 4925.                            do
 4925.                               work(1 + $I_L4925_154) = 0.0
 4925.                               $I_L4925_154 = 1 + $I_L4925_154
 4925.                               if ( $I_L4925_154 >= $F_A34 ) exit
 4925.                            enddo
 4925.                         endif
 4925.                         if ( -1 + $$_i3 > 0 ) then
 4925.                            $I_L4925_144 = 0
 4925. !dir$ ivdep
 4925.                            do
 4925.                               $$_lni = mplon(1 + $I_L4925_144, 1)
 4925.                               if ( fieldin($$_lni, myfirstlat + $I_L4922_158) < 0.0 ) then
 4925.                                  $$_wln = wtlon(1 + $I_L4925_144)
 4925.                                  $$_lno = mplon(1 + $I_L4925_144, 2)
 4925.                                  $$_fout($$_lno) = _vu_plus( $$_fout($$_lno), fieldin($$_lni, myfirstlat + $I_L4922_158) * $$_wln )
 4925.                                  work($$_lno) = _vu_plus( work($$_lno), $$_wln )
 4925.                               endif
 4925.                               $I_L4925_144 = 1 + $I_L4925_144
 4925.                               if ( $I_L4925_144 >= -1 + $$_i3 ) exit
 4925.                            enddo
 4925.                         endif
 4925.    10                   continue
 4925.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 4925.                            $I_L4925_146 = 0
 4925. !dir$ ivdep
 4925.                            do
 4925.                               if ( work($$_ifirst + $I_L4925_146) == 0.0 ) then
 4925.                                  $$_fout($$_ifirst + $I_L4925_146) = 290.0
 4925.                               else
 4925.                                  $$_fout($$_ifirst + $I_L4925_146) = ( $$_fout($$_ifirst + $I_L4925_146) * 1.0/work($$_ifirst + $I_L4925_146) )
 4925.                               endif
 4925.                               $I_L4925_146 = 1 + $I_L4925_146
 4925.                               if ( $I_L4925_146 >= $$_ilast + -$$_ifirst + 1 ) exit
 4925.                            enddo
 4925.                         endif
 4925.                         _free( t$614 )
 4925.                      endif
 4925.                   endif
 4927.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 4927.                      $I_L4927_148 = 0
 4927. !dir$ ivdep
 4927.                      do
 4928.                         $$_ib = (ibperij%base_addr)($$_ifirst + $I_L4927_148, myfirstlat + $I_L4922_158, 0)
 4929.                         $$_jb = (jbperij%base_addr)($$_ifirst + $I_L4927_148, myfirstlat + $I_L4922_158, 0)
 4930.                         fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L4927_148)
 4931.                         $I_L4927_148 = 1 + $I_L4927_148
 4927.                         if ( $I_L4927_148 >= $$_ilast + -$$_ifirst + 1 ) exit
 4927.                      enddo
 4927.                   endif
 4932.                   $I_L4922_158 = 1 + $I_L4922_158
 4931.                   if ( $I_L4922_158 >= mylastlat + -myfirstlat + 1 ) exit
 4931.                enddo
 4921.                $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 4921.                _free( $pvt_Abase_seg18_D0 )
 4933.                $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 4933.             endif
 4933.          else if ( jbmax > 0 ) then
 4935.             $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4939.             $SC_jperijb_I61 = jperijb%dim_1%EX
 4939.             $SC_jperijb_I62 = jperijb%dim_1%LB
 4939.             $SC_jperijb_I64 = jperijb%dim_2%SM
 4939.             $SC_jperijb_I63 = jperijb%dim_2%EX
 4939.             $SC_jperijb_I65 = jperijb%dim_2%LB
 4938.             $SC_iperijb_I56 = iperijb%dim_1%EX
 4938.             $SC_iperijb_I57 = iperijb%dim_1%LB
 4938.             $SC_iperijb_I59 = iperijb%dim_2%SM
 4938.             $SC_iperijb_I58 = iperijb%dim_2%EX
 4938.             $SC_iperijb_I60 = iperijb%dim_2%LB
 4937.             $SC_ibmaxperjb_I54 = ibmaxperjb%dim_1%EX
 4937.             $SC_ibmaxperjb_I55 = ibmaxperjb%dim_1%LB
 4936.             $I_L4936_156 = 0
 4936. !$omp do schedule(static)
 4936.             do
 4937.                $t_S12 = (ibmaxperjb%base_addr)(1 + $I_L4936_156, 0)
 4937.                if ( $t_S12 > 0 ) then
 4937.                   $I_L4937_150 = 0
 4937. !dir$ ivdep
 4937.                   do
 4938.                      $$_i = (iperijb%base_addr)(1 + $I_L4937_150, 1 + $I_L4936_156, 0)
 4939.                      $$_j = (jperijb%base_addr)(1 + $I_L4937_150, 1 + $I_L4936_156, 0)
 4940.                      fieldout(1 + $I_L4937_150, 1 + $I_L4936_156) = fieldin($$_i, $$_j)
 4941.                      $I_L4937_150 = 1 + $I_L4937_150
 4937.                      if ( $I_L4937_150 >= $t_S12 ) exit
 4937.                   enddo
 4937.                endif
 4942.                $I_L4936_156 = 1 + $I_L4936_156
 4941.                if ( $I_L4936_156 >= jbmax ) exit
 4941.             enddo
 4943.             $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 4943.          endif
 4906.          _free( t$600 )
 4945.          return
 4945.       end
 4945.       
 4949.       
 4949.       subroutine seamaskibjbtoij_r2d( fieldin, fieldout )
 4949.       t$243 = ibmax
 4949.       t$244 = jbmax
 4950.       t$603 = _zla( 0, ibmax )
 4949.       t$604 = _zla( 0, ibmax )
 4950.       t$605 = _zla( 0, jbmax )
 4949.       t$606 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 4949.       t$245 = imax
 4949.       t$246 = jmax
 4951.       t$607 = _zla( 0, imax )
 4949.       t$608 = _zla( 0, imax )
 4951.       t$609 = _zla( 0, jmax )
 4949.       t$610 = _zla( 0, imax ) * _zla( 0, jmax )
 4962.       if ( reducedgrid ) then
 4964.          if ( mylastlat + -myfirstlat >= 0 ) then
 4963.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4964.             $I_L4964_46 = 0
 4964. !$omp do schedule(static)
 4964.             do
 4970.                $I_L4964_46 = 1 + $I_L4964_46
 4964.                if ( $I_L4964_46 >= mylastlat + -myfirstlat + 1 ) exit
 4964.             enddo
 4971.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 4971.          endif
 4971.       else if ( jbmax > 0 ) then
 4973.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 4977.          $SC_jperijb_I19 = jperijb%dim_1%EX
 4977.          $SC_jperijb_I20 = jperijb%dim_1%LB
 4977.          $SC_jperijb_I22 = jperijb%dim_2%SM
 4977.          $SC_jperijb_I21 = jperijb%dim_2%EX
 4977.          $SC_jperijb_I23 = jperijb%dim_2%LB
 4976.          $SC_iperijb_I14 = iperijb%dim_1%EX
 4976.          $SC_iperijb_I15 = iperijb%dim_1%LB
 4976.          $SC_iperijb_I17 = iperijb%dim_2%SM
 4976.          $SC_iperijb_I16 = iperijb%dim_2%EX
 4976.          $SC_iperijb_I18 = iperijb%dim_2%LB
 4975.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 4975.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 4974.          $I_L4974_50 = 0
 4974. !$omp do schedule(static)
 4974.          do
 4975.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L4974_50, 0)
 4975.             if ( $t_S2 > 0 ) then
 4975.                $I_L4975_48 = 0
 4975. !dir$ ivdep
 4975.                do
 4976.                   $$_i = (iperijb%base_addr)(1 + $I_L4975_48, 1 + $I_L4974_50, 0)
 4977.                   $$_j = (jperijb%base_addr)(1 + $I_L4975_48, 1 + $I_L4974_50, 0) + -myfirstlat + 1
 4978.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L4975_48, 1 + $I_L4974_50)
 4979.                   $I_L4975_48 = 1 + $I_L4975_48
 4975.                   if ( $I_L4975_48 >= $t_S2 ) exit
 4975.                enddo
 4975.             endif
 4980.             $I_L4974_50 = 1 + $I_L4974_50
 4979.             if ( $I_L4974_50 >= jbmax ) exit
 4979.          enddo
 4981.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 4981.       endif
 4983.       return
 4983.       end
 4983.       
 4986.       
 4986.       subroutine cyclicseamask_r( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 4986.       t$247 = dimin
 4992.       t$611 = _zla( 0, dimin )
 4986.       t$248 = dimout
 4993.       t$612 = _zla( 0, dimout )
 4986.       t$249 = ( 2 * dimin + 2 * dimout + 4 )
 5009.       t$613 = _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5009.       t$616 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 4986.       t$250 = ( dimin + dimout + 2 )
 5011.       t$617 = _zla( 0, ( dimin + dimout + 2 ) )
 4986.       t$618 = _zla( 0, ( dimin + dimout + 2 ) )
 4986.       t$619 = 2 * _zla( 0, ( dimin + dimout + 2 ) )
 5011.       t$621 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5012.       t$622 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5012.       t$624 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout )
 5010.       t$625 = 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout ) + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5010.       t$627 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) )
 4986.       t$614 = int( _alloc( 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) ) ), 8 )
 5009.       t$615 = t$614
 5011.       t$620 = t$614 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5012.       t$623 = t$614 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5010.       t$626 = t$614 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout )
 5025.       $iratio_S0 = dimin / dimout
 5026.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 5027.          if ( ilast + -ifirst >= 0 ) then
 5027.             $I_L5027_30 = 0
 5027. !dir$ ivdep
 5027.             do
 5029.                fieldout(ifirst + $I_L5027_30) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L5027_30 + 1)
 5030.                $I_L5027_30 = 1 + $I_L5027_30
 5027.                if ( $I_L5027_30 >= ilast + -ifirst + 1 ) exit
 5027.             enddo
 5027.          endif
 4986.          _free( t$614 )
 5032.       else if ( dimin <= 0 ) then
 5037.           _substr(t$1870,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 5037.          call _stop(  _substr(t$1870,1,47) )
 5037.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 5045.           _substr(t$1871,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 5045.          call _stop(  _substr(t$1871,1,64) )
 5045.       else
 5063.          flgin(1) = .true.
 5064.          flgin(2) = .true.
 5065.          flgin(3) = .false.
 5066.          flgin(4) = .true.
 5067.          flgin(5) = .true.
 5068.          flgout(1) = .true.
 5069.          flgout(2) = .true.
 5070.          flgout(3) = .false.
 5071.          flgout(4) = .true.
 5072.          flgout(5) = .true.
 5080.          $hin_S2 = ( 6.2831853071795862 * 1.0/dimin )
 5088.          $I_L5088_32 = 0
 5088. !dir$ ivdep
 5088.          do
 5089.             dwork(dimin + dimout + $I_L5088_32 + 3) = ( 5.0e-1 + real( $I_L5088_32, 8 ) ) * $hin_S2
 5090.             $I_L5088_32 = 1 + $I_L5088_32
 5088.             if ( $I_L5088_32 >= dimin ) exit
 5088.          enddo
 5095.          $hout_S4 = ( 6.2831853071795862 * 1.0/dimout )
 5104.          if ( dimout > 0 ) then
 5104.             $I_L5104_34 = 0
 5104. !dir$ ivdep
 5104.             do
 5105.                dwork(dimout + $I_L5104_34 + 2 * dimin + 4) = ( 5.0e-1 + $I_L5104_34 ) * $hout_S4
 5106.                $I_L5104_34 = 1 + $I_L5104_34
 5104.                if ( $I_L5104_34 >= dimout ) exit
 5104.             enddo
 5104.          endif
 5111.          $i1_S6 = 1
 5112.          $i2_S7 = 1
 5113.          $i3_S8 = 1
 5125.          $SC_flgout_I1 = flgout(2)
 5120.          $SC_flgin_I0 = flgin(2)
 5114.          do
 5115.             if ( dwork(dimout + $i2_S7 + 2 * dimin + 3) == dwork(dimin + dimout + $i1_S6 + 2) ) then
 5116.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 5117.                if ( $i3_S8 /= 1 ) then
 5118.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5119.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5120.                   if ( $SC_flgin_I0 == 0 ) then
 5121.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5122.                      if ( $i1_S6 > dimin / 2 ) then
 5122.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5122.                      endif
 5122.                   endif
 5124.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5125.                   if ( $SC_flgout_I1 == 0 ) then
 5126.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5127.                      if ( $i2_S7 > dimout / 2 ) then
 5127.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5127.                      endif
 5127.                   endif
 5127.                endif
 5130.                $i1_S6 = 1 + $i1_S6
 5131.                $i2_S7 = 1 + $i2_S7
 5133.             else if ( dwork(dimin + dimout + $i1_S6 + 2) < dwork(dimout + $i2_S7 + 2 * dimin + 3) ) then
 5134.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 5135.                if ( $i3_S8 /= 1 ) then
 5136.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5137.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5138.                   if ( $SC_flgin_I0 == 0 ) then
 5139.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5140.                      if ( $i1_S6 > dimin / 2 ) then
 5140.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5140.                      endif
 5140.                   endif
 5142.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5143.                   if ( $SC_flgout_I1 == 0 ) then
 5144.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5145.                      if ( $i2_S7 > dimout / 2 ) then
 5145.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5145.                      endif
 5145.                   endif
 5145.                endif
 5148.                $i1_S6 = 1 + $i1_S6
 5148.             else
 5151.                dwork($i3_S8) = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 5152.                if ( $i3_S8 /= 1 ) then
 5153.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5154.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5155.                   if ( $SC_flgin_I0 == 0 ) then
 5156.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5157.                      if ( $i1_S6 > dimin / 2 ) then
 5157.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5157.                      endif
 5157.                   endif
 5159.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5160.                   if ( $SC_flgout_I1 == 0 ) then
 5161.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5162.                      if ( $i2_S7 > dimout / 2 ) then
 5162.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5162.                      endif
 5162.                   endif
 5162.                endif
 5165.                $i2_S7 = 1 + $i2_S7
 5165.             endif
 5166.             $i3_S8 = 1 + $i3_S8
 5168.             if ( $i1_S6 > dimin ) exit
 5168.             if ( $i2_S7 > dimout ) exit
 5168.          enddo
 5171.          $i1_S11 = cvmg( $i1_S6, 1, $i1_S6 <= dimin )
 5172.          if ( $i2_S7 > dimout ) then
 5172.             $i2_S7 = 1
 5172.          endif
 5184.          $SC_flgout_I1 = flgout(2)
 5179.          $SC_flgin_I0 = flgin(2)
 5173.          do
 5173.             do
 5174.                if ( $i2_S7 /= 1 ) then
 5175.                   $SVU_P0 = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 5175.                   dwork($i3_S8) = $SVU_P0
 5176.                   wtlon(-1 + $i3_S8) = $SVU_P0 + -dwork(-1 + $i3_S8)
 5177.                   mplon(-1 + $i3_S8, 1) = 1
 5179.                   if ( $SC_flgin_I0 == 0 ) then
 5180.                      mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 5180.                   endif
 5183.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5184.                   if ( $SC_flgout_I1 == 0 ) then
 5185.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5186.                      if ( $i2_S7 > dimout / 2 ) then
 5186.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5186.                      endif
 5186.                   endif
 5189.                   $i2_S7 = cvmg( 1 + $i2_S7, 1, 1 + $i2_S7 <= dimout )
 5190.                   $i3_S8 = 1 + $i3_S8
 5190.                endif
 5192.                if ( $i1_S11 /= 1 ) then
 5193.                   dwork($i3_S8) = dwork(dimin + dimout + $i1_S11 + 2)
 5194.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5195.                   mplon(-1 + $i3_S8, 1) = $i1_S11
 5196.                   if ( $SC_flgin_I0 == 0 ) then
 5197.                      mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / 2
 5198.                      if ( $i1_S11 > dimin / 2 ) then
 5198.                         mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / -2
 5198.                      endif
 5198.                   endif
 5200.                   mplon(-1 + $i3_S8, 2) = 1
 5202.                   if ( $SC_flgout_I1 == 0 ) then
 5203.                      mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 5203.                   endif
 5207.                   $i1_S11 = cvmg( 1 + $i1_S11, 1, 1 + $i1_S11 <= dimin )
 5208.                   $i3_S8 = 1 + $i3_S8
 5208.                endif
 5210.                if ( $i1_S11 /= 1 ) then
 5210.                   goto 10
 5210.                endif
 5210.                if ( $i2_S7 == 1 ) exit
 5210.             enddo
 5212.             wtlon(-1 + $i3_S8) = -dwork(-1 + $i3_S8) + dwork(1) + 6.2831853071795862
 5213.             mplon(-1 + $i3_S8, 1) = 1
 5215.             if ( $SC_flgin_I0 == 0 ) then
 5216.                mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 5216.             endif
 5219.             mplon(-1 + $i3_S8, 2) = 1
 5221.             if ( $SC_flgout_I1 == 0 ) then
 5222.                mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 5222.             endif
 5229.             $F_A33 = dimout
 5229.             if ( dimout > 0 ) then
 5229.                $I_L5229_40 = 0
 5229. !dir$ ivdep
 5229.                do
 5229.                   fieldout(1 + $I_L5229_40) = 0.0
 5229.                   $I_L5229_40 = 1 + $I_L5229_40
 5229.                   if ( $I_L5229_40 >= $F_A33 ) exit
 5229.                enddo
 5229.             endif
 5230.             $F_A34 = dimout
 5230.             if ( dimout > 0 ) then
 5230.                $I_L5230_42 = 0
 5230. !dir$ ivdep
 5230.                do
 5230.                   work(1 + $I_L5230_42) = 0.0
 5230.                   $I_L5230_42 = 1 + $I_L5230_42
 5230.                   if ( $I_L5230_42 >= $F_A34 ) exit
 5230.                enddo
 5230.             endif
 5232.             if ( -1 + $i3_S8 > 0 ) then
 5232.                $I_L5232_36 = 0
 5232. !dir$ ivdep
 5232.                do
 5233.                   $lni_S13 = mplon(1 + $I_L5232_36, 1)
 5234.                   if ( fieldin($lni_S13) < 0.0 ) then
 5236.                      $wln_S14 = wtlon(1 + $I_L5232_36)
 5237.                      $lno_S15 = mplon(1 + $I_L5232_36, 2)
 5238.                      fieldout($lno_S15) = _vu_plus( fieldout($lno_S15), fieldin($lni_S13) * $wln_S14 )
 5239.                      work($lno_S15) = _vu_plus( work($lno_S15), $wln_S14 )
 5239.                   endif
 5241.                   $I_L5232_36 = 1 + $I_L5232_36
 5240.                   if ( $I_L5232_36 >= -1 + $i3_S8 ) exit
 5240.                enddo
 5240.             endif
 5240.    10       continue
 5243.             if ( ilast + -ifirst >= 0 ) then
 5243.                $I_L5243_38 = 0
 5243. !dir$ ivdep
 5243.                do
 5244.                   if ( work(ifirst + $I_L5243_38) == 0.0 ) then
 5245.                      fieldout(ifirst + $I_L5243_38) = 290.0
 5245.                   else
 5247.                      fieldout(ifirst + $I_L5243_38) = ( fieldout(ifirst + $I_L5243_38) * 1.0/work(ifirst + $I_L5243_38) )
 5247.                   endif
 5249.                   $I_L5243_38 = 1 + $I_L5243_38
 5248.                   if ( $I_L5243_38 >= ilast + -ifirst + 1 ) exit
 5248.                enddo
 5248.             endif
 4986.             _free( t$614 )
 4986.          endif
 5251.          return
 5251.       end
 5251.       
 5255.       
 5255.       subroutine aveboxijtoibjb_r2d( fieldin, fieldout )
 5255.       t$251 = imax
 5255.       t$252 = jmax
 5256.       t$628 = _zla( 0, imax )
 5255.       t$629 = _zla( 0, imax )
 5256.       t$630 = _zla( 0, jmax )
 5255.       t$631 = _zla( 0, imax ) * _zla( 0, jmax )
 5255.       t$253 = ibmax
 5255.       t$254 = jbmax
 5257.       t$632 = _zla( 0, ibmax )
 5255.       t$633 = _zla( 0, ibmax )
 5257.       t$634 = _zla( 0, jbmax )
 5255.       t$635 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 5259.       t$638 = 8 * _zla( 0, imax )
 5255.       t$636 = int( _alloc( 8 * _zla( 0, imax ) ), 8 )
 5259.       t$637 = t$636
 5269.       if ( reducedgrid ) then
 5271.          if ( mylastlat + -myfirstlat >= 0 ) then
 5270.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 5270.             $$_fout_BASE = _alloc( 8 * _zla( 0, imax ) )
 5270.             $pvt_Abase_seg18_D0 = $$_fout_BASE
 5270.             $snt_T4 = _mt_start_code( 5, _mt_rw_list(...) )
 5278.             $SC_jbperij_I49 = jbperij%dim_1%EX
 5278.             $SC_jbperij_I50 = jbperij%dim_1%LB
 5278.             $SC_jbperij_I52 = jbperij%dim_2%SM
 5278.             $SC_jbperij_I51 = jbperij%dim_2%EX
 5278.             $SC_jbperij_I53 = jbperij%dim_2%LB
 5277.             $SC_ibperij_I44 = ibperij%dim_1%EX
 5277.             $SC_ibperij_I45 = ibperij%dim_1%LB
 5277.             $SC_ibperij_I47 = ibperij%dim_2%SM
 5277.             $SC_ibperij_I46 = ibperij%dim_2%EX
 5277.             $SC_ibperij_I48 = ibperij%dim_2%LB
 5274.             $SC_imaxperj_I42 = imaxperj%dim_1%EX
 5274.             $SC_imaxperj_I43 = imaxperj%dim_1%LB
 5273.             $SC_mylastlon_I40 = mylastlon%dim_1%EX
 5273.             $SC_mylastlon_I41 = mylastlon%dim_1%LB
 5272.             $SC_myfirstlon_I38 = myfirstlon%dim_1%EX
 5272.             $SC_myfirstlon_I39 = myfirstlon%dim_1%LB
 5271.             $I_L5271_158 = 0
 5271. !$omp do schedule(static)
 5271.             do
 5272.                $$_ifirst = (myfirstlon%base_addr)(myfirstlat + $I_L5271_158, 0)
 5273.                $$_ilast = (mylastlon%base_addr)(myfirstlat + $I_L5271_158, 0)
 5274.                t$259 = imax
 5274.                t$647 = max( 0, imax )
 5274.                t$260 = (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0)
 5274.                t$648 = max( 0, (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) )
 5274.                t$261 = ( 2 * imax + 2 * (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) + 4 )
 5274.                t$649 = max( 0, t$261 )
 5274.                t$652 = 8 * max( 0, t$261 )
 5274.                t$262 = ( imax + (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) + 2 )
 5274.                t$653 = max( 0, t$262 )
 5274.                t$654 = max( 0, t$262 )
 5274.                t$655 = 2 * max( 0, t$262 )
 5274.                t$657 = 8 * max( 0, t$261 ) + 8 * max( 0, t$262 )
 5274.                t$658 = 8 * ( ( 8 * max( 0, t$261 ) + 8 * max( 0, t$262 ) + 7 ) / 8 )
 5274.                t$660 = 8 * ( ( 8 * max( 0, t$261 ) + 8 * max( 0, t$262 ) + 7 ) / 8 ) + 8 * (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0)
 5274.                t$661 = 8 * ( ( 7 + t$660 ) / 8 )
 5274.                t$663 = 8 * ( ( 7 + t$660 ) / 8 ) + 8 * max( 0, t$262 )
 5274.                t$650 = int( _alloc( 8 * ( ( 7 + t$660 ) / 8 ) + 8 * max( 0, t$262 ) ), 8 )
 5274.                t$651 = t$650
 5274.                t$656 = t$650 + 8 * max( 0, t$261 )
 5274.                t$659 = t$650 + 8 * ( ( 8 * max( 0, t$261 ) + 8 * max( 0, t$262 ) + 7 ) / 8 )
 5274.                t$662 = t$650 + 8 * ( ( 7 + t$660 ) / 8 )
 5274.                $$_iratio = imax / (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0)
 5274.                if ( -imax + $$_iratio * (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) == 0 ) then
 5274.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 5274.                      $I_L5274_138 = 0
 5274. !dir$ ivdep
 5274.                      do
 5274.                         $$_fout($$_ifirst + $I_L5274_138) = fieldin(-$$_iratio + $$_ifirst * $$_iratio + $$_iratio * $I_L5274_138 + 1, myfirstlat + $I_L5271_158)
 5274.                         $I_L5274_138 = 1 + $I_L5274_138
 5274.                         if ( $I_L5274_138 >= $$_ilast + -$$_ifirst + 1 ) exit
 5274.                      enddo
 5274.                   endif
 5274.                   _free( t$650 )
 5274.                else if ( imax <= 0 ) then
 5274.                    _substr(t$1913,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 5274.                   call _stop(  _substr(t$1913,1,47) )
 5274.                else
 5274.                   $$_ratio = ( real( imax, 8 ) * 1.0/( real( (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0), 8 ) ) )
 5274.                   $$_iin = 2 + int( real( -1 + (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0), 8 ) * $$_ratio )
 5274.                   if ( $$_iin > 1 + imax ) then
 5274.                       _substr(t$1914,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 5274.                      call _stop(  _substr(t$1914,1,64) )
 5274.                   else
 5274.                      $$_ioi = imax + (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) + 2
 5274.                      $$_hin = ( 6.2831853071795862 * 1.0/imax )
 5274.                      $I_L5274_140 = 0
 5274. !dir$ ivdep
 5274.                      do
 5274.                         dwork($$_ioi + $I_L5274_140 + 1) = ( 5.0e-1 + real( $I_L5274_140, 8 ) ) * $$_hin
 5274.                         $I_L5274_140 = 1 + $I_L5274_140
 5274.                         if ( $I_L5274_140 >= imax ) exit
 5274.                      enddo
 5274.                      $$_ioo = (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) + 2 * imax + 3
 5274.                      $$_hout = ( 6.2831853071795862 * 1.0/(imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0) )
 5274.                      $t_S3 = (imaxperj%base_addr)(myfirstlat + $I_L5271_158, 0)
 5274.                      if ( $t_S3 > 0 ) then
 5274.                         $I_L5274_142 = 0
 5274. !dir$ ivdep
 5274.                         do
 5274.                            dwork($$_ioo + $I_L5274_142 + 1) = ( 5.0e-1 + $I_L5274_142 ) * $$_hout
 5274.                            $I_L5274_142 = 1 + $I_L5274_142
 5274.                            if ( $I_L5274_142 >= $t_S3 ) exit
 5274.                         enddo
 5274.                      endif
 5274.                      $i1_S5 = 1
 5274.                      $$_i2 = 1
 5274.                      $$_i3 = 1
 5274.                      do
 5274.                         if ( dwork($$_ioi + $i1_S5) == dwork($$_i2 + $$_ioo) ) then
 5274.                            dwork($$_i3) = dwork($$_ioi + $i1_S5)
 5274.                            if ( $$_i3 /= 1 ) then
 5274.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 5274.                               mplon(-1 + $$_i3, 1) = $i1_S5
 5274.                               mplon(-1 + $$_i3, 2) = $$_i2
 5274.                            endif
 5274.                            $i1_S5 = 1 + $i1_S5
 5274.                            $$_i2 = 1 + $$_i2
 5274.                         else if ( dwork($$_ioi + $i1_S5) < dwork($$_i2 + $$_ioo) ) then
 5274.                            dwork($$_i3) = dwork($$_ioi + $i1_S5)
 5274.                            if ( $$_i3 /= 1 ) then
 5274.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 5274.                               mplon(-1 + $$_i3, 1) = $i1_S5
 5274.                               mplon(-1 + $$_i3, 2) = $$_i2
 5274.                            endif
 5274.                            $i1_S5 = 1 + $i1_S5
 5274.                         else
 5274.                            dwork($$_i3) = dwork($$_i2 + $$_ioo)
 5274.                            if ( $$_i3 /= 1 ) then
 5274.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 5274.                               mplon(-1 + $$_i3, 1) = $i1_S5
 5274.                               mplon(-1 + $$_i3, 2) = $$_i2
 5274.                            endif
 5274.                            $$_i2 = 1 + $$_i2
 5274.                         endif
 5274.                         $$_i3 = 1 + $$_i3
 5274.                         if ( $i1_S5 > imax ) exit
 5274.                         if ( $$_i2 > $t_S3 ) exit
 5274.                      enddo
 5274.                      $$_i1 = cvmg( $i1_S5, 1, $i1_S5 <= imax )
 5274.                      if ( $$_i2 > $t_S3 ) then
 5274.                         $$_i2 = 1
 5274.                      endif
 5274.                      do
 5274.                         do
 5274.                            if ( $$_i2 /= 1 ) then
 5274.                               $SVU_P0 = dwork($$_i2 + $$_ioo)
 5274.                               dwork($$_i3) = $SVU_P0
 5274.                               wtlon(-1 + $$_i3) = $SVU_P0 + -dwork(-1 + $$_i3)
 5274.                               mplon(-1 + $$_i3, 1) = 1
 5274.                               mplon(-1 + $$_i3, 2) = $$_i2
 5274.                               $$_i2 = cvmg( 1 + $$_i2, 1, 1 + $$_i2 <= $t_S3 )
 5274.                               $$_i3 = 1 + $$_i3
 5274.                            endif
 5274.                            if ( $$_i1 /= 1 ) then
 5274.                               dwork($$_i3) = dwork($$_i1 + $$_ioi)
 5274.                               wtlon(-1 + $$_i3) = dwork($$_i3) + -dwork(-1 + $$_i3)
 5274.                               mplon(-1 + $$_i3, 1) = $$_i1
 5274.                               mplon(-1 + $$_i3, 2) = 1
 5274.                               $$_i1 = cvmg( 1 + $$_i1, 1, 1 + $$_i1 <= imax )
 5274.                               $$_i3 = 1 + $$_i3
 5274.                            endif
 5274.                            if ( $$_i1 /= 1 ) then
 5274.                               goto 10
 5274.                            endif
 5274.                            if ( $$_i2 == 1 ) exit
 5274.                         enddo
 5274.                         wtlon(-1 + $$_i3) = -dwork(-1 + $$_i3) + dwork(1) + 6.2831853071795862
 5274.                         mplon(-1 + $$_i3, 1) = 1
 5274.                         mplon(-1 + $$_i3, 2) = 1
 5274.                         $F_A33 = $t_S3
 5274.                         if ( $t_S3 > 0 ) then
 5274.                            $I_L5274_152 = 0
 5274. !dir$ ivdep
 5274.                            do
 5274.                               $$_fout(1 + $I_L5274_152) = 0.0
 5274.                               $I_L5274_152 = 1 + $I_L5274_152
 5274.                               if ( $I_L5274_152 >= $F_A33 ) exit
 5274.                            enddo
 5274.                         endif
 5274.                         $F_A34 = $t_S3
 5274.                         if ( $t_S3 > 0 ) then
 5274.                            $I_L5274_154 = 0
 5274. !dir$ ivdep
 5274.                            do
 5274.                               work(1 + $I_L5274_154) = 0.0
 5274.                               $I_L5274_154 = 1 + $I_L5274_154
 5274.                               if ( $I_L5274_154 >= $F_A34 ) exit
 5274.                            enddo
 5274.                         endif
 5274.                         if ( -1 + $$_i3 > 0 ) then
 5274.                            $I_L5274_144 = 0
 5274. !dir$ ivdep
 5274.                            do
 5274.                               $$_lni = mplon(1 + $I_L5274_144, 1)
 5274.                               if ( fieldin($$_lni, myfirstlat + $I_L5271_158) /= -999.0 ) then
 5274.                                  $$_wln = wtlon(1 + $I_L5274_144)
 5274.                                  $$_lno = mplon(1 + $I_L5274_144, 2)
 5274.                                  $$_fout($$_lno) = _vu_plus( $$_fout($$_lno), fieldin($$_lni, myfirstlat + $I_L5271_158) * $$_wln )
 5274.                                  work($$_lno) = _vu_plus( work($$_lno), $$_wln )
 5274.                               endif
 5274.                               $I_L5274_144 = 1 + $I_L5274_144
 5274.                               if ( $I_L5274_144 >= -1 + $$_i3 ) exit
 5274.                            enddo
 5274.                         endif
 5274.    10                   continue
 5274.                         if ( $$_ilast + -$$_ifirst >= 0 ) then
 5274.                            $I_L5274_146 = 0
 5274. !dir$ ivdep
 5274.                            do
 5274.                               if ( work($$_ifirst + $I_L5274_146) == 0.0 ) then
 5274.                                  $$_fout($$_ifirst + $I_L5274_146) = -999.0
 5274.                               else
 5274.                                  $$_fout($$_ifirst + $I_L5274_146) = ( $$_fout($$_ifirst + $I_L5274_146) * 1.0/work($$_ifirst + $I_L5274_146) )
 5274.                               endif
 5274.                               $I_L5274_146 = 1 + $I_L5274_146
 5274.                               if ( $I_L5274_146 >= $$_ilast + -$$_ifirst + 1 ) exit
 5274.                            enddo
 5274.                         endif
 5274.                         _free( t$650 )
 5274.                      endif
 5274.                   endif
 5276.                   if ( $$_ilast + -$$_ifirst >= 0 ) then
 5276.                      $I_L5276_148 = 0
 5276. !dir$ ivdep
 5276.                      do
 5277.                         $$_ib = (ibperij%base_addr)($$_ifirst + $I_L5276_148, myfirstlat + $I_L5271_158, 0)
 5278.                         $$_jb = (jbperij%base_addr)($$_ifirst + $I_L5276_148, myfirstlat + $I_L5271_158, 0)
 5279.                         fieldout($$_ib, $$_jb) = $$_fout($$_ifirst + $I_L5276_148)
 5280.                         $I_L5276_148 = 1 + $I_L5276_148
 5276.                         if ( $I_L5276_148 >= $$_ilast + -$$_ifirst + 1 ) exit
 5276.                      enddo
 5276.                   endif
 5281.                   $I_L5271_158 = 1 + $I_L5271_158
 5280.                   if ( $I_L5271_158 >= mylastlat + -myfirstlat + 1 ) exit
 5280.                enddo
 5270.                $snt_T4 = _mt_end_code( 5, _mt_rw_list(...), $snt_T4 )
 5270.                _free( $pvt_Abase_seg18_D0 )
 5282.                $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 5282.             endif
 5282.          else if ( jbmax > 0 ) then
 5284.             $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 5288.             $SC_jperijb_I61 = jperijb%dim_1%EX
 5288.             $SC_jperijb_I62 = jperijb%dim_1%LB
 5288.             $SC_jperijb_I64 = jperijb%dim_2%SM
 5288.             $SC_jperijb_I63 = jperijb%dim_2%EX
 5288.             $SC_jperijb_I65 = jperijb%dim_2%LB
 5287.             $SC_iperijb_I56 = iperijb%dim_1%EX
 5287.             $SC_iperijb_I57 = iperijb%dim_1%LB
 5287.             $SC_iperijb_I59 = iperijb%dim_2%SM
 5287.             $SC_iperijb_I58 = iperijb%dim_2%EX
 5287.             $SC_iperijb_I60 = iperijb%dim_2%LB
 5286.             $SC_ibmaxperjb_I54 = ibmaxperjb%dim_1%EX
 5286.             $SC_ibmaxperjb_I55 = ibmaxperjb%dim_1%LB
 5285.             $I_L5285_156 = 0
 5285. !$omp do schedule(static)
 5285.             do
 5286.                $t_S12 = (ibmaxperjb%base_addr)(1 + $I_L5285_156, 0)
 5286.                if ( $t_S12 > 0 ) then
 5286.                   $I_L5286_150 = 0
 5286. !dir$ ivdep
 5286.                   do
 5287.                      $$_i = (iperijb%base_addr)(1 + $I_L5286_150, 1 + $I_L5285_156, 0)
 5288.                      $$_j = (jperijb%base_addr)(1 + $I_L5286_150, 1 + $I_L5285_156, 0)
 5289.                      fieldout(1 + $I_L5286_150, 1 + $I_L5285_156) = fieldin($$_i, $$_j)
 5290.                      $I_L5286_150 = 1 + $I_L5286_150
 5286.                      if ( $I_L5286_150 >= $t_S12 ) exit
 5286.                   enddo
 5286.                endif
 5291.                $I_L5285_156 = 1 + $I_L5285_156
 5290.                if ( $I_L5285_156 >= jbmax ) exit
 5290.             enddo
 5292.             $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 5292.          endif
 5255.          _free( t$636 )
 5294.          return
 5294.       end
 5294.       
 5298.       
 5298.       subroutine aveboxibjbtoij_r2d( fieldin, fieldout )
 5298.       t$255 = ibmax
 5298.       t$256 = jbmax
 5299.       t$639 = _zla( 0, ibmax )
 5298.       t$640 = _zla( 0, ibmax )
 5299.       t$641 = _zla( 0, jbmax )
 5298.       t$642 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 5298.       t$257 = imax
 5298.       t$258 = jmax
 5300.       t$643 = _zla( 0, imax )
 5298.       t$644 = _zla( 0, imax )
 5300.       t$645 = _zla( 0, jmax )
 5298.       t$646 = _zla( 0, imax ) * _zla( 0, jmax )
 5311.       if ( reducedgrid ) then
 5313.          if ( mylastlat + -myfirstlat >= 0 ) then
 5312.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 5313.             $I_L5313_46 = 0
 5313. !$omp do schedule(static)
 5313.             do
 5319.                $I_L5313_46 = 1 + $I_L5313_46
 5313.                if ( $I_L5313_46 >= mylastlat + -myfirstlat + 1 ) exit
 5313.             enddo
 5320.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
 5320.          endif
 5320.       else if ( jbmax > 0 ) then
 5322.          $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
 5326.          $SC_jperijb_I19 = jperijb%dim_1%EX
 5326.          $SC_jperijb_I20 = jperijb%dim_1%LB
 5326.          $SC_jperijb_I22 = jperijb%dim_2%SM
 5326.          $SC_jperijb_I21 = jperijb%dim_2%EX
 5326.          $SC_jperijb_I23 = jperijb%dim_2%LB
 5325.          $SC_iperijb_I14 = iperijb%dim_1%EX
 5325.          $SC_iperijb_I15 = iperijb%dim_1%LB
 5325.          $SC_iperijb_I17 = iperijb%dim_2%SM
 5325.          $SC_iperijb_I16 = iperijb%dim_2%EX
 5325.          $SC_iperijb_I18 = iperijb%dim_2%LB
 5324.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%EX
 5324.          $SC_ibmaxperjb_I13 = ibmaxperjb%dim_1%LB
 5323.          $I_L5323_50 = 0
 5323. !$omp do schedule(static)
 5323.          do
 5324.             $t_S2 = (ibmaxperjb%base_addr)(1 + $I_L5323_50, 0)
 5324.             if ( $t_S2 > 0 ) then
 5324.                $I_L5324_48 = 0
 5324. !dir$ ivdep
 5324.                do
 5325.                   $$_i = (iperijb%base_addr)(1 + $I_L5324_48, 1 + $I_L5323_50, 0)
 5326.                   $$_j = (jperijb%base_addr)(1 + $I_L5324_48, 1 + $I_L5323_50, 0) + -myfirstlat + 1
 5327.                   fieldout($$_i, $$_j) = fieldin(1 + $I_L5324_48, 1 + $I_L5323_50)
 5328.                   $I_L5324_48 = 1 + $I_L5324_48
 5324.                   if ( $I_L5324_48 >= $t_S2 ) exit
 5324.                enddo
 5324.             endif
 5329.             $I_L5323_50 = 1 + $I_L5323_50
 5328.             if ( $I_L5323_50 >= jbmax ) exit
 5328.          enddo
 5330.          $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 5330.       endif
 5332.       return
 5332.       end
 5332.       
 5335.       
 5335.       subroutine cyclicavebox_r( dimin, dimout, fieldin, fieldout, ifirst, ilast )
 5335.       t$259 = dimin
 5341.       t$647 = _zla( 0, dimin )
 5335.       t$260 = dimout
 5342.       t$648 = _zla( 0, dimout )
 5335.       t$261 = ( 2 * dimin + 2 * dimout + 4 )
 5358.       t$649 = _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5358.       t$652 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5335.       t$262 = ( dimin + dimout + 2 )
 5360.       t$653 = _zla( 0, ( dimin + dimout + 2 ) )
 5335.       t$654 = _zla( 0, ( dimin + dimout + 2 ) )
 5335.       t$655 = 2 * _zla( 0, ( dimin + dimout + 2 ) )
 5360.       t$657 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5361.       t$658 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5361.       t$660 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout )
 5359.       t$661 = 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout ) + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5359.       t$663 = 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) )
 5335.       t$650 = int( _alloc( 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, dimout ) + 16 * _zla( 0, ( dimin + dimout + 2 ) ) ), 8 )
 5358.       t$651 = t$650
 5360.       t$656 = t$650 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) )
 5361.       t$659 = t$650 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) )
 5359.       t$662 = t$650 + 8 * _zla( 0, ( 2 * dimin + 2 * dimout + 4 ) ) + 8 * _zla( 0, ( dimin + dimout + 2 ) ) + 8 * _zla( 0, dimout )
 5374.       $iratio_S0 = dimin / dimout
 5375.       if ( -dimin + dimout * $iratio_S0 == 0 ) then
 5376.          if ( ilast + -ifirst >= 0 ) then
 5376.             $I_L5376_30 = 0
 5376. !dir$ ivdep
 5376.             do
 5378.                fieldout(ifirst + $I_L5376_30) = fieldin(-$iratio_S0 + ifirst * $iratio_S0 + $iratio_S0 * $I_L5376_30 + 1)
 5379.                $I_L5376_30 = 1 + $I_L5376_30
 5376.                if ( $I_L5376_30 >= ilast + -ifirst + 1 ) exit
 5376.             enddo
 5376.          endif
 5335.          _free( t$650 )
 5381.       else if ( dimin <= 0 ) then
 5386.           _substr(t$1913,1,47) = '**(CyclicLinear)** ERROR: Few input data points'
 5386.          call _stop(  _substr(t$1913,1,47) )
 5386.       else if ( ( 2 + int( real( -1 + dimout, 8 ) * ( real( dimin, 8 ) * 1.0/( real( dimout, 8 ) ) ) ) ) > 1 + dimin ) then
 5394.           _substr(t$1914,1,64) = '**(CyclicCubicSpline)** ERROR: Output data out of input interval'
 5394.          call _stop(  _substr(t$1914,1,64) )
 5394.       else
 5412.          flgin(1) = .true.
 5413.          flgin(2) = .true.
 5414.          flgin(3) = .false.
 5415.          flgin(4) = .true.
 5416.          flgin(5) = .true.
 5417.          flgout(1) = .true.
 5418.          flgout(2) = .true.
 5419.          flgout(3) = .false.
 5420.          flgout(4) = .true.
 5421.          flgout(5) = .true.
 5429.          $hin_S2 = ( 6.2831853071795862 * 1.0/dimin )
 5437.          $I_L5437_32 = 0
 5437. !dir$ ivdep
 5437.          do
 5438.             dwork(dimin + dimout + $I_L5437_32 + 3) = ( 5.0e-1 + real( $I_L5437_32, 8 ) ) * $hin_S2
 5439.             $I_L5437_32 = 1 + $I_L5437_32
 5437.             if ( $I_L5437_32 >= dimin ) exit
 5437.          enddo
 5444.          $hout_S4 = ( 6.2831853071795862 * 1.0/dimout )
 5453.          if ( dimout > 0 ) then
 5453.             $I_L5453_34 = 0
 5453. !dir$ ivdep
 5453.             do
 5454.                dwork(dimout + $I_L5453_34 + 2 * dimin + 4) = ( 5.0e-1 + $I_L5453_34 ) * $hout_S4
 5455.                $I_L5453_34 = 1 + $I_L5453_34
 5453.                if ( $I_L5453_34 >= dimout ) exit
 5453.             enddo
 5453.          endif
 5460.          $i1_S6 = 1
 5461.          $i2_S7 = 1
 5462.          $i3_S8 = 1
 5474.          $SC_flgout_I1 = flgout(2)
 5469.          $SC_flgin_I0 = flgin(2)
 5463.          do
 5464.             if ( dwork(dimout + $i2_S7 + 2 * dimin + 3) == dwork(dimin + dimout + $i1_S6 + 2) ) then
 5465.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 5466.                if ( $i3_S8 /= 1 ) then
 5467.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5468.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5469.                   if ( $SC_flgin_I0 == 0 ) then
 5470.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5471.                      if ( $i1_S6 > dimin / 2 ) then
 5471.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5471.                      endif
 5471.                   endif
 5473.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5474.                   if ( $SC_flgout_I1 == 0 ) then
 5475.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5476.                      if ( $i2_S7 > dimout / 2 ) then
 5476.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5476.                      endif
 5476.                   endif
 5476.                endif
 5479.                $i1_S6 = 1 + $i1_S6
 5480.                $i2_S7 = 1 + $i2_S7
 5482.             else if ( dwork(dimin + dimout + $i1_S6 + 2) < dwork(dimout + $i2_S7 + 2 * dimin + 3) ) then
 5483.                dwork($i3_S8) = dwork(dimin + dimout + $i1_S6 + 2)
 5484.                if ( $i3_S8 /= 1 ) then
 5485.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5486.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5487.                   if ( $SC_flgin_I0 == 0 ) then
 5488.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5489.                      if ( $i1_S6 > dimin / 2 ) then
 5489.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5489.                      endif
 5489.                   endif
 5491.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5492.                   if ( $SC_flgout_I1 == 0 ) then
 5493.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5494.                      if ( $i2_S7 > dimout / 2 ) then
 5494.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5494.                      endif
 5494.                   endif
 5494.                endif
 5497.                $i1_S6 = 1 + $i1_S6
 5497.             else
 5500.                dwork($i3_S8) = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 5501.                if ( $i3_S8 /= 1 ) then
 5502.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5503.                   mplon(-1 + $i3_S8, 1) = $i1_S6
 5504.                   if ( $SC_flgin_I0 == 0 ) then
 5505.                      mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / 2
 5506.                      if ( $i1_S6 > dimin / 2 ) then
 5506.                         mplon(-1 + $i3_S8, 1) = $i1_S6 + dimin / -2
 5506.                      endif
 5506.                   endif
 5508.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5509.                   if ( $SC_flgout_I1 == 0 ) then
 5510.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5511.                      if ( $i2_S7 > dimout / 2 ) then
 5511.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5511.                      endif
 5511.                   endif
 5511.                endif
 5514.                $i2_S7 = 1 + $i2_S7
 5514.             endif
 5515.             $i3_S8 = 1 + $i3_S8
 5517.             if ( $i1_S6 > dimin ) exit
 5517.             if ( $i2_S7 > dimout ) exit
 5517.          enddo
 5520.          $i1_S11 = cvmg( $i1_S6, 1, $i1_S6 <= dimin )
 5521.          if ( $i2_S7 > dimout ) then
 5521.             $i2_S7 = 1
 5521.          endif
 5533.          $SC_flgout_I1 = flgout(2)
 5528.          $SC_flgin_I0 = flgin(2)
 5522.          do
 5522.             do
 5523.                if ( $i2_S7 /= 1 ) then
 5524.                   $SVU_P0 = dwork(dimout + $i2_S7 + 2 * dimin + 3)
 5524.                   dwork($i3_S8) = $SVU_P0
 5525.                   wtlon(-1 + $i3_S8) = $SVU_P0 + -dwork(-1 + $i3_S8)
 5526.                   mplon(-1 + $i3_S8, 1) = 1
 5528.                   if ( $SC_flgin_I0 == 0 ) then
 5529.                      mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 5529.                   endif
 5532.                   mplon(-1 + $i3_S8, 2) = $i2_S7
 5533.                   if ( $SC_flgout_I1 == 0 ) then
 5534.                      mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / 2
 5535.                      if ( $i2_S7 > dimout / 2 ) then
 5535.                         mplon(-1 + $i3_S8, 2) = $i2_S7 + dimout / -2
 5535.                      endif
 5535.                   endif
 5538.                   $i2_S7 = cvmg( 1 + $i2_S7, 1, 1 + $i2_S7 <= dimout )
 5539.                   $i3_S8 = 1 + $i3_S8
 5539.                endif
 5541.                if ( $i1_S11 /= 1 ) then
 5542.                   dwork($i3_S8) = dwork(dimin + dimout + $i1_S11 + 2)
 5543.                   wtlon(-1 + $i3_S8) = dwork($i3_S8) + -dwork(-1 + $i3_S8)
 5544.                   mplon(-1 + $i3_S8, 1) = $i1_S11
 5545.                   if ( $SC_flgin_I0 == 0 ) then
 5546.                      mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / 2
 5547.                      if ( $i1_S11 > dimin / 2 ) then
 5547.                         mplon(-1 + $i3_S8, 1) = $i1_S11 + dimin / -2
 5547.                      endif
 5547.                   endif
 5549.                   mplon(-1 + $i3_S8, 2) = 1
 5551.                   if ( $SC_flgout_I1 == 0 ) then
 5552.                      mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 5552.                   endif
 5556.                   $i1_S11 = cvmg( 1 + $i1_S11, 1, 1 + $i1_S11 <= dimin )
 5557.                   $i3_S8 = 1 + $i3_S8
 5557.                endif
 5559.                if ( $i1_S11 /= 1 ) then
 5559.                   goto 10
 5559.                endif
 5559.                if ( $i2_S7 == 1 ) exit
 5559.             enddo
 5561.             wtlon(-1 + $i3_S8) = -dwork(-1 + $i3_S8) + dwork(1) + 6.2831853071795862
 5562.             mplon(-1 + $i3_S8, 1) = 1
 5564.             if ( $SC_flgin_I0 == 0 ) then
 5565.                mplon(-1 + $i3_S8, 1) = 1 + dimin / 2
 5565.             endif
 5568.             mplon(-1 + $i3_S8, 2) = 1
 5570.             if ( $SC_flgout_I1 == 0 ) then
 5571.                mplon(-1 + $i3_S8, 2) = 1 + dimout / 2
 5571.             endif
 5578.             $F_A33 = dimout
 5578.             if ( dimout > 0 ) then
 5578.                $I_L5578_40 = 0
 5578. !dir$ ivdep
 5578.                do
 5578.                   fieldout(1 + $I_L5578_40) = 0.0
 5578.                   $I_L5578_40 = 1 + $I_L5578_40
 5578.                   if ( $I_L5578_40 >= $F_A33 ) exit
 5578.                enddo
 5578.             endif
 5579.             $F_A34 = dimout
 5579.             if ( dimout > 0 ) then
 5579.                $I_L5579_42 = 0
 5579. !dir$ ivdep
 5579.                do
 5579.                   work(1 + $I_L5579_42) = 0.0
 5579.                   $I_L5579_42 = 1 + $I_L5579_42
 5579.                   if ( $I_L5579_42 >= $F_A34 ) exit
 5579.                enddo
 5579.             endif
 5581.             if ( -1 + $i3_S8 > 0 ) then
 5581.                $I_L5581_36 = 0
 5581. !dir$ ivdep
 5581.                do
 5582.                   $lni_S13 = mplon(1 + $I_L5581_36, 1)
 5583.                   if ( fieldin($lni_S13) /= -999.0 ) then
 5584.                      $wln_S14 = wtlon(1 + $I_L5581_36)
 5585.                      $lno_S15 = mplon(1 + $I_L5581_36, 2)
 5586.                      fieldout($lno_S15) = _vu_plus( fieldout($lno_S15), fieldin($lni_S13) * $wln_S14 )
 5587.                      work($lno_S15) = _vu_plus( work($lno_S15), $wln_S14 )
 5587.                   endif
 5589.                   $I_L5581_36 = 1 + $I_L5581_36
 5588.                   if ( $I_L5581_36 >= -1 + $i3_S8 ) exit
 5588.                enddo
 5588.             endif
 5588.    10       continue
 5591.             if ( ilast + -ifirst >= 0 ) then
 5591.                $I_L5591_38 = 0
 5591. !dir$ ivdep
 5591.                do
 5592.                   if ( work(ifirst + $I_L5591_38) == 0.0 ) then
 5593.                      fieldout(ifirst + $I_L5591_38) = -999.0
 5593.                   else
 5595.                      fieldout(ifirst + $I_L5591_38) = ( fieldout(ifirst + $I_L5591_38) * 1.0/work(ifirst + $I_L5591_38) )
 5595.                   endif
 5597.                   $I_L5591_38 = 1 + $I_L5591_38
 5596.                   if ( $I_L5591_38 >= ilast + -ifirst + 1 ) exit
 5596.                enddo
 5596.             endif
 5335.             _free( t$650 )
 5335.          endif
 5599.          return
 5599.       end
 5599.       
 5603.       
 5603.       subroutine vfirec( iunit, a, n, type )
 5603.       t$263 = n
 5607.       t$664 = _zla( 0, n )
 5603.       t$665 = _len( type )
 5647.       $Unit_temp_O0 = iunit
 5647.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$265,  _substr(t$264,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 5647.       nn = $_IOitem_P0(0)
 5647.       nbits = $_IOitem_P0(1)
 5647.       bias = $_IOitem_P1(0)
 5647.       fact = $_IOitem_P1(1)
 5649.       if ( nn + -n /= 0 ) then
 5650.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Word count mismatch on vfirec record ', 0x800600000000L ) ) )
 5651.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Words on record - ', 0x800600000000L ), _iotype( nn, 0x2000200000000L ) ) )
 5652.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' Words expected  - ', 0x800600000000L ), _iotype( n, 0x2000200000000L ) ) )
 5653.           _substr(t$1928,1,6) = 'vfirec'
 5653.          call _stop(  _substr(t$1928,1,6) )
 5653.       else
 5656.          $nvalline_S1 = 468 / nbits
 5657.          $nchs_S4 = nbits / 6
 5659.          if ( ( n /= 1 .and. xor( $nvalline_S1, -1 + n ) < 0 ) == 0 ) then
 5659.             $t_S9 = ( n + $nvalline_S1 + -1 ) / $nvalline_S1
 5662.             if ( $nvalline_S1 <= 0 ) then
 5659.                $I_L5659_35 = 0
 5659.                do
 5660.                   $Unit_temp_O1 = iunit
 5660.                   _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$267,  _substr(t$266,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(line,1,80), 0x800600000000L ) ) )
 5681.                   $I_L5659_35 = 1 + $I_L5659_35
 5679.                   if ( $I_L5659_35 >= $t_S9 ) exit
 5679.                enddo
 5679.             else if ( $nchs_S4 > 0 ) then
 5659.                $I_L5659_43 = 0
 5659.                do
 5660.                   $Unit_temp_O1 = iunit
 5660.                   _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$267,  _substr(t$266,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(line,1,80), 0x800600000000L ) ) )
 5662.                   $I_L5662_39 = 0
 5662.                   do
 5663.                      $isval_S8 = 0
 5664.                      if ( ( $I_L5662_39 + $nvalline_S1 * $I_L5659_43 + 1 ) > n ) exit
 5665.                      $I_L5665_29 = 0
 5665. !dir$ unroll 2
 5665.                      do
 5667.                          _substr(cs,1,1) =  _substr(line,( $I_L5665_29 + $nchs_S4 * $I_L5662_39 + 1 ),1)
 5668.                         $ics_S7 = int(  _substr(cs,1,1) )
 5676.                         $isval_S8 = or( $isval_S8, cvmg( lshift_ec( cvmg( cvmg( -61 + $ics_S7, -55 + $ics_S7, $ics_S7 > 90 ), -48 + $ics_S7, $ics_S7 > 57 ), abs( ( 6 * $nchs_S4 + -6 * $I_L5665_29 + -6 ) ) ), rshift_ec( cvmg( cvmg( -61 + $ics_S7, -55 + $ics_S7, $ics_S7 > 90 ), -48 + $ics_S7, $ics_S7 > 57 ), abs( ( 6 * $nchs_S4 + -6 * $I_L5665_29 + -6 ) ) ), ( 6 * $nchs_S4 + -6 * $I_L5665_29 + -6 ) > 0 ) )
 5677.                         $I_L5665_29 = 1 + $I_L5665_29
 5665.                         if ( $I_L5665_29 >= $nchs_S4 ) exit
 5665.                      enddo
 5678.                      a($I_L5662_39 + $nvalline_S1 * $I_L5659_43 + 1) = real( $isval_S8, 8 )
 5679.                      $I_L5662_39 = 1 + $I_L5662_39
 5677.                      if ( $I_L5662_39 >= $nvalline_S1 ) exit
 5677.                   enddo
 5681.                   $I_L5659_43 = 1 + $I_L5659_43
 5679.                   if ( $I_L5659_43 >= $t_S9 ) exit
 5679.                enddo
 5679.             else
 5659.                $I_L5659_41 = 0
 5659.                do
 5660.                   $Unit_temp_O1 = iunit
 5660.                   _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$267,  _substr(t$266,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(line,1,80), 0x800600000000L ) ) )
 5662.                   $I_L5662_37 = 0
 5662. !dir$ ivdep
 5662.                   do
 5664.                      if ( ( $I_L5662_37 + $nvalline_S1 * $I_L5659_41 + 1 ) > n ) exit
 5678.                      a($I_L5662_37 + $nvalline_S1 * $I_L5659_41 + 1) = 0.0
 5679.                      $I_L5662_37 = 1 + $I_L5662_37
 5677.                      if ( $I_L5662_37 >= $nvalline_S1 ) exit
 5677.                   enddo
 5681.                   $I_L5659_41 = 1 + $I_L5659_41
 5679.                   if ( $I_L5659_41 >= $t_S9 ) exit
 5679.                enddo
 5679.             endif
 5679.          endif
 5683.          $facti_S10 = 1.0/fact
 5685.          if (  _substr(type,1,_len( type )) == 'LIN' ) then
 5686.             if ( n > 0 ) then
 5686.                $I_L5686_31 = 0
 5686. !dir$ ivdep
 5686.                do
 5688.                   a(1 + $I_L5686_31) = a(1 + $I_L5686_31) * $facti_S10 + -bias
 5691.                   $I_L5686_31 = 1 + $I_L5686_31
 5686.                   if ( $I_L5686_31 >= n ) exit
 5686.                enddo
 5686.             endif
 5692.          else if (  _substr(type,1,_len( type )) == 'LOG' ) then
 5693.             $scfct_S12 = 2.0 ** ( -1 + nbits )
 5694.             if ( n > 0 ) then
 5694.                $I_L5694_33 = 0
 5694. !dir$ ivdep
 5694.                do
 5695.                   a(1 + $I_L5694_33) = sign( 1.0, a(1 + $I_L5694_33) + -$scfct_S12 ) * 10.0 ** ( -10.0 + abs( 20.0 * ( -1.0 + ( a(1 + $I_L5694_33) * 1.0/$scfct_S12 ) ) ) )
 5697.                   $I_L5694_33 = 1 + $I_L5694_33
 5694.                   if ( $I_L5694_33 >= n ) exit
 5694.                enddo
 5694.             endif
 5694.          endif
 5694.       endif
 5699.       return
 5699.       end
 5699.       
 5701.       
 5701.       subroutine vfinit( vc )
 5714.       $I_L5714_4 = 0
 5714.       do
 5715.           _substr(vc($I_L5714_4),1,1) =  _substr(vcscr($I_L5714_4),1,1)
 5716.          $I_L5714_4 = 1 + $I_L5714_4
 5714.          if ( $I_L5714_4 >= 64 ) exit
 5714.       enddo
 5717.       return
 5717.       end
 5717.       
  178.       
  178.       module utils
 5719.       return
 5719.       end
 5719.       
