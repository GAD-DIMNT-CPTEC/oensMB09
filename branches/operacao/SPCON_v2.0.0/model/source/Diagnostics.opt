       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Diagnostics.f90
       !        File                  :  Diagnostics.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  306.       
  306.       subroutine initdiagnostics( doprec_in, dodyn_in, colrad, mmax_in, nmax_in, mnmax_in, imaxnew_in, jmaxnew_in, kmaxnew_in, ibmax_in, jbmax_in, ibmaxperjb_in, fnamedtable )
  306.       t$12 = jmaxnew_in
  347.       t$242 = _zla( 0, jmaxnew_in )
  347.       ibmaxperjb_in%dim_1%LB = 1
  306.       t$243 = _len( fnamedtable )
  351.       t$246 = 8 * _zla( 0, jmaxnew_in )
  352.       irqav%header%el_len = 32
  352.       irqav%header%assoc = 0
  352.       irqav%header%ptr_alloc = 0
  352.       irqav%header%p_or_a = 2
  352.       irqav%header%a_contig = 1
  352.       irqav%header%dv_versn = 2
  352.       irqav%header%dv_smunit = 32
  352.       irqav%header%d_type = 0
  352.       irqav%header%n_params = 0
  352.       irqav%header%pad_codim = 0
  352.       irqav%header%n_codim = 0
  352.       irqav%header%pad_dim = 0
  352.       irqav%header%n_dim = 1
  352.       irqav%header%d_type_idx = 10
  352.       irqav%header%typ_code = 131074
  352.       irqav%header%orig_base = 0
  352.       irqav%header%orig_size = 0
  352.       irqav%dim_1%LB = 1
  352.       irqav%dim_1%EX = 0
  352.       irqav%dim_1%SM = 1
  353.       irqcf%header%el_len = 32
  353.       irqcf%header%assoc = 0
  353.       irqcf%header%ptr_alloc = 0
  353.       irqcf%header%p_or_a = 2
  353.       irqcf%header%a_contig = 1
  353.       irqcf%header%dv_versn = 2
  353.       irqcf%header%dv_smunit = 32
  353.       irqcf%header%d_type = 0
  353.       irqcf%header%n_params = 0
  353.       irqcf%header%pad_codim = 0
  353.       irqcf%header%n_codim = 0
  353.       irqcf%header%pad_dim = 0
  353.       irqcf%header%n_dim = 1
  353.       irqcf%header%d_type_idx = 10
  353.       irqcf%header%typ_code = 131074
  353.       irqcf%header%orig_base = 0
  353.       irqcf%header%orig_size = 0
  353.       irqcf%dim_1%LB = 1
  353.       irqcf%dim_1%EX = 0
  353.       irqcf%dim_1%SM = 1
  350.       irqu%header%el_len = 32
  350.       irqu%header%assoc = 0
  350.       irqu%header%ptr_alloc = 0
  350.       irqu%header%p_or_a = 2
  350.       irqu%header%a_contig = 1
  350.       irqu%header%dv_versn = 2
  350.       irqu%header%dv_smunit = 32
  350.       irqu%header%d_type = 0
  350.       irqu%header%n_params = 0
  350.       irqu%header%pad_codim = 0
  350.       irqu%header%n_codim = 0
  350.       irqu%header%pad_dim = 0
  350.       irqu%header%n_dim = 1
  350.       irqu%header%d_type_idx = 21
  350.       irqu%header%typ_code = 131077
  350.       irqu%header%orig_base = 0
  350.       irqu%header%orig_size = 0
  350.       irqu%dim_1%LB = 1
  350.       irqu%dim_1%EX = 0
  350.       irqu%dim_1%SM = 1
  355.       jpavl%header%el_len = 32
  355.       jpavl%header%assoc = 0
  355.       jpavl%header%ptr_alloc = 0
  355.       jpavl%header%p_or_a = 2
  355.       jpavl%header%a_contig = 1
  355.       jpavl%header%dv_versn = 2
  355.       jpavl%header%dv_smunit = 32
  355.       jpavl%header%d_type = 0
  355.       jpavl%header%n_params = 0
  355.       jpavl%header%pad_codim = 0
  355.       jpavl%header%n_codim = 0
  355.       jpavl%header%pad_dim = 0
  355.       jpavl%header%n_dim = 1
  355.       jpavl%header%d_type_idx = 10
  355.       jpavl%header%typ_code = 131074
  355.       jpavl%header%orig_base = 0
  355.       jpavl%header%orig_size = 0
  355.       jpavl%dim_1%LB = 1
  355.       jpavl%dim_1%EX = 0
  355.       jpavl%dim_1%SM = 1
  354.       jpcf%header%el_len = 32
  354.       jpcf%header%assoc = 0
  354.       jpcf%header%ptr_alloc = 0
  354.       jpcf%header%p_or_a = 2
  354.       jpcf%header%a_contig = 1
  354.       jpcf%header%dv_versn = 2
  354.       jpcf%header%dv_smunit = 32
  354.       jpcf%header%d_type = 0
  354.       jpcf%header%n_params = 0
  354.       jpcf%header%pad_codim = 0
  354.       jpcf%header%n_codim = 0
  354.       jpcf%header%pad_dim = 0
  354.       jpcf%header%n_dim = 1
  354.       jpcf%header%d_type_idx = 10
  354.       jpcf%header%typ_code = 131074
  354.       jpcf%header%orig_base = 0
  354.       jpcf%header%orig_size = 0
  354.       jpcf%dim_1%LB = 1
  354.       jpcf%dim_1%EX = 0
  354.       jpcf%dim_1%SM = 1
  384.       kfrq%header%el_len = 32
  384.       kfrq%header%assoc = 0
  384.       kfrq%header%ptr_alloc = 0
  384.       kfrq%header%p_or_a = 2
  384.       kfrq%header%a_contig = 1
  384.       kfrq%header%dv_versn = 2
  384.       kfrq%header%dv_smunit = 32
  384.       kfrq%header%d_type = 0
  384.       kfrq%header%n_params = 0
  384.       kfrq%header%pad_codim = 0
  384.       kfrq%header%n_codim = 0
  384.       kfrq%header%pad_dim = 0
  384.       kfrq%header%n_dim = 1
  384.       kfrq%header%d_type_idx = 10
  384.       kfrq%header%typ_code = 131074
  384.       kfrq%header%orig_base = 0
  384.       kfrq%header%orig_size = 0
  384.       kfrq%dim_1%LB = 1
  384.       kfrq%dim_1%EX = 0
  384.       kfrq%dim_1%SM = 1
  306.       t$244 = int( _alloc( 8 * _zla( 0, jmaxnew_in ) ), 8 )
  384.       t$245 = t$244
  387.       mmax = mmax_in
  388.       nmax = nmax_in
  389.       mnmax = mnmax_in
  390.       imaxnew = imaxnew_in
  391.       jmaxnew = jmaxnew_in
  392.       kmaxnew = kmaxnew_in
  393.       ibmax = ibmax_in
  394.       jbmax = jbmax_in
  395.       ibmaxperjb%header%a_contig = 1
  395.       ibmaxperjb%dim_1%LB = 1
  395.       ibmaxperjb%dim_1%EX = _zla( 0, jbmax_in )
  395.       ibmaxperjb%dim_1%SM = 1
  395.       $_allo_P25(0) = 0x1000000000001L
  395.       $_allo_P25(1) = loc( ibmaxperjb )
  395.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
  396.       $F_A33 = _zla( 0, jbmax_in )
  396.       if ( jbmax_in > 0 ) then
  396.          $SC_ibmaxperjb_in_I52 = ibmaxperjb_in%dim_1%SM
  396.          $SC_ibmaxperjb_in_I51 = ibmaxperjb_in%dim_1%EX
  396.          $I_L396_252 = 0
  396. !dir$ ivdep
  396.          do
  396.             (ibmaxperjb%base_addr)(1 + $I_L396_252, 0) = (ibmaxperjb_in%base_addr)(1 + $I_L396_252, 0)
  396.             $I_L396_252 = 1 + $I_L396_252
  396.             if ( $I_L396_252 >= $F_A33 ) exit
  396.          enddo
  396.       endif
  406.       doprec = doprec_in
  407.       dodyn = dodyn_in
  412.       ihdim(1) = imaxnew_in * myjmax_d
  413.       ihdim(2) = 2 * mymnmax
  415.       dcol%header%a_contig = 1
  415.       dcol%dim_1%LB = 1
  415.       dcol%dim_1%EX = ( max( 0, jmaxnew_in ) )
  415.       dcol%dim_1%SM = 1
  415.       $_allo_P26(0) = 0x1000000000001L
  415.       $_allo_P26(1) = loc( dcol )
  415.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
  416.       scol%header%a_contig = 1
  416.       scol%dim_1%LB = 1
  416.       scol%dim_1%EX = ( max( 0, jmaxnew_in ) )
  416.       scol%dim_1%SM = 1
  416.       $_allo_P27(0) = 0x1000000000001L
  416.       $_allo_P27(1) = loc( scol )
  416.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
  421.       colb(1) = 0.0
  422.       if ( -2 + jmaxnew_in >= 0 ) then
  422.          $I_L422_208 = 0
  422. !dir$ ivdep
  422.          do
  423.             $colb_WR0_R0 = 5.0e-1 * ( colrad(2 + $I_L422_208) + colrad(1 + $I_L422_208) )
  423.             colb(2 + $I_L422_208) = $colb_WR0_R0
  426.             (dcol%base_addr)(1 + $I_L422_208, 0) = $colb_WR0_R0 + -colb(1 + $I_L422_208)
  424.             $I_L422_208 = 1 + $I_L422_208
  422.             if ( $I_L422_208 >= -1 + jmaxnew_in ) exit
  422.          enddo
  422.       endif
  428.       (dcol%base_addr)(jmaxnew_in, 0) = 3.1415926535897931 + -colb(jmaxnew_in)
  429.       if ( jmaxnew_in > 0 ) then
  429.          $I_L429_210 = 0
  429. !dir$ ivdep
  429.          do
  430.             (scol%base_addr)(1 + $I_L429_210, 0) = sin( colrad(1 + $I_L429_210) )
  431.             $I_L429_210 = 1 + $I_L429_210
  429.             if ( $I_L429_210 >= jmaxnew_in ) exit
  429.          enddo
  429.       endif
  433.       dodia%header%a_contig = 1
  433.       dodia%dim_1%LB = 1
  433.       dodia%dim_1%EX = 106
  433.       dodia%dim_1%SM = 1
  433.       $_allo_P28(0) = 0x1000000000001L
  433.       $_allo_P28(1) = loc( dodia )
  433.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
  434.       lvavl%header%a_contig = 1
  434.       lvavl%dim_1%LB = 1
  434.       lvavl%dim_1%EX = 106
  434.       lvavl%dim_1%SM = 1
  434.       $_allo_P29(0) = 0x1000000000001L
  434.       $_allo_P29(1) = loc( lvavl )
  434.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
  435.       nuavl%header%a_contig = 1
  435.       nuavl%dim_1%LB = 1
  435.       nuavl%dim_1%EX = 106
  435.       nuavl%dim_1%SM = 1
  435.       $_allo_P30(0) = 0x1000000000001L
  435.       $_allo_P30(1) = loc( nuavl )
  435.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
  436.       itavl%header%a_contig = 1
  436.       itavl%dim_1%LB = 1
  436.       itavl%dim_1%EX = 106
  436.       itavl%dim_1%SM = 1
  436.       $_allo_P31(0) = 0x1000000000001L
  436.       $_allo_P31(1) = loc( itavl )
  436.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
  437.       iavrq%header%a_contig = 1
  437.       iavrq%dim_1%LB = 1
  437.       iavrq%dim_1%EX = 106
  437.       iavrq%dim_1%SM = 1
  437.       $_allo_P32(0) = 0x1000000000001L
  437.       $_allo_P32(1) = loc( iavrq )
  437.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
  438.       ixavl%header%a_contig = 1
  438.       ixavl%dim_1%LB = 1
  438.       ixavl%dim_1%EX = 106
  438.       ixavl%dim_1%SM = 1
  438.       $_allo_P33(0) = 0x1000000000001L
  438.       $_allo_P33(1) = loc( ixavl )
  438.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
  439.       inavl%header%a_contig = 1
  439.       inavl%dim_1%LB = 1
  439.       inavl%dim_1%EX = 106
  439.       inavl%dim_1%SM = 1
  439.       $_allo_P34(0) = 0x1000000000001L
  439.       $_allo_P34(1) = loc( inavl )
  439.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
  440.       nurq%header%a_contig = 1
  440.       nurq%dim_1%LB = 1
  440.       nurq%dim_1%EX = 100
  440.       nurq%dim_1%SM = 1
  440.       $_allo_P35(0) = 0x1000000000001L
  440.       $_allo_P35(1) = loc( nurq )
  440.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
  441.       iclcd%header%a_contig = 1
  441.       iclcd%dim_1%LB = 1
  441.       iclcd%dim_1%EX = 100
  441.       iclcd%dim_1%SM = 1
  441.       $_allo_P36(0) = 0x1000000000001L
  441.       $_allo_P36(1) = loc( iclcd )
  441.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
  442.       lvcf%header%a_contig = 1
  442.       lvcf%dim_1%LB = 1
  442.       lvcf%dim_1%EX = 20
  442.       lvcf%dim_1%SM = 1
  442.       $_allo_P37(0) = 0x1000000000001L
  442.       $_allo_P37(1) = loc( lvcf )
  442.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
  443.       nucf%header%a_contig = 1
  443.       nucf%dim_1%LB = 1
  443.       nucf%dim_1%EX = 20
  443.       nucf%dim_1%SM = 1
  443.       $_allo_P38(0) = 0x1000000000001L
  443.       $_allo_P38(1) = loc( nucf )
  443.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
  444.       ixcf%header%a_contig = 1
  444.       ixcf%dim_1%LB = 1
  444.       ixcf%dim_1%EX = 20
  444.       ixcf%dim_1%SM = 1
  444.       $_allo_P39(0) = 0x1000000000001L
  444.       $_allo_P39(1) = loc( ixcf )
  444.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
  445.       incf%header%a_contig = 1
  445.       incf%dim_1%LB = 1
  445.       incf%dim_1%EX = 20
  445.       incf%dim_1%SM = 1
  445.       $_allo_P40(0) = 0x1000000000001L
  445.       $_allo_P40(1) = loc( incf )
  445.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
  446.       itcf%header%a_contig = 1
  446.       itcf%dim_1%LB = 1
  446.       itcf%dim_1%EX = 20
  446.       itcf%dim_1%SM = 1
  446.       $_allo_P41(0) = 0x1000000000001L
  446.       $_allo_P41(1) = loc( itcf )
  446.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
  447.       icfu%header%a_contig = 1
  447.       icfu%dim_1%LB = 1
  447.       icfu%dim_1%EX = 20
  447.       icfu%dim_1%SM = 1
  447.       $_allo_P42(0) = 0x1000000000001L
  447.       $_allo_P42(1) = loc( icfu )
  447.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
  448.       ixucf%header%a_contig = 1
  448.       ixucf%dim_1%LB = 1
  448.       ixucf%dim_1%EX = 20
  448.       ixucf%dim_1%SM = 1
  448.       $_allo_P43(0) = 0x1000000000001L
  448.       $_allo_P43(1) = loc( ixucf )
  448.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
  449.       inucf%header%a_contig = 1
  449.       inucf%dim_1%LB = 1
  449.       inucf%dim_1%EX = 20
  449.       inucf%dim_1%SM = 1
  449.       $_allo_P44(0) = 0x1000000000001L
  449.       $_allo_P44(1) = loc( inucf )
  449.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
  450.       kravl%header%a_contig = 1
  450.       kravl%dim_1%LB = 1
  450.       kravl%dim_1%EX = 150
  450.       kravl%dim_1%SM = 1
  450.       $_allo_P45(0) = 0x1000000000001L
  450.       $_allo_P45(1) = loc( kravl )
  450.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
  451.       krcf%header%a_contig = 1
  451.       krcf%dim_1%LB = 1
  451.       krcf%dim_1%EX = 40
  451.       krcf%dim_1%SM = 1
  451.       $_allo_P46(0) = 0x1000000000001L
  451.       $_allo_P46(1) = loc( krcf )
  451.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
  452.       jrcf%header%a_contig = 1
  452.       jrcf%dim_1%LB = 1
  452.       jrcf%dim_1%EX = 40
  452.       jrcf%dim_1%SM = 1
  452.       $_allo_P47(0) = 0x1000000000001L
  452.       $_allo_P47(1) = loc( jrcf )
  452.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
  453.       jrucf%header%a_contig = 1
  453.       jrucf%dim_1%LB = 1
  453.       jrucf%dim_1%EX = 40
  453.       jrucf%dim_1%SM = 1
  453.       $_allo_P48(0) = 0x1000000000001L
  453.       $_allo_P48(1) = loc( jrucf )
  453.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
  454.       avail%header%a_contig = 1
  454.       avail%dim_1%LB = 1
  454.       avail%dim_1%EX = 106
  454.       avail%dim_1%SM = 40
  454.       $_allo_P49(0) = 0x1000000000001L
  454.       $_allo_P49(1) = loc( avail )
  454.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
  455.       reqdg%header%a_contig = 1
  455.       reqdg%dim_1%LB = 1
  455.       reqdg%dim_1%EX = 100
  455.       reqdg%dim_1%SM = 40
  455.       $_allo_P50(0) = 0x1000000000001L
  455.       $_allo_P50(1) = loc( reqdg )
  455.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
  456.       combf%header%a_contig = 1
  456.       combf%dim_1%LB = 1
  456.       combf%dim_1%EX = 20
  456.       combf%dim_1%SM = 40
  456.       $_allo_P51(0) = 0x1000000000001L
  456.       $_allo_P51(1) = loc( combf )
  456.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
  457.       lspec%header%a_contig = 1
  457.       lspec%dim_1%LB = -20
  457.       lspec%dim_1%EX = 127
  457.       lspec%dim_1%SM = 1
  457.       $_allo_P52(0) = 0x1000000000001L
  457.       $_allo_P52(1) = loc( lspec )
  457.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
  458.       lgaus%header%a_contig = 1
  458.       lgaus%dim_1%LB = -20
  458.       lgaus%dim_1%EX = 127
  458.       lgaus%dim_1%SM = 1
  458.       $_allo_P53(0) = 0x1000000000001L
  458.       $_allo_P53(1) = loc( lgaus )
  458.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
  461.       jpavl%header%a_contig = 1
  461.       jpavl%dim_1%LB = 1
  461.       jpavl%dim_1%EX = 106
  461.       jpavl%dim_1%SM = 1
  461.       $_allo_P54(0) = 0x1000000000001L
  461.       $_allo_P54(1) = loc( jpavl )
  461.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
  462.       irqav%header%a_contig = 1
  462.       irqav%dim_1%LB = 1
  462.       irqav%dim_1%EX = 100
  462.       irqav%dim_1%SM = 1
  462.       $_allo_P55(0) = 0x1000000000001L
  462.       $_allo_P55(1) = loc( irqav )
  462.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
  463.       irqcf%header%a_contig = 1
  463.       irqcf%dim_1%LB = 1
  463.       irqcf%dim_1%EX = 100
  463.       irqcf%dim_1%SM = 1
  463.       $_allo_P56(0) = 0x1000000000001L
  463.       $_allo_P56(1) = loc( irqcf )
  463.       call __allocate( $_allo_P56, 0, 0, _fcd( 0, 0 ) )
  464.       irqu%header%a_contig = 1
  464.       irqu%dim_1%LB = 1
  464.       irqu%dim_1%EX = 100
  464.       irqu%dim_1%SM = 1
  464.       $_allo_P57(0) = 0x1000000000001L
  464.       $_allo_P57(1) = loc( irqu )
  464.       call __allocate( $_allo_P57, 0, 0, _fcd( 0, 0 ) )
  465.       lvrq%header%a_contig = 1
  465.       lvrq%dim_1%LB = 1
  465.       lvrq%dim_1%EX = 100
  465.       lvrq%dim_1%SM = 1
  465.       $_allo_P58(0) = 0x1000000000001L
  465.       $_allo_P58(1) = loc( lvrq )
  465.       call __allocate( $_allo_P58, 0, 0, _fcd( 0, 0 ) )
  466.       kfrq%header%a_contig = 1
  466.       kfrq%dim_1%LB = 1
  466.       kfrq%dim_1%EX = 20
  466.       kfrq%dim_1%SM = 1
  466.       $_allo_P59(0) = 0x1000000000001L
  466.       $_allo_P59(1) = loc( kfrq )
  466.       call __allocate( $_allo_P59, 0, 0, _fcd( 0, 0 ) )
  467.       jpcf%header%a_contig = 1
  467.       jpcf%dim_1%LB = 1
  467.       jpcf%dim_1%EX = 20
  467.       jpcf%dim_1%SM = 1
  467.       $_allo_P60(0) = 0x1000000000001L
  467.       $_allo_P60(1) = loc( jpcf )
  467.       call __allocate( $_allo_P60, 0, 0, _fcd( 0, 0 ) )
  469.       $F_A34 = _dv_ex( combf, 1 )
  469.       if ( _dv_ex( combf, 1 ) > 0 ) then
  469.          $I_L469_254 = 0
  469.          do
  469.              _substr((combf%base_addr)($I_L469_254 + _dv_lb( combf, 1 ), 0),1,40) = ' '
  469.             $I_L469_254 = 1 + $I_L469_254
  469.             if ( $I_L469_254 >= $F_A34 ) exit
  469.          enddo
  469.       endif
  470.       $I_L470_256 = 0
  470. !dir$ ivdep
  470.       do
  470.          (jpcf%base_addr)(1 + $I_L470_256, 0) = 0
  470.          $I_L470_256 = 1 + $I_L470_256
  470.          if ( $I_L470_256 >= 20 ) exit
  470.       enddo
  475.       $F_A35 = _dv_ex( avail, 1 )
  475.       if ( _dv_ex( avail, 1 ) > 0 ) then
  475.          $I_L475_258 = 0
  475.          do
  475.              _substr((avail%base_addr)($I_L475_258 + _dv_lb( avail, 1 ), 0),1,40) = '                                        '
  475.             $I_L475_258 = 1 + $I_L475_258
  475.             if ( $I_L475_258 >= $F_A35 ) exit
  475.          enddo
  475.       endif
  476.       $I_L476_260 = 0
  476.       do
  476.           _substr((avail%base_addr)(1 + $I_L476_260, 0),1,40) =  _substr(t$463(1 + $I_L476_260),1,40)
  476.          $I_L476_260 = 1 + $I_L476_260
  476.          if ( $I_L476_260 >= 39 ) exit
  476.       enddo
  516.       $I_L516_262 = 0
  516.       do
  516.           _substr((avail%base_addr)(40 + $I_L516_262, 0),1,40) =  _substr(t$464(1 + $I_L516_262),1,40)
  516.          $I_L516_262 = 1 + $I_L516_262
  516.          if ( $I_L516_262 >= 39 ) exit
  516.       enddo
  556.       $I_L556_264 = 0
  556.       do
  556.           _substr((avail%base_addr)(79 + $I_L556_264, 0),1,40) =  _substr(t$465(1 + $I_L556_264),1,40)
  556.          $I_L556_264 = 1 + $I_L556_264
  556.          if ( $I_L556_264 >= 28 ) exit
  556.       enddo
  588.       $I_L588_266 = 0
  588. !dir$ ivdep
  588.       do
  588.          (lvavl%base_addr)(1 + $I_L588_266, 0) = t$466(1 + $I_L588_266)
  604.          (nuavl%base_addr)(1 + $I_L588_266, 0) = t$467(1 + $I_L588_266)
  619.          (itavl%base_addr)(1 + $I_L588_266, 0) = t$468(1 + $I_L588_266)
  635.          (jpavl%base_addr)(1 + $I_L588_266, 0) = t$469(1 + $I_L588_266)
  588.          $I_L588_266 = 1 + $I_L588_266
  588.          if ( $I_L588_266 >= 106 ) exit
  588.       enddo
  648.       if ( nfctrl(51) > 0 ) then
  648.          $Unit_temp_O0 = nfprt
  648.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$18,  _substr(t$17,1,41), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  648.       endif
  649.       mxavl = 0
  650.       $I_L650_212 = 0
  650.       do
  651.          if (  _substr((avail%base_addr)(1 + $I_L650_212, 0),1,5) /= '     ' ) then
  652.             if ( (lvavl%base_addr)(1 + $I_L650_212, 0) /= 1 ) then
  652.                (lvavl%base_addr)(1 + $I_L650_212, 0) = kmaxnew
  652.             endif
  653.             if ( nfctrl(51) > 0 ) then
  653.                if ( 1 + $I_L650_212 < _dv_lb( avail, 1 ) .or. ( 1 + $I_L650_212 ) > _dv_lb( avail, 1 ) + _dv_ex( avail, 1 ) + -1 ) then
  653.                    _substr(t$472,1,16) = 'Diagnostics.f90'
  653.                    _substr(t$473,1,6) = 'AVAIL'
  653.                   t$474 = _dv_lb( avail, 1 )
  653.                   t$475 = _dv_lb( avail, 1 ) + _dv_ex( avail, 1 ) + -1
  653.                   t$476 = 1 + $I_L650_212
  653.                   call _bounds_error(  _substr(t$472,1,16), 1156,  _substr(t$473,1,6), 1, t$474, t$475, t$476, t$471 )
  653.                endif
  653.                if ( ( 1 + $I_L650_212 ) < lvavl%dim_1%LB .or. ( 1 + $I_L650_212 ) > lvavl%dim_1%LB + lvavl%dim_1%EX + -1 ) then
  653.                    _substr(t$478,1,16) = 'Diagnostics.f90'
  653.                    _substr(t$479,1,6) = 'LVAVL'
  653.                   t$480 = lvavl%dim_1%LB
  653.                   t$481 = lvavl%dim_1%LB + lvavl%dim_1%EX + -1
  653.                   t$482 = 1 + $I_L650_212
  653.                   call _bounds_error(  _substr(t$478,1,16), 1156,  _substr(t$479,1,6), 1, t$480, t$481, t$482, t$477 )
  653.                endif
  653.                if ( ( 1 + $I_L650_212 ) < nuavl%dim_1%LB .or. ( 1 + $I_L650_212 ) > nuavl%dim_1%LB + nuavl%dim_1%EX + -1 ) then
  653.                    _substr(t$484,1,16) = 'Diagnostics.f90'
  653.                    _substr(t$485,1,6) = 'NUAVL'
  653.                   t$486 = nuavl%dim_1%LB
  653.                   t$487 = nuavl%dim_1%LB + nuavl%dim_1%EX + -1
  653.                   t$488 = 1 + $I_L650_212
  653.                   call _bounds_error(  _substr(t$484,1,16), 1156,  _substr(t$485,1,6), 1, t$486, t$487, t$488, t$483 )
  653.                endif
  654.                if ( ( 1 + $I_L650_212 ) < itavl%dim_1%LB .or. ( 1 + $I_L650_212 ) > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
  654.                    _substr(t$490,1,16) = 'Diagnostics.f90'
  654.                    _substr(t$491,1,6) = 'ITAVL'
  654.                   t$492 = itavl%dim_1%LB
  654.                   t$493 = itavl%dim_1%LB + itavl%dim_1%EX + -1
  654.                   t$494 = 1 + $I_L650_212
  654.                   call _bounds_error(  _substr(t$490,1,16), 1157,  _substr(t$491,1,6), 1, t$492, t$493, t$494, t$489 )
  654.                endif
  654.                if ( ( 1 + $I_L650_212 ) <= 0 .or. ( 1 + $I_L650_212 ) > 106 ) then
  654.                    _substr(t$496,1,16) = 'Diagnostics.f90'
  654.                    _substr(t$497,1,6) = 'JPAVL'
  654.                   t$498 = 1
  654.                   t$499 = 106
  654.                   t$500 = 1 + $I_L650_212
  654.                   call _bounds_error(  _substr(t$496,1,16), 1157,  _substr(t$497,1,6), 1, t$498, t$499, t$500, t$495 )
  654.                endif
  653.                $Unit_temp_O1 = nfprt
  653.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$20,  _substr(t$19,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((avail%base_addr)(1 + $I_L650_212, 0),1,40), 0x800600000000L ), _iotype( (lvavl%base_addr)(1 + $I_L650_212, 0), 0x2000200000000L ), _iotype( (nuavl%base_addr)(1 + $I_L650_212, 0), 0x2000200000000L ), _iotype( (itavl%base_addr)(1 + $I_L650_212, 0), 0x2000200000000L ), _iotype( (jpavl%base_addr)(1 + $I_L650_212, 0), 0x2000200000000L ) ) )
  653.             endif
  655.             (dodia%base_addr)(1 + $I_L650_212, 0) = .false.
  656.             (iavrq%base_addr)(1 + $I_L650_212, 0) = 0
  657.             mxavl = 1 + mxavl
  657.          endif
  659.          $I_L650_212 = 1 + $I_L650_212
  658.          if ( $I_L650_212 >= 106 ) exit
  658.       enddo
  661.       if ( mxavl <= 0 ) then
  662.          $Unit_temp_O2 = nfprt
  662.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$88,  _substr(t$87,1,54), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  663.          $Unit_temp_O3 = nferr
  663.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$88,  _substr(t$87,1,54), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  664.           _substr(t$501,1,4) = '6600'
  664.          call _stop(  _substr(t$501,1,4) )
  664.       else
  668.          $F_A36 = _dv_ex( reqdg, 1 )
  668.          if ( _dv_ex( reqdg, 1 ) > 0 ) then
  668.             $I_L668_268 = 0
  668.             do
  668.                 _substr((reqdg%base_addr)($I_L668_268 + _dv_lb( reqdg, 1 ), 0),1,40) = '                                        '
  668.                $I_L668_268 = 1 + $I_L668_268
  668.                if ( $I_L668_268 >= $F_A36 ) exit
  668.             enddo
  668.          endif
  669.          $I_L669_270 = 0
  669.          do
  669.              _substr((reqdg%base_addr)(1 + $I_L669_270, 0),1,40) =  _substr(t$502(1 + $I_L669_270),1,40)
  669.             $I_L669_270 = 1 + $I_L669_270
  669.             if ( $I_L669_270 >= 20 ) exit
  669.          enddo
  693.          $SC_lvrq_I53 = lvrq%dim_1%EX
  693.          $SC_lvrq_I54 = lvrq%dim_1%LB
  707.          $SC_iclcd_I57 = iclcd%dim_1%EX
  707.          $SC_iclcd_I58 = iclcd%dim_1%LB
  699.          $SC_nurq_I55 = nurq%dim_1%EX
  699.          $SC_nurq_I56 = nurq%dim_1%LB
  693.          $I_L693_272 = 0
  693. !dir$ ivdep
  693.          do
  693.             (lvrq%base_addr)(1 + $I_L693_272, 0) = t$503(1 + $I_L693_272)
  699.             (nurq%base_addr)(1 + $I_L693_272, 0) = t$504(1 + $I_L693_272)
  707.             (iclcd%base_addr)(1 + $I_L693_272, 0) = t$505(1 + $I_L693_272)
  693.             $I_L693_272 = 1 + $I_L693_272
  693.             if ( $I_L693_272 >= 20 ) exit
  693.          enddo
  711.          if ( nfctrl(51) > 0 ) then
  711.             $Unit_temp_O4 = nfprt
  711.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,40), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  711.          endif
  712.          t$507(1) = 0x100000000000000L
  712.          t$507(2) = 0
  712. !dir$ suppress  _substr(fnamedtable,1,_ltrim(  _substr(fnamedtable,1,max( 0, t$243 )) ))
  712.          t$507(3) = int( loc(  _substr(fnamedtable,1,_ltrim(  _substr(fnamedtable,1,_len( fnamedtable )) )) ), 8 )
  712.          t$507(4) = _ltrim(  _substr(fnamedtable,1,_len( fnamedtable )) )
  712.          t$507(5) = 0
  712.          t$507(6) = 0
  712. !dir$ suppress existdtable
  712.          t$507(7) = int( loc( existdtable ), 8 )
  712.          t$507(8) = 0
  712.          t$507(9) = 0
  712.          t$507(10) = 0
  712.          t$507(11) = 0
  712.          t$507(13) = 0
  712.          t$507(15) = 0
  712.          t$507(17) = 0
  712.          t$507(19) = 0
  712.          t$507(21) = 0
  712.          t$507(23) = 0
  712.          t$507(25) = 0
  712.          t$507(26) = 0
  712.          t$507(27) = 0
  712.          t$507(29) = 0
  712.          t$507(31) = 0
  712.          t$507(33) = 0
  712.          t$507(35) = 0
  712.          t$507(37) = 0
  712.          t$507(39) = 0
  712.          t$507(41) = 0
  712.          t$507(43) = 0
  712.          t$507(44) = 0x2000500000000L
  712.          t$507(45) = 0
  712.          t$507(46) = 0
  712.          t$507(47) = 0
  712.          t$507(48) = 0
  712.          t$507(49) = 0
  712.          t$507(50) = 0
  712.          t$507(52) = 0
  712.          t$507(54) = 0
  712.          t$507(56) = 0
  712.          t$507(57) = 0
  712.          t$507(58) = 0
  712.          t$507(60) = 0
  712.          t$507(61) = 0
  712.          t$507(62) = 0
  712.          t$507(63) = 0
  712.          t$507(64) = 0
  712.          t$507(66) = 0
  712.          t$507(68) = 0
  712.          t$507(69) = 0
  712.          t$507(70) = 0
  712.          t$506 = _inquire( t$507 )
  713.          if ( existdtable ) then
  714.             mgaus = 0
  715.             ngaus = 0
  716.             mspec = 0
  717.             nspec = 0
  719.             ierr = 0
  718.             t$474 = nfdestbl
  719.              _substr(t$509,1,4) = 'OLD'
  718.              _substr(t$510,1,10) = 'SEQUENTIAL'
  718.              _substr(t$511,1,9) = 'FORMATTED'
  719.              _substr(t$512,1,4) = 'READ'
  718.             t$513(1) = 0x100000000000000L
  718. !dir$ suppress t$474
  718.             t$513(2) = int( loc( t$474 ), 8 )
  718. !dir$ suppress ierr
  718.             t$513(3) = int( loc( ierr ), 8 )
  718.             t$513(4) = 0
  718. !dir$ suppress  _substr(fnamedtable,1,_ltrim(  _substr(fnamedtable,1,max( 0, t$243 )) ))
  718.             t$513(5) = int( loc(  _substr(fnamedtable,1,_ltrim(  _substr(fnamedtable,1,_len( fnamedtable )) )) ), 8 )
  718.             t$513(6) = _ltrim(  _substr(fnamedtable,1,_len( fnamedtable )) )
  718. !dir$ suppress  _substr(t$509,1,3)
  718.             t$513(7) = int( loc(  _substr(t$509,1,3) ), 8 )
  718.             t$513(8) = 3
  718. !dir$ suppress  _substr(t$510,1,10)
  718.             t$513(9) = int( loc(  _substr(t$510,1,10) ), 8 )
  718.             t$513(10) = 10
  718. !dir$ suppress  _substr(t$511,1,9)
  718.             t$513(11) = int( loc(  _substr(t$511,1,9) ), 8 )
  718.             t$513(12) = 9
  718.             t$513(13) = 0
  718.             t$513(14) = 0
  718.             t$513(16) = 0
  718. !dir$ suppress  _substr(t$512,1,4)
  718.             t$513(18) = int( loc(  _substr(t$512,1,4) ), 8 )
  718.             t$513(19) = 4
  718.             t$513(20) = 0
  718.             t$513(22) = 0
  718.             t$513(24) = 0x2000200000000L
  718.             t$513(25) = 0
  718.             t$513(27) = 0
  718.             t$513(29) = 0
  718.             t$513(31) = 0
  718.             t$513(33) = 0
  718.             t$513(35) = 0
  718.             t$508 = _open( t$513 )
  720.             if ( ierr /= 0 ) then
  721.                $Unit_temp_O5 = nfprt
  721.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$14,  _substr(t$13,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamedtable,1,_ltrim(  _substr(fnamedtable,1,_len( fnamedtable )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  723.                 _substr(t$514,1,11) = '**(ERROR)**'
  723.                call _stop(  _substr(t$514,1,11) )
  723.             else
  726.                mxrq = 1
  727.                $I_L727_274 = 0
  727.                do
  728.                   $Unit_temp_O6 = nfdestbl
  728.                   t$516 = _fread( _clist( 0, 4, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  728.                   if ( t$516 == 0 ) then
  728.                      if ( 1 + $I_L727_274 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L727_274 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  728.                          _substr(t$518,1,16) = 'Diagnostics.f90'
  728.                          _substr(t$519,1,6) = 'REQDG'
  728.                         t$475 = _dv_lb( reqdg, 1 )
  728.                         t$476 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  728.                         t$480 = 1 + $I_L727_274
  728.                         call _bounds_error(  _substr(t$518,1,16), 1231,  _substr(t$519,1,6), 1, t$475, t$476, t$480, t$517 )
  728.                      endif
  728.                      $Unit_temp_O7 = nfdestbl
  728.                      t$516 = _fread( _clist( 0, 4, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((reqdg%base_addr)(1 + $I_L727_274, 0),1,40), 0x800600000000L ) ) )
  728.                      if ( t$516 == 0 ) then
  728.                         if ( ( 1 + $I_L727_274 ) < lvrq%dim_1%LB .or. ( 1 + $I_L727_274 ) > lvrq%dim_1%LB + lvrq%dim_1%EX + -1 ) then
  728.                             _substr(t$521,1,16) = 'Diagnostics.f90'
  728.                             _substr(t$522,1,5) = 'LVRQ'
  728.                            t$481 = lvrq%dim_1%LB
  728.                            t$482 = lvrq%dim_1%LB + lvrq%dim_1%EX + -1
  728.                            t$486 = 1 + $I_L727_274
  728.                            call _bounds_error(  _substr(t$521,1,16), 1231,  _substr(t$522,1,5), 1, t$481, t$482, t$486, t$520 )
  728.                         endif
  728.                         $Unit_temp_O8 = nfdestbl
  728.                         t$516 = _fread( _clist( 0, 4, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (lvrq%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ) ) )
  728.                         if ( t$516 == 0 ) then
  728.                            if ( ( 1 + $I_L727_274 ) < nurq%dim_1%LB .or. ( 1 + $I_L727_274 ) > nurq%dim_1%LB + nurq%dim_1%EX + -1 ) then
  728.                                _substr(t$524,1,16) = 'Diagnostics.f90'
  728.                                _substr(t$525,1,5) = 'NURQ'
  728.                               t$487 = nurq%dim_1%LB
  728.                               t$488 = nurq%dim_1%LB + nurq%dim_1%EX + -1
  728.                               t$492 = 1 + $I_L727_274
  728.                               call _bounds_error(  _substr(t$524,1,16), 1231,  _substr(t$525,1,5), 1, t$487, t$488, t$492, t$523 )
  728.                            endif
  728.                            $Unit_temp_O9 = nfdestbl
  728.                            t$516 = _fread( _clist( 0, 4, 0, $Unit_temp_O9, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (nurq%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ) ) )
  728.                            if ( t$516 == 0 ) then
  728.                               if ( ( 1 + $I_L727_274 ) < iclcd%dim_1%LB .or. ( 1 + $I_L727_274 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
  728.                                   _substr(t$527,1,16) = 'Diagnostics.f90'
  728.                                   _substr(t$528,1,6) = 'ICLCD'
  728.                                  t$493 = iclcd%dim_1%LB
  728.                                  t$494 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
  728.                                  t$498 = 1 + $I_L727_274
  728.                                  call _bounds_error(  _substr(t$527,1,16), 1231,  _substr(t$528,1,6), 1, t$493, t$494, t$498, t$526 )
  728.                               endif
  728.                               $Unit_temp_O10 = nfdestbl
  728.                               t$516 = _fread( _clist( 0, 4, 0, $Unit_temp_O10, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (iclcd%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ) ) )
  728.                               if ( t$516 == 0 ) then
  728.                                  $Unit_temp_O11 = nfdestbl
  728.                                  t$516 = _fread( _clist( 0, 4, 1, $Unit_temp_O11, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  728.                               endif
  728.                            endif
  728.                         endif
  728.                      endif
  728.                   endif
  728.                   if ( t$516 == 1 .orelse. t$516 /= 2 ) then
  729.                      if (  _substr((reqdg%base_addr)(1 + $I_L727_274, 0),1,5) /= '     ' ) then
  730.                         if ( (lvrq%base_addr)(1 + $I_L727_274, 0) /= 1 ) then
  730.                            (lvrq%base_addr)(1 + $I_L727_274, 0) = kmaxnew
  730.                         endif
  731.                         if ( nfctrl(51) > 0 ) then
  731.                            if ( 1 + $I_L727_274 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L727_274 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  731.                                _substr(t$530,1,16) = 'Diagnostics.f90'
  731.                                _substr(t$531,1,6) = 'REQDG'
  731.                               t$499 = _dv_lb( reqdg, 1 )
  731.                               t$500 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  731.                               t$474 = 1 + $I_L727_274
  731.                               call _bounds_error(  _substr(t$530,1,16), 1234,  _substr(t$531,1,6), 1, t$499, t$500, t$474, t$529 )
  731.                            endif
  731.                            if ( ( 1 + $I_L727_274 ) < lvrq%dim_1%LB .or. ( 1 + $I_L727_274 ) > lvrq%dim_1%LB + lvrq%dim_1%EX + -1 ) then
  731.                                _substr(t$533,1,16) = 'Diagnostics.f90'
  731.                                _substr(t$534,1,5) = 'LVRQ'
  731.                               t$475 = lvrq%dim_1%LB
  731.                               t$476 = lvrq%dim_1%LB + lvrq%dim_1%EX + -1
  731.                               t$480 = 1 + $I_L727_274
  731.                               call _bounds_error(  _substr(t$533,1,16), 1234,  _substr(t$534,1,5), 1, t$475, t$476, t$480, t$532 )
  731.                            endif
  731.                            if ( ( 1 + $I_L727_274 ) < nurq%dim_1%LB .or. ( 1 + $I_L727_274 ) > nurq%dim_1%LB + nurq%dim_1%EX + -1 ) then
  731.                                _substr(t$536,1,16) = 'Diagnostics.f90'
  731.                                _substr(t$537,1,5) = 'NURQ'
  731.                               t$481 = nurq%dim_1%LB
  731.                               t$482 = nurq%dim_1%LB + nurq%dim_1%EX + -1
  731.                               t$486 = 1 + $I_L727_274
  731.                               call _bounds_error(  _substr(t$536,1,16), 1234,  _substr(t$537,1,5), 1, t$481, t$482, t$486, t$535 )
  731.                            endif
  732.                            if ( ( 1 + $I_L727_274 ) < iclcd%dim_1%LB .or. ( 1 + $I_L727_274 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
  732.                                _substr(t$539,1,16) = 'Diagnostics.f90'
  732.                                _substr(t$540,1,6) = 'ICLCD'
  732.                               t$487 = iclcd%dim_1%LB
  732.                               t$488 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
  732.                               t$492 = 1 + $I_L727_274
  732.                               call _bounds_error(  _substr(t$539,1,16), 1235,  _substr(t$540,1,6), 1, t$487, t$488, t$492, t$538 )
  732.                            endif
  731.                            $Unit_temp_O12 = nfprt
  731.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$24,  _substr(t$23,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((reqdg%base_addr)(1 + $I_L727_274, 0),1,40), 0x800600000000L ), _iotype( (lvrq%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ), _iotype( (nurq%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ), _iotype( (iclcd%base_addr)(1 + $I_L727_274, 0), 0x2000200000000L ) ) )
  731.                         endif
  733.                         (irqcf%base_addr)(1 + $I_L727_274, 0) = 0
  734.                         (irqav%base_addr)(1 + $I_L727_274, 0) = 0
  735.                         (irqu%base_addr)(1 + $I_L727_274, 0) = .false.
  736.                         mxrq = 1 + mxrq
  737.                         $I_L737_216 = 0
  737. !dir$ ivdep
  737.                         do
  738.                            if (  _substr((reqdg%base_addr)(1 + $I_L727_274, 0),1,40) ==  _substr((avail%base_addr)(1 + $I_L737_216, 0),1,40) ) then
  739.                               if ( (lvavl%base_addr)(1 + $I_L737_216, 0) == 1 ) then
  739.                                  if ( (itavl%base_addr)(1 + $I_L737_216, 0) == 1 ) then
  739.                                     ngaus = 1 + ngaus
  739.                                  endif
  741.                                  if ( (itavl%base_addr)(1 + $I_L737_216, 0) == 2 ) then
  741.                                     nspec = 1 + nspec
  741.                                  endif
  741.                               endif
  740.                               if ( (lvavl%base_addr)(1 + $I_L737_216, 0) + -kmaxnew == 0 ) then
  740.                                  if ( (itavl%base_addr)(1 + $I_L737_216, 0) == 1 ) then
  740.                                     mgaus = 1 + mgaus
  740.                                  endif
  742.                                  if ( (itavl%base_addr)(1 + $I_L737_216, 0) == 2 ) then
  742.                                     mspec = 1 + mspec
  742.                                  endif
  742.                               endif
  742.                               goto 10
  742.                            endif
  745.                            $I_L737_216 = 1 + $I_L737_216
  744.                            if ( $I_L737_216 >= 106 ) exit
  744.                         enddo
  744.                      endif
  744.    10                continue
  747.                      $I_L727_274 = 1 + $I_L727_274
  746.                   else
  746.                   endif
  746.                   if ( $I_L727_274 >= 100 ) exit
  746.                enddo
  747.                $n_S4 = 101
  748.                mxrq = -1 + $n_S4
  749.                t$493 = nfdestbl
  749.                 _substr(t$543,1,4) = 'KEEP'
  749.                t$544(1) = 0x100000000000000L
  749. !dir$ suppress t$493
  749.                t$544(2) = int( loc( t$493 ), 8 )
  749.                t$544(3) = 0
  749.                t$544(4) = 0
  749. !dir$ suppress  _substr(t$543,1,4)
  749.                t$544(5) = int( loc(  _substr(t$543,1,4) ), 8 )
  749.                t$544(6) = 4
  749.                t$544(7) = 0
  749.                t$544(8) = 0
  749.                t$542 = _close( t$544 )
  749.                goto 20
  749.             endif
  749.          else
  752.             mgaus = 1
  753.             ngaus = 21
  754.             mspec = 4
  755.             nspec = 0
  756.             mxrq = 20
  758.             $I_L758_214 = 0
  758.             do
  759.                if ( (lvrq%base_addr)(1 + $I_L758_214, 0) /= 1 ) then
  759.                   (lvrq%base_addr)(1 + $I_L758_214, 0) = kmaxnew
  759.                endif
  760.                if ( nfctrl(51) > 0 ) then
  760.                   if ( 1 + $I_L758_214 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L758_214 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  760.                       _substr(t$549,1,16) = 'Diagnostics.f90'
  760.                       _substr(t$550,1,6) = 'REQDG'
  760.                      t$494 = _dv_lb( reqdg, 1 )
  760.                      t$498 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  760.                      t$499 = 1 + $I_L758_214
  760.                      call _bounds_error(  _substr(t$549,1,16), 1263,  _substr(t$550,1,6), 1, t$494, t$498, t$499, t$548 )
  760.                   endif
  760.                   if ( ( 1 + $I_L758_214 ) < lvrq%dim_1%LB .or. ( 1 + $I_L758_214 ) > lvrq%dim_1%LB + lvrq%dim_1%EX + -1 ) then
  760.                       _substr(t$552,1,16) = 'Diagnostics.f90'
  760.                       _substr(t$553,1,5) = 'LVRQ'
  760.                      t$500 = lvrq%dim_1%LB
  760.                      t$474 = lvrq%dim_1%LB + lvrq%dim_1%EX + -1
  760.                      t$475 = 1 + $I_L758_214
  760.                      call _bounds_error(  _substr(t$552,1,16), 1263,  _substr(t$553,1,5), 1, t$500, t$474, t$475, t$551 )
  760.                   endif
  760.                   if ( ( 1 + $I_L758_214 ) < nurq%dim_1%LB .or. ( 1 + $I_L758_214 ) > nurq%dim_1%LB + nurq%dim_1%EX + -1 ) then
  760.                       _substr(t$555,1,16) = 'Diagnostics.f90'
  760.                       _substr(t$556,1,5) = 'NURQ'
  760.                      t$476 = nurq%dim_1%LB
  760.                      t$480 = nurq%dim_1%LB + nurq%dim_1%EX + -1
  760.                      t$481 = 1 + $I_L758_214
  760.                      call _bounds_error(  _substr(t$555,1,16), 1263,  _substr(t$556,1,5), 1, t$476, t$480, t$481, t$554 )
  760.                   endif
  760.                   if ( ( 1 + $I_L758_214 ) < iclcd%dim_1%LB .or. ( 1 + $I_L758_214 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
  760.                       _substr(t$558,1,16) = 'Diagnostics.f90'
  760.                       _substr(t$559,1,6) = 'ICLCD'
  760.                      t$482 = iclcd%dim_1%LB
  760.                      t$486 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
  760.                      t$487 = 1 + $I_L758_214
  760.                      call _bounds_error(  _substr(t$558,1,16), 1263,  _substr(t$559,1,6), 1, t$482, t$486, t$487, t$557 )
  760.                   endif
  760.                   $Unit_temp_O13 = nfprt
  760.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$24,  _substr(t$23,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((reqdg%base_addr)(1 + $I_L758_214, 0),1,40), 0x800600000000L ), _iotype( (lvrq%base_addr)(1 + $I_L758_214, 0), 0x2000200000000L ), _iotype( (nurq%base_addr)(1 + $I_L758_214, 0), 0x2000200000000L ), _iotype( (iclcd%base_addr)(1 + $I_L758_214, 0), 0x2000200000000L ) ) )
  760.                endif
  761.                (irqcf%base_addr)(1 + $I_L758_214, 0) = 0
  762.                (irqav%base_addr)(1 + $I_L758_214, 0) = 0
  763.                (irqu%base_addr)(1 + $I_L758_214, 0) = .false.
  764.                $I_L758_214 = 1 + $I_L758_214
  760.                if ( $I_L758_214 >= 20 ) exit
  760.             enddo
  760.    20       continue
  766.             if ( mxrq <= 0 ) then
  767.                $Unit_temp_O14 = nfprt
  767.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$90,  _substr(t$89,1,52), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  768.                $Unit_temp_O15 = nferr
  768.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, t$90,  _substr(t$89,1,52), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  769.                 _substr(t$560,1,4) = '7100'
  769.                call _stop(  _substr(t$560,1,4) )
  769.             else
  776.                 _substr(typcd(1),1,8) = 'GAUSSIAN'
  777.                 _substr(typcd(2),1,8) = 'SPECTRAL'
  778.                 _substr(poscd(0),1,38) = 'NOT COMPUTED IN EITHER GFIDI OR GWATER'
  779.                 _substr(poscd(1),1,38) = 'COMPUTED ONLY IN GFIDI                '
  780.                 _substr(poscd(2),1,38) = 'COMPUTED ONLY IN GWATER               '
  781.                 _substr(poscd(3),1,38) = 'COMPUTED IN BOTH GFIDI AND GWATER     '
  786.                nof = 999999
  787.                icf = 0
  789.                $I_L789_276 = 0
  789.                do
  791.                   if ( nof == 999999 ) then
  792.                      if ( (iclcd%base_addr)(1 + $I_L789_276, 0) /= 0 ) then
  792.                         nof = $I_L789_276
  792.                      endif
  792.                   endif
  795.                   if ( nof == 999999 ) then
  841.                      $I_L789_276 = 1 + $I_L789_276
  797.                   else if ( (iclcd%base_addr)(1 + $I_L789_276, 0) /= 0 ) then
  797.                   else
  797.                   endif
  797.                   if ( $I_L789_276 >= mxrq ) exit
  797.                enddo
  843.                nof = cvmg( nof, mxrq, nof /= 999999 )
  846.                if ( nof <= 0 ) then
  841.                   goto 30
  846.                else if ( mxavl > 0 ) then
  846.                   $I_L846_278 = 0
  846.                   do
  848.                      if ( (irqcf%base_addr)(1 + $I_L846_278, 0) == 0 ) then
  850.                         $I_L850_220 = 0
  850. !dir$ ivdep
  850.                         do
  851.                            if (  _substr((reqdg%base_addr)(1 + $I_L846_278, 0),1,40) ==  _substr((avail%base_addr)(1 + $I_L850_220, 0),1,40) ) then
  858.                               (irqu%base_addr)(1 + $I_L846_278, 0) = .true.
  859.                               (dodia%base_addr)(1 + $I_L850_220, 0) = .true.
  860.                               (irqav%base_addr)(1 + $I_L846_278, 0) = ( 1 + $I_L850_220 )
  861.                               (iavrq%base_addr)(1 + $I_L850_220, 0) = ( 1 + $I_L846_278 )
  861.                               goto 140
  861.                            endif
  852.                            $I_L850_220 = 1 + $I_L850_220
  852.                            if ( $I_L850_220 >= mxavl ) exit
  852.                         enddo
  863.                         $I_L846_46 = $I_L846_278
  863.                         goto 150
  863.                      else
  863.   140                   continue
  863.                         $I_L846_278 = 1 + $I_L846_278
  863.                      endif
  863.                      if ( $I_L846_278 >= nof ) exit
  863.                   enddo
  863.                   goto 30
  863.                else
  846.                   $I_L846_246 = 0
  846. !dir$ ivdep
  846.                   do
  848.                      if ( (irqcf%base_addr)(1 + $I_L846_246, 0) == 0 ) then
  863.                         $I_L846_46 = $I_L846_246
  863.   150                   continue
  854.                         if ( 1 + $I_L846_46 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L846_46 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  854.                             _substr(t$590,1,16) = 'Diagnostics.f90'
  854.                             _substr(t$591,1,6) = 'REQDG'
  854.                            t$482 = _dv_lb( reqdg, 1 )
  854.                            t$486 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  854.                            t$487 = 1 + $I_L846_46
  854.                            call _bounds_error(  _substr(t$590,1,16), 1357,  _substr(t$591,1,6), 1, t$482, t$486, t$487, t$589 )
  854.                         endif
  854.                         $Unit_temp_O28 = nfprt
  854.                         $IOitem_O29 = ( 1 + $I_L846_46 )
  854.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O28, Null_Arg, Null_Arg, t$78,  _substr(t$77,1,153), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O29, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(1 + $I_L846_46, 0),1,40), 0x800600000000L ) ) )
  855.                         if ( 1 + $I_L846_46 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L846_46 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  855.                             _substr(t$593,1,16) = 'Diagnostics.f90'
  855.                             _substr(t$594,1,6) = 'REQDG'
  855.                            t$488 = _dv_lb( reqdg, 1 )
  855.                            t$492 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  855.                            t$493 = 1 + $I_L846_46
  855.                            call _bounds_error(  _substr(t$593,1,16), 1358,  _substr(t$594,1,6), 1, t$488, t$492, t$493, t$592 )
  855.                         endif
  855.                         $Unit_temp_O30 = nferr
  855.                         $IOitem_O31 = ( 1 + $I_L846_46 )
  855.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O30, Null_Arg, Null_Arg, t$78,  _substr(t$77,1,153), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O31, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(1 + $I_L846_46, 0),1,40), 0x800600000000L ) ) )
  856.                          _substr(t$595,1,4) = '4100'
  856.                         call _stop(  _substr(t$595,1,4) )
  856.                         goto 160
  856.                      endif
  863.                      $I_L846_246 = 1 + $I_L846_246
  863.                      if ( $I_L846_246 >= nof ) exit
  863.                   enddo
  863.    30             continue
  867.                   if ( nof < mxrq ) then
  869.                      t$596 = 1 + nof
  869.                      if ( mxrq + -nof > 0 ) then
  869.                         $I_L869_280 = 0
  869.                         do
  871.                            if ( mxavl > 0 ) then
  871.                               $I_L871_222 = 0
  871. !dir$ ivdep
  871.                               do
  872.                                  if (  _substr((reqdg%base_addr)(nof + $I_L869_280 + 1, 0),1,40) ==  _substr((avail%base_addr)(1 + $I_L871_222, 0),1,40) ) then
  885.                                     (dodia%base_addr)(1 + $I_L871_222, 0) = .true.
  886.                                     (irqav%base_addr)(nof + $I_L869_280 + 1, 0) = ( 1 + $I_L871_222 )
  886.                                     goto 40
  886.                                  endif
  873.                                  $I_L871_222 = 1 + $I_L871_222
  873.                                  if ( $I_L871_222 >= mxavl ) exit
  873.                               enddo
  873.                               goto 120
  873.                            else
  873.   120                         continue
  875.                               if ( icf == 0 ) then
  873.                                  goto 130
  876.                               else if ( icf > 0 ) then
  876.                                  $I_L876_224 = 0
  876. !dir$ ivdep
  876.                                  do
  877.                                     if (  _substr((reqdg%base_addr)(nof + $I_L869_280 + 1, 0),1,40) ==  _substr((combf%base_addr)(1 + $I_L876_224, 0),1,40) ) then
  876.                                        ix = ( 1 + $I_L876_224 )
  889.                                        (irqav%base_addr)(nof + $I_L869_280 + 1, 0) = ( -1 + -$I_L876_224 )
  889.    40                                  continue
  890.                                        (irqu%base_addr)(nof + $I_L869_280 + 1, 0) = .true.
  892.                                        $I_L869_280 = 1 + $I_L869_280
  892.                                        if ( $I_L869_280 >= ( mxrq + -nof ) ) then
  890.                                           goto 50
  890.                                        endif
  890.                                     endif
  878.                                     $I_L876_224 = 1 + $I_L876_224
  878.                                     if ( $I_L876_224 >= icf ) exit
  878.                                  enddo
  878.                                  goto 130
  878.                               else
  878.   130                            continue
  869.                                  $nn_S9 = ( nof + $I_L869_280 + 1 )
  881.                                  if ( nof + $I_L869_280 + 1 < _dv_lb( reqdg, 1 ) .or. ( nof + $I_L869_280 + 1 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  881.                                      _substr(t$607,1,16) = 'Diagnostics.f90'
  881.                                      _substr(t$608,1,6) = 'REQDG'
  881.                                     t$494 = _dv_lb( reqdg, 1 )
  881.                                     t$498 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  881.                                     t$499 = nof + $I_L869_280 + 1
  881.                                     call _bounds_error(  _substr(t$607,1,16), 1384,  _substr(t$608,1,6), 1, t$494, t$498, t$499, t$606 )
  881.                                  endif
  881.                                  $Unit_temp_O32 = nfprt
  881.                                  $IOitem_O33 = ( t$596 + $I_L869_280 )
  881.                                  _fwrite( _clist( 0, 0, 3, $Unit_temp_O32, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,157), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(t$596 + $I_L869_280, 0),1,40), 0x800600000000L ) ) )
  882.                                  if ( $nn_S9 < _dv_lb( reqdg, 1 ) .or. $nn_S9 > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  882.                                      _substr(t$610,1,16) = 'Diagnostics.f90'
  882.                                      _substr(t$611,1,6) = 'REQDG'
  882.                                     t$500 = _dv_lb( reqdg, 1 )
  882.                                     t$474 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  882.                                     t$475 = t$596 + $I_L869_280
  882.                                     call _bounds_error(  _substr(t$610,1,16), 1385,  _substr(t$611,1,6), 1, t$500, t$474, t$475, t$609 )
  882.                                  endif
  882.                                  $Unit_temp_O34 = nferr
  882.                                  $IOitem_O35 = ( t$596 + $I_L869_280 )
  882.                                  _fwrite( _clist( 0, 0, 3, $Unit_temp_O34, Null_Arg, Null_Arg, t$80,  _substr(t$79,1,157), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O35, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(t$596 + $I_L869_280, 0),1,40), 0x800600000000L ) ) )
  883.                                   _substr(t$612,1,4) = '4600'
  883.                                  call _stop(  _substr(t$612,1,4) )
  883.                               endif
  883.                            endif
  883.                         else
  883.                            goto 50
  883.                         endif
  883.                      else
  883.    50                   continue
  897.                         $I_L897_226 = 0
  897. !dir$ ivdep
  897.                         do
  898.                            if ( (irqu%base_addr)(1 + $I_L897_226, 0) == 0 ) then
  900.                               if ( 1 + $I_L897_226 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L897_226 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  900.                                   _substr(t$617,1,16) = 'Diagnostics.f90'
  900.                                   _substr(t$618,1,6) = 'REQDG'
  900.                                  t$476 = _dv_lb( reqdg, 1 )
  900.                                  t$480 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  900.                                  t$481 = 1 + $I_L897_226
  900.                                  call _bounds_error(  _substr(t$617,1,16), 1403,  _substr(t$618,1,6), 1, t$476, t$480, t$481, t$616 )
  900.                               endif
  900.                               $Unit_temp_O99 = nfprt
  900.                               $IOitem_O100 = ( 1 + $I_L897_226 )
  900.                               _fwrite( _clist( 0, 0, 3, $Unit_temp_O99, Null_Arg, Null_Arg, t$82,  _substr(t$81,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O100, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(1 + $I_L897_226, 0),1,40), 0x800600000000L ) ) )
  901.                               if ( 1 + $I_L897_226 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L897_226 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
  901.                                   _substr(t$620,1,16) = 'Diagnostics.f90'
  901.                                   _substr(t$621,1,6) = 'REQDG'
  901.                                  t$482 = _dv_lb( reqdg, 1 )
  901.                                  t$486 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
  901.                                  t$487 = 1 + $I_L897_226
  901.                                  call _bounds_error(  _substr(t$620,1,16), 1404,  _substr(t$621,1,6), 1, t$482, t$486, t$487, t$619 )
  901.                               endif
  901.                               $Unit_temp_O101 = nferr
  901.                               $IOitem_O102 = ( 1 + $I_L897_226 )
  901.                               _fwrite( _clist( 0, 0, 3, $Unit_temp_O101, Null_Arg, Null_Arg, t$82,  _substr(t$81,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O102, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(1 + $I_L897_226, 0),1,40), 0x800600000000L ) ) )
  902.                                _substr(t$622,1,4) = '5100'
  902.                               call _stop(  _substr(t$622,1,4) )
  902.                               goto 160
  902.                            endif
  905.                            $I_L897_226 = 1 + $I_L897_226
  904.                            if ( $I_L897_226 >= mxrq ) exit
  904.                         enddo
  909.                         if ( icf /= 0 ) then
  910.                            $ja_S10 = 1
  911.                            ix = 1
  911.                            if ( icf > 0 ) then
  911.                               $I_L911_282 = 0
  911.                               do
  912.                                  (ixcf%base_addr)(1 + $I_L911_282, 0) = $ja_S10
  913.                                  (itcf%base_addr)(1 + $I_L911_282, 0) = 0
  914.                                  $ia_S12 = 0
  915.                                  $k1_S13 = 0
  916.                                  $k2_S14 = 0
  917.                                  $k3_S15 = 0
  918.                                  $i1_S16 = 0
  919.                                  $i2_S17 = 0
  920.                                  $I_L920_228 = 0
  920.                                  do
  922.                                     if ( $I_L911_282 + -(irqcf%base_addr)(1 + $I_L920_228, 0) + 1 == 0 ) then
  923.                                        $ia_S12 = 1 + $ia_S12
  924.                                        (jrcf%base_addr)($ja_S10, 0) = ( 1 + $I_L920_228 )
  926.                                        if ( (irqav%base_addr)(1 + $I_L920_228, 0) > 0 ) then
  930.                                           mm = (irqav%base_addr)(1 + $I_L920_228, 0)
  932.                                           if ( (nuavl%base_addr)(mm, 0) / -10 + (nucf%base_addr)(1 + $I_L911_282, 0) / 10 == 0 ) then
  938.                                              (krcf%base_addr)($ja_S10, 0) = mm
  939.                                              if ( (jpavl%base_addr)(mm, 0) == 1 ) then
  939.                                                 $k1_S13 = 1 + $k1_S13
  939.                                              endif
  940.                                              if ( (jpavl%base_addr)(mm, 0) == 2 ) then
  940.                                                 $k2_S14 = 1 + $k2_S14
  940.                                              endif
  941.                                              if ( (jpavl%base_addr)(mm, 0) == 3 ) then
  941.                                                 $k3_S15 = 1 + $k3_S15
  941.                                              endif
  942.                                              if ( (itavl%base_addr)(mm, 0) == 1 ) then
  942.                                                 $i1_S16 = 1 + $i1_S16
  942.                                              endif
  943.                                              if ( (itavl%base_addr)(mm, 0) == 2 ) then
  943.                                                 $i2_S17 = 1 + $i2_S17
  943.                                              endif
  965.                                              $ja_S10 = 1 + $ja_S10
  967.                                              if ( $ja_S10 > 40 ) then
  968.                                                 $Unit_temp_O48 = nfprt
  968.                                                 $_IOitem_P12(0) = ( 1 + $I_L911_282 )
  968.                                                 $_IOitem_P12(1) = ( 1 + $I_L920_228 )
  968.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O48, Null_Arg, Null_Arg, t$84,  _substr(t$83,1,111), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P12(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  969.                                                 $Unit_temp_O49 = nferr
  969.                                                 $_IOitem_P13(0) = ( 1 + $I_L911_282 )
  969.                                                 $_IOitem_P13(1) = ( 1 + $I_L920_228 )
  969.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O49, Null_Arg, Null_Arg, t$84,  _substr(t$83,1,111), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P13(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  970.                                                  _substr(t$655,1,4) = '5600'
  970.                                                 call _stop(  _substr(t$655,1,4) )
  970.                                                 goto 160
  970.                                              endif
  973.                                              $I_L920_228 = 1 + $I_L920_228
  973.                                           else
  973.                                           endif
  945.                                        else if ( (irqav%base_addr)(1 + $I_L920_228, 0) < 0 ) then
  945.                                        else
  945.                                        endif
  945.                                     else
  945.                                     endif
  945.                                     if ( $I_L920_228 >= mxrq ) exit
  945.                                  enddo
  975.                                  (incf%base_addr)(1 + $I_L911_282, 0) = $ia_S12
  977.                                  if ( $k3_S15 /= 0 ) then
  978.                                     (jpcf%base_addr)(1 + $I_L911_282, 0) = 3
  978.                                  else if ( $k2_S14 == 0 ) then
  978.                                     goto 60
  978.                                  else if ( $k1_S13 /= 0 ) then
  980.                                     (jpcf%base_addr)(1 + $I_L911_282, 0) = 3
  980.                                  else
  980.    60                               continue
  981.                                     if ( $k2_S14 /= 0 ) then
  982.                                        (jpcf%base_addr)(1 + $I_L911_282, 0) = 2
  982.                                     else if ( $k1_S13 /= 0 ) then
  984.                                        (jpcf%base_addr)(1 + $I_L911_282, 0) = 1
  984.                                     else
  986.                                        (jpcf%base_addr)(1 + $I_L911_282, 0) = 0
  986.                                     endif
  986.                                  endif
  989.                                  if ( $i1_S16 == 0 .orelse. $i2_S17 == 0 ) then
  995.                                     if ( $i1_S16 /= 0 ) then
  995.                                        (itcf%base_addr)(1 + $I_L911_282, 0) = 1
  995.                                     endif
  996.                                     if ( $i2_S17 /= 0 ) then
  996.                                        (itcf%base_addr)(1 + $I_L911_282, 0) = 2
  996.                                     endif
  998.                                     $I_L911_282 = 1 + $I_L911_282
  996.                                  else
  996.                                  endif
  996.                                  if ( $I_L911_282 >= icf ) exit
  996.                               enddo
  998.                               ix = ( 1 + icf )
  998.                               goto 70
  998.                            else
  998.                               goto 70
  998.                            endif
  998.                         else
  998.    70                      continue
 1003.                            $ja_S19 = 1
 1004.                            if ( mxavl <= 0 ) then
  999.                               goto 80
 1004.                            else if ( icf == 0 ) then
 1004.                               $I_L1004_248 = 0
 1004.                               do
 1006.                                  if ( (dodia%base_addr)(1 + $I_L1004_248, 0) ) then
 1008.                                     (ixavl%base_addr)(1 + $I_L1004_248, 0) = $ja_S19
 1009.                                     $ia_S23 = 0
 1011.                                     if ( (iavrq%base_addr)(1 + $I_L1004_248, 0) > 0 ) then
 1012.                                        $ia_S23 = 1
 1013.                                        (kravl%base_addr)($ja_S19, 0) = (iavrq%base_addr)(1 + $I_L1004_248, 0)
 1014.                                        $ja_S19 = 1 + $ja_S19
 1016.                                        if ( $ja_S19 <= 150 ) then
 1043.                                           (inavl%base_addr)(1 + $I_L1004_248, 0) = $ia_S23
 1044.                                           $I_L1004_248 = 1 + $I_L1004_248
 1044.                                        else
 1044.                                        endif
 1044.                                     else
 1044.                                     endif
 1044.                                  else
 1044.                                  endif
 1044.                                  if ( $I_L1004_248 >= mxavl ) exit
 1044.                               enddo
 1044.                               goto 80
 1044.                            else if ( icf > 0 ) then
 1004.                               $I_L1004_292 = 0
 1004.                               do
 1006.                                  if ( (dodia%base_addr)(1 + $I_L1004_292, 0) ) then
 1008.                                     (ixavl%base_addr)(1 + $I_L1004_292, 0) = $ja_S19
 1009.                                     $ia_S23 = 0
 1011.                                     if ( (iavrq%base_addr)(1 + $I_L1004_292, 0) > 0 ) then
 1012.                                        $ia_S23 = 1
 1013.                                        (kravl%base_addr)($ja_S19, 0) = (iavrq%base_addr)(1 + $I_L1004_292, 0)
 1014.                                        $ja_S19 = 1 + $ja_S19
 1016.                                        if ( $ja_S19 <= 150 ) then
 1025.                                           $I_L1025_284 = 0
 1025.                                           do
 1026.                                              $ka_S22 = (ixcf%base_addr)(1 + $I_L1025_284, 0)
 1027.                                              $t_S21 = (incf%base_addr)(1 + $I_L1025_284, 0)
 1027.                                              if ( $t_S21 > 0 ) then
 1027.                                                 $I_L1027_234 = 0
 1027.                                                 do
 1028.                                                    if ( (krcf%base_addr)($ka_S22 + $I_L1027_234, 0) + -$I_L1004_292 + -1 == 0 ) then
 1029.                                                       $ia_S23 = 1 + $ia_S23
 1030.                                                       (kravl%base_addr)($ja_S19, 0) = ( -1 + -$I_L1025_284 )
 1031.                                                       $ja_S19 = 1 + $ja_S19
 1032.                                                       if ( $ja_S19 > 150 ) then
 1033.                                                          $Unit_temp_O64 = nfprt
 1033.                                                          $_IOitem_P16(0) = ( 1 + $I_L1004_292 )
 1033.                                                          $_IOitem_P16(1) = ( 1 + $I_L1025_284 )
 1033.                                                          _fwrite( _clist( 0, 0, 3, $Unit_temp_O64, Null_Arg, Null_Arg, t$86,  _substr(t$85,1,101), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P16(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1034.                                                          $Unit_temp_O65 = nferr
 1034.                                                          $_IOitem_P17(0) = ( 1 + $I_L1004_292 )
 1034.                                                          $_IOitem_P17(1) = ( 1 + $I_L1025_284 )
 1034.                                                          _fwrite( _clist( 0, 0, 3, $Unit_temp_O65, Null_Arg, Null_Arg, t$86,  _substr(t$85,1,101), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P17(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1035.                                                           _substr(t$693,1,4) = '6100'
 1035.                                                          call _stop(  _substr(t$693,1,4) )
 1035.                                                          goto 160
 1035.                                                       endif
 1039.                                                       $I_L1027_234 = 1 + $I_L1027_234
 1037.                                                    else
 1037.                                                    endif
 1037.                                                    if ( $I_L1027_234 >= $t_S21 ) exit
 1037.                                                 enddo
 1040.                                                 $I_L1025_284 = 1 + $I_L1025_284
 1039.                                              else
 1039.                                              endif
 1039.                                              if ( $I_L1025_284 >= icf ) exit
 1039.                                           enddo
 1040.                                           ix = ( 1 + icf )
 1043.                                           (inavl%base_addr)(1 + $I_L1004_292, 0) = $ia_S23
 1044.                                           $I_L1004_292 = 1 + $I_L1004_292
 1044.                                        else
 1044.                                        endif
 1044.                                     else
 1044.                                     endif
 1044.                                  else
 1044.                                  endif
 1044.                                  if ( $I_L1004_292 >= mxavl ) exit
 1044.                               enddo
 1044.                               goto 80
 1044.                            else
 1004.                               $I_L1004_250 = 0
 1004.                               do
 1006.                                  if ( (dodia%base_addr)(1 + $I_L1004_250, 0) ) then
 1008.                                     (ixavl%base_addr)(1 + $I_L1004_250, 0) = $ja_S19
 1009.                                     $ia_S23 = 0
 1011.                                     if ( (iavrq%base_addr)(1 + $I_L1004_250, 0) > 0 ) then
 1012.                                        $ia_S23 = 1
 1013.                                        (kravl%base_addr)($ja_S19, 0) = (iavrq%base_addr)(1 + $I_L1004_250, 0)
 1014.                                        $ja_S19 = 1 + $ja_S19
 1016.                                        if ( $ja_S19 <= 150 ) then
 1025.                                           ix = 1
 1043.                                           (inavl%base_addr)(1 + $I_L1004_250, 0) = $ia_S23
 1044.                                           $I_L1004_250 = 1 + $I_L1004_250
 1044.                                        else
 1044.                                        endif
 1044.                                     else
 1044.                                     endif
 1044.                                  else
 1044.                                  endif
 1044.                                  if ( $I_L1004_250 >= mxavl ) exit
 1044.                               enddo
 1044.    80                         continue
 1046.                               $la_S28 = 1
 1047.                               if ( icf > 0 ) then
 1047.                                  $I_L1047_294 = 0
 1047.                                  do
 1048.                                     (icfu%base_addr)(1 + $I_L1047_294, 0) = .false.
 1049.                                     (ixucf%base_addr)(1 + $I_L1047_294, 0) = 0
 1050.                                     $ia_S29 = 0
 1051.                                     $I_L1051_286 = 0
 1051.                                     do
 1052.                                        $ka_S26 = (ixcf%base_addr)(1 + $I_L1051_286, 0)
 1053.                                        $t_S25 = (incf%base_addr)(1 + $I_L1051_286, 0)
 1053.                                        if ( $t_S25 > 0 ) then
 1053.                                           $I_L1053_236 = 0
 1053. !dir$ ivdep
 1053.                                           do
 1054.                                              if ( -(krcf%base_addr)($ka_S26 + $I_L1053_236, 0) + -$I_L1047_294 + -1 == 0 ) then
 1058.                                                 if ( ( 1 + $I_L1051_286 ) > ( 1 + $I_L1047_294 ) ) then
 1063.                                                    if ( (icfu%base_addr)(1 + $I_L1047_294, 0) == 0 ) then
 1064.                                                       (icfu%base_addr)(1 + $I_L1047_294, 0) = .true.
 1065.                                                       (ixucf%base_addr)(1 + $I_L1047_294, 0) = $la_S28
 1065.                                                    endif
 1067.                                                    if ( (iclcd%base_addr)((jrcf%base_addr)(1 + $I_L1051_286, 0), 0) > 0 ) then
 1068.                                                       (jrucf%base_addr)($la_S28, 0) = ( 1 + $I_L1051_286 )
 1068.                                                    else
 1070.                                                       (jrucf%base_addr)($la_S28, 0) = ( -1 + -$I_L1051_286 )
 1070.                                                    endif
 1072.                                                    $ia_S29 = 1 + $ia_S29
 1073.                                                    $la_S28 = 1 + $la_S28
 1074.                                                    if ( $la_S28 <= 40 ) then
 1071.                                                       goto 90
 1071.                                                    else
 1075.                                                       $Unit_temp_O66 = nfprt
 1075.                                                       $_IOitem_P18(0) = ( 1 + $I_L1051_286 )
 1075.                                                       $_IOitem_P18(1) = ( 1 + $I_L1047_294 )
 1075.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O66, Null_Arg, Null_Arg, t$94,  _substr(t$93,1,101), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P18(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1076.                                                       $Unit_temp_O67 = nferr
 1076.                                                       $_IOitem_P19(0) = ( 1 + $I_L1051_286 )
 1076.                                                       $_IOitem_P19(1) = ( 1 + $I_L1047_294 )
 1076.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O67, Null_Arg, Null_Arg, t$94,  _substr(t$93,1,101), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P19(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1077.                                                        _substr(t$716,1,4) = '8100'
 1077.                                                       call _stop(  _substr(t$716,1,4) )
 1077.                                                    endif
 1077.                                                 else
 1059.                                                    if ( ( 1 + $I_L1051_286 ) < jrcf%dim_1%LB .or. ( 1 + $I_L1051_286 ) > jrcf%dim_1%LB + jrcf%dim_1%EX + -1 ) then
 1059.                                                        _substr(t$704,1,16) = 'Diagnostics.f90'
 1059.                                                        _substr(t$705,1,5) = 'JRCF'
 1059.                                                       t$482 = jrcf%dim_1%LB
 1059.                                                       t$486 = jrcf%dim_1%LB + jrcf%dim_1%EX + -1
 1059.                                                       t$487 = 1 + $I_L1051_286
 1059.                                                       call _bounds_error(  _substr(t$704,1,16), 1562,  _substr(t$705,1,5), 1, t$482, t$486, t$487, t$703 )
 1059.                                                    endif
 1059.                                                    if ( ( 1 + $I_L1047_294 ) < jrcf%dim_1%LB .or. ( 1 + $I_L1047_294 ) > jrcf%dim_1%LB + jrcf%dim_1%EX + -1 ) then
 1059.                                                        _substr(t$707,1,16) = 'Diagnostics.f90'
 1059.                                                        _substr(t$708,1,5) = 'JRCF'
 1059.                                                       t$488 = jrcf%dim_1%LB
 1059.                                                       t$492 = jrcf%dim_1%LB + jrcf%dim_1%EX + -1
 1059.                                                       t$493 = 1 + $I_L1047_294
 1059.                                                       call _bounds_error(  _substr(t$707,1,16), 1562,  _substr(t$708,1,5), 1, t$488, t$492, t$493, t$706 )
 1059.                                                    endif
 1059.                                                    $Unit_temp_O68 = nfprt
 1059.                                                    $_IOitem_P20(0) = ( 1 + $I_L1051_286 )
 1059.                                                    $_IOitem_P20(1) = ( 1 + $I_L1047_294 )
 1059.                                                    _fwrite( _clist( 0, 0, 3, $Unit_temp_O68, Null_Arg, Null_Arg, t$96,  _substr(t$95,1,174), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P20(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( (jrcf%base_addr)(1 + $I_L1051_286, 0), 0x2000200000000L ), _iotype( (jrcf%base_addr)(1 + $I_L1047_294, 0), 0x2000200000000L ) ) )
 1060.                                                    if ( ( 1 + $I_L1051_286 ) < jrcf%dim_1%LB .or. ( 1 + $I_L1051_286 ) > jrcf%dim_1%LB + jrcf%dim_1%EX + -1 ) then
 1060.                                                        _substr(t$710,1,16) = 'Diagnostics.f90'
 1060.                                                        _substr(t$711,1,5) = 'JRCF'
 1060.                                                       t$494 = jrcf%dim_1%LB
 1060.                                                       t$498 = jrcf%dim_1%LB + jrcf%dim_1%EX + -1
 1060.                                                       t$499 = 1 + $I_L1051_286
 1060.                                                       call _bounds_error(  _substr(t$710,1,16), 1563,  _substr(t$711,1,5), 1, t$494, t$498, t$499, t$709 )
 1060.                                                    endif
 1060.                                                    if ( ( 1 + $I_L1047_294 ) < jrcf%dim_1%LB .or. ( 1 + $I_L1047_294 ) > jrcf%dim_1%LB + jrcf%dim_1%EX + -1 ) then
 1060.                                                        _substr(t$713,1,16) = 'Diagnostics.f90'
 1060.                                                        _substr(t$714,1,5) = 'JRCF'
 1060.                                                       t$500 = jrcf%dim_1%LB
 1060.                                                       t$474 = jrcf%dim_1%LB + jrcf%dim_1%EX + -1
 1060.                                                       t$475 = 1 + $I_L1047_294
 1060.                                                       call _bounds_error(  _substr(t$713,1,16), 1563,  _substr(t$714,1,5), 1, t$500, t$474, t$475, t$712 )
 1060.                                                    endif
 1060.                                                    $Unit_temp_O71 = nferr
 1060.                                                    $_IOitem_P21(0) = ( 1 + $I_L1051_286 )
 1060.                                                    $_IOitem_P21(1) = ( 1 + $I_L1047_294 )
 1060.                                                    _fwrite( _clist( 0, 0, 3, $Unit_temp_O71, Null_Arg, Null_Arg, t$96,  _substr(t$95,1,174), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P21(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( (jrcf%base_addr)(1 + $I_L1051_286, 0), 0x2000200000000L ), _iotype( (jrcf%base_addr)(1 + $I_L1047_294, 0), 0x2000200000000L ) ) )
 1061.                                                     _substr(t$715,1,4) = '8600'
 1061.                                                    call _stop(  _substr(t$715,1,4) )
 1061.                                                 endif
 1061.                                                 goto 160
 1061.                                              endif
 1056.                                              $I_L1053_236 = 1 + $I_L1053_236
 1055.                                              if ( $I_L1053_236 >= $t_S25 ) exit
 1055.                                           enddo
 1055.                                           goto 90
 1055.                                        else
 1055.    90                                     continue
 1079.                                           $I_L1051_286 = 1 + $I_L1051_286
 1079.                                        endif
 1079.                                        if ( $I_L1051_286 >= icf ) exit
 1079.                                     enddo
 1080.                                     (inucf%base_addr)(1 + $I_L1047_294, 0) = $ia_S29
 1081.                                     $I_L1047_294 = 1 + $I_L1047_294
 1079.                                     if ( $I_L1047_294 >= icf ) exit
 1079.                                  enddo
 1079.                                  goto 100
 1079.                               else
 1079.   100                            continue
 1083.                                  if ( nfctrl(51) >= 2 ) then
 1083.                                     $Unit_temp_O74 = nfprt
 1083.                                     _fwrite( _clist( 0, 0, 3, $Unit_temp_O74, Null_Arg, Null_Arg, t$26,  _substr(t$25,1,79), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1083.                                  endif
 1084.                                  mm = 0
 1085.                                  $t_S32 = mxavl
 1085.                                  if ( mxavl > 0 ) then
 1085.                                     $I_L1085_288 = 0
 1085.                                     do
 1086.                                        if ( (dodia%base_addr)(1 + $I_L1085_288, 0) ) then
 1087.                                           mm = 1 + mm
 1088.                                           if ( nfctrl(51) >= 2 ) then
 1088.                                              if ( 1 + $I_L1085_288 < _dv_lb( avail, 1 ) .or. ( 1 + $I_L1085_288 ) > _dv_lb( avail, 1 ) + _dv_ex( avail, 1 ) + -1 ) then
 1088.                                                  _substr(t$721,1,16) = 'Diagnostics.f90'
 1088.                                                  _substr(t$722,1,6) = 'AVAIL'
 1088.                                                 t$476 = _dv_lb( avail, 1 )
 1088.                                                 t$480 = _dv_lb( avail, 1 ) + _dv_ex( avail, 1 ) + -1
 1088.                                                 t$481 = 1 + $I_L1085_288
 1088.                                                 call _bounds_error(  _substr(t$721,1,16), 1591,  _substr(t$722,1,6), 1, t$476, t$480, t$481, t$720 )
 1088.                                              endif
 1088.                                              $Unit_temp_O75 = nfprt
 1088.                                              $_IOitem_P22(0) = mm
 1088.                                              $_IOitem_P22(1) = ( 1 + $I_L1085_288 )
 1088.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O75, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,62), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P22(:( 0, 1, 1 )), 0x2000200000000L ), _iotype(  _substr((avail%base_addr)(1 + $I_L1085_288, 0),1,40), 0x800600000000L ) ) )
 1088.                                           endif
 1089.                                           if ( nfctrl(51) >= 2 ) then
 1089.                                              if ( ( 1 + $I_L1085_288 ) < lvavl%dim_1%LB .or. ( 1 + $I_L1085_288 ) > lvavl%dim_1%LB + lvavl%dim_1%EX + -1 ) then
 1089.                                                  _substr(t$724,1,16) = 'Diagnostics.f90'
 1089.                                                  _substr(t$725,1,6) = 'LVAVL'
 1089.                                                 t$482 = lvavl%dim_1%LB
 1089.                                                 t$486 = lvavl%dim_1%LB + lvavl%dim_1%EX + -1
 1089.                                                 t$487 = 1 + $I_L1085_288
 1089.                                                 call _bounds_error(  _substr(t$724,1,16), 1592,  _substr(t$725,1,6), 1, t$482, t$486, t$487, t$723 )
 1089.                                              endif
 1089.                                              if ( (nuavl%base_addr)(1 + $I_L1085_288, 0) < _dv_lb( aunits, 1 ) .or. (nuavl%base_addr)(1 + $I_L1085_288, 0) > _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1 ) then
 1089.                                                  _substr(t$727,1,16) = 'Diagnostics.f90'
 1089.                                                  _substr(t$728,1,7) = 'AUNITS'
 1089.                                                 t$488 = _dv_lb( aunits, 1 )
 1089.                                                 t$492 = _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1
 1089.                                                 t$493 = (nuavl%base_addr)(1 + $I_L1085_288, 0)
 1089.                                                 call _bounds_error(  _substr(t$727,1,16), 1592,  _substr(t$728,1,7), 1, t$488, t$492, t$493, t$726 )
 1089.                                              endif
 1089.                                              if ( ( 1 + $I_L1085_288 ) < nuavl%dim_1%LB .or. ( 1 + $I_L1085_288 ) > nuavl%dim_1%LB + nuavl%dim_1%EX + -1 ) then
 1089.                                                  _substr(t$730,1,16) = 'Diagnostics.f90'
 1089.                                                  _substr(t$731,1,6) = 'NUAVL'
 1089.                                                 t$494 = nuavl%dim_1%LB
 1089.                                                 t$498 = nuavl%dim_1%LB + nuavl%dim_1%EX + -1
 1089.                                                 t$499 = 1 + $I_L1085_288
 1089.                                                 call _bounds_error(  _substr(t$730,1,16), 1592,  _substr(t$731,1,6), 1, t$494, t$498, t$499, t$729 )
 1089.                                              endif
 1090.                                              if ( (itavl%base_addr)(1 + $I_L1085_288, 0) <= 0 .or. (itavl%base_addr)(1 + $I_L1085_288, 0) > 2 ) then
 1090.                                                  _substr(t$733,1,16) = 'Diagnostics.f90'
 1090.                                                  _substr(t$734,1,6) = 'TYPCD'
 1090.                                                 t$500 = (itavl%base_addr)(1 + $I_L1085_288, 0)
 1090.                                                 call _bounds_error(  _substr(t$733,1,16), 1593,  _substr(t$734,1,6), 1, 1, 2, t$500, t$732 )
 1090.                                              endif
 1090.                                              if ( ( 1 + $I_L1085_288 ) < itavl%dim_1%LB .or. ( 1 + $I_L1085_288 ) > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 1090.                                                  _substr(t$736,1,16) = 'Diagnostics.f90'
 1090.                                                  _substr(t$737,1,6) = 'ITAVL'
 1090.                                                 t$474 = itavl%dim_1%LB
 1090.                                                 t$475 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 1090.                                                 t$476 = 1 + $I_L1085_288
 1090.                                                 call _bounds_error(  _substr(t$736,1,16), 1593,  _substr(t$737,1,6), 1, t$474, t$475, t$476, t$735 )
 1090.                                              endif
 1090.                                              if ( (jpavl%base_addr)(1 + $I_L1085_288, 0) < 0 .or. (jpavl%base_addr)(1 + $I_L1085_288, 0) > 3 ) then
 1090.                                                  _substr(t$739,1,16) = 'Diagnostics.f90'
 1090.                                                  _substr(t$740,1,6) = 'POSCD'
 1090.                                                 t$480 = (jpavl%base_addr)(1 + $I_L1085_288, 0)
 1090.                                                 call _bounds_error(  _substr(t$739,1,16), 1593,  _substr(t$740,1,6), 1, 0, 3, t$480, t$738 )
 1090.                                              endif
 1090.                                              if ( ( 1 + $I_L1085_288 ) <= 0 .or. ( 1 + $I_L1085_288 ) > 106 ) then
 1090.                                                  _substr(t$742,1,16) = 'Diagnostics.f90'
 1090.                                                  _substr(t$743,1,6) = 'JPAVL'
 1090.                                                 t$481 = 1
 1090.                                                 t$744 = 106
 1090.                                                 t$745 = 1 + $I_L1085_288
 1090.                                                 call _bounds_error(  _substr(t$742,1,16), 1593,  _substr(t$743,1,6), 1, t$481, t$744, t$745, t$741 )
 1090.                                              endif
 1089.                                              $Unit_temp_O77 = nfprt
 1089.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O77, Null_Arg, Null_Arg, t$30,  _substr(t$29,1,63), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (lvavl%base_addr)(1 + $I_L1085_288, 0), 0x2000200000000L ), _iotype(  _substr((aunits%base_addr)((nuavl%base_addr)(1 + $I_L1085_288, 0), 0),1,16), 0x800600000000L ), _iotype(  _substr(typcd((itavl%base_addr)(1 + $I_L1085_288, 0)),1,8), 0x800600000000L ), _iotype(  _substr(poscd((jpavl%base_addr)(1 + $I_L1085_288, 0)),1,38), 0x800600000000L ) ) )
 1089.                                           endif
 1091.                                           if ( (iavrq%base_addr)(1 + $I_L1085_288, 0) /= 0 ) then
 1091.                                              if ( nfctrl(51) >= 2 ) then
 1091.                                                 if ( ( 1 + $I_L1085_288 ) < iavrq%dim_1%LB .or. ( 1 + $I_L1085_288 ) > iavrq%dim_1%LB + iavrq%dim_1%EX + -1 ) then
 1091.                                                     _substr(t$747,1,16) = 'Diagnostics.f90'
 1091.                                                     _substr(t$748,1,6) = 'IAVRQ'
 1091.                                                    t$482 = iavrq%dim_1%LB
 1091.                                                    t$486 = iavrq%dim_1%LB + iavrq%dim_1%EX + -1
 1091.                                                    t$487 = 1 + $I_L1085_288
 1091.                                                    call _bounds_error(  _substr(t$747,1,16), 1594,  _substr(t$748,1,6), 1, t$482, t$486, t$487, t$746 )
 1091.                                                 endif
 1091.                                                 $Unit_temp_O78 = nfprt
 1091.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O78, Null_Arg, Null_Arg, t$32,  _substr(t$31,1,59), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (iavrq%base_addr)(1 + $I_L1085_288, 0), 0x2000200000000L ) ) )
 1091.                                              endif
 1091.                                           endif
 1092.                                           if ( (kravl%base_addr)((ixavl%base_addr)(1 + $I_L1085_288, 0), 0) < 0 ) then
 1091.                                              goto 110
 1092.                                           else if ( (inavl%base_addr)(1 + $I_L1085_288, 0) > 1 ) then
 1092.   110                                        continue
 1093.                                              $ka_S30 = (ixavl%base_addr)(1 + $I_L1085_288, 0)
 1094.                                              $kka_S31 = $ka_S30 + (inavl%base_addr)(1 + $I_L1085_288, 0) + -1
 1095.                                              ka = $ka_S30 + ( (kravl%base_addr)($ka_S30, 0) > 0 )
 1096.                                              if ( nfctrl(51) >= 2 ) then
 1096.                                                 $Unit_temp_O79 = nfprt
 1096.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O79, Null_Arg, Null_Arg, t$34,  _substr(t$33,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1096.                                              endif
 1097.                                              if ( $kka_S31 + -ka >= 0 ) then
 1097.                                                 $I_L1097_238 = 0
 1097.                                                 do
 1098.                                                    if ( nfctrl(51) >= 2 ) then
 1098.                                                       if ( abs( (kravl%base_addr)(ka + $I_L1097_238, 0) ) < _dv_lb( combf, 1 ) .or. abs( (kravl%base_addr)(ka + $I_L1097_238, 0) ) > _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1 ) then
 1098.                                                           _substr(t$754,1,16) = 'Diagnostics.f90'
 1098.                                                           _substr(t$755,1,6) = 'COMBF'
 1098.                                                          t$488 = _dv_lb( combf, 1 )
 1098.                                                          t$492 = _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1
 1098.                                                          t$493 = abs( (kravl%base_addr)(ka + $I_L1097_238, 0) )
 1098.                                                          call _bounds_error(  _substr(t$754,1,16), 1601,  _substr(t$755,1,6), 1, t$488, t$492, t$493, t$753 )
 1098.                                                       endif
 1098.                                                       if ( ( ka + $I_L1097_238 ) < kravl%dim_1%LB .or. ( ka + $I_L1097_238 ) > kravl%dim_1%LB + kravl%dim_1%EX + -1 ) then
 1098.                                                           _substr(t$757,1,16) = 'Diagnostics.f90'
 1098.                                                           _substr(t$758,1,6) = 'KRAVL'
 1098.                                                          t$494 = kravl%dim_1%LB
 1098.                                                          t$498 = kravl%dim_1%LB + kravl%dim_1%EX + -1
 1098.                                                          t$499 = ka + $I_L1097_238
 1098.                                                          call _bounds_error(  _substr(t$757,1,16), 1601,  _substr(t$758,1,6), 1, t$494, t$498, t$499, t$756 )
 1098.                                                       endif
 1098.                                                       $Unit_temp_O80 = nfprt
 1098.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O80, Null_Arg, Null_Arg, t$36,  _substr(t$35,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((combf%base_addr)(abs( (kravl%base_addr)(ka + $I_L1097_238, 0) ), 0),1,40), 0x800600000000L ) ) )
 1098.                                                    endif
 1099.                                                    $I_L1097_238 = 1 + $I_L1097_238
 1098.                                                    if ( $I_L1097_238 >= $kka_S31 + -ka + 1 ) exit
 1098.                                                 enddo
 1098.                                              endif
 1098.                                           endif
 1098.                                        endif
 1101.                                        $I_L1085_288 = 1 + $I_L1085_288
 1101.                                        if ( $I_L1085_288 >= $t_S32 ) exit
 1101.                                     enddo
 1101.                                  endif
 1102.                                  if ( nfctrl(51) >= 2 ) then
 1102.                                     $Unit_temp_O81 = nfprt
 1102.                                     _fwrite( _clist( 0, 0, 3, $Unit_temp_O81, Null_Arg, Null_Arg, t$38,  _substr(t$37,1,56), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1102.                                  endif
 1103.                                  $t_S33 = mxrq
 1103.                                  if ( mxrq > 0 ) then
 1103.                                     $I_L1103_240 = 0
 1103.                                     do
 1104.                                        if ( nfctrl(51) >= 2 ) then
 1104.                                           if ( 1 + $I_L1103_240 < _dv_lb( reqdg, 1 ) .or. ( 1 + $I_L1103_240 ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
 1104.                                               _substr(t$763,1,16) = 'Diagnostics.f90'
 1104.                                               _substr(t$764,1,6) = 'REQDG'
 1104.                                              t$500 = _dv_lb( reqdg, 1 )
 1104.                                              t$474 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
 1104.                                              t$475 = 1 + $I_L1103_240
 1104.                                              call _bounds_error(  _substr(t$763,1,16), 1607,  _substr(t$764,1,6), 1, t$500, t$474, t$475, t$762 )
 1104.                                           endif
 1104.                                           $Unit_temp_O82 = nfprt
 1104.                                           $IOitem_O83 = ( 1 + $I_L1103_240 )
 1104.                                           _fwrite( _clist( 0, 0, 3, $Unit_temp_O82, Null_Arg, Null_Arg, t$40,  _substr(t$39,1,52), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O83, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(1 + $I_L1103_240, 0),1,40), 0x800600000000L ) ) )
 1104.                                        endif
 1105.                                        if ( nfctrl(51) >= 2 ) then
 1105.                                           if ( ( 1 + $I_L1103_240 ) < lvrq%dim_1%LB .or. ( 1 + $I_L1103_240 ) > lvrq%dim_1%LB + lvrq%dim_1%EX + -1 ) then
 1105.                                               _substr(t$766,1,16) = 'Diagnostics.f90'
 1105.                                               _substr(t$767,1,5) = 'LVRQ'
 1105.                                              t$476 = lvrq%dim_1%LB
 1105.                                              t$480 = lvrq%dim_1%LB + lvrq%dim_1%EX + -1
 1105.                                              t$481 = 1 + $I_L1103_240
 1105.                                              call _bounds_error(  _substr(t$766,1,16), 1608,  _substr(t$767,1,5), 1, t$476, t$480, t$481, t$765 )
 1105.                                           endif
 1105.                                           if ( (nurq%base_addr)(1 + $I_L1103_240, 0) < _dv_lb( aunits, 1 ) .or. (nurq%base_addr)(1 + $I_L1103_240, 0) > _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1 ) then
 1105.                                               _substr(t$769,1,16) = 'Diagnostics.f90'
 1105.                                               _substr(t$770,1,7) = 'AUNITS'
 1105.                                              t$744 = _dv_lb( aunits, 1 )
 1105.                                              t$745 = _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1
 1105.                                              t$482 = (nurq%base_addr)(1 + $I_L1103_240, 0)
 1105.                                              call _bounds_error(  _substr(t$769,1,16), 1608,  _substr(t$770,1,7), 1, t$744, t$745, t$482, t$768 )
 1105.                                           endif
 1105.                                           if ( ( 1 + $I_L1103_240 ) < nurq%dim_1%LB .or. ( 1 + $I_L1103_240 ) > nurq%dim_1%LB + nurq%dim_1%EX + -1 ) then
 1105.                                               _substr(t$772,1,16) = 'Diagnostics.f90'
 1105.                                               _substr(t$773,1,5) = 'NURQ'
 1105.                                              t$486 = nurq%dim_1%LB
 1105.                                              t$487 = nurq%dim_1%LB + nurq%dim_1%EX + -1
 1105.                                              t$488 = 1 + $I_L1103_240
 1105.                                              call _bounds_error(  _substr(t$772,1,16), 1608,  _substr(t$773,1,5), 1, t$486, t$487, t$488, t$771 )
 1105.                                           endif
 1106.                                           if ( ( 1 + $I_L1103_240 ) <= 0 .or. ( 1 + $I_L1103_240 ) > 100 ) then
 1106.                                               _substr(t$775,1,16) = 'Diagnostics.f90'
 1106.                                               _substr(t$776,1,6) = 'IRQCF'
 1106.                                              t$492 = 1
 1106.                                              t$493 = 100
 1106.                                              t$494 = 1 + $I_L1103_240
 1106.                                              call _bounds_error(  _substr(t$775,1,16), 1609,  _substr(t$776,1,6), 1, t$492, t$493, t$494, t$774 )
 1106.                                           endif
 1105.                                           $Unit_temp_O84 = nfprt
 1105.                                           _fwrite( _clist( 0, 0, 3, $Unit_temp_O84, Null_Arg, Null_Arg, t$42,  _substr(t$41,1,76), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (lvrq%base_addr)(1 + $I_L1103_240, 0), 0x2000200000000L ), _iotype(  _substr((aunits%base_addr)((nurq%base_addr)(1 + $I_L1103_240, 0), 0),1,16), 0x800600000000L ), _iotype( (irqcf%base_addr)(1 + $I_L1103_240, 0), 0x2000200000000L ) ) )
 1105.                                        endif
 1107.                                        if ( (irqav%base_addr)(1 + $I_L1103_240, 0) > 0 ) then
 1108.                                           if ( (iclcd%base_addr)(1 + $I_L1103_240, 0) < 0 ) then
 1109.                                              if ( nfctrl(51) >= 2 ) then
 1109.                                                 if ( ( 1 + $I_L1103_240 ) <= 0 .or. ( 1 + $I_L1103_240 ) > 100 ) then
 1109.                                                     _substr(t$778,1,16) = 'Diagnostics.f90'
 1109.                                                     _substr(t$779,1,6) = 'IRQAV'
 1109.                                                    t$498 = 1
 1109.                                                    t$499 = 100
 1109.                                                    t$500 = 1 + $I_L1103_240
 1109.                                                    call _bounds_error(  _substr(t$778,1,16), 1612,  _substr(t$779,1,6), 1, t$498, t$499, t$500, t$777 )
 1109.                                                 endif
 1109.                                                 if ( abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ) < _dv_lb( reqdg, 1 ) .or. abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
 1109.                                                     _substr(t$781,1,16) = 'Diagnostics.f90'
 1109.                                                     _substr(t$782,1,6) = 'REQDG'
 1109.                                                    t$474 = _dv_lb( reqdg, 1 )
 1109.                                                    t$475 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
 1109.                                                    t$476 = abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) )
 1109.                                                    call _bounds_error(  _substr(t$781,1,16), 1612,  _substr(t$782,1,6), 1, t$474, t$475, t$476, t$780 )
 1109.                                                 endif
 1109.                                                 if ( ( 1 + $I_L1103_240 ) < iclcd%dim_1%LB .or. ( 1 + $I_L1103_240 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
 1109.                                                     _substr(t$784,1,16) = 'Diagnostics.f90'
 1109.                                                     _substr(t$785,1,6) = 'ICLCD'
 1109.                                                    t$480 = iclcd%dim_1%LB
 1109.                                                    t$481 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
 1109.                                                    t$744 = 1 + $I_L1103_240
 1109.                                                    call _bounds_error(  _substr(t$784,1,16), 1612,  _substr(t$785,1,6), 1, t$480, t$481, t$744, t$783 )
 1109.                                                 endif
 1109.                                                 $Unit_temp_O85 = nfprt
 1109.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O85, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,102), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (irqav%base_addr)(1 + $I_L1103_240, 0), 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ), 0),1,40), 0x800600000000L ) ) )
 1109.                                              endif
 1110.                                           else if ( (iclcd%base_addr)(1 + $I_L1103_240, 0) == 0 ) then
 1111.                                              if ( nfctrl(51) >= 2 ) then
 1111.                                                 if ( ( 1 + $I_L1103_240 ) <= 0 .or. ( 1 + $I_L1103_240 ) > 100 ) then
 1111.                                                     _substr(t$787,1,16) = 'Diagnostics.f90'
 1111.                                                     _substr(t$788,1,6) = 'IRQAV'
 1111.                                                    t$745 = 1
 1111.                                                    t$482 = 100
 1111.                                                    t$486 = 1 + $I_L1103_240
 1111.                                                    call _bounds_error(  _substr(t$787,1,16), 1614,  _substr(t$788,1,6), 1, t$745, t$482, t$486, t$786 )
 1111.                                                 endif
 1111.                                                 $Unit_temp_O86 = nfprt
 1111.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O86, Null_Arg, Null_Arg, t$46,  _substr(t$45,1,60), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (irqav%base_addr)(1 + $I_L1103_240, 0), 0x2000200000000L ) ) )
 1111.                                              endif
 1111.                                           else if ( nfctrl(51) >= 2 ) then
 1113.                                              if ( ( 1 + $I_L1103_240 ) <= 0 .or. ( 1 + $I_L1103_240 ) > 100 ) then
 1113.                                                  _substr(t$790,1,16) = 'Diagnostics.f90'
 1113.                                                  _substr(t$791,1,6) = 'IRQAV'
 1113.                                                 t$487 = 1
 1113.                                                 t$488 = 100
 1113.                                                 t$492 = 1 + $I_L1103_240
 1113.                                                 call _bounds_error(  _substr(t$790,1,16), 1616,  _substr(t$791,1,6), 1, t$487, t$488, t$492, t$789 )
 1113.                                              endif
 1113.                                              if ( (iclcd%base_addr)(1 + $I_L1103_240, 0) < _dv_lb( reqdg, 1 ) .or. (iclcd%base_addr)(1 + $I_L1103_240, 0) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
 1113.                                                  _substr(t$793,1,16) = 'Diagnostics.f90'
 1113.                                                  _substr(t$794,1,6) = 'REQDG'
 1113.                                                 t$493 = _dv_lb( reqdg, 1 )
 1113.                                                 t$494 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
 1113.                                                 t$498 = (iclcd%base_addr)(1 + $I_L1103_240, 0)
 1113.                                                 call _bounds_error(  _substr(t$793,1,16), 1616,  _substr(t$794,1,6), 1, t$493, t$494, t$498, t$792 )
 1113.                                              endif
 1113.                                              if ( ( 1 + $I_L1103_240 ) < iclcd%dim_1%LB .or. ( 1 + $I_L1103_240 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
 1113.                                                  _substr(t$796,1,16) = 'Diagnostics.f90'
 1113.                                                  _substr(t$797,1,6) = 'ICLCD'
 1113.                                                 t$499 = iclcd%dim_1%LB
 1113.                                                 t$500 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
 1113.                                                 t$474 = 1 + $I_L1103_240
 1113.                                                 call _bounds_error(  _substr(t$796,1,16), 1616,  _substr(t$797,1,6), 1, t$499, t$500, t$474, t$795 )
 1113.                                              endif
 1113.                                              $Unit_temp_O87 = nfprt
 1113.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O87, Null_Arg, Null_Arg, t$48,  _substr(t$47,1,97), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (irqav%base_addr)(1 + $I_L1103_240, 0), 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)((iclcd%base_addr)(1 + $I_L1103_240, 0), 0),1,40), 0x800600000000L ) ) )
 1113.                                           endif
 1115.                                        else if ( (irqav%base_addr)(1 + $I_L1103_240, 0) < 0 ) then
 1116.                                           irix = abs( (irqav%base_addr)(1 + $I_L1103_240, 0) )
 1117.                                           if ( (iclcd%base_addr)(1 + $I_L1103_240, 0) < 0 ) then
 1118.                                              if ( nfctrl(51) >= 2 ) then
 1118.                                                 if ( abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ) < _dv_lb( reqdg, 1 ) .or. abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
 1118.                                                     _substr(t$799,1,16) = 'Diagnostics.f90'
 1118.                                                     _substr(t$800,1,6) = 'REQDG'
 1118.                                                    t$475 = _dv_lb( reqdg, 1 )
 1118.                                                    t$476 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
 1118.                                                    t$480 = abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) )
 1118.                                                    call _bounds_error(  _substr(t$799,1,16), 1621,  _substr(t$800,1,6), 1, t$475, t$476, t$480, t$798 )
 1118.                                                 endif
 1118.                                                 if ( ( 1 + $I_L1103_240 ) < iclcd%dim_1%LB .or. ( 1 + $I_L1103_240 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
 1118.                                                     _substr(t$802,1,16) = 'Diagnostics.f90'
 1118.                                                     _substr(t$803,1,6) = 'ICLCD'
 1118.                                                    t$481 = iclcd%dim_1%LB
 1118.                                                    t$744 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
 1118.                                                    t$745 = 1 + $I_L1103_240
 1118.                                                    call _bounds_error(  _substr(t$802,1,16), 1621,  _substr(t$803,1,6), 1, t$481, t$744, t$745, t$801 )
 1118.                                                 endif
 1118.                                                 $Unit_temp_O88 = nfprt
 1118.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O88, Null_Arg, Null_Arg, t$50,  _substr(t$49,1,96), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( irix, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)(abs( (iclcd%base_addr)(1 + $I_L1103_240, 0) ), 0),1,40), 0x800600000000L ) ) )
 1118.                                              endif
 1119.                                           else if ( nfctrl(51) >= 2 ) then
 1120.                                              if ( (iclcd%base_addr)(1 + $I_L1103_240, 0) < _dv_lb( reqdg, 1 ) .or. (iclcd%base_addr)(1 + $I_L1103_240, 0) > _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1 ) then
 1120.                                                  _substr(t$805,1,16) = 'Diagnostics.f90'
 1120.                                                  _substr(t$806,1,6) = 'REQDG'
 1120.                                                 t$482 = _dv_lb( reqdg, 1 )
 1120.                                                 t$486 = _dv_lb( reqdg, 1 ) + _dv_ex( reqdg, 1 ) + -1
 1120.                                                 t$487 = (iclcd%base_addr)(1 + $I_L1103_240, 0)
 1120.                                                 call _bounds_error(  _substr(t$805,1,16), 1623,  _substr(t$806,1,6), 1, t$482, t$486, t$487, t$804 )
 1120.                                              endif
 1120.                                              if ( ( 1 + $I_L1103_240 ) < iclcd%dim_1%LB .or. ( 1 + $I_L1103_240 ) > iclcd%dim_1%LB + iclcd%dim_1%EX + -1 ) then
 1120.                                                  _substr(t$808,1,16) = 'Diagnostics.f90'
 1120.                                                  _substr(t$809,1,6) = 'ICLCD'
 1120.                                                 t$488 = iclcd%dim_1%LB
 1120.                                                 t$492 = iclcd%dim_1%LB + iclcd%dim_1%EX + -1
 1120.                                                 t$493 = 1 + $I_L1103_240
 1120.                                                 call _bounds_error(  _substr(t$808,1,16), 1623,  _substr(t$809,1,6), 1, t$488, t$492, t$493, t$807 )
 1120.                                              endif
 1120.                                              $Unit_temp_O89 = nfprt
 1120.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O89, Null_Arg, Null_Arg, t$52,  _substr(t$51,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( irix, 0x2000200000000L ), _iotype(  _substr((reqdg%base_addr)((iclcd%base_addr)(1 + $I_L1103_240, 0), 0),1,40), 0x800600000000L ) ) )
 1120.                                           endif
 1120.                                        endif
 1123.                                        $I_L1103_240 = 1 + $I_L1103_240
 1122.                                        if ( $I_L1103_240 >= $t_S33 ) exit
 1122.                                     enddo
 1122.                                  endif
 1124.                                  if ( icf /= 0 ) then
 1125.                                     if ( nfctrl(51) >= 3 ) then
 1125.                                        $Unit_temp_O90 = nfprt
 1125.                                        _fwrite( _clist( 0, 0, 3, $Unit_temp_O90, Null_Arg, Null_Arg, t$54,  _substr(t$53,1,46), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1125.                                     endif
 1126.                                     $t_S40 = icf
 1126.                                     if ( icf > 0 ) then
 1126.                                        $I_L1126_290 = 0
 1126.                                        do
 1127.                                           if ( nfctrl(51) >= 3 ) then
 1127.                                              if ( 1 + $I_L1126_290 < _dv_lb( combf, 1 ) .or. ( 1 + $I_L1126_290 ) > _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1 ) then
 1127.                                                  _substr(t$814,1,16) = 'Diagnostics.f90'
 1127.                                                  _substr(t$815,1,6) = 'COMBF'
 1127.                                                 t$494 = _dv_lb( combf, 1 )
 1127.                                                 t$498 = _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1
 1127.                                                 t$499 = 1 + $I_L1126_290
 1127.                                                 call _bounds_error(  _substr(t$814,1,16), 1630,  _substr(t$815,1,6), 1, t$494, t$498, t$499, t$813 )
 1127.                                              endif
 1127.                                              $Unit_temp_O91 = nfprt
 1127.                                              $IOitem_O92 = ( 1 + $I_L1126_290 )
 1127.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O91, Null_Arg, Null_Arg, t$56,  _substr(t$55,1,48), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O92, 0x2000200000000L ), _iotype(  _substr((combf%base_addr)(1 + $I_L1126_290, 0),1,40), 0x800600000000L ) ) )
 1127.                                           endif
 1128.                                           if ( nfctrl(51) >= 3 ) then
 1128.                                              if ( ( 1 + $I_L1126_290 ) < lvcf%dim_1%LB .or. ( 1 + $I_L1126_290 ) > lvcf%dim_1%LB + lvcf%dim_1%EX + -1 ) then
 1128.                                                  _substr(t$817,1,16) = 'Diagnostics.f90'
 1128.                                                  _substr(t$818,1,5) = 'LVCF'
 1128.                                                 t$500 = lvcf%dim_1%LB
 1128.                                                 t$474 = lvcf%dim_1%LB + lvcf%dim_1%EX + -1
 1128.                                                 t$475 = 1 + $I_L1126_290
 1128.                                                 call _bounds_error(  _substr(t$817,1,16), 1631,  _substr(t$818,1,5), 1, t$500, t$474, t$475, t$816 )
 1128.                                              endif
 1128.                                              if ( (nucf%base_addr)(1 + $I_L1126_290, 0) < _dv_lb( aunits, 1 ) .or. (nucf%base_addr)(1 + $I_L1126_290, 0) > _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1 ) then
 1128.                                                  _substr(t$820,1,16) = 'Diagnostics.f90'
 1128.                                                  _substr(t$821,1,7) = 'AUNITS'
 1128.                                                 t$476 = _dv_lb( aunits, 1 )
 1128.                                                 t$480 = _dv_lb( aunits, 1 ) + _dv_ex( aunits, 1 ) + -1
 1128.                                                 t$481 = (nucf%base_addr)(1 + $I_L1126_290, 0)
 1128.                                                 call _bounds_error(  _substr(t$820,1,16), 1631,  _substr(t$821,1,7), 1, t$476, t$480, t$481, t$819 )
 1128.                                              endif
 1128.                                              if ( ( 1 + $I_L1126_290 ) < nucf%dim_1%LB .or. ( 1 + $I_L1126_290 ) > nucf%dim_1%LB + nucf%dim_1%EX + -1 ) then
 1128.                                                  _substr(t$823,1,16) = 'Diagnostics.f90'
 1128.                                                  _substr(t$824,1,5) = 'NUCF'
 1128.                                                 t$744 = nucf%dim_1%LB
 1128.                                                 t$745 = nucf%dim_1%LB + nucf%dim_1%EX + -1
 1128.                                                 t$482 = 1 + $I_L1126_290
 1128.                                                 call _bounds_error(  _substr(t$823,1,16), 1631,  _substr(t$824,1,5), 1, t$744, t$745, t$482, t$822 )
 1128.                                              endif
 1129.                                              if ( ( 1 + $I_L1126_290 ) <= 0 .or. ( 1 + $I_L1126_290 ) > 20 ) then
 1129.                                                  _substr(t$826,1,16) = 'Diagnostics.f90'
 1129.                                                  _substr(t$827,1,5) = 'KFRQ'
 1129.                                                 t$486 = 1
 1129.                                                 t$487 = 20
 1129.                                                 t$488 = 1 + $I_L1126_290
 1129.                                                 call _bounds_error(  _substr(t$826,1,16), 1632,  _substr(t$827,1,5), 1, t$486, t$487, t$488, t$825 )
 1129.                                              endif
 1129.                                              if ( (jpcf%base_addr)(1 + $I_L1126_290, 0) < 0 .or. (jpcf%base_addr)(1 + $I_L1126_290, 0) > 3 ) then
 1129.                                                  _substr(t$829,1,16) = 'Diagnostics.f90'
 1129.                                                  _substr(t$830,1,6) = 'POSCD'
 1129.                                                 t$492 = (jpcf%base_addr)(1 + $I_L1126_290, 0)
 1129.                                                 call _bounds_error(  _substr(t$829,1,16), 1632,  _substr(t$830,1,6), 1, 0, 3, t$492, t$828 )
 1129.                                              endif
 1129.                                              if ( ( 1 + $I_L1126_290 ) <= 0 .or. ( 1 + $I_L1126_290 ) > 20 ) then
 1129.                                                  _substr(t$832,1,16) = 'Diagnostics.f90'
 1129.                                                  _substr(t$833,1,5) = 'JPCF'
 1129.                                                 t$493 = 1
 1129.                                                 t$494 = 20
 1129.                                                 t$498 = 1 + $I_L1126_290
 1129.                                                 call _bounds_error(  _substr(t$832,1,16), 1632,  _substr(t$833,1,5), 1, t$493, t$494, t$498, t$831 )
 1129.                                              endif
 1128.                                              $Unit_temp_O93 = nfprt
 1128.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O93, Null_Arg, Null_Arg, t$58,  _substr(t$57,1,94), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (lvcf%base_addr)(1 + $I_L1126_290, 0), 0x2000200000000L ), _iotype(  _substr((aunits%base_addr)((nucf%base_addr)(1 + $I_L1126_290, 0), 0),1,16), 0x800600000000L ), _iotype( (kfrq%base_addr)(1 + $I_L1126_290, 0), 0x2000200000000L ), _iotype(  _substr(poscd((jpcf%base_addr)(1 + $I_L1126_290, 0)),1,38), 0x800600000000L ) ) )
 1128.                                           endif
 1130.                                           if ( nfctrl(51) >= 3 ) then
 1130.                                              if ( 1 + $I_L1126_290 < _dv_lb( combf, 1 ) .or. ( 1 + $I_L1126_290 ) > _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1 ) then
 1130.                                                  _substr(t$835,1,16) = 'Diagnostics.f90'
 1130.                                                  _substr(t$836,1,6) = 'COMBF'
 1130.                                                 t$499 = _dv_lb( combf, 1 )
 1130.                                                 t$500 = _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1
 1130.                                                 t$474 = 1 + $I_L1126_290
 1130.                                                 call _bounds_error(  _substr(t$835,1,16), 1633,  _substr(t$836,1,6), 1, t$499, t$500, t$474, t$834 )
 1130.                                              endif
 1130.                                              $Unit_temp_O94 = nfprt
 1130.                                              _fwrite( _clist( 0, 0, 3, $Unit_temp_O94, Null_Arg, Null_Arg, t$60,  _substr(t$59,1,49), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((combf%base_addr)(1 + $I_L1126_290, 0),1,40), 0x800600000000L ) ) )
 1130.                                           endif
 1131.                                           $ka_S34 = (ixcf%base_addr)(1 + $I_L1126_290, 0)
 1132.                                           $t_S35 = $ka_S34 + (incf%base_addr)(1 + $I_L1126_290, 0) + -1
 1132.                                           if ( $t_S35 + -$ka_S34 >= 0 ) then
 1138.                                              $SC_nfctrl_I42 = nfctrl(51)
 1132.                                              $I_L1132_242 = 0
 1132.                                              do
 1133.                                                 kx = (krcf%base_addr)($ka_S34 + $I_L1132_242, 0)
 1134.                                                 if ( kx > 0 ) then
 1134.                                                     _substr(ocf,1,40) =  _substr((avail%base_addr)(kx, 0),1,40)
 1134.                                                 endif
 1135.                                                 if ( kx < 0 ) then
 1135.                                                     _substr(ocf,1,40) =  _substr((combf%base_addr)(-kx, 0),1,40)
 1135.                                                 endif
 1136.                                                 jx = (jrcf%base_addr)($ka_S34 + $I_L1132_242, 0)
 1137.                                                 if ( (iclcd%base_addr)(jx, 0) < 0 ) then
 1138.                                                    if ( $SC_nfctrl_I42 >= 3 ) then
 1138.                                                       $Unit_temp_O95 = nfprt
 1138.                                                       $_IOitem_P23(0) = kx
 1138.                                                       $_IOitem_P23(1) = jx
 1138.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O95, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,64), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(ocf,1,40), 0x800600000000L ), _iotype( $_IOitem_P23(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1138.                                                    endif
 1139.                                                 else if ( (iclcd%base_addr)(jx, 0) > 0 ) then
 1140.                                                    if ( $SC_nfctrl_I42 >= 3 ) then
 1140.                                                       $Unit_temp_O96 = nfprt
 1140.                                                       $_IOitem_P24(0) = kx
 1140.                                                       $_IOitem_P24(1) = jx
 1140.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O96, Null_Arg, Null_Arg, t$64,  _substr(t$63,1,64), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(ocf,1,40), 0x800600000000L ), _iotype( $_IOitem_P24(:( 0, 1, 1 )), 0x2000200000000L ) ) )
 1140.                                                    endif
 1140.                                                 endif
 1142.                                                 $I_L1132_242 = 1 + $I_L1132_242
 1141.                                                 if ( $I_L1132_242 >= $t_S35 + -$ka_S34 + 1 ) exit
 1141.                                              enddo
 1141.                                           endif
 1143.                                           if ( (icfu%base_addr)(1 + $I_L1126_290, 0) ) then
 1144.                                              if ( nfctrl(51) >= 3 ) then
 1144.                                                 $Unit_temp_O97 = nfprt
 1144.                                                 _fwrite( _clist( 0, 0, 3, $Unit_temp_O97, Null_Arg, Null_Arg, t$66,  _substr(t$65,1,64), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1144.                                              endif
 1145.                                              $ka_S37 = (ixucf%base_addr)(1 + $I_L1126_290, 0)
 1146.                                              $t_S38 = $ka_S37 + (inucf%base_addr)(1 + $I_L1126_290, 0) + -1
 1146.                                              if ( $t_S38 + -$ka_S37 >= 0 ) then
 1146.                                                 $I_L1146_244 = 0
 1146.                                                 do
 1147.                                                    kx = abs( (jrucf%base_addr)($ka_S37 + $I_L1146_244, 0) )
 1148.                                                    if ( nfctrl(51) >= 3 ) then
 1148.                                                       if ( kx < _dv_lb( combf, 1 ) .or. kx > _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1 ) then
 1148.                                                           _substr(t$846,1,16) = 'Diagnostics.f90'
 1148.                                                           _substr(t$847,1,6) = 'COMBF'
 1148.                                                          t$475 = _dv_lb( combf, 1 )
 1148.                                                          t$476 = _dv_lb( combf, 1 ) + _dv_ex( combf, 1 ) + -1
 1148.                                                          t$480 = kx
 1148.                                                          call _bounds_error(  _substr(t$846,1,16), 1651,  _substr(t$847,1,6), 1, t$475, t$476, t$480, t$845 )
 1148.                                                       endif
 1148.                                                       $Unit_temp_O98 = nfprt
 1148.                                                       _fwrite( _clist( 0, 0, 3, $Unit_temp_O98, Null_Arg, Null_Arg, t$68,  _substr(t$67,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr((combf%base_addr)(kx, 0),1,40), 0x800600000000L ) ) )
 1148.                                                    endif
 1149.                                                    $I_L1146_244 = 1 + $I_L1146_244
 1148.                                                    if ( $I_L1146_244 >= $t_S38 + -$ka_S37 + 1 ) exit
 1148.                                                 enddo
 1148.                                              endif
 1148.                                           endif
 1151.                                           $I_L1126_290 = 1 + $I_L1126_290
 1150.                                           if ( $I_L1126_290 >= $t_S40 ) exit
 1150.                                        enddo
 1150.                                     endif
 1150.                                  endif
 1156.                                  call setdia
 1158.                                  pfbar = (iavrq%base_addr)(1, 0) /= 0 .or. (iavrq%base_addr)(2, 0) /= 0 .or. (iavrq%base_addr)(3, 0) /= 0 .or. (iavrq%base_addr)(4, 0) /= 0 .or. (iavrq%base_addr)(5, 0) /= 0
  351.                                  $_allo_P61(0) = 0x6000000000001L
  351.                                  $_allo_P61(1) = loc( kfrq )
  351.                                  $_allo_P61(2) = loc( jpcf )
  351.                                  $_allo_P61(3) = loc( jpavl )
  351.                                  $_allo_P61(4) = loc( irqu )
  351.                                  $_allo_P61(5) = loc( irqcf )
  351.                                  $_allo_P61(6) = loc( irqav )
  351.                                  call _dealloc( $_allo_P61, 0, 0, _fcd( 0, 0 ) )
  306.                                  _free( t$244 )
  306.                               endif
  306.                            endif
  306.                         endif
  306.                      endif
  306.                   endif
  306.                endif
  306.             endif
  306.          endif
  306.   160    continue
 1234.          return
 1234.       end
 1234.       
 1240.       
 1240.       subroutine pwater( q, pwtr, ps, del, nx, mx, nq )
 1240.       t$101 = nx
 1240.       t$102 = nq
 1266.       t$247 = _zla( 0, nx )
 1240.       t$248 = _zla( 0, nx )
 1266.       t$249 = _zla( 0, nq )
 1240.       t$250 = _zla( 0, nx ) * _zla( 0, nq )
 1277.       if ( mx > 0 ) then
 1277.          $I_L1277_16 = 0
 1277. !dir$ ivdep
 1277.          do
 1278.             pwtr(1 + $I_L1277_16) = 0.0
 1279.             $I_L1277_16 = 1 + $I_L1277_16
 1277.             if ( $I_L1277_16 >= mx ) exit
 1277.          enddo
 1277.       endif
 1281.       if ( nq > 0 ) then
 1282.          if ( mx > 0 ) then
 1283.              _substr($W0,1,1) = 'n'
 1283.             $W1 = mx
 1283.             $W2 = nq
 1283.             $W3 = 1.0
 1283.             $W4 = nx
 1283.             $W5 = 1
 1283.             $W6 = 1.0
 1283.             $W7 = 1
 1283.             _dgemv(  _substr($W0,1,1), $W1, $W2, $W3, q(1, 1), $W4, del(1), $W5, $W6, pwtr(1), $W7 )
 1283.          endif
 1283.       endif
 1287.       if ( mx > 0 ) then
 1287.          $I_L1287_20 = 0
 1287. !dir$ ivdep
 1287.          do
 1288.             pwtr(1 + $I_L1287_20) = pwtr(1 + $I_L1287_20) * ps(1 + $I_L1287_20) * 102.0408163265306
 1289.             $I_L1287_20 = 1 + $I_L1287_20
 1287.             if ( $I_L1287_20 >= mx ) exit
 1287.          enddo
 1287.       endif
 1290.       return
 1290.       end
 1290.       
 1302.       
 1302.       subroutine hbartr( f, fgbar )
 1302.       t$103 = ( 2 * mymnmax )
 1320.       t$251 = _zla( 0, ( 2 * mymnmax ) )
 1302.       t$104 = mymmax
 1321.       t$252 = _zla( 0, mymmax )
 1323.       $F_A33 = mymmax
 1323.       if ( mymmax > 0 ) then
 1323.          $I_L1323_16 = 0
 1323. !dir$ ivdep
 1323.          do
 1323.             fgbar(1 + $I_L1323_16) = 0.0
 1323.             $I_L1323_16 = 1 + $I_L1323_16
 1323.             if ( $I_L1323_16 >= $F_A33 ) exit
 1323.          enddo
 1323.       endif
 1324.       $mn_S1 = 1
 1325.       if ( havem1 ) then
 1326.          if ( -2 + mmax >= 0 ) then
 1327.             $SC_fgbar_I0 = fgbar(1)
 1326.             $I_L1326_12 = 0
 1326. !dir$ ivdep
 1326.             do
 1327.                $SC_fgbar_I0 = $SC_fgbar_I0 + f(3 + 2 * $I_L1326_12) * f(3 + 2 * $I_L1326_12) * 5.0e-1
 1328.                $I_L1326_12 = 1 + $I_L1326_12
 1326.                if ( $I_L1326_12 >= -1 + mmax ) exit
 1326.             enddo
 1327.             fgbar(1) = $SC_fgbar_I0
 1327.          endif
 1329.          $mn_S1 = 1 + mmax
 1329.       endif
 1331.       if ( mymnmax + -$mn_S1 >= 0 ) then
 1331.          $I_L1331_14 = 0
 1331. !dir$ ivdep
 1331.          do
 1332.             fgbar((mymmap%base_addr)($mn_S1 + $I_L1331_14, 0)) = _vu_plus( fgbar((mymmap%base_addr)($mn_S1 + $I_L1331_14, 0)), f(2 * $mn_S1 + 2 * $I_L1331_14) * f(2 * $mn_S1 + 2 * $I_L1331_14) + f(2 * $mn_S1 + 2 * $I_L1331_14 + -1) * f(2 * $mn_S1 + 2 * $I_L1331_14 + -1) )
 1333.             $I_L1331_14 = 1 + $I_L1331_14
 1331.             if ( $I_L1331_14 >= mymnmax + -$mn_S1 + 1 ) exit
 1331.          enddo
 1331.       endif
 1334.       return
 1334.       end
 1334.       
 1340.       
 1340.       subroutine hbartr2d( f, fgbar )
 1340.       t$105 = ( 2 * mymnmax )
 1340.       t$106 = kmaxloc
 1341.       t$253 = _zla( 0, ( 2 * mymnmax ) )
 1340.       t$254 = _zla( 0, ( 2 * mymnmax ) )
 1341.       t$255 = _zla( 0, kmaxloc )
 1340.       t$256 = _zla( 0, ( 2 * mymnmax ) ) * _zla( 0, kmaxloc )
 1340.       t$107 = mymmax
 1342.       t$257 = _zla( 0, mymmax )
 1340.       t$258 = _zla( 0, mymmax )
 1340.       t$259 = _zla( 0, kmaxloc ) * _zla( 0, mymmax )
 1344.       $F_A33 = kmaxloc
 1344.       $F_A34 = mymmax
 1344.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1344.          $I_L1344_49 = 0
 1344.          do
 1344.             $I_L1344_45 = 0
 1344. !dir$ ivdep
 1344.             do
 1344.                fgbar(1 + $I_L1344_45, 1 + $I_L1344_49) = 0.0
 1344.                $I_L1344_45 = 1 + $I_L1344_45
 1344.                if ( $I_L1344_45 >= $F_A34 ) exit
 1344.             enddo
 1344.             $I_L1344_49 = 1 + $I_L1344_49
 1344.             if ( $I_L1344_49 >= $F_A33 ) exit
 1344.          enddo
 1344.       endif
 1345.       $mn_S2 = 1
 1346.       if ( havem1 ) then
 1347.          if ( kmaxloc > 0 ) then
 1348.             if ( -2 + mmax >= 0 ) then
 1347.                $I_L1347_47 = 0
 1347.                do
 1348.                   $SCA_fgbar_I2 = fgbar(1, 1 + $I_L1347_47)
 1348.                   $I_L1348_40 = 0
 1348. !dir$ ivdep
 1348.                   do
 1349.                      $SCA_fgbar_I2 = $SCA_fgbar_I2 + f(3 + 2 * $I_L1348_40, 1 + $I_L1347_47) * f(3 + 2 * $I_L1348_40, 1 + $I_L1347_47) * 5.0e-1
 1350.                      $I_L1348_40 = 1 + $I_L1348_40
 1348.                      if ( $I_L1348_40 >= -1 + mmax ) exit
 1348.                   enddo
 1348.                   fgbar(1, 1 + $I_L1347_47) = $SCA_fgbar_I2
 1351.                   $I_L1347_47 = 1 + $I_L1347_47
 1350.                   if ( $I_L1347_47 >= kmaxloc ) exit
 1350.                enddo
 1350.             endif
 1350.          endif
 1352.          $mn_S2 = 1 + mmax
 1352.       endif
 1354.       if ( kmaxloc > 0 ) then
 1355.          if ( mymnmax + -$mn_S2 >= 0 ) then
 1354.             $I_L1354_53 = 0
 1354.             do
 1355.                $I_L1355_51 = 0
 1355.                if ( mymnmax + -$mn_S2 + -3 >= 0 ) then
 1355.                   $I_L1355_58 = 0
 1355. !dir$ blocking_size( 0, 0 )
 1355.                   do
 1354.                      $I_L1354_42 = 0
 1354. !dir$ ivdep
 1354. !dir$ blocking_size( 256, 256 )
 1354.                      do
 1356.                         fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1) = f(2 * $mn_S2 + 8 * $I_L1355_58, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58, $I_L1354_42 + 256 * $I_L1354_53 + 1) + f(2 * $mn_S2 + 8 * $I_L1355_58 + -1, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + -1, $I_L1354_42 + 256 * $I_L1354_53 + 1) + fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1)
 1356.                         fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 1, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1) = f(2 * $mn_S2 + 8 * $I_L1355_58 + 2, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 2, $I_L1354_42 + 256 * $I_L1354_53 + 1) + f(2 * $mn_S2 + 8 * $I_L1355_58 + 1, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 1, $I_L1354_42 + 256 * $I_L1354_53 + 1) + fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 1, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1)
 1356.                         fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 2, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1) = f(2 * $mn_S2 + 8 * $I_L1355_58 + 4, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 4, $I_L1354_42 + 256 * $I_L1354_53 + 1) + f(2 * $mn_S2 + 8 * $I_L1355_58 + 3, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 3, $I_L1354_42 + 256 * $I_L1354_53 + 1) + fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 2, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1)
 1356.                         fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 3, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1) = f(2 * $mn_S2 + 8 * $I_L1355_58 + 6, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 6, $I_L1354_42 + 256 * $I_L1354_53 + 1) + f(2 * $mn_S2 + 8 * $I_L1355_58 + 5, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 8 * $I_L1355_58 + 5, $I_L1354_42 + 256 * $I_L1354_53 + 1) + fgbar((mymmap%base_addr)($mn_S2 + 4 * $I_L1355_58 + 3, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1)
 1354.                         $I_L1354_42 = 1 + $I_L1354_42
 1355.                         if ( $I_L1354_42 >= min( kmaxloc, 256 + 256 * $I_L1354_53 ) + -256 * $I_L1354_53 ) exit
 1355.                      enddo
 1357.                      $I_L1355_58 = 1 + $I_L1355_58
 1357.                      if ( $I_L1355_58 >= _rsh( mymnmax + -$mn_S2 + 1, 2 ) ) exit
 1357.                   enddo
 1357.                   $I_L1355_51 = and( 0xfffffffffffffffcUL, mymnmax + -$mn_S2 + 1 )
 1357.                endif
 1355.                if ( $I_L1355_51 < mymnmax + -$mn_S2 + 1 ) then
 1355.                   $I_L1355_55 = 0
 1355. !dir$ blocking_size( 0, 0 )
 1355.                   do
 1354.                      $I_L1354_42 = 0
 1354. !dir$ ivdep
 1354. !dir$ blocking_size( 256, 256 )
 1354.                      do
 1356.                         fgbar((mymmap%base_addr)($mn_S2 + $I_L1355_51 + $I_L1355_55, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1) = f(2 * $mn_S2 + 2 * $I_L1355_51 + 2 * $I_L1355_55, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 2 * $I_L1355_51 + 2 * $I_L1355_55, $I_L1354_42 + 256 * $I_L1354_53 + 1) + f(2 * $mn_S2 + 2 * $I_L1355_51 + 2 * $I_L1355_55 + -1, $I_L1354_42 + 256 * $I_L1354_53 + 1) * f(2 * $mn_S2 + 2 * $I_L1355_51 + 2 * $I_L1355_55 + -1, $I_L1354_42 + 256 * $I_L1354_53 + 1) + fgbar((mymmap%base_addr)($mn_S2 + $I_L1355_51 + $I_L1355_55, 0), $I_L1354_42 + 256 * $I_L1354_53 + 1)
 1354.                         $I_L1354_42 = 1 + $I_L1354_42
 1355.                         if ( $I_L1354_42 >= min( kmaxloc, 256 + 256 * $I_L1354_53 ) + -256 * $I_L1354_53 ) exit
 1355.                      enddo
 1357.                      $I_L1355_55 = 1 + $I_L1355_55
 1357.                      if ( $I_L1355_55 >= mymnmax + -$mn_S2 + -$I_L1355_51 + 1 ) exit
 1357.                   enddo
 1357.                endif
 1354.                $I_L1354_53 = 1 + $I_L1354_53
 1357.                if ( $I_L1354_53 >= 1 + max( 0, -1 + _rsh( 255 + kmaxloc, 8 ) ) ) exit
 1357.             enddo
 1357.          endif
 1357.       endif
 1359.       return
 1359.       end
 1359.       
 1363.       
 1363.       subroutine setdia
 1377.       mxgaus = ngaus + mgaus * kmaxnew
 1378.       mxspec = nspec + mspec * kmaxloc
 1380.       spec%header%a_contig = 1
 1380.       spec%dim_1%LB = 1
 1380.       spec%dim_1%EX = _zla( 0, ( 2 * mymnmax ) )
 1380.       spec%dim_1%SM = 1
 1380.       spec%dim_2%LB = 1
 1380.       spec%dim_2%EX = _zla( 0, ( nspec + mspec * kmaxloc ) )
 1380.       spec%dim_2%SM = _zla( 0, ( 2 * mymnmax ) )
 1380.       $_allo_P13(0) = 0x1000000000001L
 1380.       $_allo_P13(1) = loc( spec )
 1380.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 1381.       $F_A33 = _zla( 0, ( nspec + mspec * kmaxloc ) )
 1381.       $F_A34 = _zla( 0, ( 2 * mymnmax ) )
 1381.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1381.          $I_L1381_22 = 0
 1381.          do
 1381.             $I_L1381_16 = 0
 1381. !dir$ ivdep
 1381.             do
 1381.                (spec%base_addr)(1 + $I_L1381_16, 1 + $I_L1381_22, 0) = 0.0
 1381.                $I_L1381_16 = 1 + $I_L1381_16
 1381.                if ( $I_L1381_16 >= $F_A34 ) exit
 1381.             enddo
 1381.             $I_L1381_22 = 1 + $I_L1381_22
 1381.             if ( $I_L1381_22 >= $F_A33 ) exit
 1381.          enddo
 1381.       endif
 1383.       gaus%header%a_contig = 1
 1383.       gaus%dim_1%LB = 1
 1383.       gaus%dim_1%EX = ( max( 0, ibmax ) )
 1383.       gaus%dim_1%SM = 1
 1383.       gaus%dim_2%LB = 1
 1383.       gaus%dim_2%EX = ( max( 0, ngaus + mgaus * kmaxnew ) )
 1383.       gaus%dim_2%SM = ( max( 0, ibmax ) )
 1383.       gaus%dim_3%LB = 1
 1383.       gaus%dim_3%EX = ( max( 0, jbmax ) )
 1383.       gaus%dim_3%SM = ( max( 0, ibmax ) * max( 0, ngaus + mgaus * kmaxnew ) )
 1383.       $_allo_P14(0) = 0x1000000000001L
 1383.       $_allo_P14(1) = loc( gaus )
 1383.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 1384.       $F_A35 = jbmax
 1384.       $F_A36 = ( ngaus + mgaus * kmaxnew )
 1384.       $F_A37 = ibmax
 1384.       if ( and( and( -$F_A36, -$F_A35 ), -$F_A37 ) < 0 ) then
 1384.          $I_L1384_28 = 0
 1384.          do
 1384.             $I_L1384_24 = 0
 1384.             do
 1384.                $I_L1384_18 = 0
 1384. !dir$ ivdep
 1384.                do
 1384.                   (gaus%base_addr)(1 + $I_L1384_18, 1 + $I_L1384_24, 1 + $I_L1384_28, 0) = 0.0
 1384.                   $I_L1384_18 = 1 + $I_L1384_18
 1384.                   if ( $I_L1384_18 >= $F_A37 ) exit
 1384.                enddo
 1384.                $I_L1384_24 = 1 + $I_L1384_24
 1384.                if ( $I_L1384_24 >= $F_A36 ) exit
 1384.             enddo
 1384.             $I_L1384_28 = 1 + $I_L1384_28
 1384.             if ( $I_L1384_28 >= $F_A35 ) exit
 1384.          enddo
 1384.       endif
 1386.       gaus_in%header%a_contig = 1
 1386.       gaus_in%dim_1%LB = 1
 1386.       gaus_in%dim_1%EX = ( max( 0, imaxnew ) )
 1386.       gaus_in%dim_1%SM = 1
 1386.       gaus_in%dim_2%LB = 1
 1386.       gaus_in%dim_2%EX = ( max( 0, myjmax_d ) )
 1386.       gaus_in%dim_2%SM = ( max( 0, imaxnew ) )
 1386.       gaus_in%dim_3%LB = 1
 1386.       gaus_in%dim_3%EX = ( max( 0, ngaus + mgaus * kmaxnew ) )
 1386.       gaus_in%dim_3%SM = ( max( 0, imaxnew ) * max( 0, myjmax_d ) )
 1386.       $_allo_P15(0) = 0x1000000000001L
 1386.       $_allo_P15(1) = loc( gaus_in )
 1386.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 1387.       $F_A38 = ( ngaus + mgaus * kmaxnew )
 1387.       $F_A39 = myjmax_d
 1387.       $F_A40 = imaxnew
 1387.       if ( and( and( -$F_A39, -$F_A38 ), -$F_A40 ) < 0 ) then
 1387.          $I_L1387_30 = 0
 1387.          do
 1387.             $I_L1387_26 = 0
 1387.             do
 1387.                $I_L1387_20 = 0
 1387. !dir$ ivdep
 1387.                do
 1387.                   (gaus_in%base_addr)(1 + $I_L1387_20, 1 + $I_L1387_26, 1 + $I_L1387_30, 0) = 0.0
 1387.                   $I_L1387_20 = 1 + $I_L1387_20
 1387.                   if ( $I_L1387_20 >= $F_A40 ) exit
 1387.                enddo
 1387.                $I_L1387_26 = 1 + $I_L1387_26
 1387.                if ( $I_L1387_26 >= $F_A39 ) exit
 1387.             enddo
 1387.             $I_L1387_30 = 1 + $I_L1387_30
 1387.             if ( $I_L1387_30 >= $F_A38 ) exit
 1387.          enddo
 1387.       endif
 1389.       ispec = 0
 1390.       igaus = 0
 1391.       nf = 0
 1393.       m = 1
 1393.       if ( mxavl > 0 ) then
 1393.          $I_L1393_12 = 0
 1393.          do
 1394.             (lspec%base_addr)(1 + $I_L1393_12, 0) = 0
 1395.             (lgaus%base_addr)(1 + $I_L1393_12, 0) = 0
 1396.             if ( (dodia%base_addr)(1 + $I_L1393_12, 0) == 0 .orelse. (iavrq%base_addr)(1 + $I_L1393_12, 0) <= 0 ) then
 1423.                $I_L1393_12 = 1 + $I_L1393_12
 1422.             else
 1422.             endif
 1422.             if ( $I_L1393_12 >= mxavl ) exit
 1422.          enddo
 1423.          m = ( 1 + mxavl )
 1423.          goto 10
 1423.       else
 1423.    10    continue
 1425.          if ( nf + icf + -nof /= 0 ) then
 1426.             $Unit_temp_O4 = nfprt
 1426.             $_IOitem_P4(0) = nf
 1426.             $_IOitem_P4(1) = icf
 1426.             $_IOitem_P4(2) = nof
 1426.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,113), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P4(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1427.             $Unit_temp_O5 = nferr
 1427.             $_IOitem_P5(0) = nf
 1427.             $_IOitem_P5(1) = icf
 1427.             $_IOitem_P5(2) = nof
 1427.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,113), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P5(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1428.              _substr(t$885,1,5) = '21100'
 1428.             call _stop(  _substr(t$885,1,5) )
 1428.          else
 1431.             if ( nfctrl(71) > 0 ) then
 1431.                $Unit_temp_O6 = nfprt
 1431.                $_IOitem_P6(0) = nf
 1431.                $_IOitem_P6(1) = ispec
 1431.                $_IOitem_P6(2) = igaus
 1431.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$109,  _substr(t$108,1,137), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P6(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1431.             endif
 1432.             if ( icf /= 0 ) then
 1433.                ish = ispec
 1434.                igh = igaus
 1435.                if ( icf > 0 ) then
 1435.                   $I_L1435_14 = 0
 1435.                   do
 1436.                      if ( (itcf%base_addr)(1 + $I_L1435_14, 0) == 1 ) then
 1437.                         nf = 1 + nf
 1438.                         (lgaus%base_addr)(-1 + -$I_L1435_14, 0) = 1 + igaus
 1439.                         igaus = igaus + (lvcf%base_addr)(1 + $I_L1435_14, 0)
 1440.                         if ( igaus > ngaus + mgaus * kmaxnew ) then
 1441.                            $Unit_temp_O7 = nfprt
 1441.                            $_IOitem_P7(0) = igaus
 1441.                            $_IOitem_P7(1) = m
 1441.                            $_IOitem_P7(2) = ( -1 + -$I_L1435_14 )
 1441.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,124), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P7(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1442.                            $Unit_temp_O8 = nferr
 1442.                            $_IOitem_P8(0) = igaus
 1442.                            $_IOitem_P8(1) = m
 1442.                            $_IOitem_P8(2) = ( -1 + -$I_L1435_14 )
 1442.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,124), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P8(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1443.                             _substr(t$889,1,5) = '20100'
 1443.                            call _stop(  _substr(t$889,1,5) )
 1443.                            goto 40
 1443.                         endif
 1459.                         $I_L1435_14 = 1 + $I_L1435_14
 1445.                      else if ( (itcf%base_addr)(1 + $I_L1435_14, 0) == 2 ) then
 1445.                      else
 1445.                      endif
 1445.                      if ( $I_L1435_14 >= icf ) exit
 1445.                   enddo
 1445.                   goto 20
 1445.                   goto 30
 1445.                else
 1445.    20             continue
 1460.                   if ( nfctrl(71) > 0 ) then
 1460.                      $Unit_temp_O11 = nfprt
 1460.                      $_IOitem_P11(0) = icf
 1460.                      $_IOitem_P11(1) = ispec + -ish
 1460.                      $_IOitem_P11(2) = igaus + -igh
 1460.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,134), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P11(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1460.                   endif
 1460.                   goto 30
 1460.                endif
 1460.             else
 1460.    30          continue
 1463.                if ( nfctrl(71) > 0 ) then
 1463.                   $Unit_temp_O14 = nfprt
 1463.                   $_IOitem_P12(0) = nf
 1463.                   $_IOitem_P12(1) = ispec
 1463.                   $_IOitem_P12(2) = igaus
 1463.                   $_IOitem_P12(3) = mymnmax * ispec * 2 + ibmax * myjmax_d * igaus
 1463.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$113,  _substr(t$112,1,191), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P12(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 1463.                endif
 1463.             endif
 1463.          endif
 1463.       endif
 1463.    40 continue
 1480.       return
 1480.       end
 1480.       
 1602.       
 1602.       subroutine upspec( field, mnrifirst, mnrilast, loca )
 1486.       t$120 = mnrifirst
 1486.       t$121 = mnrilast
 1486.       t$122 = kmaxloc
 1486.       t$260 = mnrilast + -mnrifirst + 1
 1496.       t$261 = _zla( 0, mnrilast + -mnrifirst + 1 )
 1486.       t$262 = _zla( 0, mnrilast + -mnrifirst + 1 )
 1496.       t$263 = _zla( 0, kmaxloc )
 1486.       t$264 = _zla( 0, mnrilast + -mnrifirst + 1 ) * _zla( 0, kmaxloc )
 1498.       t$267 = _zla( 0, mnrilast + -mnrifirst + 1 ) * _zla( 0, kmaxloc ) * 8
 1486.       t$265 = int( _alloc( _zla( 0, mnrilast + -mnrifirst + 1 ) * _zla( 0, kmaxloc ) * 8 ), 8 )
 1498.       t$266 = t$265
 1515.       if ( (dodia%base_addr)(loca, 0) == 0 ) then
 1516.          $Unit_temp_O0 = nfprt
 1516.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,77), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 1517.          $Unit_temp_O1 = nferr
 1517.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,77), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 1518.           _substr(t$891,1,4) = '3180'
 1518.          call _stop(  _substr(t$891,1,4) )
 1519.       else if ( (itavl%base_addr)(loca, 0) /= 2 ) then
 1521.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 1521.              _substr(t$893,1,16) = 'Diagnostics.f90'
 1521.              _substr(t$894,1,6) = 'ITAVL'
 1521.             t$895 = itavl%dim_1%LB
 1521.             t$896 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 1521.             t$897 = loca
 1521.             call _bounds_error(  _substr(t$893,1,16), 2024,  _substr(t$894,1,6), 1, t$895, t$896, t$897, t$892 )
 1521.          endif
 1521.          $Unit_temp_O2 = nfprt
 1521.          $IOitem_O3 = (itavl%base_addr)(loca, 0)
 1521.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$128,  _substr(t$127,1,56), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O3, 0x2000200000000L ) ) )
 1522.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 1522.              _substr(t$899,1,16) = 'Diagnostics.f90'
 1522.              _substr(t$900,1,6) = 'ITAVL'
 1522.             t$895 = itavl%dim_1%LB
 1522.             t$896 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 1522.             t$897 = loca
 1522.             call _bounds_error(  _substr(t$899,1,16), 2025,  _substr(t$900,1,6), 1, t$895, t$896, t$897, t$898 )
 1522.          endif
 1522.          $Unit_temp_O4 = nferr
 1522.          $IOitem_O5 = (itavl%base_addr)(loca, 0)
 1522.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$128,  _substr(t$127,1,56), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x2000200000000L ) ) )
 1523.           _substr(t$901,1,4) = '4180'
 1523.          call _stop(  _substr(t$901,1,4) )
 1523.       else
 1525.          $lvl_S0 = (lvavl%base_addr)(loca, 0)
 1526.          if ( $lvl_S0 /= 1 ) then
 1524.             goto 10
 1524.          else if ( havesurf == 0 ) then
 1486.             _free( t$265 )
 1486.          else
 1486.    10       continue
 1527.             $lvl_S1 = cvmg( $lvl_S0, kmaxloc, kmaxnew + -$lvl_S0 /= 0 )
 1528.             $ka_S5 = (ixavl%base_addr)(loca, 0)
 1532.             if ( (iavrq%base_addr)(loca, 0) > 0 ) then
 1533.                $kg_S4 = (lspec%base_addr)(loca, 0)
 1534.                if ( cvmg( $lvl_S0, kmaxloc, kmaxnew + -$lvl_S0 /= 0 ) > 0 ) then
 1536.                   if ( mnrilast + -mnrifirst >= 0 ) then
 1534.                      $I_L1534_70 = 0
 1534.                      do
 1536.                         $I_L1536_60 = 0
 1536. !dir$ ivdep
 1536.                         do
 1537.                            (spec%base_addr)(mnrifirst + $I_L1536_60, $kg_S4 + $I_L1534_70, 0) = (spec%base_addr)(mnrifirst + $I_L1536_60, $kg_S4 + $I_L1534_70, 0) + field(mnrifirst + $I_L1536_60, 1 + $I_L1534_70)
 1538.                            $I_L1536_60 = 1 + $I_L1536_60
 1536.                            if ( $I_L1536_60 >= mnrilast + -mnrifirst + 1 ) exit
 1536.                         enddo
 1539.                         $I_L1534_70 = 1 + $I_L1534_70
 1538.                         if ( $I_L1534_70 >= cvmg( $lvl_S0, kmaxloc, kmaxnew + -$lvl_S0 /= 0 ) ) exit
 1538.                      enddo
 1538.                   endif
 1538.                endif
 1538.             endif
 1544.             if ( (kravl%base_addr)($ka_S5, 0) < 0 .orelse. (inavl%base_addr)(loca, 0) > 1 ) then
 1545.                $kka_S7 = $ka_S5 + (inavl%base_addr)(loca, 0) + -1
 1546.                $ka_S6 = $ka_S5 + ( (kravl%base_addr)($ka_S5, 0) > 1 )
 1550.                if ( $kka_S7 + -$ka_S6 >= 0 ) then
 1550.                   $I_L1550_78 = 0
 1550.                   do
 1551.                      $kcf_S9 = (kravl%base_addr)($ka_S6 + $I_L1550_78, 0)
 1553.                      ja = (ixcf%base_addr)(-$kcf_S9, 0)
 1554.                      jja = ja + (incf%base_addr)(-$kcf_S9, 0) + -1
 1558.                      if ( jja + -ja < 0 ) then
 1550.                         goto 20
 1550.                      endif
 1558.                      $I_L1558_62 = 0
 1558. !dir$ ivdep
 1558.                      do
 1560.                         $kx_S11 = (krcf%base_addr)(ja + $I_L1558_62, 0)
 1561.                         if ( $kx_S11 + -loca == 0 ) then
 1559.                            $jx_S14 = (jrcf%base_addr)(ja + $I_L1558_62, 0)
 1571.                            if ( $lvl_S1 > 0 ) then
 1572.                               if ( mnrilast + -mnrifirst >= 0 ) then
 1571.                                  $I_L1571_72 = 0
 1571.                                  do
 1572.                                     $I_L1572_64 = 0
 1572. !dir$ ivdep
 1572.                                     do
 1573.                                        hold(mnrifirst + $I_L1572_64, 1 + $I_L1571_72) = field(mnrifirst + $I_L1572_64, 1 + $I_L1571_72)
 1574.                                        $I_L1572_64 = 1 + $I_L1572_64
 1572.                                        if ( $I_L1572_64 >= mnrilast + -mnrifirst + 1 ) exit
 1572.                                     enddo
 1575.                                     $I_L1571_72 = 1 + $I_L1571_72
 1574.                                     if ( $I_L1571_72 >= $lvl_S1 ) exit
 1574.                                  enddo
 1574.                               endif
 1574.                            endif
 1576.                            t$925 = $lvl_S1 + -( mnrifirst * $lvl_S1 ) + mnrilast * $lvl_S1
 1576.                            call cnvray( hold(mnrifirst, 1), t$925, (nuavl%base_addr)(loca, 0), (nucf%base_addr)(-$kcf_S9, 0) )
 1577.                            if ( (iclcd%base_addr)($jx_S14, 0) < 0 ) then
 1578.                               $kg_S17 = (lspec%base_addr)($kcf_S9, 0)
 1579.                               if ( $lvl_S1 > 0 ) then
 1581.                                  if ( ( mnrifirst /= 1 .and. xor( mnrilast, -1 + mnrifirst ) < 0 ) == 0 ) then
 1579.                                     $I_L1579_76 = 0
 1579.                                     do
 1581.                                        $t_S18 = ( mnrifirst + mnrilast + -1 ) / mnrilast
 1581.                                        $I_L1581_68 = 0
 1581. !dir$ ivdep
 1581.                                        do
 1582.                                           (spec%base_addr)(1 + mnrilast * $I_L1581_68, $kg_S17 + $I_L1579_76, 0) = (spec%base_addr)(1 + mnrilast * $I_L1581_68, $kg_S17 + $I_L1579_76, 0) + -hold(1 + mnrilast * $I_L1581_68, 1 + $I_L1579_76)
 1583.                                           $I_L1581_68 = 1 + $I_L1581_68
 1581.                                           if ( $I_L1581_68 >= $t_S18 ) exit
 1581.                                        enddo
 1584.                                        $I_L1579_76 = 1 + $I_L1579_76
 1583.                                        if ( $I_L1579_76 >= $lvl_S1 ) exit
 1583.                                     enddo
 1583.                                  endif
 1583.                               endif
 1583.                            else
 1586.                               $kg_S17 = (lspec%base_addr)($kcf_S9, 0)
 1587.                               if ( $lvl_S1 > 0 ) then
 1589.                                  if ( ( mnrifirst /= 1 .and. xor( mnrilast, -1 + mnrifirst ) < 0 ) == 0 ) then
 1587.                                     $I_L1587_74 = 0
 1587.                                     do
 1589.                                        $t_S21 = ( mnrifirst + mnrilast + -1 ) / mnrilast
 1589.                                        $I_L1589_66 = 0
 1589. !dir$ ivdep
 1589.                                        do
 1590.                                           (spec%base_addr)(1 + mnrilast * $I_L1589_66, $kg_S17 + $I_L1587_74, 0) = (spec%base_addr)(1 + mnrilast * $I_L1589_66, $kg_S17 + $I_L1587_74, 0) + hold(1 + mnrilast * $I_L1589_66, 1 + $I_L1587_74)
 1591.                                           $I_L1589_66 = 1 + $I_L1589_66
 1589.                                           if ( $I_L1589_66 >= $t_S21 ) exit
 1589.                                        enddo
 1592.                                        $I_L1587_74 = 1 + $I_L1587_74
 1591.                                        if ( $I_L1587_74 >= $lvl_S1 ) exit
 1591.                                     enddo
 1591.                                  endif
 1591.                               endif
 1591.                            endif
 1594.                            $I_L1550_78 = 1 + $I_L1550_78
 1594.                            if ( $I_L1550_78 >= $kka_S7 + -$ka_S6 + 1 ) then
 1593.                               goto 30
 1593.                            endif
 1593.                         endif
 1562.                         $I_L1558_62 = 1 + $I_L1558_62
 1562.                         if ( $I_L1558_62 >= jja + -ja + 1 ) exit
 1562.                      enddo
 1562.    20                continue
 1563.                      $Unit_temp_O6 = nfprt
 1563.                      $_IOitem_P0(0) = loca
 1563.                      $_IOitem_P0(1) = -$kcf_S9
 1563.                      $_IOitem_P0(2) = ( $ka_S6 + $I_L1550_78 )
 1563.                      $_IOitem_P0(3) = ja
 1563.                      $_IOitem_P0(4) = jja
 1563.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,141), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 1564.                      $Unit_temp_O7 = nferr
 1564.                      $_IOitem_P1(0) = loca
 1564.                      $_IOitem_P1(1) = -$kcf_S9
 1564.                      $_IOitem_P1(2) = ( $ka_S6 + $I_L1550_78 )
 1564.                      $_IOitem_P1(3) = ja
 1564.                      $_IOitem_P1(4) = jja
 1564.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,141), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 1565.                       _substr(t$917,1,4) = '3680'
 1565.                      call _stop(  _substr(t$917,1,4) )
 1565.                   else
 1565.                      goto 30
 1565.                   endif
 1565.                else
 1565.    30             continue
 1486.                   _free( t$265 )
 1486.                endif
 1486.             endif
 1486.          endif
 1486.    40    continue
 1602.          return
 1602.       end
 1602.       
 1622.       
 1622.       subroutine rsdiag
 1615.        _substr(t$940,1,12) = '**(rsdiag)**'
 1615.        _substr(t$941,1,37) = 'reset all the diagnostic accumulators'
 1615.       call msgone(  _substr(t$940,1,12),  _substr(t$941,1,37) )
 1616.       if ( ispec > 0 ) then
 1617.          $F_A33 = spec%dim_2%EX
 1617.          $F_A34 = spec%dim_1%EX
 1617.          if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1617.             $SC_spec_I8 = spec%dim_1%LB
 1617.             $SC_spec_I9 = spec%dim_2%SM
 1617.             $SC_spec_I10 = spec%dim_2%LB
 1617.             $I_L1617_8 = 0
 1617.             do
 1617.                $I_L1617_4 = 0
 1617. !dir$ ivdep
 1617.                do
 1617.                   (spec%base_addr)($SC_spec_I8 + $I_L1617_4, $SC_spec_I10 + $I_L1617_8, 0) = 0.0
 1617.                   $I_L1617_4 = 1 + $I_L1617_4
 1617.                   if ( $I_L1617_4 >= $F_A34 ) exit
 1617.                enddo
 1617.                $I_L1617_8 = 1 + $I_L1617_8
 1617.                if ( $I_L1617_8 >= $F_A33 ) exit
 1617.             enddo
 1617.          endif
 1617.       endif
 1619.       if ( igaus > 0 ) then
 1620.          $F_A35 = gaus%dim_3%EX
 1620.          $F_A36 = gaus%dim_2%EX
 1620.          $F_A37 = gaus%dim_1%EX
 1620.          if ( and( and( -$F_A36, -$F_A35 ), -$F_A37 ) < 0 ) then
 1620.             $SC_gaus_I11 = gaus%dim_1%LB
 1620.             $SC_gaus_I12 = gaus%dim_2%SM
 1620.             $SC_gaus_I13 = gaus%dim_2%LB
 1620.             $SC_gaus_I14 = gaus%dim_3%SM
 1620.             $SC_gaus_I15 = gaus%dim_3%LB
 1620.             $I_L1620_12 = 0
 1620.             do
 1620.                $I_L1620_10 = 0
 1620.                do
 1620.                   $I_L1620_6 = 0
 1620. !dir$ ivdep
 1620.                   do
 1620.                      (gaus%base_addr)($SC_gaus_I11 + $I_L1620_6, $SC_gaus_I13 + $I_L1620_10, $SC_gaus_I15 + $I_L1620_12, 0) = 0.0
 1620.                      $I_L1620_6 = 1 + $I_L1620_6
 1620.                      if ( $I_L1620_6 >= $F_A37 ) exit
 1620.                   enddo
 1620.                   $I_L1620_10 = 1 + $I_L1620_10
 1620.                   if ( $I_L1620_10 >= $F_A36 ) exit
 1620.                enddo
 1620.                $I_L1620_12 = 1 + $I_L1620_12
 1620.                if ( $I_L1620_12 >= $F_A35 ) exit
 1620.             enddo
 1620.          endif
 1620.       endif
 1622.       return
 1622.       end
 1622.       
 1723.       
 1723.       subroutine accpf( ifday, tod, qtmpp, qrotp, qdivp, qqp, qlnpp, nfdyn )
 1628.       t$129 = ( 2 * mymnmax )
 1628.       t$130 = kmaxloc
 1636.       t$268 = _zla( 0, ( 2 * mymnmax ) )
 1628.       t$269 = _zla( 0, ( 2 * mymnmax ) )
 1636.       t$270 = _zla( 0, kmaxloc )
 1628.       t$271 = _zla( 0, ( 2 * mymnmax ) ) * _zla( 0, kmaxloc )
 1628.       t$131 = ( 2 * mnmax )
 1644.       t$272 = _zla( 0, ( 2 * mnmax ) )
 1628.       t$273 = _zla( 0, ( 2 * mnmax ) )
 1628.       t$274 = 5 * _zla( 0, ( 2 * mnmax ) )
 1644.       t$277 = 40 * _zla( 0, ( 2 * mnmax ) )
 1628.       t$275 = int( _alloc( 40 * _zla( 0, ( 2 * mnmax ) ) ), 8 )
 1644.       t$276 = t$275
 1650.       if ( pfbar ) then
 1652.          if ( (dodia%base_addr)(2, 0) ) then
 1652.             if ( (iavrq%base_addr)(2, 0) > 0 ) then
 1653.                $lo_S2 = -1 + (lspec%base_addr)(2, 0)
 1654.                if ( kmaxloc > 0 ) then
 1656.                   if ( 2 * mymnmax > 0 ) then
 1654.                      $I_L1654_64 = 0
 1654.                      do
 1656.                         $I_L1656_54 = 0
 1656. !dir$ ivdep
 1656.                         do
 1657.                            (spec%base_addr)(1 + $I_L1656_54, $lo_S2 + $I_L1654_64 + 1, 0) = (spec%base_addr)(1 + $I_L1656_54, $lo_S2 + $I_L1654_64 + 1, 0) + qdivp(1 + $I_L1656_54, 1 + $I_L1654_64)
 1658.                            $I_L1656_54 = 1 + $I_L1656_54
 1656.                            if ( $I_L1656_54 >= ( 2 * mymnmax ) ) exit
 1656.                         enddo
 1659.                         $I_L1654_64 = 1 + $I_L1654_64
 1658.                         if ( $I_L1654_64 >= kmaxloc ) exit
 1658.                      enddo
 1658.                   endif
 1658.                endif
 1658.             endif
 1658.          endif
 1662.          if ( (dodia%base_addr)(3, 0) ) then
 1662.             if ( (iavrq%base_addr)(3, 0) > 0 ) then
 1663.                $lo_S5 = -1 + (lspec%base_addr)(3, 0)
 1664.                if ( kmaxloc > 0 ) then
 1666.                   if ( 2 * mymnmax > 0 ) then
 1664.                      $I_L1664_66 = 0
 1664.                      do
 1666.                         $I_L1666_56 = 0
 1666. !dir$ ivdep
 1666.                         do
 1667.                            (spec%base_addr)(1 + $I_L1666_56, $lo_S5 + $I_L1664_66 + 1, 0) = (spec%base_addr)(1 + $I_L1666_56, $lo_S5 + $I_L1664_66 + 1, 0) + qrotp(1 + $I_L1666_56, 1 + $I_L1664_66)
 1668.                            $I_L1666_56 = 1 + $I_L1666_56
 1666.                            if ( $I_L1666_56 >= ( 2 * mymnmax ) ) exit
 1666.                         enddo
 1669.                         $I_L1664_66 = 1 + $I_L1664_66
 1668.                         if ( $I_L1664_66 >= kmaxloc ) exit
 1668.                      enddo
 1668.                   endif
 1668.                endif
 1668.             endif
 1668.          endif
 1672.          if ( (dodia%base_addr)(5, 0) ) then
 1672.             if ( (iavrq%base_addr)(5, 0) > 0 ) then
 1673.                $lo_S8 = -1 + (lspec%base_addr)(5, 0)
 1674.                if ( kmaxloc > 0 ) then
 1676.                   if ( 2 * mymnmax > 0 ) then
 1674.                      $I_L1674_68 = 0
 1674.                      do
 1676.                         $I_L1676_58 = 0
 1676. !dir$ ivdep
 1676.                         do
 1677.                            (spec%base_addr)(1 + $I_L1676_58, $lo_S8 + $I_L1674_68 + 1, 0) = (spec%base_addr)(1 + $I_L1676_58, $lo_S8 + $I_L1674_68 + 1, 0) + qtmpp(1 + $I_L1676_58, 1 + $I_L1674_68)
 1678.                            $I_L1676_58 = 1 + $I_L1676_58
 1676.                            if ( $I_L1676_58 >= ( 2 * mymnmax ) ) exit
 1676.                         enddo
 1679.                         $I_L1674_68 = 1 + $I_L1674_68
 1678.                         if ( $I_L1674_68 >= kmaxloc ) exit
 1678.                      enddo
 1678.                   endif
 1678.                endif
 1678.             endif
 1678.          endif
 1682.          if ( (dodia%base_addr)(4, 0) ) then
 1682.             if ( (iavrq%base_addr)(4, 0) > 0 ) then
 1683.                $lo_S11 = -1 + (lspec%base_addr)(4, 0)
 1684.                if ( kmaxloc > 0 ) then
 1686.                   if ( 2 * mymnmax > 0 ) then
 1684.                      $I_L1684_70 = 0
 1684.                      do
 1686.                         $I_L1686_60 = 0
 1686. !dir$ ivdep
 1686.                         do
 1687.                            (spec%base_addr)(1 + $I_L1686_60, $lo_S11 + $I_L1684_70 + 1, 0) = (spec%base_addr)(1 + $I_L1686_60, $lo_S11 + $I_L1684_70 + 1, 0) + qqp(1 + $I_L1686_60, 1 + $I_L1684_70)
 1688.                            $I_L1686_60 = 1 + $I_L1686_60
 1686.                            if ( $I_L1686_60 >= ( 2 * mymnmax ) ) exit
 1686.                         enddo
 1689.                         $I_L1684_70 = 1 + $I_L1684_70
 1688.                         if ( $I_L1684_70 >= kmaxloc ) exit
 1688.                      enddo
 1688.                   endif
 1688.                endif
 1688.             endif
 1688.          endif
 1696.          if ( havesurf ) then
 1696.             if ( (dodia%base_addr)(55, 0) ) then
 1696.                if ( (iavrq%base_addr)(55, 0) > 0 ) then
 1697.                   $lo_S13 = (lspec%base_addr)(55, 0)
 1698.                   if ( 2 * mymnmax > 0 ) then
 1698.                      $I_L1698_62 = 0
 1698. !dir$ ivdep
 1698.                      do
 1699.                         (spec%base_addr)(1 + $I_L1698_62, $lo_S13, 0) = (spec%base_addr)(1 + $I_L1698_62, $lo_S13, 0) + qlnpp(1 + $I_L1698_62)
 1700.                         $I_L1698_62 = 1 + $I_L1698_62
 1698.                         if ( $I_L1698_62 >= ( 2 * mymnmax ) ) exit
 1698.                      enddo
 1698.                   endif
 1698.                endif
 1698.             endif
 1698.          endif
 1698.       endif
 1704.       if ( dodyn ) then
 1704.          if ( havesurf ) then
 1706.             ipa$13 = 1
 1706.             ipa$14 = 1
 1706.             ipa$15 = 0
 1706.             call collect_spec( qdivp(1, 1), specg(1, 1), ipa$13, ipa$14, ipa$15 )
 1707.             ipa$24 = 1
 1707.             ipa$25 = 1
 1707.             ipa$26 = 0
 1707.             call collect_spec( qrotp(1, 1), specg(1, 2), ipa$24, ipa$25, ipa$26 )
 1708.             ipa$35 = 1
 1708.             ipa$36 = 1
 1708.             ipa$37 = 0
 1708.             call collect_spec( qtmpp(1, 1), specg(1, 3), ipa$35, ipa$36, ipa$37 )
 1709.             ipa$46 = 1
 1709.             ipa$47 = 1
 1709.             ipa$48 = 0
 1709.             call collect_spec( qqp(1, 1), specg(1, 4), ipa$46, ipa$47, ipa$48 )
 1710.             ipa$56 = 1
 1710.             ipa$57 = 1
 1710.             ipa$58 = 0
 1710.             call collect_spec( qlnpp(1), specg(1, 5), ipa$56, ipa$57, ipa$58 )
 1711.             if ( myid == 0 ) then
 1712.                $Unit_temp_O0 = nfprt
 1712.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ifday=', 0x800600000000L ), _iotype( ifday, 0x2000200000000L ), _iotype( ' tod=', 0x800600000000L ), _iotype( tod, 0x804060300000000L ), _iotype( ' dyn', 0x800600000000L ) ) )
 1713.                $Unit_temp_O1 = nfdyn
 1713.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ) ) )
 1714.                if ( ( 0 >= t$131 .or. t$131 <= 0 ) .and. t$131 > 0 ) then
 1714.                    _substr(t$970,1,16) = 'Diagnostics.f90'
 1714.                    _substr(t$971,1,6) = 'SPECG'
 1714.                   call _rbounds_error(  _substr(t$970,1,16), 2217,  _substr(t$971,1,6), 1, 1, t$131, 1, t$131, 1, t$969 )
 1714.                endif
 1714.                $Unit_temp_O2 = nfdyn
 1714.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( specg(+:( 1, t$131, 1 ), 1), 0x804060300000000L ) ) )
 1715.                if ( ( 0 >= t$131 .or. t$131 <= 0 ) .and. t$131 > 0 ) then
 1715.                    _substr(t$973,1,16) = 'Diagnostics.f90'
 1715.                    _substr(t$974,1,6) = 'SPECG'
 1715.                   call _rbounds_error(  _substr(t$973,1,16), 2218,  _substr(t$974,1,6), 1, 1, t$131, 1, t$131, 1, t$972 )
 1715.                endif
 1715.                $Unit_temp_O3 = nfdyn
 1715.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( specg(+:( 1, t$131, 1 ), 2), 0x804060300000000L ) ) )
 1716.                if ( ( 0 >= t$131 .or. t$131 <= 0 ) .and. t$131 > 0 ) then
 1716.                    _substr(t$976,1,16) = 'Diagnostics.f90'
 1716.                    _substr(t$977,1,6) = 'SPECG'
 1716.                   call _rbounds_error(  _substr(t$976,1,16), 2219,  _substr(t$977,1,6), 1, 1, t$131, 1, t$131, 1, t$975 )
 1716.                endif
 1716.                $Unit_temp_O4 = nfdyn
 1716.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( specg(+:( 1, t$131, 1 ), 3), 0x804060300000000L ) ) )
 1717.                if ( ( 0 >= t$131 .or. t$131 <= 0 ) .and. t$131 > 0 ) then
 1717.                    _substr(t$979,1,16) = 'Diagnostics.f90'
 1717.                    _substr(t$980,1,6) = 'SPECG'
 1717.                   call _rbounds_error(  _substr(t$979,1,16), 2220,  _substr(t$980,1,6), 1, 1, t$131, 1, t$131, 1, t$978 )
 1717.                endif
 1717.                $Unit_temp_O5 = nfdyn
 1717.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( specg(+:( 1, t$131, 1 ), 4), 0x804060300000000L ) ) )
 1718.                if ( ( 0 >= t$131 .or. t$131 <= 0 ) .and. t$131 > 0 ) then
 1718.                    _substr(t$982,1,16) = 'Diagnostics.f90'
 1718.                    _substr(t$983,1,6) = 'SPECG'
 1718.                   call _rbounds_error(  _substr(t$982,1,16), 2221,  _substr(t$983,1,6), 1, 1, t$131, 1, t$131, 1, t$981 )
 1718.                endif
 1718.                $Unit_temp_O6 = nfdyn
 1718.                _uwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( specg(+:( 1, t$131, 1 ), 5), 0x804060300000000L ) ) )
 1718.             endif
 1718.          endif
 1718.       endif
 1628.       _free( t$275 )
 1723.       return
 1723.       end
 1723.       
 1751.       
 1751.       subroutine prec_diag( ifday, tod, prct, prcc, nfprc )
 1727.       t$134 = ibmax
 1727.       t$135 = jbmax
 1735.       t$278 = _zla( 0, ibmax )
 1727.       t$279 = _zla( 0, ibmax )
 1735.       t$280 = _zla( 0, jbmax )
 1727.       t$281 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 1727.       t$136 = ijmax
 1739.       t$282 = _zla( 0, ijmax )
 1739.       t$285 = 8 * _zla( 0, ijmax )
 1739.       t$286 = 8 * _zla( 0, ijmax )
 1739.       t$288 = 16 * _zla( 0, ijmax )
 1727.       t$283 = int( _alloc( 16 * _zla( 0, ijmax ) ), 8 )
 1739.       t$284 = t$283
 1739.       t$287 = t$283 + 8 * _zla( 0, ijmax )
 1741.       if ( doprec ) then
 1742.          call collect_grid_red( prct(1, 1), aux1(1) )
 1743.          call collect_grid_red( prcc(1, 1), aux2(1) )
 1744.          if ( myid == 0 ) then
 1745.             call writediaghead8( nfprc, ifday, tod )
 1746. !dir$ suppress aux1(1)
 1746.             t$984%base_addr = pointer to array[1] of real (kind=8)( loc( aux1(1) ) )
 1746.             t$984%header%el_len = 64
 1746.             t$984%header%assoc = 1
 1746.             t$984%header%ptr_alloc = 0
 1746.             t$984%header%p_or_a = 0
 1746.             t$984%header%a_contig = 1
 1746.             t$984%header%dv_versn = 2
 1746.             t$984%header%dv_smunit = 64
 1746.             t$984%header%d_type = 0
 1746.             t$984%header%n_params = 0
 1746.             t$984%header%pad_codim = 0
 1746.             t$984%header%n_codim = 0
 1746.             t$984%header%pad_dim = 0
 1746.             t$984%header%n_dim = 1
 1746.             t$984%header%d_type_idx = 13
 1746.             t$984%header%typ_code = 134481411
 1746.             t$984%header%orig_base = 0
 1746.             t$984%header%orig_size = 0
 1746.             t$984%dim_1%LB = 1
 1746.             t$984%dim_1%EX = _zla( 0, t$136 )
 1746.             t$984%dim_1%SM = 1
 1746.             call writefield81d( nfprc, t$984 )
 1747. !dir$ suppress aux2(1)
 1747.             t$985%base_addr = pointer to array[1] of real (kind=8)( loc( aux2(1) ) )
 1747.             t$985%header%el_len = 64
 1747.             t$985%header%assoc = 1
 1747.             t$985%header%ptr_alloc = 0
 1747.             t$985%header%p_or_a = 0
 1747.             t$985%header%a_contig = 1
 1747.             t$985%header%dv_versn = 2
 1747.             t$985%header%dv_smunit = 64
 1747.             t$985%header%d_type = 0
 1747.             t$985%header%n_params = 0
 1747.             t$985%header%pad_codim = 0
 1747.             t$985%header%n_codim = 0
 1747.             t$985%header%pad_dim = 0
 1747.             t$985%header%n_dim = 1
 1747.             t$985%header%d_type_idx = 13
 1747.             t$985%header%typ_code = 134481411
 1747.             t$985%header%orig_base = 0
 1747.             t$985%header%orig_size = 0
 1747.             t$985%dim_1%LB = 1
 1747.             t$985%dim_1%EX = _zla( 0, t$136 )
 1747.             t$985%dim_1%SM = 1
 1747.             call writefield81d( nfprc, t$985 )
 1747.          endif
 1747.       endif
 1727.       _free( t$283 )
 1751.       return
 1751.       end
 1751.       
 1943.       
 1943.       subroutine wridia( nfdiag, maxstp, idatec )
 1809.       f1 = 1.0/maxstp
 1810.       $fgm_S7 = .true.
 1811.       call collect_gauss( (gaus%base_addr)(gaus%dim_1%LB, gaus%dim_2%LB, gaus%dim_3%LB, 0), (gaus_in%base_addr)(gaus_in%dim_1%LB, gaus_in%dim_2%LB, gaus_in%dim_3%LB, 0), mxgaus )
 1815.        _substr(line,1,256) = ' file also contains diagnostics at'
 1815.       lastused = _ltrim(  _substr(line,1,256) )
 1816.       $IOitem_O3 = idatec(1)
 1816.       _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,8), Null_Arg, Null_Arg, t$138,  _substr(t$137,1,18), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O3, 0x2000200000000L ) ) )
 1817.       lastused = 8 + lastused
 1818.       $_IOitem_P0(0) = idatec(3)
 1818.       $_IOitem_P0(1) = idatec(2)
 1818.       $_IOitem_P0(2) = idatec(4)
 1818.       _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,11), Null_Arg, Null_Arg, t$140,  _substr(t$139,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 1821.        _substr(t$986,1,12) = '**(wridia)**'
 1821.       call msgone(  _substr(t$986,1,12),  _substr(line,1,max( 0, 11 + lastused )) )
 1823.       $t_S8 = mxavl
 1823.       if ( mxavl > 0 ) then
 1823.          $I_L1823_106 = 0
 1823.          do
 1824.             if ( (dodia%base_addr)(1 + $I_L1823_106, 0) ) then
 1824.                if ( (iavrq%base_addr)(1 + $I_L1823_106, 0) > 0 ) then
 1825.                   $nn_S4 = (iavrq%base_addr)(1 + $I_L1823_106, 0)
 1826.                   if ( (itavl%base_addr)(1 + $I_L1823_106, 0) == 2 ) then
 1827.                      $mm_S3 = (lspec%base_addr)(1 + $I_L1823_106, 0)
 1828.                      $callsclout_S2 = kmax + -(lvavl%base_addr)(1 + $I_L1823_106, 0) == 0 .or. havesurf
 1829.                      kl = cvmg( kmaxloc, 1, (lvavl%base_addr)(1 + $I_L1823_106, 0) /= 1 )
 1834.                      if ( $callsclout_S2 ) then
 1835.                         call scloutsp( nfdiag, (spec%base_addr)(1, $mm_S3, 0), kl, (lvavl%base_addr)(1 + $I_L1823_106, 0), f1, (nuavl%base_addr)(1 + $I_L1823_106, 0), (nurq%base_addr)($nn_S4, 0) )
 1835.                      endif
 1835.                   else
 1839.                      $k_S5 = (lgaus%base_addr)(1 + $I_L1823_106, 0)
 1840.                      if ( myjmax_d > 0 ) then
 1840.                         call scloutgr( nfdiag, (gaus_in%base_addr)(1, 1, $k_S5, 0), (lvavl%base_addr)(1 + $I_L1823_106, 0), f1, (nuavl%base_addr)(1 + $I_L1823_106, 0), (nurq%base_addr)($nn_S4, 0) )
 1840.                      endif
 1842.                      $I_L1842_92 = 0
 1842. !dir$ ivdep
 1842.                      do
 1843.                         if ( igbme(1 + $I_L1842_92) + -$I_L1823_106 + -1 == 0 ) then
 1846.                            if ( $fgm_S7 ) then
 1846.                               if ( nfctrl(31) > 0 ) then
 1846.                                  $Unit_temp_O0 = nfprt
 1846.                                  _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,35), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1846.                               endif
 1846.                            endif
 1847.                            if ( $fgm_S7 ) then
 1847.                               if ( (dodia%base_addr)(17, 0) ) then
 1847.                                  if ( nfctrl(31) >= 2 ) then
 1847.                                     $Unit_temp_O1 = nfprt
 1847.                                     _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$144,  _substr(t$143,1,97), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1847.                                  endif
 1847.                               endif
 1847.                            endif
 1848.                            if ( myjmax_d > 0 ) then
 1849.                               call globme( (gaus_in%base_addr)(1, 1, $k_S5, 0), (dcol%base_addr)(dcol%dim_1%LB, 0), (scol%base_addr)(scol%dim_1%LB, 0), f1,  _substr((avail%base_addr)(1 + $I_L1823_106, 0),1,40), (nuavl%base_addr)(1 + $I_L1823_106, 0), (nurq%base_addr)($nn_S4, 0) )
 1849.                            else
 1852.                               call globme( gwork(1), (dcol%base_addr)(dcol%dim_1%LB, 0), (scol%base_addr)(scol%dim_1%LB, 0), f1,  _substr((avail%base_addr)(1 + $I_L1823_106, 0),1,40), (nuavl%base_addr)(1 + $I_L1823_106, 0), (nurq%base_addr)($nn_S4, 0) )
 1852.                            endif
 1855.                            $fgm_S7 = .false.
 1855.                            goto 10
 1855.                         endif
 1844.                         $I_L1842_92 = 1 + $I_L1842_92
 1844.                         if ( $I_L1842_92 >= 13 ) exit
 1844.                      enddo
 1844.                   endif
 1844.                endif
 1844.             endif
 1844.    10       continue
 1858.             $I_L1823_106 = 1 + $I_L1823_106
 1858.             if ( $I_L1823_106 >= $t_S8 ) exit
 1858.          enddo
 1858.       endif
 1859.       if ( $fgm_S7 == 0 ) then
 1859.          if ( nfctrl(31) > 0 ) then
 1859.             $Unit_temp_O2 = nfprt
 1859.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$146,  _substr(t$145,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1859.          endif
 1859.       endif
 1863.       if ( icf /= 0 ) then
 1867.          if ( icf > 0 ) then
 1867.             $I_L1867_126 = 0
 1867. !dir$ loop_info (automatic) cache_nt( lgaus, ixucf, itcf, inucf, icfu )
 1867.             do
 1868.                if ( (icfu%base_addr)(1 + $I_L1867_126, 0) ) then
 1869.                   $ka_S10 = (ixucf%base_addr)(1 + $I_L1867_126, 0)
 1870.                   if ( (itcf%base_addr)(1 + $I_L1867_126, 0) == 1 ) then
 1871.                      $ki_S18 = (lgaus%base_addr)(-1 + -$I_L1867_126, 0)
 1872.                      if ( myjmax_d > 0 ) then
 1872.                         $SCA_inucf_I29 = (inucf%base_addr)(1 + $I_L1867_126, 0)
 1872.                         $I_L1872_124 = 0
 1872.                         do
 1873.                            if ( $SCA_inucf_I29 > 0 ) then
 1873.                               $I_L1873_120 = 0
 1873.                               do
 1874.                                  $kx_S13 = (jrucf%base_addr)($ka_S10 + $I_L1873_120, 0)
 1876.                                  $ji_S19 = (lgaus%base_addr)(-abs( $kx_S13 ), 0)
 1877.                                  $t_S14 = (lvcf%base_addr)(abs( $kx_S13 ), 0)
 1877.                                  if ( $t_S14 > 0 ) then
 1878.                                     if ( $kx_S13 > 0 ) then
 1879.                                        if ( imaxnew > 0 ) then
 1877.                                           $I_L1877_110 = 0
 1877.                                           do
 1879.                                              $I_L1879_96 = 0
 1879. !dir$ ivdep
 1879.                                              do
 1880.                                                 (gaus_in%base_addr)(1 + $I_L1879_96, 1 + $I_L1872_124, $ji_S19 + $I_L1877_110, 0) = (gaus_in%base_addr)(1 + $I_L1879_96, 1 + $I_L1872_124, $ji_S19 + $I_L1877_110, 0) + (gaus_in%base_addr)(1 + $I_L1879_96, 1 + $I_L1872_124, $ki_S18 + $I_L1877_110, 0)
 1882.                                                 $I_L1879_96 = 1 + $I_L1879_96
 1879.                                                 if ( $I_L1879_96 >= imaxnew ) exit
 1879.                                              enddo
 1889.                                              $I_L1877_110 = 1 + $I_L1877_110
 1888.                                              if ( $I_L1877_110 >= $t_S14 ) exit
 1888.                                           enddo
 1888.                                        endif
 1888.                                     else if ( imaxnew > 0 ) then
 1877.                                        $I_L1877_112 = 0
 1877.                                        do
 1884.                                           $I_L1884_100 = 0
 1884. !dir$ ivdep
 1884.                                           do
 1885.                                              (gaus_in%base_addr)(1 + $I_L1884_100, 1 + $I_L1872_124, $ji_S19 + $I_L1877_112, 0) = (gaus_in%base_addr)(1 + $I_L1884_100, 1 + $I_L1872_124, $ji_S19 + $I_L1877_112, 0) + -(gaus_in%base_addr)(1 + $I_L1884_100, 1 + $I_L1872_124, $ki_S18 + $I_L1877_112, 0)
 1887.                                              $I_L1884_100 = 1 + $I_L1884_100
 1884.                                              if ( $I_L1884_100 >= imaxnew ) exit
 1884.                                           enddo
 1889.                                           $I_L1877_112 = 1 + $I_L1877_112
 1888.                                           if ( $I_L1877_112 >= $t_S14 ) exit
 1888.                                        enddo
 1888.                                     endif
 1888.                                  endif
 1890.                                  $I_L1873_120 = 1 + $I_L1873_120
 1889.                                  if ( $I_L1873_120 >= $SCA_inucf_I29 ) exit
 1889.                               enddo
 1889.                            endif
 1891.                            $I_L1872_124 = 1 + $I_L1872_124
 1890.                            if ( $I_L1872_124 >= myjmax_d ) exit
 1890.                         enddo
 1890.                      endif
 1892.                   else if ( (itcf%base_addr)(1 + $I_L1867_126, 0) == 2 ) then
 1893.                      $ki_S27 = (lspec%base_addr)(-1 + -$I_L1867_126, 0)
 1894.                      $t_S21 = $ka_S10 + (inucf%base_addr)(1 + $I_L1867_126, 0) + -1
 1894.                      if ( $t_S21 + -$ka_S10 >= 0 ) then
 1894.                         $I_L1894_118 = 0
 1894. !dir$ loop_info (automatic) cache_nt( lvcf, jrucf )
 1894.                         do
 1895.                            $kx_S23 = (jrucf%base_addr)($ka_S10 + $I_L1894_118, 0)
 1897.                            $ji_S28 = (lspec%base_addr)(-abs( $kx_S23 ), 0)
 1898.                            $t_S24 = (lvcf%base_addr)(abs( $kx_S23 ), 0)
 1898.                            if ( $t_S24 > 0 ) then
 1899.                               if ( $kx_S23 > 0 ) then
 1900.                                  if ( 2 * mymnmax > 0 ) then
 1898.                                     $I_L1898_108 = 0
 1898.                                     do
 1900.                                        $I_L1900_94 = 0
 1900. !dir$ ivdep
 1900.                                        do
 1901.                                           (spec%base_addr)(1 + $I_L1900_94, $ji_S28 + $I_L1898_108, 0) = (spec%base_addr)(1 + $I_L1900_94, $ji_S28 + $I_L1898_108, 0) + (spec%base_addr)(1 + $I_L1900_94, $ki_S27 + $I_L1898_108, 0)
 1903.                                           $I_L1900_94 = 1 + $I_L1900_94
 1900.                                           if ( $I_L1900_94 >= ( 2 * mymnmax ) ) exit
 1900.                                        enddo
 1910.                                        $I_L1898_108 = 1 + $I_L1898_108
 1909.                                        if ( $I_L1898_108 >= $t_S24 ) exit
 1909.                                     enddo
 1909.                                  endif
 1909.                               else if ( 2 * mymnmax > 0 ) then
 1898.                                  $I_L1898_114 = 0
 1898.                                  do
 1905.                                     $I_L1905_102 = 0
 1905. !dir$ ivdep
 1905.                                     do
 1906.                                        (spec%base_addr)(1 + $I_L1905_102, $ji_S28 + $I_L1898_114, 0) = (spec%base_addr)(1 + $I_L1905_102, $ji_S28 + $I_L1898_114, 0) + -(spec%base_addr)(1 + $I_L1905_102, $ki_S27 + $I_L1898_114, 0)
 1908.                                        $I_L1905_102 = 1 + $I_L1905_102
 1905.                                        if ( $I_L1905_102 >= ( 2 * mymnmax ) ) exit
 1905.                                     enddo
 1910.                                     $I_L1898_114 = 1 + $I_L1898_114
 1909.                                     if ( $I_L1898_114 >= $t_S24 ) exit
 1909.                                  enddo
 1909.                               endif
 1909.                            endif
 1911.                            $I_L1894_118 = 1 + $I_L1894_118
 1910.                            if ( $I_L1894_118 >= $t_S21 + -$ka_S10 + 1 ) exit
 1910.                         enddo
 1910.                      endif
 1910.                   endif
 1910.                endif
 1914.                $I_L1867_126 = 1 + $I_L1867_126
 1913.                if ( $I_L1867_126 >= icf ) exit
 1913.             enddo
 1913.          endif
 1918.          $t_S34 = icf
 1918.          if ( icf > 0 ) then
 1918.             $I_L1918_98 = 0
 1918.             do
 1919.                if ( (itcf%base_addr)(1 + $I_L1918_98, 0) == 2 ) then
 1920.                   $mm_S32 = (lspec%base_addr)(-1 + -$I_L1918_98, 0)
 1921.                   $callsclout_S31 = (lvcf%base_addr)(1 + $I_L1918_98, 0) + -kmax == 0 .or. havesurf
 1922.                   kl = cvmg( kmaxloc, 1, (lvcf%base_addr)(1 + $I_L1918_98, 0) /= 1 )
 1927.                   if ( $callsclout_S31 ) then
 1928.                      call scloutsp( nfdiag, (spec%base_addr)(1, $mm_S32, 0), kl, (lvcf%base_addr)(1 + $I_L1918_98, 0), f1, (nucf%base_addr)(1 + $I_L1918_98, 0), (nucf%base_addr)(1 + $I_L1918_98, 0) )
 1928.                   endif
 1931.                else if ( (itcf%base_addr)(1 + $I_L1918_98, 0) == 1 ) then
 1932.                   $k_S33 = (lgaus%base_addr)(-1 + -$I_L1918_98, 0)
 1933.                   call scloutgr( nfdiag, (gaus_in%base_addr)(1, 1, $k_S33, 0), (lvcf%base_addr)(1 + $I_L1918_98, 0), f1, (nucf%base_addr)(1 + $I_L1918_98, 0), (nucf%base_addr)(1 + $I_L1918_98, 0) )
 1933.                endif
 1936.                $I_L1918_98 = 1 + $I_L1918_98
 1935.                if ( $I_L1918_98 >= $t_S34 ) exit
 1935.             enddo
 1935.          endif
 1935.       endif
 1938.       $F_A33 = gaus_in%dim_3%EX
 1938.       $F_A34 = gaus_in%dim_2%EX
 1938.       $F_A35 = gaus_in%dim_1%EX
 1938.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 1938.          $SC_gaus_in_I35 = gaus_in%dim_1%LB
 1938.          $SC_gaus_in_I36 = gaus_in%dim_2%SM
 1938.          $SC_gaus_in_I37 = gaus_in%dim_2%LB
 1938.          $SC_gaus_in_I38 = gaus_in%dim_3%SM
 1938.          $SC_gaus_in_I39 = gaus_in%dim_3%LB
 1938.          $I_L1938_122 = 0
 1938.          do
 1938.             $I_L1938_116 = 0
 1938.             do
 1938.                $I_L1938_104 = 0
 1938. !dir$ ivdep
 1938.                do
 1938.                   (gaus_in%base_addr)($SC_gaus_in_I35 + $I_L1938_104, $SC_gaus_in_I37 + $I_L1938_116, $SC_gaus_in_I39 + $I_L1938_122, 0) = 0.0
 1938.                   $I_L1938_104 = 1 + $I_L1938_104
 1938.                   if ( $I_L1938_104 >= $F_A35 ) exit
 1938.                enddo
 1938.                $I_L1938_116 = 1 + $I_L1938_116
 1938.                if ( $I_L1938_116 >= $F_A34 ) exit
 1938.             enddo
 1938.             $I_L1938_122 = 1 + $I_L1938_122
 1938.             if ( $I_L1938_122 >= $F_A33 ) exit
 1938.          enddo
 1938.       endif
 1943.       return
 1943.       end
 1943.       
 2054.       
 2054.       subroutine updia1d( field, loca, latblo )
 1950.       field%dim_1%LB = 1
 1950.       t$147 = ibmax
 1961.       t$289 = _zla( 0, ibmax )
 1961.       t$292 = 8 * _zla( 0, ibmax )
 1950.       t$290 = int( _alloc( 8 * _zla( 0, ibmax ) ), 8 )
 1961.       t$291 = t$290
 1976.       if ( (dodia%base_addr)(loca, 0) == 0 ) then
 1977.          $Unit_temp_O0 = nfprt
 1977.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,69), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 1978.          $Unit_temp_O1 = nferr
 1978.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$149,  _substr(t$148,1,69), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 1979.           _substr(t$1026,1,4) = '3180'
 1979.          call _stop(  _substr(t$1026,1,4) )
 1980.       else if ( (itavl%base_addr)(loca, 0) /= 1 ) then
 1983.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 1983.              _substr(t$1028,1,16) = 'Diagnostics.f90'
 1983.              _substr(t$1029,1,6) = 'ITAVL'
 1983.             t$1030 = itavl%dim_1%LB
 1983.             t$1031 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 1983.             t$1032 = loca
 1983.             call _bounds_error(  _substr(t$1028,1,16), 2486,  _substr(t$1029,1,6), 1, t$1030, t$1031, t$1032, t$1027 )
 1983.          endif
 1983.          $Unit_temp_O2 = nfprt
 1983.          $IOitem_O3 = (itavl%base_addr)(loca, 0)
 1983.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$153,  _substr(t$152,1,57), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O3, 0x2000200000000L ) ) )
 1984.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 1984.              _substr(t$1034,1,16) = 'Diagnostics.f90'
 1984.              _substr(t$1035,1,6) = 'ITAVL'
 1984.             t$1030 = itavl%dim_1%LB
 1984.             t$1031 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 1984.             t$1032 = loca
 1984.             call _bounds_error(  _substr(t$1034,1,16), 2487,  _substr(t$1035,1,6), 1, t$1030, t$1031, t$1032, t$1033 )
 1984.          endif
 1984.          $Unit_temp_O4 = nferr
 1984.          $IOitem_O5 = (itavl%base_addr)(loca, 0)
 1984.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$153,  _substr(t$152,1,57), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x2000200000000L ) ) )
 1985.           _substr(t$1036,1,4) = '4180'
 1985.          call _stop(  _substr(t$1036,1,4) )
 1985.       else
 1987.          $ka_S3 = (ixavl%base_addr)(loca, 0)
 1988.          imkm = ibmax
 1992.          if ( (iavrq%base_addr)(loca, 0) > 0 ) then
 1993.             $kg_S2 = (lgaus%base_addr)(loca, 0)
 1994.             $t_S0 = (ibmaxperjb%base_addr)(latblo, 0)
 1994.             if ( $t_S0 > 0 ) then
 1994.                $I_L1994_36 = 0
 1994. !dir$ ivdep
 1994.                do
 1995.                   (gaus%base_addr)(1 + $I_L1994_36, $kg_S2, latblo, 0) = (gaus%base_addr)(1 + $I_L1994_36, $kg_S2, latblo, 0) + (field%base_addr)(1 + $I_L1994_36, 0)
 1996.                   $I_L1994_36 = 1 + $I_L1994_36
 1994.                   if ( $I_L1994_36 >= $t_S0 ) exit
 1994.                enddo
 1994.             endif
 1994.          endif
 2001.          if ( (kravl%base_addr)($ka_S3, 0) < 0 .orelse. (inavl%base_addr)(loca, 0) > 1 ) then
 2002.             $kka_S5 = $ka_S3 + (inavl%base_addr)(loca, 0) + -1
 2003.             $ka_S4 = $ka_S3 + ( (kravl%base_addr)($ka_S3, 0) > 1 )
 2007.             if ( $kka_S5 + -$ka_S4 >= 0 ) then
 2007.                $I_L2007_46 = 0
 2007.                do
 2008.                   $kcf_S7 = (kravl%base_addr)($ka_S4 + $I_L2007_46, 0)
 2010.                   ja = (ixcf%base_addr)(-$kcf_S7, 0)
 2011.                   jja = ja + (incf%base_addr)(-$kcf_S7, 0) + -1
 2015.                   if ( jja + -ja < 0 ) then
 2007.                      goto 10
 2007.                   endif
 2015.                   $I_L2015_38 = 0
 2015. !dir$ ivdep
 2015.                   do
 2017.                      $kx_S9 = (krcf%base_addr)(ja + $I_L2015_38, 0)
 2018.                      if ( $kx_S9 + -loca == 0 ) then
 2016.                         $jx_S12 = (jrcf%base_addr)(ja + $I_L2015_38, 0)
 2031.                         $t_S10 = (ibmaxperjb%base_addr)(latblo, 0)
 2031.                         if ( $t_S10 > 0 ) then
 2031.                            $I_L2031_40 = 0
 2031. !dir$ ivdep
 2031.                            do
 2032.                               hold(1 + $I_L2031_40) = (field%base_addr)(1 + $I_L2031_40, 0)
 2033.                               $I_L2031_40 = 1 + $I_L2031_40
 2031.                               if ( $I_L2031_40 >= $t_S10 ) exit
 2031.                            enddo
 2031.                         endif
 2035.                         call cnvray( hold(1), imkm, (nuavl%base_addr)(loca, 0), (nucf%base_addr)(-$kcf_S7, 0) )
 2037.                         if ( (iclcd%base_addr)($jx_S12, 0) < 0 ) then
 2038.                            $kg_S15 = (lgaus%base_addr)($kcf_S7, 0)
 2039.                            $t_S13 = (ibmaxperjb%base_addr)(latblo, 0)
 2039.                            if ( $t_S13 > 0 ) then
 2039.                               $I_L2039_42 = 0
 2039. !dir$ ivdep
 2039.                               do
 2040.                                  (gaus%base_addr)(1 + $I_L2039_42, $kg_S15, latblo, 0) = (gaus%base_addr)(1 + $I_L2039_42, $kg_S15, latblo, 0) + -hold(1 + $I_L2039_42)
 2041.                                  $I_L2039_42 = 1 + $I_L2039_42
 2039.                                  if ( $I_L2039_42 >= $t_S13 ) exit
 2039.                               enddo
 2039.                            endif
 2039.                         else
 2043.                            $kg_S15 = (lgaus%base_addr)($kcf_S7, 0)
 2044.                            $t_S16 = (ibmaxperjb%base_addr)(latblo, 0)
 2044.                            if ( $t_S16 > 0 ) then
 2044.                               $I_L2044_44 = 0
 2044. !dir$ ivdep
 2044.                               do
 2045.                                  (gaus%base_addr)(1 + $I_L2044_44, $kg_S15, latblo, 0) = (gaus%base_addr)(1 + $I_L2044_44, $kg_S15, latblo, 0) + hold(1 + $I_L2044_44)
 2046.                                  $I_L2044_44 = 1 + $I_L2044_44
 2044.                                  if ( $I_L2044_44 >= $t_S16 ) exit
 2044.                               enddo
 2044.                            endif
 2044.                         endif
 2048.                         $I_L2007_46 = 1 + $I_L2007_46
 2048.                         if ( $I_L2007_46 >= $kka_S5 + -$ka_S4 + 1 ) then
 2047.                            goto 20
 2047.                         endif
 2047.                      endif
 2019.                      $I_L2015_38 = 1 + $I_L2015_38
 2019.                      if ( $I_L2015_38 >= jja + -ja + 1 ) exit
 2019.                   enddo
 2019.    10             continue
 2021.                   $Unit_temp_O6 = nfprt
 2021.                   $_IOitem_P0(0) = loca
 2021.                   $_IOitem_P0(1) = -$kcf_S7
 2021.                   $_IOitem_P0(2) = ( $ka_S4 + $I_L2007_46 )
 2021.                   $_IOitem_P0(3) = ja
 2021.                   $_IOitem_P0(4) = jja
 2021.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$151,  _substr(t$150,1,131), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 2022.                   $Unit_temp_O7 = nferr
 2022.                   $_IOitem_P1(0) = loca
 2022.                   $_IOitem_P1(1) = -$kcf_S7
 2022.                   $_IOitem_P1(2) = ( $ka_S4 + $I_L2007_46 )
 2022.                   $_IOitem_P1(3) = ja
 2022.                   $_IOitem_P1(4) = jja
 2022.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$151,  _substr(t$150,1,131), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 2024.                    _substr(t$1048,1,4) = '3680'
 2024.                   call _stop(  _substr(t$1048,1,4) )
 2024.                else
 2024.                   goto 20
 2024.                endif
 2024.             else
 2024.    20          continue
 1950.                _free( t$290 )
 1950.             endif
 1950.          endif
 1950.    30    continue
 2054.          return
 2054.       end
 2054.       
 2175.       
 2175.       subroutine updia2d( field, loca, latblo )
 2056.       field%dim_1%LB = 1
 2056.       field%dim_2%LB = 1
 2056.       t$154 = ibmax
 2056.       t$155 = kmaxnew
 2067.       t$293 = _zla( 0, ibmax )
 2056.       t$294 = _zla( 0, ibmax )
 2067.       t$295 = _zla( 0, kmaxnew )
 2056.       t$296 = _zla( 0, ibmax ) * _zla( 0, kmaxnew )
 2067.       t$299 = _zla( 0, ibmax ) * _zla( 0, kmaxnew ) * 8
 2056.       t$297 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmaxnew ) * 8 ), 8 )
 2067.       t$298 = t$297
 2085.       if ( (dodia%base_addr)(loca, 0) == 0 ) then
 2086.          $Unit_temp_O0 = nfprt
 2086.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$157,  _substr(t$156,1,69), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 2087.          $Unit_temp_O1 = nferr
 2087.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$157,  _substr(t$156,1,69), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( loca, 0x2000200000000L ) ) )
 2088.           _substr(t$1058,1,4) = '3180'
 2088.          call _stop(  _substr(t$1058,1,4) )
 2089.       else if ( (itavl%base_addr)(loca, 0) /= 1 ) then
 2092.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 2092.              _substr(t$1060,1,16) = 'Diagnostics.f90'
 2092.              _substr(t$1061,1,6) = 'ITAVL'
 2092.             t$1062 = itavl%dim_1%LB
 2092.             t$1063 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 2092.             t$1064 = loca
 2092.             call _bounds_error(  _substr(t$1060,1,16), 2595,  _substr(t$1061,1,6), 1, t$1062, t$1063, t$1064, t$1059 )
 2092.          endif
 2092.          $Unit_temp_O2 = nfprt
 2092.          $IOitem_O3 = (itavl%base_addr)(loca, 0)
 2092.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$161,  _substr(t$160,1,57), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O3, 0x2000200000000L ) ) )
 2093.          if ( loca < itavl%dim_1%LB .or. loca > itavl%dim_1%LB + itavl%dim_1%EX + -1 ) then
 2093.              _substr(t$1066,1,16) = 'Diagnostics.f90'
 2093.              _substr(t$1067,1,6) = 'ITAVL'
 2093.             t$1062 = itavl%dim_1%LB
 2093.             t$1063 = itavl%dim_1%LB + itavl%dim_1%EX + -1
 2093.             t$1064 = loca
 2093.             call _bounds_error(  _substr(t$1066,1,16), 2596,  _substr(t$1067,1,6), 1, t$1062, t$1063, t$1064, t$1065 )
 2093.          endif
 2093.          $Unit_temp_O4 = nferr
 2093.          $IOitem_O5 = (itavl%base_addr)(loca, 0)
 2093.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$161,  _substr(t$160,1,57), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O5, 0x2000200000000L ) ) )
 2094.           _substr(t$1068,1,4) = '4180'
 2094.          call _stop(  _substr(t$1068,1,4) )
 2094.       else
 2096.          $lvl_S0 = (lvavl%base_addr)(loca, 0)
 2097.          $ka_S5 = (ixavl%base_addr)(loca, 0)
 2098.          imkm = ibmax * $lvl_S0
 2102.          if ( (iavrq%base_addr)(loca, 0) > 0 ) then
 2103.             $kg_S4 = (lgaus%base_addr)(loca, 0)
 2104.             if ( $lvl_S0 > 0 ) then
 2106.                $SC_ibmaxperjb_I2 = (ibmaxperjb%base_addr)(latblo, 0)
 2106.                if ( $SC_ibmaxperjb_I2 > 0 ) then
 2104.                   $I_L2104_70 = 0
 2104.                   do
 2106.                      $I_L2106_60 = 0
 2106. !dir$ ivdep
 2106.                      do
 2107.                         (gaus%base_addr)(1 + $I_L2106_60, $kg_S4 + $I_L2104_70, latblo, 0) = (gaus%base_addr)(1 + $I_L2106_60, $kg_S4 + $I_L2104_70, latblo, 0) + (field%base_addr)(1 + $I_L2106_60, 1 + $I_L2104_70, 0)
 2108.                         $I_L2106_60 = 1 + $I_L2106_60
 2106.                         if ( $I_L2106_60 >= $SC_ibmaxperjb_I2 ) exit
 2106.                      enddo
 2109.                      $I_L2104_70 = 1 + $I_L2104_70
 2108.                      if ( $I_L2104_70 >= $lvl_S0 ) exit
 2108.                   enddo
 2108.                endif
 2108.             endif
 2108.          endif
 2114.          if ( (kravl%base_addr)($ka_S5, 0) < 0 .orelse. (inavl%base_addr)(loca, 0) > 1 ) then
 2115.             $kka_S7 = $ka_S5 + (inavl%base_addr)(loca, 0) + -1
 2116.             $ka_S6 = $ka_S5 + ( (kravl%base_addr)($ka_S5, 0) > 1 )
 2120.             if ( $kka_S7 + -$ka_S6 >= 0 ) then
 2120.                $I_L2120_78 = 0
 2120.                do
 2121.                   $kcf_S9 = (kravl%base_addr)($ka_S6 + $I_L2120_78, 0)
 2123.                   ja = (ixcf%base_addr)(-$kcf_S9, 0)
 2124.                   jja = ja + (incf%base_addr)(-$kcf_S9, 0) + -1
 2128.                   if ( jja + -ja < 0 ) then
 2120.                      goto 10
 2120.                   endif
 2128.                   $I_L2128_62 = 0
 2128. !dir$ ivdep
 2128.                   do
 2130.                      $kx_S11 = (krcf%base_addr)(ja + $I_L2128_62, 0)
 2131.                      if ( $kx_S11 + -loca == 0 ) then
 2129.                         $jx_S15 = (jrcf%base_addr)(ja + $I_L2128_62, 0)
 2144.                         if ( $lvl_S0 > 0 ) then
 2145.                            $SC_ibmaxperjb_I2 = (ibmaxperjb%base_addr)(latblo, 0)
 2145.                            if ( $SC_ibmaxperjb_I2 > 0 ) then
 2144.                               $I_L2144_72 = 0
 2144.                               do
 2145.                                  $I_L2145_64 = 0
 2145. !dir$ ivdep
 2145.                                  do
 2146.                                     hold(1 + $I_L2145_64, 1 + $I_L2144_72) = (field%base_addr)(1 + $I_L2145_64, 1 + $I_L2144_72, 0)
 2147.                                     $I_L2145_64 = 1 + $I_L2145_64
 2145.                                     if ( $I_L2145_64 >= $SC_ibmaxperjb_I2 ) exit
 2145.                                  enddo
 2148.                                  $I_L2144_72 = 1 + $I_L2144_72
 2147.                                  if ( $I_L2144_72 >= $lvl_S0 ) exit
 2147.                               enddo
 2147.                            endif
 2147.                         endif
 2150.                         call cnvray( hold(1, 1), imkm, (nuavl%base_addr)(loca, 0), (nucf%base_addr)(-$kcf_S9, 0) )
 2152.                         if ( (iclcd%base_addr)($jx_S15, 0) < 0 ) then
 2153.                            $kg_S19 = (lgaus%base_addr)($kcf_S9, 0)
 2154.                            if ( $lvl_S0 > 0 ) then
 2156.                               $SC_ibmaxperjb_I2 = (ibmaxperjb%base_addr)(latblo, 0)
 2156.                               if ( $SC_ibmaxperjb_I2 > 0 ) then
 2154.                                  $I_L2154_76 = 0
 2154.                                  do
 2156.                                     $I_L2156_68 = 0
 2156. !dir$ ivdep
 2156.                                     do
 2157.                                        (gaus%base_addr)(1 + $I_L2156_68, $kg_S19 + $I_L2154_76, latblo, 0) = (gaus%base_addr)(1 + $I_L2156_68, $kg_S19 + $I_L2154_76, latblo, 0) + -hold(1 + $I_L2156_68, 1 + $I_L2154_76)
 2158.                                        $I_L2156_68 = 1 + $I_L2156_68
 2156.                                        if ( $I_L2156_68 >= $SC_ibmaxperjb_I2 ) exit
 2156.                                     enddo
 2159.                                     $I_L2154_76 = 1 + $I_L2154_76
 2158.                                     if ( $I_L2154_76 >= $lvl_S0 ) exit
 2158.                                  enddo
 2158.                               endif
 2158.                            endif
 2158.                         else
 2161.                            $kg_S19 = (lgaus%base_addr)($kcf_S9, 0)
 2162.                            if ( $lvl_S0 > 0 ) then
 2164.                               $SC_ibmaxperjb_I2 = (ibmaxperjb%base_addr)(latblo, 0)
 2164.                               if ( $SC_ibmaxperjb_I2 > 0 ) then
 2162.                                  $I_L2162_74 = 0
 2162.                                  do
 2164.                                     $I_L2164_66 = 0
 2164. !dir$ ivdep
 2164.                                     do
 2165.                                        (gaus%base_addr)(1 + $I_L2164_66, $kg_S19 + $I_L2162_74, latblo, 0) = (gaus%base_addr)(1 + $I_L2164_66, $kg_S19 + $I_L2162_74, latblo, 0) + hold(1 + $I_L2164_66, 1 + $I_L2162_74)
 2166.                                        $I_L2164_66 = 1 + $I_L2164_66
 2164.                                        if ( $I_L2164_66 >= $SC_ibmaxperjb_I2 ) exit
 2164.                                     enddo
 2167.                                     $I_L2162_74 = 1 + $I_L2162_74
 2166.                                     if ( $I_L2162_74 >= $lvl_S0 ) exit
 2166.                                  enddo
 2166.                               endif
 2166.                            endif
 2166.                         endif
 2169.                         $I_L2120_78 = 1 + $I_L2120_78
 2169.                         if ( $I_L2120_78 >= $kka_S7 + -$ka_S6 + 1 ) then
 2168.                            goto 20
 2168.                         endif
 2168.                      endif
 2132.                      $I_L2128_62 = 1 + $I_L2128_62
 2132.                      if ( $I_L2128_62 >= jja + -ja + 1 ) exit
 2132.                   enddo
 2132.    10             continue
 2134.                   $Unit_temp_O6 = nfprt
 2134.                   $_IOitem_P0(0) = loca
 2134.                   $_IOitem_P0(1) = -$kcf_S9
 2134.                   $_IOitem_P0(2) = ( $ka_S6 + $I_L2120_78 )
 2134.                   $_IOitem_P0(3) = ja
 2134.                   $_IOitem_P0(4) = jja
 2134.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, t$159,  _substr(t$158,1,131), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 2135.                   $Unit_temp_O7 = nferr
 2135.                   $_IOitem_P1(0) = loca
 2135.                   $_IOitem_P1(1) = -$kcf_S9
 2135.                   $_IOitem_P1(2) = ( $ka_S6 + $I_L2120_78 )
 2135.                   $_IOitem_P1(3) = ja
 2135.                   $_IOitem_P1(4) = jja
 2135.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$159,  _substr(t$158,1,131), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 4, 1 )), 0x2000200000000L ) ) )
 2137.                    _substr(t$1083,1,4) = '3680'
 2137.                   call _stop(  _substr(t$1083,1,4) )
 2137.                else
 2137.                   goto 20
 2137.                endif
 2137.             else
 2137.    20          continue
 2056.                _free( t$297 )
 2056.             endif
 2056.          endif
 2056.    30    continue
 2175.          return
 2175.       end
 2175.       
 2419.       
 2419.       subroutine rmsgt( q, x, y, w, del, r, idatec )
 2178.       t$162 = ( 2 * mymnmax )
 2216.       t$300 = _zla( 0, ( 2 * mymnmax ) )
 2178.       t$163 = kmaxloc
 2178.       t$301 = _zla( 0, ( 2 * mymnmax ) )
 2217.       t$302 = _zla( 0, kmaxloc )
 2178.       t$303 = _zla( 0, ( 2 * mymnmax ) ) * _zla( 0, kmaxloc )
 2178.       t$164 = kmaxnew
 2219.       t$304 = _zla( 0, kmaxnew )
 2219.       idatec%dim_1%LB = 1
 2178.       t$305 = 12 * _zla( 0, kmaxnew )
 2234.       t$308 = 96 * _zla( 0, kmaxnew )
 2239.       t$309 = 96 * _zla( 0, kmaxnew )
 2239.       t$311 = 104 * _zla( 0, kmaxnew )
 2238.       t$312 = 104 * _zla( 0, kmaxnew )
 2238.       t$314 = 112 * _zla( 0, kmaxnew )
 2236.       t$315 = 112 * _zla( 0, kmaxnew )
 2236.       t$317 = 120 * _zla( 0, kmaxnew )
 2237.       t$318 = 120 * _zla( 0, kmaxnew )
 2237.       t$320 = 128 * _zla( 0, kmaxnew )
 2178.       t$170 = ( -1 + maxnodes_four )
 2178.       t$321 = maxnodes_four
 2257.       t$322 = _zla( 0, maxnodes_four )
 2257.       t$324 = 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four )
 2178.       t$166 = mmax
 2229.       t$325 = _zla( 0, mmax )
 2229.       t$327 = 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax )
 2178.       t$165 = ( -1 + maxnodes )
 2178.       t$328 = maxnodes
 2228.       t$329 = _zla( 0, maxnodes )
 2228.       t$331 = 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes )
 2178.       t$168 = mymmax
 2231.       t$332 = _zla( 0, mymmax )
 2178.       t$333 = _zla( 0, mymmax )
 2178.       t$334 = _zla( 0, kmaxloc ) * _zla( 0, mymmax )
 2178.       t$335 = _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 5
 2231.       t$336 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 )
 2231.       t$338 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 ) + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 40
 2178.       t$339 = _zla( 0, mmax )
 2178.       t$340 = _zla( 0, kmaxloc ) * _zla( 0, mmax )
 2178.       t$341 = _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 5
 2233.       t$342 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 ) + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 40
 2233.       t$344 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 ) + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 40 + _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 40
 2178.       t$169 = ( mmax + kmaxloc * mmax * 4 )
 2232.       t$345 = _zla( 0, ( mmax + kmaxloc * mmax * 4 ) )
 2232.       t$346 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 5 + _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 5 )
 2232.       t$348 = 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 5 + _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 5 ) + 8 * _zla( 0, ( mmax + kmaxloc * mmax * 4 ) )
 2178.       t$306 = int( _alloc( 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 5 + _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 5 ) + 8 * _zla( 0, ( mmax + kmaxloc * mmax * 4 ) ) ), 8 )
 2234.       t$307 = t$306
 2239.       t$310 = t$306 + 96 * _zla( 0, kmaxnew )
 2238.       t$313 = t$306 + 104 * _zla( 0, kmaxnew )
 2236.       t$316 = t$306 + 112 * _zla( 0, kmaxnew )
 2237.       t$319 = t$306 + 120 * _zla( 0, kmaxnew )
 2257.       t$323 = t$306 + 128 * _zla( 0, kmaxnew )
 2229.       t$326 = t$306 + 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four )
 2228.       t$330 = t$306 + 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax )
 2231.       t$337 = t$306 + 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 )
 2233.       t$343 = t$306 + 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 ) + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 40
 2232.       t$347 = t$306 + 8 * ( ( 128 * _zla( 0, kmaxnew ) + 4 * _zla( 0, maxnodes_four ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, maxnodes ) + 7 ) / 8 + _zla( 0, kmaxloc ) * _zla( 0, mymmax ) * 5 + _zla( 0, kmaxloc ) * _zla( 0, mmax ) * 5 )
 2261.       $is_S1 = int( havesurf )
 2262.       $I_L2262_129 = 0
 2262. !dir$ ivdep
 2262.       do
 2262.          sv(1 + $I_L2262_129) = 0.0
 2263.          av(1 + $I_L2262_129) = 0.0
 2262.          $I_L2262_129 = 1 + $I_L2262_129
 2262.          if ( $I_L2262_129 >= 4 ) exit
 2262.       enddo
 2264.       gmx = 0.0
 2265.       gmy = 0.0
 2266.       gmw = 0.0
 2267.       gmr = 0.0
 2269.       call hbartr2d( x(1, 1), sasy(1, 1, 1) )
 2270.       call hbartr2d( y(1, 1), sasy(1, 1, 2) )
 2271.       call hbartr2d( w(1, 1), sasy(1, 1, 3) )
 2272.       call hbartr2d( r(1, 1), sasy(1, 1, 4) )
 2273.       if ( havesurf ) then
 2273.          call hbartr( q(1), sasy(1, 1, 5) )
 2273.       endif
 2277.       comm = comm_four
 2278.       if ( myid_four /= 0 ) then
 2279.          t$1102 = kmaxloc * mymmax * 4 + mymmax * int( havesurf )
 2279.          call mpi_isend( sasy(1, 1, 1), t$1102, 1275070495, 0, 96, comm, request, ierr )
 2280.          call mpi_wait( request, status(1), ierr )
 2280.          goto 10
 2280.       else
 2282.          requestr(0) = 738197504
 2283.          ini(0) = 1
 2284.          $t_S2 = -1 + maxnodes_four
 2284.          if ( -1 + maxnodes_four > 0 ) then
 2284.             $I_L2284_111 = 0
 2284.             do
 2285.                ini(1 + $I_L2284_111) = ini($I_L2284_111) + kmaxloc * (msperproc%base_addr)($I_L2284_111, 0) * 4 + $is_S1 * (msperproc%base_addr)($I_L2284_111, 0)
 2286.                t$1102 = $is_S1 * (msperproc%base_addr)(1 + $I_L2284_111, 0) + kmaxloc * (msperproc%base_addr)(1 + $I_L2284_111, 0) * 4
 2286.                t$1106 = ( 1 + $I_L2284_111 )
 2286.                call mpi_irecv( sintaux(ini(1 + $I_L2284_111)), t$1102, 1275070495, t$1106, 96, comm, requestr(1 + $I_L2284_111), ierr )
 2288.                $I_L2284_111 = 1 + $I_L2284_111
 2288.                if ( $I_L2284_111 >= $t_S2 ) exit
 2288.             enddo
 2288.          endif
 2289.          $F_A35 = kmaxloc
 2289.          $F_A36 = mymmax
 2289.          if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 2289.             $I_L2289_183 = 0
 2289.             do
 2289.                $I_L2289_173 = 0
 2289.                do
 2289.                   $I_L2289_131 = 0
 2289. !dir$ ivdep
 2289.                   do
 2289.                      sint(1 + $I_L2289_131, 1 + $I_L2289_173, 1 + $I_L2289_183) = sasy(1 + $I_L2289_131, 1 + $I_L2289_173, 1 + $I_L2289_183)
 2289.                      $I_L2289_131 = 1 + $I_L2289_131
 2289.                      if ( $I_L2289_131 >= $F_A36 ) exit
 2289.                   enddo
 2289.                   $I_L2289_173 = 1 + $I_L2289_173
 2289.                   if ( $I_L2289_173 >= $F_A35 ) exit
 2289.                enddo
 2289.                $I_L2289_183 = 1 + $I_L2289_183
 2289.                if ( $I_L2289_183 >= 4 ) exit
 2289.             enddo
 2289.          endif
 2290.          if ( havesurf ) then
 2290.             $F_A37 = mymmax
 2290.             if ( mymmax > 0 ) then
 2290.                $I_L2290_133 = 0
 2290. !dir$ ivdep
 2290.                do
 2290.                   sint(1 + $I_L2290_133, 1, 5) = sasy(1 + $I_L2290_133, 1, 5)
 2290.                   $I_L2290_133 = 1 + $I_L2290_133
 2290.                   if ( $I_L2290_133 >= $F_A37 ) exit
 2290.                enddo
 2290.             endif
 2290.          endif
 2291.          $k_S5 = 1
 2292.          if ( maxnodes_four > 0 ) then
 2292.             $I_L2292_165 = 0
 2292.             do
 2293.                $t_S4 = (msperproc%base_addr)($I_L2292_165, 0)
 2293.                if ( $t_S4 > 0 ) then
 2293.                   $I_L2293_113 = 0
 2293. !dir$ ivdep
 2293.                   do
 2294.                      morder((msinproc%base_addr)(1 + $I_L2293_113, $I_L2292_165, 0)) = ( $k_S5 + $I_L2293_113 )
 2296.                      $I_L2293_113 = 1 + $I_L2293_113
 2293.                      if ( $I_L2293_113 >= $t_S4 ) exit
 2293.                   enddo
 2295.                   $k_S5 = $t_S4 + $k_S5
 2295.                endif
 2297.                $I_L2292_165 = 1 + $I_L2292_165
 2296.                if ( $I_L2292_165 >= maxnodes_four ) exit
 2296.             enddo
 2296.          endif
 2298.          $t_S13 = -1 + maxnodes_four
 2298.          if ( -1 + maxnodes_four > 0 ) then
 2298.             $I_L2298_189 = 0
 2298.             do
 2299.                call mpi_waitany( maxnodes_four, requestr(0), index, status(1), ierr )
 2300.                $i_S7 = status(3)
 2301.                i1 = mymmax
 2302.                if ( -1 + $i_S7 > 0 ) then
 2302.                   $I_L2302_115 = 0
 2302. !dir$ ivdep
 2302.                   do
 2303.                      i1 = i1 + (msperproc%base_addr)(1 + $I_L2302_115, 0)
 2304.                      $I_L2302_115 = 1 + $I_L2302_115
 2302.                      if ( $I_L2302_115 >= -1 + $i_S7 ) exit
 2302.                   enddo
 2302.                endif
 2305.                $i2_S9 = -1 + ini($i_S7)
 2307.                if ( kmaxloc > 0 ) then
 2309.                   $SC_msperproc_I8 = (msperproc%base_addr)($i_S7, 0)
 2308.                   if ( $SC_msperproc_I8 > 0 ) then
 2306.                      $I_L2306_179 = 0
 2306.                      do
 2307.                         $I_L2307_167 = 0
 2307.                         do
 2308.                            $F_A38 = $SC_msperproc_I8
 2308.                            $I_L2308_135 = 0
 2308. !dir$ ivdep
 2308.                            do
 2308.                               sint(i1 + $I_L2308_135 + 1, 1 + $I_L2307_167, 1 + $I_L2306_179) = sintaux($i2_S9 + $I_L2308_135 + $SC_msperproc_I8 * $I_L2307_167 + kmaxloc * $SC_msperproc_I8 * $I_L2306_179 + 1)
 2308.                               $I_L2308_135 = 1 + $I_L2308_135
 2308.                               if ( $I_L2308_135 >= $F_A38 ) exit
 2308.                            enddo
 2310.                            $I_L2307_167 = 1 + $I_L2307_167
 2307.                            if ( $I_L2307_167 >= kmaxloc ) exit
 2307.                         enddo
 2311.                         $I_L2306_179 = 1 + $I_L2306_179
 2310.                         if ( $I_L2306_179 >= 4 ) exit
 2310.                      enddo
 2310.                   endif
 2309.                   $i2_S9 = ( $i2_S9 + $SC_msperproc_I8 * kmaxloc * 4 )
 2309.                endif
 2312.                if ( havesurf ) then
 2312.                   $F_A39 = (msperproc%base_addr)($i_S7, 0)
 2312.                   if ( (msperproc%base_addr)($i_S7, 0) > 0 ) then
 2312.                      $I_L2312_137 = 0
 2312. !dir$ ivdep
 2312.                      do
 2312.                         sint(i1 + $I_L2312_137 + 1, 1, 5) = sintaux($i2_S9 + $I_L2312_137 + 1)
 2312.                         $I_L2312_137 = 1 + $I_L2312_137
 2312.                         if ( $I_L2312_137 >= $F_A39 ) exit
 2312.                      enddo
 2312.                   endif
 2312.                endif
 2313.                $I_L2298_189 = 1 + $I_L2298_189
 2312.                if ( $I_L2298_189 >= $t_S13 ) exit
 2312.             enddo
 2312.          endif
 2314.          $F_A40 = t$164
 2314.          if ( t$164 > 0 ) then
 2314.             $I_L2314_185 = 0
 2314. !dir$ ivdep
 2314.             do
 2314.                $I_L2314_175 = 0
 2314.                do
 2314.                   $I_L2314_139 = 0
 2314.                   do
 2314.                      gint(1 + $I_L2314_139, 1 + $I_L2314_175, 1 + $I_L2314_185) = 0.0
 2314.                      $I_L2314_139 = 1 + $I_L2314_139
 2314.                      if ( $I_L2314_139 >= 3 ) exit
 2314.                   enddo
 2314.                   $I_L2314_175 = 1 + $I_L2314_175
 2314.                   if ( $I_L2314_175 >= 4 ) exit
 2314.                enddo
 2314.                $I_L2314_185 = 1 + $I_L2314_185
 2314.                if ( $I_L2314_185 >= $F_A40 ) exit
 2314.             enddo
 2314.          endif
 2315.          $I_L2315_141 = 0
 2315. !dir$ ivdep
 2315.          do
 2315.             gintsurf(1 + $I_L2315_141) = 0.0
 2315.             $I_L2315_141 = 1 + $I_L2315_141
 2315.             if ( $I_L2315_141 >= 2 ) exit
 2315.          enddo
 2316.          if ( kmaxloc > 0 ) then
 2317.             if ( -2 + mmax >= 0 ) then
 2316.                $I_L2316_181 = 0
 2316. !dir$ ivdep
 2316. !dir$ blocking_size( 64, 64 )
 2316.                do
 2318.                   $I_L2318_169 = 0
 2318. !dir$ blocking_size( 4, 4 )
 2318.                   do
 2317.                      $SCA_gint_I9 = gint(2, 1 + $I_L2318_169, 1 + $I_L2316_181)
 2317.                      $I_L2317_143 = 0
 2317. !dir$ unroll 4
 2317.                      do
 2318.                         $SCA_gint_I9 = $SCA_gint_I9 + sint(morder(2 + $I_L2317_143), 1 + $I_L2316_181, 1 + $I_L2318_169)
 2319.                         $I_L2317_143 = 1 + $I_L2317_143
 2319.                         if ( $I_L2317_143 >= -1 + mmax ) exit
 2319.                      enddo
 2317.                      gint(2, 1 + $I_L2318_169, 1 + $I_L2316_181) = $SCA_gint_I9
 2318.                      $I_L2318_169 = 1 + $I_L2318_169
 2317.                      if ( $I_L2318_169 >= 4 ) exit
 2317.                   enddo
 2320.                   $I_L2316_181 = 1 + $I_L2316_181
 2319.                   if ( $I_L2316_181 >= kmaxloc ) exit
 2319.                enddo
 2319.             endif
 2319.          endif
 2321.          if ( havesurf ) then
 2322.             if ( -2 + mmax >= 0 ) then
 2323.                $SC_gintsurf_I7 = gintsurf(2)
 2322.                $I_L2322_117 = 0
 2322. !dir$ ivdep
 2322.                do
 2323.                   $SC_gintsurf_I7 = $SC_gintsurf_I7 + sint(morder(2 + $I_L2322_117), 1, 5)
 2324.                   $I_L2322_117 = 1 + $I_L2322_117
 2322.                   if ( $I_L2322_117 >= -1 + mmax ) exit
 2322.                enddo
 2323.                gintsurf(2) = $SC_gintsurf_I7
 2323.             endif
 2334.             gintsurf(1) = sint(1, 1, 5)
 2334.          endif
 2326.          $F_A41 = kmaxloc
 2326.          if ( kmaxloc > 0 ) then
 2326.             $I_L2326_145 = 0
 2326. !dir$ ivdep
 2326.             do
 2326.                gint(1, 1, 1 + $I_L2326_145) = sint(1, 1 + $I_L2326_145, 1)
 2326.                $I_L2326_145 = 1 + $I_L2326_145
 2326.                if ( $I_L2326_145 >= $F_A41 ) exit
 2326.             enddo
 2326.          endif
 2327.          $F_A42 = kmaxloc
 2327.          if ( kmaxloc > 0 ) then
 2327.             $I_L2327_147 = 0
 2327. !dir$ ivdep
 2327.             do
 2327.                gint(1, 2, 1 + $I_L2327_147) = sint(1, 1 + $I_L2327_147, 2)
 2327.                $I_L2327_147 = 1 + $I_L2327_147
 2327.                if ( $I_L2327_147 >= $F_A42 ) exit
 2327.             enddo
 2327.          endif
 2328.          $F_A43 = kmaxloc
 2328.          if ( kmaxloc > 0 ) then
 2328.             $I_L2328_149 = 0
 2328. !dir$ ivdep
 2328.             do
 2328.                gint(1, 3, 1 + $I_L2328_149) = sint(1, 1 + $I_L2328_149, 3)
 2328.                $I_L2328_149 = 1 + $I_L2328_149
 2328.                if ( $I_L2328_149 >= $F_A43 ) exit
 2328.             enddo
 2328.          endif
 2329.          $F_A44 = kmaxloc
 2329.          if ( kmaxloc > 0 ) then
 2329.             $I_L2329_151 = 0
 2329. !dir$ ivdep
 2329.             do
 2329.                gint(1, 4, 1 + $I_L2329_151) = sint(1, 1 + $I_L2329_151, 4)
 2329.                $I_L2329_151 = 1 + $I_L2329_151
 2329.                if ( $I_L2329_151 >= $F_A44 ) exit
 2329.             enddo
 2329.          endif
 2330.          $F_A45 = kmaxloc
 2330.          if ( kmaxloc > 0 ) then
 2330.             $I_L2330_153 = 0
 2330. !dir$ ivdep
 2330.             do
 2330.                gint(3, 1, 1 + $I_L2330_153) = 7.0710678118654757e-1 * x(1, 1 + $I_L2330_153)
 2330.                $I_L2330_153 = 1 + $I_L2330_153
 2330.                if ( $I_L2330_153 >= $F_A45 ) exit
 2330.             enddo
 2330.          endif
 2331.          $F_A46 = kmaxloc
 2331.          if ( kmaxloc > 0 ) then
 2331.             $I_L2331_155 = 0
 2331. !dir$ ivdep
 2331.             do
 2331.                gint(3, 2, 1 + $I_L2331_155) = 7.0710678118654757e-1 * y(1, 1 + $I_L2331_155)
 2331.                $I_L2331_155 = 1 + $I_L2331_155
 2331.                if ( $I_L2331_155 >= $F_A46 ) exit
 2331.             enddo
 2331.          endif
 2332.          $F_A47 = kmaxloc
 2332.          if ( kmaxloc > 0 ) then
 2332.             $I_L2332_157 = 0
 2332. !dir$ ivdep
 2332.             do
 2332.                gint(3, 3, 1 + $I_L2332_157) = 7.0710678118654757e-1 * w(1, 1 + $I_L2332_157)
 2332.                $I_L2332_157 = 1 + $I_L2332_157
 2332.                if ( $I_L2332_157 >= $F_A47 ) exit
 2332.             enddo
 2332.          endif
 2333.          $F_A48 = kmaxloc
 2333.          if ( kmaxloc > 0 ) then
 2333.             $I_L2333_159 = 0
 2333. !dir$ ivdep
 2333.             do
 2333.                gint(3, 4, 1 + $I_L2333_159) = 7.0710678118654757e-1 * r(1, 1 + $I_L2333_159)
 2333.                $I_L2333_159 = 1 + $I_L2333_159
 2333.                if ( $I_L2333_159 >= $F_A48 ) exit
 2333.             enddo
 2333.          endif
 2335.          comm = 1140850688
 2336.          if ( myid /= 0 ) then
 2337.             t$1102 = 12 * kmaxloc
 2337.             call mpi_isend( gint(1, 1, 1), t$1102, 1275070495, 0, 97, comm, request, ierr )
 2338.             call mpi_wait( request, status(1), ierr )
 2338.             goto 10
 2338.          else
 2340.             requestr(0) = 738197504
 2341.             $t_S20 = ngroups_four
 2341.             if ( -2 + ngroups_four >= 0 ) then
 2341.                $I_L2341_119 = 0
 2341.                do
 2342.                   k = (first_proc_four%base_addr)(2 + $I_L2341_119, 0)
 2343.                   $k1_S18 = (kfirst_four%base_addr)(k, 0)
 2344.                   $k2_S19 = (klast_four%base_addr)(k, 0)
 2345.                   t$1106 = -12 * $k1_S18 + 12 * $k2_S19 + 12
 2345.                   call mpi_irecv( gint(1, 1, $k1_S18), t$1106, 1275070495, k, 97, comm, requestr(1 + $I_L2341_119), ierr )
 2347.                   $I_L2341_119 = 1 + $I_L2341_119
 2347.                   if ( $I_L2341_119 >= -1 + $t_S20 ) exit
 2347.                enddo
 2347.             endif
 2348.             $t_S22 = -1 + ngroups_four
 2348.             if ( -1 + ngroups_four > 0 ) then
 2348.                $I_L2348_121 = 0
 2348.                do
 2349.                   call mpi_waitany( ngroups_four, requestr(0), index, status(1), ierr )
 2350.                   $I_L2348_121 = 1 + $I_L2348_121
 2350.                   if ( $I_L2348_121 >= $t_S22 ) exit
 2350.                enddo
 2350.             endif
 2351.             if ( kmaxnew > 0 ) then
 2351.                $I_L2351_123 = 0
 2351. !dir$ ivdep
 2351.                do
 2352.                   $gx_WR0_R0 = gint(3, 1, 1 + $I_L2351_123)
 2353.                   $gy_WR0_R1 = gint(3, 2, 1 + $I_L2351_123)
 2353.                   gy(1 + $I_L2351_123) = $gy_WR0_R1
 2354.                   $gw_WR0_R2 = gint(3, 3, 1 + $I_L2351_123)
 2355.                   $gr_WR0_R3 = gint(3, 4, 1 + $I_L2351_123)
 2355.                   gr(1 + $I_L2351_123) = $gr_WR0_R3
 2356.                   gmx = gmx + $gx_WR0_R0 * del(1 + $I_L2351_123)
 2357.                   gmy = gmy + $gy_WR0_R1 * del(1 + $I_L2351_123)
 2358.                   gmw = gmw + $gw_WR0_R2 * del(1 + $I_L2351_123)
 2359.                   gmr = gmr + $gr_WR0_R3 * del(1 + $I_L2351_123)
 2360.                   $I_L2351_123 = 1 + $I_L2351_123
 2351.                   if ( $I_L2351_123 >= kmaxnew ) exit
 2351.                enddo
 2362.                $I_L2362_171 = 0
 2362.                do
 2361.                   $SCA_del_I10 = del(1 + $I_L2362_171)
 2361.                   $I_L2361_125 = 0
 2361. !dir$ ivdep
 2361.                   do
 2363.                      sv(1 + $I_L2361_125) = sv(1 + $I_L2361_125) + gint(1, 1 + $I_L2361_125, 1 + $I_L2362_171) * $SCA_del_I10
 2364.                      av(1 + $I_L2361_125) = av(1 + $I_L2361_125) + gint(2, 1 + $I_L2361_125, 1 + $I_L2362_171) * $SCA_del_I10
 2366.                      $I_L2361_125 = 1 + $I_L2361_125
 2362.                      if ( $I_L2361_125 >= 4 ) exit
 2362.                   enddo
 2365.                   $I_L2362_171 = 1 + $I_L2362_171
 2365.                   if ( $I_L2362_171 >= kmaxnew ) exit
 2365.                enddo
 2365.             endif
 2367.             $F_A49 = t$164
 2367.             if ( t$164 > 0 ) then
 2367.                $I_L2367_187 = 0
 2367.                do
 2367.                   $I_L2367_177 = 0
 2367.                   do
 2367.                      $I_L2367_161 = 0
 2367. !dir$ ivdep
 2367.                      do
 2367.                         gint(1 + $I_L2367_161, 1 + $I_L2367_177, 1 + $I_L2367_187) = _sqrt( gint(1 + $I_L2367_161, 1 + $I_L2367_177, 1 + $I_L2367_187) )
 2367.                         $I_L2367_161 = 1 + $I_L2367_161
 2367.                         if ( $I_L2367_161 >= 2 ) exit
 2367.                      enddo
 2367.                      $I_L2367_177 = 1 + $I_L2367_177
 2367.                      if ( $I_L2367_177 >= 4 ) exit
 2367.                   enddo
 2367.                   $I_L2367_187 = 1 + $I_L2367_187
 2367.                   if ( $I_L2367_187 >= $F_A49 ) exit
 2367.                enddo
 2367.             endif
 2369.             gmq = 7.0710678118654757e-1 * q(1)
 2370.             sq = _sqrt( gintsurf(1) )
 2371.             aq = _sqrt( gintsurf(2) )
 2375.             if ( gmx /= 0.0 .orelse. gmw /= 0.0 ) then
 2376.                 _substr(line,1,256) = '***WARNING*** Either gmx('
 2376.                lastused = _ltrim(  _substr(line,1,256) )
 2377.                _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,11), Null_Arg, Null_Arg, t$172,  _substr(t$171,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( gmx, 0x804060300000000L ) ) )
 2378.                 _substr($as_A0,1,256) = //(  _substr(line,1,_ltrim(  _substr(line,1,256) )), ') or gmw (' )
 2378.                 _substr(line,1,256) =  _substr($as_A0,1,256)
 2378.                lastused = _ltrim(  _substr(line,1,256) )
 2379.                _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,11), Null_Arg, Null_Arg, t$174,  _substr(t$173,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( gmw, 0x804060300000000L ) ) )
 2380.                 _substr($as_A1,1,256) = //(  _substr(line,1,_ltrim(  _substr(line,1,256) )), ') not zero' )
 2380.                 _substr(line,1,256) =  _substr($as_A1,1,256)
 2380.                $lastused_S29 = _ltrim(  _substr(line,1,256) )
 2381.                 _substr(t$1145,1,11) = '**(rmsgt)**'
 2381.                call msgone(  _substr(t$1145,1,11),  _substr(line,1,max( 0, $lastused_S29 )) )
 2178.                _free( t$306 )
 2178.             else
 2387.                 _substr(line,1,256) = ' State of the atmosphere at'
 2387.                lastused = _ltrim(  _substr(line,1,256) )
 2388.                if ( 0 >= idatec%dim_1%EX ) then
 2388.                    _substr(t$1147,1,16) = 'Diagnostics.f90'
 2388.                    _substr(t$1148,1,7) = 'IDATEC'
 2388.                   t$1149 = idatec%dim_1%EX
 2388.                   call _bounds_error(  _substr(t$1147,1,16), 2891,  _substr(t$1148,1,7), 1, 1, t$1149, 1, t$1146 )
 2388.                endif
 2388.                _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,8), Null_Arg, Null_Arg, t$176,  _substr(t$175,1,18), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (idatec%base_addr)(1, 0), 0x2000200000000L ) ) )
 2389.                lastused = 8 + lastused
 2391.                if ( 3 > idatec%dim_1%EX ) then
 2391.                    _substr(t$1151,1,16) = 'Diagnostics.f90'
 2391.                    _substr(t$1152,1,7) = 'IDATEC'
 2391.                   t$1149 = idatec%dim_1%EX
 2391.                   call _bounds_error(  _substr(t$1151,1,16), 2894,  _substr(t$1152,1,7), 1, 1, t$1149, 3, t$1150 )
 2391.                endif
 2391.                if ( 2 > idatec%dim_1%EX ) then
 2391.                    _substr(t$1154,1,16) = 'Diagnostics.f90'
 2391.                    _substr(t$1155,1,7) = 'IDATEC'
 2391.                   t$1156 = idatec%dim_1%EX
 2391.                   call _bounds_error(  _substr(t$1154,1,16), 2894,  _substr(t$1155,1,7), 1, 1, t$1156, 2, t$1153 )
 2391.                endif
 2391.                if ( 4 > idatec%dim_1%EX ) then
 2391.                    _substr(t$1158,1,16) = 'Diagnostics.f90'
 2391.                    _substr(t$1159,1,7) = 'IDATEC'
 2391.                   t$1160 = idatec%dim_1%EX
 2391.                   call _bounds_error(  _substr(t$1158,1,16), 2894,  _substr(t$1159,1,7), 1, 1, t$1160, 4, t$1157 )
 2391.                endif
 2390.                _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,11), Null_Arg, Null_Arg, t$178,  _substr(t$177,1,20), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (idatec%base_addr)(3, 0), 0x2000200000000L ), _iotype( (idatec%base_addr)(2, 0), 0x2000200000000L ), _iotype( (idatec%base_addr)(4, 0), 0x2000200000000L ) ) )
 2393.                 _substr(t$1161,1,11) = '**(rmsgt)**'
 2393.                call msgone(  _substr(t$1161,1,11),  _substr(line,1,max( 0, 11 + lastused )) )
 2397.                 _substr(t$1162,1,11) = '**(rmsgt)**'
 2397.                 _substr(t$1163,1,40) = ' Layers and average means and variances:'
 2397.                call msgone(  _substr(t$1162,1,11),  _substr(t$1163,1,40) )
 2398.                 _substr(line,1,256) = ' LYR  Z.S. DIV.  Z.A. DIV.  Z.S. VOR.  Z.A. VOR.  G.M. TEM.  Z.S. TEM.  Z.A. TEM.  G.M. S.H.  Z.S. S.H.  Z.A. S.H.'
 2400.                 _substr(t$1164,1,11) = '**(rmsgt)**'
 2400.                call msgone(  _substr(t$1164,1,11),  _substr(line,1,_ltrim(  _substr(line,1,256) )) )
 2401.                $t_S28 = kmaxnew
 2401.                if ( kmaxnew > 0 ) then
 2401.                   $I_L2401_127 = 0
 2401.                   do
 2402.                      l = ( kmaxnew + -$I_L2401_127 )
 2404.                      if ( ( kmaxnew + -$I_L2401_127 ) <= 0 .or. ( kmaxnew + -$I_L2401_127 ) > t$164 ) then
 2404.                          _substr(t$1169,1,16) = 'Diagnostics.f90'
 2404.                          _substr(t$1170,1,5) = 'GINT'
 2404.                         t$1149 = kmaxnew + -$I_L2401_127
 2404.                         call _bounds_error(  _substr(t$1169,1,16), 2907,  _substr(t$1170,1,5), 3, 1, t$164, t$1149, t$1168 )
 2404.                      endif
 2404.                      if ( l <= 0 .or. l > t$164 ) then
 2404.                          _substr(t$1172,1,16) = 'Diagnostics.f90'
 2404.                          _substr(t$1173,1,5) = 'GINT'
 2404.                         t$1156 = l
 2404.                         call _bounds_error(  _substr(t$1172,1,16), 2907,  _substr(t$1173,1,5), 3, 1, t$164, t$1156, t$1171 )
 2404.                      endif
 2405.                      if ( l <= 0 .or. l > t$164 ) then
 2405.                          _substr(t$1175,1,16) = 'Diagnostics.f90'
 2405.                          _substr(t$1176,1,5) = 'GINT'
 2405.                         t$1160 = l
 2405.                         call _bounds_error(  _substr(t$1175,1,16), 2908,  _substr(t$1176,1,5), 3, 1, t$164, t$1160, t$1174 )
 2405.                      endif
 2405.                      if ( l <= 0 .or. l > t$164 ) then
 2405.                          _substr(t$1178,1,16) = 'Diagnostics.f90'
 2405.                          _substr(t$1179,1,5) = 'GINT'
 2405.                         t$1180 = l
 2405.                         call _bounds_error(  _substr(t$1178,1,16), 2908,  _substr(t$1179,1,5), 3, 1, t$164, t$1180, t$1177 )
 2405.                      endif
 2405.                      if ( l <= 0 .or. l > t$164 ) then
 2405.                          _substr(t$1182,1,16) = 'Diagnostics.f90'
 2405.                          _substr(t$1183,1,4) = 'GY'
 2405.                         t$1184 = l
 2405.                         call _bounds_error(  _substr(t$1182,1,16), 2908,  _substr(t$1183,1,3), 1, 1, t$164, t$1184, t$1181 )
 2405.                      endif
 2405.                      if ( l <= 0 .or. l > t$164 ) then
 2405.                          _substr(t$1186,1,16) = 'Diagnostics.f90'
 2405.                          _substr(t$1187,1,5) = 'GINT'
 2405.                         t$1188 = l
 2405.                         call _bounds_error(  _substr(t$1186,1,16), 2908,  _substr(t$1187,1,5), 3, 1, t$164, t$1188, t$1185 )
 2405.                      endif
 2405.                      if ( l <= 0 .or. l > t$164 ) then
 2405.                          _substr(t$1190,1,16) = 'Diagnostics.f90'
 2405.                          _substr(t$1191,1,5) = 'GINT'
 2405.                         t$1192 = l
 2405.                         call _bounds_error(  _substr(t$1190,1,16), 2908,  _substr(t$1191,1,5), 3, 1, t$164, t$1192, t$1189 )
 2405.                      endif
 2406.                      if ( l <= 0 .or. l > t$164 ) then
 2406.                          _substr(t$1194,1,16) = 'Diagnostics.f90'
 2406.                          _substr(t$1195,1,4) = 'GR'
 2406.                         t$1196 = l
 2406.                         call _bounds_error(  _substr(t$1194,1,16), 2909,  _substr(t$1195,1,3), 1, 1, t$164, t$1196, t$1193 )
 2406.                      endif
 2406.                      if ( l <= 0 .or. l > t$164 ) then
 2406.                          _substr(t$1198,1,16) = 'Diagnostics.f90'
 2406.                          _substr(t$1199,1,5) = 'GINT'
 2406.                         t$1200 = l
 2406.                         call _bounds_error(  _substr(t$1198,1,16), 2909,  _substr(t$1199,1,5), 3, 1, t$164, t$1200, t$1197 )
 2406.                      endif
 2406.                      if ( l <= 0 .or. l > t$164 ) then
 2406.                          _substr(t$1202,1,16) = 'Diagnostics.f90'
 2406.                          _substr(t$1203,1,5) = 'GINT'
 2406.                         t$1204 = l
 2406.                         call _bounds_error(  _substr(t$1202,1,16), 2909,  _substr(t$1203,1,5), 3, 1, t$164, t$1204, t$1201 )
 2406.                      endif
 2403.                      $_IOitem_P0(0) = gint(1, 1, l)
 2403.                      $_IOitem_P0(1) = gint(2, 1, l)
 2403.                      $_IOitem_P0(2) = gint(1, 3, l)
 2403.                      $_IOitem_P0(3) = gint(2, 3, l)
 2403.                      $_IOitem_P0(4) = gy(l)
 2403.                      $_IOitem_P0(5) = gint(1, 2, l)
 2403.                      $_IOitem_P0(6) = gint(2, 2, l)
 2403.                      $_IOitem_P0(7) = gr(l)
 2403.                      $_IOitem_P0(8) = gint(1, 4, l)
 2403.                      $_IOitem_P0(9) = gint(2, 4, l)
 2403.                      _fwrite( _clist( 0, 0, 3,  _substr(line,1,114), Null_Arg, Null_Arg, t$180,  _substr(t$179,1,41), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( l, 0x2000200000000L ), _iotype( $_IOitem_P0(:( 0, 9, 1 )), 0x804060300000000L ) ) )
 2407.                       _substr(t$1205,1,11) = '**(rmsgt)**'
 2407.                      call msgone(  _substr(t$1205,1,11),  _substr(line,1,114) )
 2408.                      $I_L2401_127 = 1 + $I_L2401_127
 2407.                      if ( $I_L2401_127 >= $t_S28 ) exit
 2407.                   enddo
 2407.                endif
 2409.                $I_L2409_163 = 0
 2409. !dir$ ivdep
 2409.                do
 2409.                   sv(1 + $I_L2409_163) = _sqrt( sv(1 + $I_L2409_163) )
 2410.                   av(1 + $I_L2409_163) = _sqrt( av(1 + $I_L2409_163) )
 2409.                   $I_L2409_163 = 1 + $I_L2409_163
 2409.                   if ( $I_L2409_163 >= 4 ) exit
 2409.                enddo
 2411.                $_IOitem_P1(0) = sv(1)
 2411.                $_IOitem_P1(1) = av(1)
 2411.                $_IOitem_P1(2) = sv(3)
 2411.                $_IOitem_P1(3) = av(3)
 2411.                $_IOitem_P1(4) = gmy
 2411.                $_IOitem_P1(5) = sv(2)
 2411.                $_IOitem_P1(6) = av(2)
 2411.                $_IOitem_P1(7) = gmr
 2411.                $_IOitem_P1(8) = sv(4)
 2411.                $_IOitem_P1(9) = av(4)
 2411.                _fwrite( _clist( 0, 0, 3,  _substr(line,1,114), Null_Arg, Null_Arg, t$182,  _substr(t$181,1,41), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' AVE', 0x800600000000L ), _iotype( $_IOitem_P1(:( 0, 9, 1 )), 0x804060300000000L ) ) )
 2413.                 _substr(t$1206,1,11) = '**(rmsgt)**'
 2413.                call msgone(  _substr(t$1206,1,11),  _substr(line,1,110) )
 2414.                 _substr(t$1207,1,11) = '**(rmsgt)**'
 2414.                 _substr(t$1208,1,41) = ' Log(surface pressure) mean and variance:'
 2414.                call msgone(  _substr(t$1207,1,11),  _substr(t$1208,1,41) )
 2415.                _fwrite( _clist( 0, 0, 3,  _substr(line,1,60), Null_Arg, Null_Arg, t$184,  _substr(t$183,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '  G.M.LNP.=', 0x800600000000L ), _iotype( gmq, 0x804060300000000L ), _iotype( '; Z.S.LNP.=', 0x800600000000L ), _iotype( sq, 0x804060300000000L ), _iotype( '; Z.A.LNP.=', 0x800600000000L ), _iotype( aq, 0x804060300000000L ) ) )
 2416.                 _substr(t$1209,1,11) = '**(rmsgt)**'
 2416.                call msgone(  _substr(t$1209,1,11),  _substr(line,1,60) )
 2416.    10          continue
 2178.                _free( t$306 )
 2178.             endif
 2178.          endif
 2178.       endif
 2419.       return
 2419.       end
 2419.       
 2522.       
 2522.       subroutine globme( a, dthet, costhe, cf, title, nufr, nuto )
 2423.       t$185 = imaxnew
 2423.       t$186 = myjmax_d
 2430.       t$349 = _zla( 0, imaxnew )
 2423.       t$350 = _zla( 0, imaxnew )
 2430.       t$351 = _zla( 0, myjmax_d )
 2423.       t$352 = _zla( 0, imaxnew ) * _zla( 0, myjmax_d )
 2423.       t$187 = jmaxnew
 2431.       t$353 = _zla( 0, jmaxnew )
 2423.       t$188 = ( -1 + maxnodes )
 2423.       t$354 = maxnodes
 2439.       t$355 = _zla( 0, maxnodes )
 2439.       t$358 = 4 * _zla( 0, maxnodes )
 2441.       t$359 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 )
 2441.       t$361 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8
 2442.       t$362 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8
 2442.       t$364 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew )
 2444.       t$365 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew )
 2444.       t$367 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 8 * _zla( 0, myjmax_d )
 2444.       t$368 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 8 * _zla( 0, myjmax_d )
 2444.       t$370 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 16 * _zla( 0, myjmax_d )
 2443.       t$371 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 16 * _zla( 0, myjmax_d )
 2443.       t$373 = 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 16 * _zla( 0, myjmax_d ) + 16 * _zla( 0, jmaxnew )
 2423.       t$356 = int( _alloc( 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 16 * _zla( 0, myjmax_d ) + 16 * _zla( 0, jmaxnew ) ), 8 )
 2439.       t$357 = t$356
 2441.       t$360 = t$356 + 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 )
 2442.       t$363 = t$356 + 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8
 2444.       t$366 = t$356 + 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew )
 2444.       t$369 = t$356 + 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 8 * _zla( 0, myjmax_d )
 2443.       t$372 = t$356 + 8 * ( ( 7 + 4 * _zla( 0, maxnodes ) ) / 8 ) + _zla( 0, imaxnew ) * _zla( 0, myjmax_d ) * 8 + 8 * _zla( 0, jmaxnew ) + 16 * _zla( 0, myjmax_d )
 2449.       $F_A34 = jmaxnew
 2449.       if ( jmaxnew > 0 ) then
 2449.          $I_L2449_68 = 0
 2449. !dir$ ivdep
 2449.          do
 2449.             zz(1 + $I_L2449_68) = 0.0
 2449.             $I_L2449_68 = 1 + $I_L2449_68
 2449.             if ( $I_L2449_68 >= $F_A34 ) exit
 2449.          enddo
 2449.       endif
 2450.       $F_A35 = jmaxnew
 2450.       if ( jmaxnew > 0 ) then
 2450.          $I_L2450_70 = 0
 2450. !dir$ ivdep
 2450.          do
 2450.             z(1 + $I_L2450_70) = 0.0
 2450.             $I_L2450_70 = 1 + $I_L2450_70
 2450.             if ( $I_L2450_70 >= $F_A35 ) exit
 2450.          enddo
 2450.       endif
 2451.       $F_A36 = myjmax_d
 2451.       $F_A37 = imaxnew
 2451.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 2451.          $I_L2451_90 = 0
 2451.          do
 2451.             $I_L2451_72 = 0
 2451. !dir$ ivdep
 2451.             do
 2451.                work(1 + $I_L2451_72, 1 + $I_L2451_90) = 0.0
 2451.                $I_L2451_72 = 1 + $I_L2451_72
 2451.                if ( $I_L2451_72 >= $F_A37 ) exit
 2451.             enddo
 2451.             $I_L2451_90 = 1 + $I_L2451_90
 2451.             if ( $I_L2451_90 >= $F_A36 ) exit
 2451.          enddo
 2451.       endif
 2452.       $F_A38 = myjmax_d
 2452.       if ( myjmax_d > 0 ) then
 2452.          $I_L2452_74 = 0
 2452. !dir$ ivdep
 2452.          do
 2452.             z1(1 + $I_L2452_74) = 0.0
 2452.             $I_L2452_74 = 1 + $I_L2452_74
 2452.             if ( $I_L2452_74 >= $F_A38 ) exit
 2452.          enddo
 2459.          if ( imaxnew > 0 ) then
 2458.             $I_L2458_88 = 0
 2458.             do
 2459.                $I_L2459_56 = 0
 2459. !dir$ ivdep
 2459.                do
 2460.                   work(1 + $I_L2459_56, 1 + $I_L2458_88) = a(1 + $I_L2459_56, 1 + $I_L2458_88) * cf
 2461.                   $I_L2459_56 = 1 + $I_L2459_56
 2459.                   if ( $I_L2459_56 >= imaxnew ) exit
 2459.                enddo
 2462.                $I_L2458_88 = 1 + $I_L2458_88
 2461.                if ( $I_L2458_88 >= myjmax_d ) exit
 2461.             enddo
 2461.          endif
 2461.       endif
 2453.       $F_A39 = myjmax_d
 2453.       if ( myjmax_d > 0 ) then
 2453.          $I_L2453_76 = 0
 2453. !dir$ ivdep
 2453.          do
 2453.             z2(1 + $I_L2453_76) = 0.0
 2453.             $I_L2453_76 = 1 + $I_L2453_76
 2453.             if ( $I_L2453_76 >= $F_A39 ) exit
 2453.          enddo
 2453.       endif
 2455.       $F_A40 = maxnodes
 2455.       if ( maxnodes > 0 ) then
 2455.          $I_L2455_78 = 0
 2455. !dir$ ivdep
 2455.          do
 2455.             displ($I_L2455_78) = 0
 2455.             $I_L2455_78 = 1 + $I_L2455_78
 2455.             if ( $I_L2455_78 >= $F_A40 ) exit
 2455.          enddo
 2455.       endif
 2463.       t$1216 = imaxnew * myjmax_d
 2463.       call cnvray( work(1, 1), t$1216, nufr, nuto )
 2467.       if ( myjmax_d > 0 ) then
 2470.          if ( imaxnew > 0 ) then
 2467.             $I_L2467_84 = 0
 2467. !dir$ ivdep
 2467.             do
 2468.                z1(1 + $I_L2467_84) = 0.0
 2469.                z2(1 + $I_L2467_84) = 0.0
 2474.                $I_L2467_84 = 1 + $I_L2467_84
 2473.                if ( $I_L2467_84 >= myjmax_d ) exit
 2473.             enddo
 2467.             $I_L2467_92 = 0
 2467.             do
 2470.                $SCA_z1_I2 = z1(1 + $I_L2467_92)
 2470.                $SCA_z2_I3 = z2(1 + $I_L2467_92)
 2470.                $I_L2470_86 = 0
 2470. !dir$ ivdep
 2470.                do
 2471.                   $SCA_z1_I2 = $SCA_z1_I2 + work(1 + $I_L2470_86, 1 + $I_L2467_92)
 2472.                   $SCA_z2_I3 = $SCA_z2_I3 + work(1 + $I_L2470_86, 1 + $I_L2467_92) * work(1 + $I_L2470_86, 1 + $I_L2467_92)
 2473.                   $I_L2470_86 = 1 + $I_L2470_86
 2470.                   if ( $I_L2470_86 >= imaxnew ) exit
 2470.                enddo
 2470.                z2(1 + $I_L2467_92) = $SCA_z2_I3
 2470.                z1(1 + $I_L2467_92) = $SCA_z1_I2
 2474.                $I_L2467_92 = 1 + $I_L2467_92
 2473.                if ( $I_L2467_92 >= myjmax_d ) exit
 2473.             enddo
 2473.          else
 2467.             $I_L2467_66 = 0
 2467. !dir$ ivdep
 2467.             do
 2468.                z1(1 + $I_L2467_66) = 0.0
 2469.                z2(1 + $I_L2467_66) = 0.0
 2474.                $I_L2467_66 = 1 + $I_L2467_66
 2473.                if ( $I_L2467_66 >= myjmax_d ) exit
 2473.             enddo
 2473.          endif
 2473.       endif
 2475.       displ(0) = 0
 2476.       if ( -1 + maxnodes > 0 ) then
 2476.          $displ_WR0_R0 = 0
 2476.          $I_L2476_58 = 0
 2476. !dir$ unroll 4
 2476.          do
 2477.             $displ_WR0_R0 = $displ_WR0_R0 + (nlatsinproc_d%base_addr)($I_L2476_58, 0)
 2477.             displ(1 + $I_L2476_58) = $displ_WR0_R0
 2478.             $I_L2476_58 = 1 + $I_L2476_58
 2476.             if ( $I_L2476_58 >= -1 + maxnodes ) exit
 2476.          enddo
 2476.       endif
 2482.       if ( maxnodes == 1 ) then
 2483.          $F_A41 = t$187
 2483.          if ( t$187 > 0 ) then
 2483.             $I_L2483_80 = 0
 2483. !dir$ ivdep
 2483.             do
 2483.                z(1 + $I_L2483_80) = z1(1 + $I_L2483_80)
 2483.                $I_L2483_80 = 1 + $I_L2483_80
 2483.                if ( $I_L2483_80 >= $F_A41 ) exit
 2483.             enddo
 2483.          endif
 2484.          $F_A42 = t$187
 2484.          if ( t$187 > 0 ) then
 2484.             $I_L2484_82 = 0
 2484. !dir$ ivdep
 2484.             do
 2484.                zz(1 + $I_L2484_82) = z2(1 + $I_L2484_82)
 2484.                $I_L2484_82 = 1 + $I_L2484_82
 2484.                if ( $I_L2484_82 >= $F_A42 ) exit
 2484.             enddo
 2484.          endif
 2484.       else
 2486.          call mpi_gatherv( z1(1), myjmax_d, 1275070495, z(1), (nlatsinproc_d%base_addr)(0, 0), displ(0), 1275070495, 0, 1140850688, ierr )
 2488.          call mpi_gatherv( z2(1), myjmax_d, 1275070495, zz(1), (nlatsinproc_d%base_addr)(0, 0), displ(0), 1275070495, 0, 1140850688, ierr )
 2488.       endif
 2491.       if ( myid == 0 ) then
 2492.          gm = 0.0
 2493.          if ( jmaxnew > 0 ) then
 2493.             $I_L2493_60 = 0
 2493. !dir$ ivdep
 2493.             do
 2494.                gm = gm + ( z(1 + $I_L2493_60) * costhe(1 + $I_L2493_60) * dthet(1 + $I_L2493_60) * 1.0/imaxnew )
 2495.                $I_L2493_60 = 1 + $I_L2493_60
 2493.                if ( $I_L2493_60 >= jmaxnew ) exit
 2493.             enddo
 2493.          endif
 2499.          gm = 5.0e-1 * gm
 2501.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,16), Null_Arg, Null_Arg, t$190,  _substr(t$189,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( gm, 0x804060300000000L ) ) )
 2502.           _substr(line,1,256) = //(  _substr(title,1,40), //( ' Glob.Mean=',  _substr(c0,1,16) ) )
 2506.          if ( jmaxnew > 0 ) then
 2506.             $I_L2506_62 = 0
 2506. !dir$ ivdep
 2506.             do
 2507.                z(1 + $I_L2506_62) = ( ( zz(1 + $I_L2506_62) + z(1 + $I_L2506_62) * gm * -2.0 ) * 1.0/imaxnew ) + gm * gm
 2508.                $I_L2506_62 = 1 + $I_L2506_62
 2506.                if ( $I_L2506_62 >= jmaxnew ) exit
 2506.             enddo
 2506.          endif
 2512.          gm = 0.0
 2513.          if ( jmaxnew > 0 ) then
 2513.             $I_L2513_64 = 0
 2513. !dir$ ivdep
 2513.             do
 2514.                gm = gm + z(1 + $I_L2513_64) * costhe(1 + $I_L2513_64) * dthet(1 + $I_L2513_64)
 2515.                $I_L2513_64 = 1 + $I_L2513_64
 2513.                if ( $I_L2513_64 >= jmaxnew ) exit
 2513.             enddo
 2513.          endif
 2516.          gm = _sqrt( 5.0e-1 * gm )
 2517.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,16), Null_Arg, Null_Arg, t$192,  _substr(t$191,1,7), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( gm, 0x804060300000000L ) ) )
 2519.          _f90_adjustl(  _substr(t$1235,1,16),  _substr((aunits%base_addr)(nuto, 0),1,16) )
 2518.           _substr($as_A0,1,256) = //(  _substr(line,1,_ltrim(  _substr(line,1,256) )), //( '; Std.Dev.=', //(  _substr(c0,1,16), //( '; in units of ',  _substr(t$1235,1,_ltrim(  _substr(t$1235,1,16) )) ) ) ) )
 2518.           _substr(line,1,256) =  _substr($as_A0,1,256)
 2520.           _substr(t$1236,1,12) = '**(globme)**'
 2520.          call msgone(  _substr(t$1236,1,12),  _substr(line,1,_ltrim(  _substr(line,1,256) )) )
 2520.       endif
 2423.       _free( t$356 )
 2522.       return
 2522.       end
 2522.       
 2527.       
 2527.       subroutine reord( datum, dim2, work, lev, imask, tsea, ittl )
 2527.       t$193 = ibmax
 2527.       t$194 = dim2
 2527.       t$195 = jbmax
 2529.       t$374 = _zla( 0, ibmax )
 2527.       t$375 = _zla( 0, ibmax )
 2529.       t$376 = _zla( 0, dim2 )
 2527.       t$377 = _zla( 0, dim2 ) * _zla( 0, ibmax )
 2529.       t$378 = _zla( 0, jbmax )
 2527.       t$379 = _zla( 0, dim2 ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
 2527.       t$380 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 2541.       $case1_S3 =  _substr(ittl,1,4) == 'TD  '
 2542.       $case2_S4 =  _substr(ittl,1,4) == 'W1  ' .or.  _substr(ittl,1,4) == 'W2  ' .or.  _substr(ittl,1,4) == 'W3  '
 2543.       if ( jbmax > 0 ) then
 2545.          if ( ibmax > 0 ) then
 2549.             if ( $case1_S3 ) then
 2543.                $I_L2543_16 = 0
 2543.                do
 2544.                   $ncount_S2 = 0
 2545.                   $I_L2545_12 = 0
 2545. !dir$ ivdep
 2545.                   do
 2546.                      if ( imask(1 + $I_L2545_12, 1 + $I_L2543_16) > 0 ) then
 2547.                         $ncount_S2 = 1 + $ncount_S2
 2548.                         work(1 + $I_L2545_12, 1 + $I_L2543_16) = datum($ncount_S2, lev, 1 + $I_L2543_16)
 2548.                      else
 2550.                         work(1 + $I_L2545_12, 1 + $I_L2543_16) = abs( tsea(1 + $I_L2545_12, 1 + $I_L2543_16) )
 2550.                      endif
 2556.                      $I_L2545_12 = 1 + $I_L2545_12
 2555.                      if ( $I_L2545_12 >= ibmax ) exit
 2555.                   enddo
 2557.                   $I_L2543_16 = 1 + $I_L2543_16
 2556.                   if ( $I_L2543_16 >= jbmax ) exit
 2556.                enddo
 2556.             else
 2543.                $I_L2543_18 = 0
 2543.                do
 2544.                   $ncount_S2 = 0
 2545.                   $I_L2545_14 = 0
 2545. !dir$ ivdep
 2545.                   do
 2546.                      if ( imask(1 + $I_L2545_14, 1 + $I_L2543_18) > 0 ) then
 2547.                         $ncount_S2 = 1 + $ncount_S2
 2548.                         work(1 + $I_L2545_14, 1 + $I_L2543_18) = datum($ncount_S2, lev, 1 + $I_L2543_18)
 2548.                      else
 2551.                         work(1 + $I_L2545_14, 1 + $I_L2543_18) = cvmg( 1.0, 0.0, $case2_S4 )
 2551.                      endif
 2556.                      $I_L2545_14 = 1 + $I_L2545_14
 2555.                      if ( $I_L2545_14 >= ibmax ) exit
 2555.                   enddo
 2557.                   $I_L2543_18 = 1 + $I_L2543_18
 2556.                   if ( $I_L2543_18 >= jbmax ) exit
 2556.                enddo
 2556.             endif
 2556.          endif
 2556.       endif
 2558.       return
 2558.       end
 2558.       
 2770.       
 2770.       subroutine weprog( nedrct, neprog, nefcst, ifday, tod, idate, idatec, del, qgzs, lsmk, qlnp, qdiv, qrot, qq, qtmp, z0, gtsea, td0, capac0, w0, imask, temp2m, umes2m, uve10m, vve10m, roperm, namee, labeli, labelf, extw, exdw, trunc, lev )
 2565.       idate%dim_1%LB = 1
 2565.       idatec%dim_1%LB = 1
 2565.       del%dim_1%LB = 1
 2565.       qgzs%dim_1%LB = 1
 2565.       lsmk%dim_1%LB = 1
 2565.       qlnp%dim_1%LB = 1
 2565.       qdiv%dim_1%LB = 1
 2565.       qdiv%dim_2%LB = 1
 2565.       qrot%dim_1%LB = 1
 2565.       qrot%dim_2%LB = 1
 2565.       qq%dim_1%LB = 1
 2565.       qq%dim_2%LB = 1
 2565.       qtmp%dim_1%LB = 1
 2565.       qtmp%dim_2%LB = 1
 2565.       t$196 = ibmax
 2565.       t$197 = jbmax
 2585.       t$381 = _zla( 0, ibmax )
 2565.       t$382 = _zla( 0, ibmax )
 2585.       t$383 = _zla( 0, jbmax )
 2565.       t$384 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 2565.       t$385 = 2 * _zla( 0, ibmax )
 2565.       t$386 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 2
 2565.       t$387 = 3 * _zla( 0, ibmax )
 2565.       t$388 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 3
 2565.       t$389 = _len( trunc )
 2565.       t$390 = _len( lev )
   79.       if ( t$143 == 0 ) then
   79.          t$396(1) = 3
   79.          t$397(1) = 0
   79.          t$398(1) = 1
   79.          t$393(1) = int( loc( t$142 ), 8 )
   79.          t$394(1) = 0
   79.          t$395(1) = int( loc( t$391 ), 8 )
   79.          t$143 = __get_dynamic_type( 3, t$393(1), t$396(1), 1, t$394(1), t$395(1), t$397(1), t$398(1) )
   79.       endif
 2610.       fields%header%el_len = 768
 2610.       fields%header%assoc = 0
 2610.       fields%header%ptr_alloc = 0
 2610.       fields%header%p_or_a = 2
 2610.       fields%header%a_contig = 1
 2610.       fields%header%dv_versn = 2
 2610.       fields%header%dv_smunit = 64
 2610.       fields%header%d_type = 0
 2610.       fields%header%n_params = 0
 2610.       fields%header%pad_codim = 0
 2610.       fields%header%n_codim = 0
 2610.       fields%header%pad_dim = 0
 2610.       fields%header%n_dim = 1
 2610.       fields%header%d_type_idx = t$143
 2610.       fields%header%typ_code = 8
 2610.       fields%header%orig_base = 0
 2610.       fields%header%orig_size = 0
 2610.       fields%dim_1%LB = 1
 2610.       fields%dim_1%EX = 0
 2610.       fields%dim_1%SM = 1
   79.       interp_type%header%el_len = 32
   79.       interp_type%header%assoc = 0
   79.       interp_type%header%ptr_alloc = 0
   79.       interp_type%header%p_or_a = 2
   79.       interp_type%header%a_contig = 1
   79.       interp_type%header%dv_versn = 2
   79.       interp_type%header%dv_smunit = 32
   79.       interp_type%header%d_type = 0
   79.       interp_type%header%n_params = 0
   79.       interp_type%header%pad_codim = 0
   79.       interp_type%header%n_codim = 0
   79.       interp_type%header%pad_dim = 0
   79.       interp_type%header%n_dim = 1
   79.       interp_type%header%d_type_idx = 10
   79.       interp_type%header%typ_code = 131074
   79.       interp_type%header%orig_base = 0
   79.       interp_type%header%orig_size = 0
   79.       interp_type%dim_1%LB = 1
   79.       interp_type%dim_1%EX = 0
   79.       interp_type%dim_1%SM = 1
 2565.       t$198 = ( 2 * mnmax )
 2565.       t$199 = kmaxnew
 2605.       t$400 = max( 0, ( 2 * mnmax ) )
 2565.       t$401 = max( 0, ( 2 * mnmax ) )
 2605.       t$402 = max( 0, kmaxnew )
 2565.       t$403 = max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew )
 2605.       t$406 = max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew ) * 8
 2565.       t$407 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 2565.       t$408 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 6
 2604.       t$409 = 8 * ( ( 7 + max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew ) * 8 ) / 8 )
 2604.       t$411 = 8 * ( ( 7 + max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew ) * 8 ) / 8 ) + _zla( 0, ibmax ) * _zla( 0, jbmax ) * 48
 2565.       t$404 = int( _alloc( 8 * ( ( 7 + max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew ) * 8 ) / 8 ) + _zla( 0, ibmax ) * _zla( 0, jbmax ) * 48 ), 8 )
 2605.       t$405 = t$404
 2604.       t$410 = t$404 + 8 * ( ( 7 + max( 0, ( 2 * mnmax ) ) * max( 0, kmaxnew ) * 8 ) / 8 )
 2614.       if ( myid == 0 ) then
 2615.          t$1244 = 0
 2615.          t$1247 = 0
 2615.          if ( idate%header%a_contig == 1 ) then
 2615. !dir$ suppress (idate%base_addr)(1, 0)
 2615.             t$1243 = loc( (idate%base_addr)(1, 0) )
 2615.          else
 2615.             t$1244 = idate%dim_1%EX
 2615.             t$1247 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 2615.             $F_A33 = idate%dim_1%EX
 2615.             if ( idate%dim_1%EX > 0 ) then
 2615.                $SC_idate_I36 = idate%dim_1%SM
 2615.                $I_L2615_120 = 0
 2615. !dir$ ivdep
 2615.                do
 2615.                   t$1246(1 + $I_L2615_120) = (idate%base_addr)(1 + $I_L2615_120, 0)
 2615.                   $I_L2615_120 = 1 + $I_L2615_120
 2615.                   if ( $I_L2615_120 >= $F_A33 ) exit
 2615.                enddo
 2615.             endif
 2615. !dir$ suppress t$1246
 2615.             t$1243 = loc( t$1246 )
 2615.          endif
 2615.          t$1249 = 0
 2615.          t$1252 = 0
 2615.          if ( idatec%header%a_contig == 1 ) then
 2615. !dir$ suppress (idatec%base_addr)(1, 0)
 2615.             t$1248 = loc( (idatec%base_addr)(1, 0) )
 2615.          else
 2615.             t$1249 = idatec%dim_1%EX
 2615.             t$1252 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
 2615.             $F_A34 = idatec%dim_1%EX
 2615.             if ( idatec%dim_1%EX > 0 ) then
 2615.                $SC_idatec_I37 = idatec%dim_1%SM
 2615.                $I_L2615_122 = 0
 2615. !dir$ ivdep
 2615.                do
 2615.                   t$1251(1 + $I_L2615_122) = (idatec%base_addr)(1 + $I_L2615_122, 0)
 2615.                   $I_L2615_122 = 1 + $I_L2615_122
 2615.                   if ( $I_L2615_122 >= $F_A34 ) exit
 2615.                enddo
 2615.             endif
 2615. !dir$ suppress t$1251
 2615.             t$1248 = loc( t$1251 )
 2615.          endif
 2615.          call opnprg( nedrct, neprog, nefcst, ifday, tod, t$1243, t$1248,  _substr(roperm,1,200),  _substr(namee,1,7),  _substr(labeli,1,10),  _substr(labelf,1,10),  _substr(extw,1,5),  _substr(exdw,1,5),  _substr(trunc,1,_len( trunc )),  _substr(lev,1,_len( lev )) )
 2615.          if ( idatec%header%a_contig /= 1 ) then
 2615.             _free( t$1252 )
 2615.          endif
 2615.          if ( idate%header%a_contig /= 1 ) then
 2615.             _free( t$1247 )
 2615.          endif
 2618.          t$1254 = 0
 2618.          t$1257 = 0
 2618.          if ( idate%header%a_contig == 1 ) then
 2618. !dir$ suppress (idate%base_addr)(1, 0)
 2618.             t$1253 = loc( (idate%base_addr)(1, 0) )
 2618.          else
 2618.             t$1254 = idate%dim_1%EX
 2618.             t$1257 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 2618.             $F_A35 = idate%dim_1%EX
 2618.             if ( idate%dim_1%EX > 0 ) then
 2618.                $SC_idate_I36 = idate%dim_1%SM
 2618.                $SC_idate_I38 = idate%dim_1%LB
 2618.                $I_L2618_124 = 0
 2618. !dir$ ivdep
 2618.                do
 2618.                   t$1256(1 + $I_L2618_124) = (idate%base_addr)(1 + $I_L2618_124, 0)
 2618.                   $I_L2618_124 = 1 + $I_L2618_124
 2618.                   if ( $I_L2618_124 >= $F_A35 ) exit
 2618.                enddo
 2618.             endif
 2618. !dir$ suppress t$1256
 2618.             t$1253 = loc( t$1256 )
 2618.          endif
 2619.          t$1259 = 0
 2619.          t$1262 = 0
 2619.          if ( del%header%a_contig == 1 ) then
 2619. !dir$ suppress (del%base_addr)(1, 0)
 2619.             t$1258 = loc( (del%base_addr)(1, 0) )
 2619.          else
 2619.             t$1259 = del%dim_1%EX
 2619.             t$1262 = int( _alloc( max( 0, 8 * max( 0, del%dim_1%EX ) ) ), 8 )
 2619.             $F_A36 = del%dim_1%EX
 2619.             if ( del%dim_1%EX > 0 ) then
 2619.                $SC_del_I39 = del%dim_1%SM
 2619.                $SC_del_I40 = del%dim_1%LB
 2619.                $I_L2619_126 = 0
 2619. !dir$ ivdep
 2619.                do
 2619.                   t$1261(1 + $I_L2619_126) = (del%base_addr)(1 + $I_L2619_126, 0)
 2619.                   $I_L2619_126 = 1 + $I_L2619_126
 2619.                   if ( $I_L2619_126 >= $F_A36 ) exit
 2619.                enddo
 2619.             endif
 2619. !dir$ suppress t$1261
 2619.             t$1258 = loc( t$1261 )
 2619.          endif
 2618.          call writedire8( nedrct, t$1253, (idatec%base_addr)(1, 0), (idatec%base_addr)(3, 0), (idatec%base_addr)(2, 0), (idatec%base_addr)(4, 0), t$1258, tod )
 2619.          if ( del%header%a_contig /= 1 ) then
 2619.             _free( t$1262 )
 2619.          endif
 2618.          if ( idate%header%a_contig /= 1 ) then
 2618.             _free( t$1257 )
 2618.          endif
 2623.          ifday4 = ifday
 2624.          tod4 = tod
 2625.          $I_L2625_104 = 0
 2625. !dir$ ivdep
 2625.          do
 2626.             idat4(1 + $I_L2625_104) = (idate%base_addr)(1 + $I_L2625_104, 0)
 2627.             idat4c(1 + $I_L2625_104) = (idatec%base_addr)(1 + $I_L2625_104, 0)
 2628.             $I_L2625_104 = 1 + $I_L2625_104
 2625.             if ( $I_L2625_104 >= 4 ) exit
 2625.          enddo
 2630.          call writeproghead8( neprog, ifday4, tod4, idat4(1), idat4c(1) )
 2630.       endif
 2633.       if ( maxnodes > 1 ) then
 2636.          if ( havesurf ) then
 2636.             t$1265 = 0
 2636.             t$1268 = 0
 2636.             if ( qgzs%header%a_contig == 1 ) then
 2636. !dir$ suppress (qgzs%base_addr)(1, 0)
 2636.                t$1264 = loc( (qgzs%base_addr)(1, 0) )
 2636.             else
 2636.                t$1265 = qgzs%dim_1%EX
 2636.                t$1268 = int( _alloc( max( 0, 8 * max( 0, qgzs%dim_1%EX ) ) ), 8 )
 2636.                $F_A37 = qgzs%dim_1%EX
 2636.                if ( qgzs%dim_1%EX > 0 ) then
 2636.                   $SC_qgzs_I41 = qgzs%dim_1%SM
 2636.                   $SC_qgzs_I42 = qgzs%dim_1%LB
 2636.                   $I_L2636_128 = 0
 2636. !dir$ ivdep
 2636.                   do
 2636.                      t$1267(1 + $I_L2636_128) = (qgzs%base_addr)(1 + $I_L2636_128, 0)
 2636.                      $I_L2636_128 = 1 + $I_L2636_128
 2636.                      if ( $I_L2636_128 >= $F_A37 ) exit
 2636.                   enddo
 2636.                endif
 2636. !dir$ suppress t$1267
 2636.                t$1264 = loc( t$1267 )
 2636.             endif
 2636.             ipa$280 = 1
 2636.             ipa$281 = 1
 2636.             ipa$282 = 0
 2636.             call collect_spec( t$1264, qspec(1, 1), ipa$280, ipa$281, ipa$282 )
 2636.             if ( qgzs%header%a_contig /= 1 ) then
 2636.                _free( t$1268 )
 2636.             endif
 2636.          endif
 2637.          if ( myid == 0 ) then
 2638. !dir$ suppress qspec(1, 1)
 2638.             t$1269%base_addr = pointer to array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2638.             t$1269%header%el_len = 64
 2638.             t$1269%header%assoc = 1
 2638.             t$1269%header%ptr_alloc = 0
 2638.             t$1269%header%p_or_a = 0
 2638.             t$1269%header%a_contig = 1
 2638.             t$1269%header%dv_versn = 2
 2638.             t$1269%header%dv_smunit = 64
 2638.             t$1269%header%d_type = 0
 2638.             t$1269%header%n_params = 0
 2638.             t$1269%header%pad_codim = 0
 2638.             t$1269%header%n_codim = 0
 2638.             t$1269%header%pad_dim = 0
 2638.             t$1269%header%n_dim = 1
 2638.             t$1269%header%d_type_idx = 13
 2638.             t$1269%header%typ_code = 134481411
 2638.             t$1269%header%orig_base = 0
 2638.             t$1269%header%orig_size = 0
 2638.             t$1269%dim_1%LB = 1
 2638.             t$1269%dim_1%EX = ( max( 0, ( -1 + t$198 + 1 ) ) )
 2638.             t$1269%dim_1%SM = 1
 2638.             call writefield81d( neprog, t$1269 )
 2638.          endif
 2643.          if ( myid == 0 ) then
 2644.             t$1270 = lsmk
 2644.             call writefield81d( neprog, t$1270 )
 2644.          endif
 2649.          if ( havesurf ) then
 2649.             t$1272 = 0
 2649.             t$1275 = 0
 2649.             if ( qlnp%header%a_contig == 1 ) then
 2649. !dir$ suppress (qlnp%base_addr)(1, 0)
 2649.                t$1271 = loc( (qlnp%base_addr)(1, 0) )
 2649.             else
 2649.                t$1272 = qlnp%dim_1%EX
 2649.                t$1275 = int( _alloc( max( 0, 8 * max( 0, qlnp%dim_1%EX ) ) ), 8 )
 2649.                $F_A38 = qlnp%dim_1%EX
 2649.                if ( qlnp%dim_1%EX > 0 ) then
 2649.                   $SC_qlnp_I43 = qlnp%dim_1%SM
 2649.                   $SC_qlnp_I44 = qlnp%dim_1%LB
 2649.                   $I_L2649_130 = 0
 2649. !dir$ ivdep
 2649.                   do
 2649.                      t$1274(1 + $I_L2649_130) = (qlnp%base_addr)(1 + $I_L2649_130, 0)
 2649.                      $I_L2649_130 = 1 + $I_L2649_130
 2649.                      if ( $I_L2649_130 >= $F_A38 ) exit
 2649.                   enddo
 2649.                endif
 2649. !dir$ suppress t$1274
 2649.                t$1271 = loc( t$1274 )
 2649.             endif
 2649.             ipa$289 = 1
 2649.             ipa$290 = 1
 2649.             ipa$291 = 0
 2649.             call collect_spec( t$1271, qspec(1, 1), ipa$289, ipa$290, ipa$291 )
 2649.             if ( qlnp%header%a_contig /= 1 ) then
 2649.                _free( t$1275 )
 2649.             endif
 2649.          endif
 2650.          if ( myid == 0 ) then
 2651. !dir$ suppress qspec(1, 1)
 2651.             t$1276%base_addr = pointer to array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2651.             t$1276%header%el_len = 64
 2651.             t$1276%header%assoc = 1
 2651.             t$1276%header%ptr_alloc = 0
 2651.             t$1276%header%p_or_a = 0
 2651.             t$1276%header%a_contig = 1
 2651.             t$1276%header%dv_versn = 2
 2651.             t$1276%header%dv_smunit = 64
 2651.             t$1276%header%d_type = 0
 2651.             t$1276%header%n_params = 0
 2651.             t$1276%header%pad_codim = 0
 2651.             t$1276%header%n_codim = 0
 2651.             t$1276%header%pad_dim = 0
 2651.             t$1276%header%n_dim = 1
 2651.             t$1276%header%d_type_idx = 13
 2651.             t$1276%header%typ_code = 134481411
 2651.             t$1276%header%orig_base = 0
 2651.             t$1276%header%orig_size = 0
 2651.             t$1276%dim_1%LB = 1
 2651.             t$1276%dim_1%EX = ( max( 0, ( -1 + t$198 + 1 ) ) )
 2651.             t$1276%dim_1%SM = 1
 2651.             call writefield81d( neprog, t$1276 )
 2651.          endif
 2656.          t$1278 = 0
 2656.          t$1279 = 0
 2656.          t$1283 = 0
 2656.          if ( qdiv%header%a_contig == 1 ) then
 2656. !dir$ suppress (qdiv%base_addr)(1, 1, 0)
 2656.             t$1277 = loc( (qdiv%base_addr)(1, 1, 0) )
 2656.          else
 2656.             t$1278 = qdiv%dim_1%EX
 2656.             t$1279 = qdiv%dim_2%EX
 2656.             t$1283 = int( _alloc( max( 0, max( 0, qdiv%dim_2%EX ) * max( 0, qdiv%dim_1%EX ) * 8 ) ), 8 )
 2656.             $F_A39 = qdiv%dim_2%EX
 2656.             $F_A40 = qdiv%dim_1%EX
 2656.             if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2656.                $SC_qdiv_I45 = qdiv%dim_1%SM
 2656.                $SC_qdiv_I49 = qdiv%dim_1%EX
 2656.                $SC_qdiv_I47 = qdiv%dim_2%SM
 2656.                $SC_qdiv_I48 = qdiv%dim_2%LB
 2656.                $SC_qdiv_I46 = qdiv%dim_1%LB
 2656.                $I_L2656_152 = 0
 2656.                do
 2656.                   $I_L2656_132 = 0
 2656. !dir$ ivdep
 2656.                   do
 2656.                      t$1282(1 + $I_L2656_132, 1 + $I_L2656_152) = (qdiv%base_addr)(1 + $I_L2656_132, 1 + $I_L2656_152, 0)
 2656.                      $I_L2656_132 = 1 + $I_L2656_132
 2656.                      if ( $I_L2656_132 >= $F_A40 ) exit
 2656.                   enddo
 2656.                   $I_L2656_152 = 1 + $I_L2656_152
 2656.                   if ( $I_L2656_152 >= $F_A39 ) exit
 2656.                enddo
 2656.             endif
 2656. !dir$ suppress t$1282
 2656.             t$1277 = loc( t$1282 )
 2656.          endif
 2656.          ipa$298 = 0
 2656.          call collect_spec( t$1277, qspec(1, 1), kmaxloc, kmaxnew, ipa$298 )
 2656.          if ( qdiv%header%a_contig /= 1 ) then
 2656.             _free( t$1283 )
 2656.          endif
 2657.          if ( myid == 0 ) then
 2658. !dir$ suppress qspec(1, 1)
 2658.             t$1284%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2658.             t$1284%header%el_len = 64
 2658.             t$1284%header%assoc = 1
 2658.             t$1284%header%ptr_alloc = 0
 2658.             t$1284%header%p_or_a = 0
 2658.             t$1284%header%a_contig = 1
 2658.             t$1284%header%dv_versn = 2
 2658.             t$1284%header%dv_smunit = 64
 2658.             t$1284%header%d_type = 0
 2658.             t$1284%header%n_params = 0
 2658.             t$1284%header%pad_codim = 0
 2658.             t$1284%header%n_codim = 0
 2658.             t$1284%header%pad_dim = 0
 2658.             t$1284%header%n_dim = 2
 2658.             t$1284%header%d_type_idx = 13
 2658.             t$1284%header%typ_code = 134481411
 2658.             t$1284%header%orig_base = 0
 2658.             t$1284%header%orig_size = 0
 2658.             t$1284%dim_1%LB = 1
 2658.             t$1284%dim_1%EX = ( max( 0, t$198 ) )
 2658.             t$1284%dim_1%SM = 1
 2658.             t$1284%dim_2%LB = 1
 2658.             t$1284%dim_2%EX = ( max( 0, t$199 ) )
 2658.             t$1284%dim_2%SM = max( 0, t$198 )
 2658.             call writefield82d( neprog, t$1284 )
 2658.          endif
 2663.          t$1286 = 0
 2663.          t$1287 = 0
 2663.          t$1291 = 0
 2663.          if ( qrot%header%a_contig == 1 ) then
 2663. !dir$ suppress (qrot%base_addr)(1, 1, 0)
 2663.             t$1285 = loc( (qrot%base_addr)(1, 1, 0) )
 2663.          else
 2663.             t$1286 = qrot%dim_1%EX
 2663.             t$1287 = qrot%dim_2%EX
 2663.             t$1291 = int( _alloc( max( 0, max( 0, qrot%dim_2%EX ) * max( 0, qrot%dim_1%EX ) * 8 ) ), 8 )
 2663.             $F_A41 = qrot%dim_2%EX
 2663.             $F_A42 = qrot%dim_1%EX
 2663.             if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 2663.                $SC_qrot_I50 = qrot%dim_1%SM
 2663.                $SC_qrot_I54 = qrot%dim_1%EX
 2663.                $SC_qrot_I52 = qrot%dim_2%SM
 2663.                $SC_qrot_I53 = qrot%dim_2%LB
 2663.                $SC_qrot_I51 = qrot%dim_1%LB
 2663.                $I_L2663_154 = 0
 2663.                do
 2663.                   $I_L2663_134 = 0
 2663. !dir$ ivdep
 2663.                   do
 2663.                      t$1290(1 + $I_L2663_134, 1 + $I_L2663_154) = (qrot%base_addr)(1 + $I_L2663_134, 1 + $I_L2663_154, 0)
 2663.                      $I_L2663_134 = 1 + $I_L2663_134
 2663.                      if ( $I_L2663_134 >= $F_A42 ) exit
 2663.                   enddo
 2663.                   $I_L2663_154 = 1 + $I_L2663_154
 2663.                   if ( $I_L2663_154 >= $F_A41 ) exit
 2663.                enddo
 2663.             endif
 2663. !dir$ suppress t$1290
 2663.             t$1285 = loc( t$1290 )
 2663.          endif
 2663.          ipa$303 = 0
 2663.          call collect_spec( t$1285, qspec(1, 1), kmaxloc, kmaxnew, ipa$303 )
 2663.          if ( qrot%header%a_contig /= 1 ) then
 2663.             _free( t$1291 )
 2663.          endif
 2664.          if ( myid == 0 ) then
 2665. !dir$ suppress qspec(1, 1)
 2665.             t$1292%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2665.             t$1292%header%el_len = 64
 2665.             t$1292%header%assoc = 1
 2665.             t$1292%header%ptr_alloc = 0
 2665.             t$1292%header%p_or_a = 0
 2665.             t$1292%header%a_contig = 1
 2665.             t$1292%header%dv_versn = 2
 2665.             t$1292%header%dv_smunit = 64
 2665.             t$1292%header%d_type = 0
 2665.             t$1292%header%n_params = 0
 2665.             t$1292%header%pad_codim = 0
 2665.             t$1292%header%n_codim = 0
 2665.             t$1292%header%pad_dim = 0
 2665.             t$1292%header%n_dim = 2
 2665.             t$1292%header%d_type_idx = 13
 2665.             t$1292%header%typ_code = 134481411
 2665.             t$1292%header%orig_base = 0
 2665.             t$1292%header%orig_size = 0
 2665.             t$1292%dim_1%LB = 1
 2665.             t$1292%dim_1%EX = ( max( 0, t$198 ) )
 2665.             t$1292%dim_1%SM = 1
 2665.             t$1292%dim_2%LB = 1
 2665.             t$1292%dim_2%EX = ( max( 0, t$199 ) )
 2665.             t$1292%dim_2%SM = max( 0, t$198 )
 2665.             call writefield82d( neprog, t$1292 )
 2665.          endif
 2670.          t$1294 = 0
 2670.          t$1295 = 0
 2670.          t$1299 = 0
 2670.          if ( qq%header%a_contig == 1 ) then
 2670. !dir$ suppress (qq%base_addr)(1, 1, 0)
 2670.             t$1293 = loc( (qq%base_addr)(1, 1, 0) )
 2670.          else
 2670.             t$1294 = qq%dim_1%EX
 2670.             t$1295 = qq%dim_2%EX
 2670.             t$1299 = int( _alloc( max( 0, max( 0, qq%dim_2%EX ) * max( 0, qq%dim_1%EX ) * 8 ) ), 8 )
 2670.             $F_A43 = qq%dim_2%EX
 2670.             $F_A44 = qq%dim_1%EX
 2670.             if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 2670.                $SC_qq_I55 = qq%dim_1%SM
 2670.                $SC_qq_I59 = qq%dim_1%EX
 2670.                $SC_qq_I57 = qq%dim_2%SM
 2670.                $SC_qq_I58 = qq%dim_2%LB
 2670.                $SC_qq_I56 = qq%dim_1%LB
 2670.                $I_L2670_156 = 0
 2670.                do
 2670.                   $I_L2670_136 = 0
 2670. !dir$ ivdep
 2670.                   do
 2670.                      t$1298(1 + $I_L2670_136, 1 + $I_L2670_156) = (qq%base_addr)(1 + $I_L2670_136, 1 + $I_L2670_156, 0)
 2670.                      $I_L2670_136 = 1 + $I_L2670_136
 2670.                      if ( $I_L2670_136 >= $F_A44 ) exit
 2670.                   enddo
 2670.                   $I_L2670_156 = 1 + $I_L2670_156
 2670.                   if ( $I_L2670_156 >= $F_A43 ) exit
 2670.                enddo
 2670.             endif
 2670. !dir$ suppress t$1298
 2670.             t$1293 = loc( t$1298 )
 2670.          endif
 2670.          ipa$308 = 0
 2670.          call collect_spec( t$1293, qspec(1, 1), kmaxloc, kmaxnew, ipa$308 )
 2670.          if ( qq%header%a_contig /= 1 ) then
 2670.             _free( t$1299 )
 2670.          endif
 2671.          if ( myid == 0 ) then
 2672. !dir$ suppress qspec(1, 1)
 2672.             t$1300%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2672.             t$1300%header%el_len = 64
 2672.             t$1300%header%assoc = 1
 2672.             t$1300%header%ptr_alloc = 0
 2672.             t$1300%header%p_or_a = 0
 2672.             t$1300%header%a_contig = 1
 2672.             t$1300%header%dv_versn = 2
 2672.             t$1300%header%dv_smunit = 64
 2672.             t$1300%header%d_type = 0
 2672.             t$1300%header%n_params = 0
 2672.             t$1300%header%pad_codim = 0
 2672.             t$1300%header%n_codim = 0
 2672.             t$1300%header%pad_dim = 0
 2672.             t$1300%header%n_dim = 2
 2672.             t$1300%header%d_type_idx = 13
 2672.             t$1300%header%typ_code = 134481411
 2672.             t$1300%header%orig_base = 0
 2672.             t$1300%header%orig_size = 0
 2672.             t$1300%dim_1%LB = 1
 2672.             t$1300%dim_1%EX = ( max( 0, t$198 ) )
 2672.             t$1300%dim_1%SM = 1
 2672.             t$1300%dim_2%LB = 1
 2672.             t$1300%dim_2%EX = ( max( 0, t$199 ) )
 2672.             t$1300%dim_2%SM = max( 0, t$198 )
 2672.             call writefield82d( neprog, t$1300 )
 2672.          endif
 2677.          t$1302 = 0
 2677.          t$1303 = 0
 2677.          t$1307 = 0
 2677.          if ( qtmp%header%a_contig == 1 ) then
 2677. !dir$ suppress (qtmp%base_addr)(1, 1, 0)
 2677.             t$1301 = loc( (qtmp%base_addr)(1, 1, 0) )
 2677.          else
 2677.             t$1302 = qtmp%dim_1%EX
 2677.             t$1303 = qtmp%dim_2%EX
 2677.             t$1307 = int( _alloc( max( 0, max( 0, qtmp%dim_2%EX ) * max( 0, qtmp%dim_1%EX ) * 8 ) ), 8 )
 2677.             $F_A45 = qtmp%dim_2%EX
 2677.             $F_A46 = qtmp%dim_1%EX
 2677.             if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 2677.                $SC_qtmp_I60 = qtmp%dim_1%SM
 2677.                $SC_qtmp_I64 = qtmp%dim_1%EX
 2677.                $SC_qtmp_I62 = qtmp%dim_2%SM
 2677.                $SC_qtmp_I63 = qtmp%dim_2%LB
 2677.                $SC_qtmp_I61 = qtmp%dim_1%LB
 2677.                $I_L2677_158 = 0
 2677.                do
 2677.                   $I_L2677_138 = 0
 2677. !dir$ ivdep
 2677.                   do
 2677.                      t$1306(1 + $I_L2677_138, 1 + $I_L2677_158) = (qtmp%base_addr)(1 + $I_L2677_138, 1 + $I_L2677_158, 0)
 2677.                      $I_L2677_138 = 1 + $I_L2677_138
 2677.                      if ( $I_L2677_138 >= $F_A46 ) exit
 2677.                   enddo
 2677.                   $I_L2677_158 = 1 + $I_L2677_158
 2677.                   if ( $I_L2677_158 >= $F_A45 ) exit
 2677.                enddo
 2677.             endif
 2677. !dir$ suppress t$1306
 2677.             t$1301 = loc( t$1306 )
 2677.          endif
 2677.          ipa$313 = 0
 2677.          call collect_spec( t$1301, qspec(1, 1), kmaxloc, kmaxnew, ipa$313 )
 2677.          if ( qtmp%header%a_contig /= 1 ) then
 2677.             _free( t$1307 )
 2677.          endif
 2678.          if ( myid == 0 ) then
 2679. !dir$ suppress qspec(1, 1)
 2679.             t$1308%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 2679.             t$1308%header%el_len = 64
 2679.             t$1308%header%assoc = 1
 2679.             t$1308%header%ptr_alloc = 0
 2679.             t$1308%header%p_or_a = 0
 2679.             t$1308%header%a_contig = 1
 2679.             t$1308%header%dv_versn = 2
 2679.             t$1308%header%dv_smunit = 64
 2679.             t$1308%header%d_type = 0
 2679.             t$1308%header%n_params = 0
 2679.             t$1308%header%pad_codim = 0
 2679.             t$1308%header%n_codim = 0
 2679.             t$1308%header%pad_dim = 0
 2679.             t$1308%header%n_dim = 2
 2679.             t$1308%header%d_type_idx = 13
 2679.             t$1308%header%typ_code = 134481411
 2679.             t$1308%header%orig_base = 0
 2679.             t$1308%header%orig_size = 0
 2679.             t$1308%dim_1%LB = 1
 2679.             t$1308%dim_1%EX = ( max( 0, t$198 ) )
 2679.             t$1308%dim_1%SM = 1
 2679.             t$1308%dim_2%LB = 1
 2679.             t$1308%dim_2%EX = ( max( 0, t$199 ) )
 2679.             t$1308%dim_2%SM = max( 0, t$198 )
 2679.             call writefield82d( neprog, t$1308 )
 2679.          endif
 2679.       else
 2682.          t$1309 = qgzs
 2682.          call writefield81d( neprog, t$1309 )
 2683.          t$1310 = lsmk
 2683.          call writefield81d( neprog, t$1310 )
 2684.          t$1311 = qlnp
 2684.          call writefield81d( neprog, t$1311 )
 2685.          t$1312 = qdiv
 2685.          call writefield82d( neprog, t$1312 )
 2686.          t$1313 = qrot
 2686.          call writefield82d( neprog, t$1313 )
 2687.          t$1314 = qq
 2687.          call writefield82d( neprog, t$1314 )
 2688.          t$1315 = qtmp
 2688.          call writefield82d( neprog, t$1315 )
 2688.       endif
 2690.       fields%header%a_contig = 1
 2690.       fields%dim_1%LB = 1
 2690.       fields%dim_1%EX = 12
 2690.       fields%dim_1%SM = 12
 2690.       $_allo_P0(0) = 0x1000000000001L
 2690.       $_allo_P0(1) = loc( fields )
 2690.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 2690.       $I_L2690_106 = 0
 2690. !dir$ novector
 2690. !dir$ nextscalar
 2690. !dir$ rsi.nextscalar
 2690. !dir$ unroll 4
 2690.       do
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%el_len = 64
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%assoc = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%ptr_alloc = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%p_or_a = 1
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%a_contig = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%dv_versn = 2
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%dv_smunit = 64
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%d_type = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%n_params = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%pad_codim = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%n_codim = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%pad_dim = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%n_dim = 2
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%d_type_idx = 13
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%typ_code = 134481411
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%orig_base = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%header%orig_size = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_1%LB = 1
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_1%EX = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_1%SM = 1
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_2%LB = 1
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_2%EX = 0
 2690.          (fields%base_addr)(1 + $I_L2690_106, 0)%p%dim_2%SM = 1
 2690.          $I_L2690_106 = 1 + $I_L2690_106
 2690.          if ( $I_L2690_106 >= 12 ) exit
 2690.       enddo
 2691.       interp_type%header%a_contig = 1
 2691.       interp_type%dim_1%LB = 1
 2691.       interp_type%dim_1%EX = 12
 2691.       interp_type%dim_1%SM = 1
 2691.       $_allo_P1(0) = 0x1000000000001L
 2691.       $_allo_P1(1) = loc( interp_type )
 2691.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 2694.       (fields%base_addr)(1, 0)%p%header%a_contig = 1
 2694.       (fields%base_addr)(1, 0)%p%header%assoc = 1
 2694.       (fields%base_addr)(1, 0)%p%header%d_type_idx = 13
 2694.       (fields%base_addr)(1, 0)%p%dim_1%LB = 1
 2694.       (fields%base_addr)(1, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2694.       (fields%base_addr)(1, 0)%p%dim_1%SM = 1
 2694.       (fields%base_addr)(1, 0)%p%dim_2%LB = 1
 2694.       (fields%base_addr)(1, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2694.       (fields%base_addr)(1, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2694.       (fields%base_addr)(1, 0)%p%header%ptr_alloc = 0
 2694.       (fields%base_addr)(1, 0)%p%header%orig_base = 0
 2694.       (fields%base_addr)(1, 0)%p%header%orig_size = 0
 2694.       (fields%base_addr)(1, 0)%p%base_addr = loc( z0(1, 1) )
 2695.       (interp_type%base_addr)(1, 0) = 1
 2699.       (fields%base_addr)(2, 0)%p%header%a_contig = 1
 2699.       (fields%base_addr)(2, 0)%p%header%assoc = 1
 2699.       (fields%base_addr)(2, 0)%p%header%d_type_idx = 13
 2699.       (fields%base_addr)(2, 0)%p%dim_1%LB = 1
 2699.       (fields%base_addr)(2, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2699.       (fields%base_addr)(2, 0)%p%dim_1%SM = 1
 2699.       (fields%base_addr)(2, 0)%p%dim_2%LB = 1
 2699.       (fields%base_addr)(2, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2699.       (fields%base_addr)(2, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2699.       (fields%base_addr)(2, 0)%p%header%ptr_alloc = 0
 2699.       (fields%base_addr)(2, 0)%p%header%orig_base = 0
 2699.       (fields%base_addr)(2, 0)%p%header%orig_size = 0
 2699.       (fields%base_addr)(2, 0)%p%base_addr = loc( gtsea(1, 1) )
 2700.       (interp_type%base_addr)(2, 0) = 2
 2704.       ipa$338 = loc( td0(1, 1) )
 2704.       datum = _copyin( td0(1, 1) )
 2704.       ipa$340 = loc( work(1, 1, 1) )
 2704.       work = _copyin( work(1, 1, 1) )
 2704.       ipa$342 = loc( imask(1, 1) )
 2704.       imask = _copyin( imask(1, 1) )
 2704.       ipa$344 = loc( gtsea(1, 1) )
 2704.       tsea = _copyin( gtsea(1, 1) )
 2704.       t$193 = ibmax
 2704.       t$194 = 1
 2704.       t$195 = jbmax
 2704.       t$374 = max( 0, ibmax )
 2704.       t$375 = max( 0, ibmax )
 2704.       t$376 = 1
 2704.       t$377 = max( 0, ibmax )
 2704.       t$378 = max( 0, jbmax )
 2704.       t$379 = max( 0, ibmax ) * max( 0, jbmax )
 2704.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2704.       if ( jbmax > 0 ) then
 2704.          if ( ibmax > 0 ) then
 2704.             $I_L2704_140 = 0
 2704.             do
 2704.                $ncount_S4 = 0
 2704.                $I_L2704_108 = 0
 2704. !dir$ ivdep
 2704.                do
 2704.                   if ( imask(1 + $I_L2704_108, 1 + $I_L2704_140) > 0 ) then
 2704.                      $ncount_S4 = 1 + $ncount_S4
 2704.                      work(1 + $I_L2704_108, 1 + $I_L2704_140) = datum($ncount_S4, 1, 1 + $I_L2704_140)
 2704.                   else
 2704.                      work(1 + $I_L2704_108, 1 + $I_L2704_140) = abs( tsea(1 + $I_L2704_108, 1 + $I_L2704_140) )
 2704.                   endif
 2704.                   $I_L2704_108 = 1 + $I_L2704_108
 2704.                   if ( $I_L2704_108 >= ibmax ) exit
 2704.                enddo
 2704.                $I_L2704_140 = 1 + $I_L2704_140
 2704.                if ( $I_L2704_140 >= jbmax ) exit
 2704.             enddo
 2704.          endif
 2704.       endif
 2704.       gtsea(1, 1) = _copyout( tsea )
 2704.       imask(1, 1) = _copyout( imask )
 2704.       work(1, 1, 1) = _copyout( work )
 2704.       td0(1, 1) = _copyout( datum )
 2705.       (fields%base_addr)(3, 0)%p%header%a_contig = 1
 2705.       (fields%base_addr)(3, 0)%p%header%assoc = 1
 2705.       (fields%base_addr)(3, 0)%p%header%d_type_idx = 13
 2705.       (fields%base_addr)(3, 0)%p%dim_1%LB = 1
 2705.       (fields%base_addr)(3, 0)%p%dim_1%EX = max( 0, t$196 )
 2705.       (fields%base_addr)(3, 0)%p%dim_1%SM = 1
 2705.       (fields%base_addr)(3, 0)%p%dim_2%LB = 1
 2705.       (fields%base_addr)(3, 0)%p%dim_2%EX = max( 0, t$197 )
 2705.       (fields%base_addr)(3, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2705.       (fields%base_addr)(3, 0)%p%header%ptr_alloc = 0
 2705.       (fields%base_addr)(3, 0)%p%header%orig_base = 0
 2705.       (fields%base_addr)(3, 0)%p%header%orig_size = 0
 2705.       (fields%base_addr)(3, 0)%p%base_addr = loc( work(1, 1, 1) )
 2706.       (interp_type%base_addr)(3, 0) = 1
 2710.       ipa$370 = loc( capac0(1, 1, 1) )
 2710.       datum = _copyin( capac0(1, 1, 1) )
 2710.       ipa$372 = loc( work(1, 1, 2) )
 2710.       work = _copyin( work(1, 1, 2) )
 2710.       ipa$374 = loc( imask(1, 1) )
 2710.       imask = _copyin( imask(1, 1) )
 2710.       ipa$376 = loc( gtsea(1, 1) )
 2710.       tsea = _copyin( gtsea(1, 1) )
 2710.       t$193 = ibmax
 2710.       t$194 = 2
 2710.       t$195 = jbmax
 2710.       t$374 = max( 0, ibmax )
 2710.       t$375 = max( 0, ibmax )
 2710.       t$376 = 2
 2710.       t$377 = 2 * max( 0, ibmax )
 2710.       t$378 = max( 0, jbmax )
 2710.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 2
 2710.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2710.       if ( jbmax > 0 ) then
 2710.          if ( ibmax > 0 ) then
 2710.             $I_L2710_142 = 0
 2710.             do
 2710.                $ncount_S7 = 0
 2710.                $I_L2710_110 = 0
 2710. !dir$ ivdep
 2710.                do
 2710.                   if ( imask(1 + $I_L2710_110, 1 + $I_L2710_142) > 0 ) then
 2710.                      $ncount_S7 = 1 + $ncount_S7
 2710.                      work(1 + $I_L2710_110, 1 + $I_L2710_142) = datum($ncount_S7, 1, 1 + $I_L2710_142)
 2710.                   else
 2710.                      work(1 + $I_L2710_110, 1 + $I_L2710_142) = 0.0
 2710.                   endif
 2710.                   $I_L2710_110 = 1 + $I_L2710_110
 2710.                   if ( $I_L2710_110 >= ibmax ) exit
 2710.                enddo
 2710.                $I_L2710_142 = 1 + $I_L2710_142
 2710.                if ( $I_L2710_142 >= jbmax ) exit
 2710.             enddo
 2710.          endif
 2710.       endif
 2710.       gtsea(1, 1) = _copyout( tsea )
 2710.       imask(1, 1) = _copyout( imask )
 2710.       work(1, 1, 2) = _copyout( work )
 2710.       capac0(1, 1, 1) = _copyout( datum )
 2711.       (fields%base_addr)(4, 0)%p%header%a_contig = 1
 2711.       (fields%base_addr)(4, 0)%p%header%assoc = 1
 2711.       (fields%base_addr)(4, 0)%p%header%d_type_idx = 13
 2711.       (fields%base_addr)(4, 0)%p%dim_1%LB = 1
 2711.       (fields%base_addr)(4, 0)%p%dim_1%EX = max( 0, t$196 )
 2711.       (fields%base_addr)(4, 0)%p%dim_1%SM = 1
 2711.       (fields%base_addr)(4, 0)%p%dim_2%LB = 1
 2711.       (fields%base_addr)(4, 0)%p%dim_2%EX = max( 0, t$197 )
 2711.       (fields%base_addr)(4, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2711.       (fields%base_addr)(4, 0)%p%header%ptr_alloc = 0
 2711.       (fields%base_addr)(4, 0)%p%header%orig_base = 0
 2711.       (fields%base_addr)(4, 0)%p%header%orig_size = 0
 2711.       (fields%base_addr)(4, 0)%p%base_addr = loc( work(1, 1, 2) )
 2712.       (interp_type%base_addr)(4, 0) = 1
 2716.       ipa$402 = loc( capac0(1, 1, 1) )
 2716.       datum = _copyin( capac0(1, 1, 1) )
 2716.       ipa$404 = loc( work(1, 1, 3) )
 2716.       work = _copyin( work(1, 1, 3) )
 2716.       ipa$406 = loc( imask(1, 1) )
 2716.       imask = _copyin( imask(1, 1) )
 2716.       ipa$408 = loc( gtsea(1, 1) )
 2716.       tsea = _copyin( gtsea(1, 1) )
 2716.       t$193 = ibmax
 2716.       t$194 = 2
 2716.       t$195 = jbmax
 2716.       t$374 = max( 0, ibmax )
 2716.       t$375 = max( 0, ibmax )
 2716.       t$376 = 2
 2716.       t$377 = 2 * max( 0, ibmax )
 2716.       t$378 = max( 0, jbmax )
 2716.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 2
 2716.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2716.       if ( jbmax > 0 ) then
 2716.          if ( ibmax > 0 ) then
 2716.             $I_L2716_144 = 0
 2716.             do
 2716.                $ncount_S10 = 0
 2716.                $I_L2716_112 = 0
 2716. !dir$ ivdep
 2716.                do
 2716.                   if ( imask(1 + $I_L2716_112, 1 + $I_L2716_144) > 0 ) then
 2716.                      $ncount_S10 = 1 + $ncount_S10
 2716.                      work(1 + $I_L2716_112, 1 + $I_L2716_144) = datum($ncount_S10, 2, 1 + $I_L2716_144)
 2716.                   else
 2716.                      work(1 + $I_L2716_112, 1 + $I_L2716_144) = 0.0
 2716.                   endif
 2716.                   $I_L2716_112 = 1 + $I_L2716_112
 2716.                   if ( $I_L2716_112 >= ibmax ) exit
 2716.                enddo
 2716.                $I_L2716_144 = 1 + $I_L2716_144
 2716.                if ( $I_L2716_144 >= jbmax ) exit
 2716.             enddo
 2716.          endif
 2716.       endif
 2716.       gtsea(1, 1) = _copyout( tsea )
 2716.       imask(1, 1) = _copyout( imask )
 2716.       work(1, 1, 3) = _copyout( work )
 2716.       capac0(1, 1, 1) = _copyout( datum )
 2717.       (fields%base_addr)(5, 0)%p%header%a_contig = 1
 2717.       (fields%base_addr)(5, 0)%p%header%assoc = 1
 2717.       (fields%base_addr)(5, 0)%p%header%d_type_idx = 13
 2717.       (fields%base_addr)(5, 0)%p%dim_1%LB = 1
 2717.       (fields%base_addr)(5, 0)%p%dim_1%EX = max( 0, t$196 )
 2717.       (fields%base_addr)(5, 0)%p%dim_1%SM = 1
 2717.       (fields%base_addr)(5, 0)%p%dim_2%LB = 1
 2717.       (fields%base_addr)(5, 0)%p%dim_2%EX = max( 0, t$197 )
 2717.       (fields%base_addr)(5, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2717.       (fields%base_addr)(5, 0)%p%header%ptr_alloc = 0
 2717.       (fields%base_addr)(5, 0)%p%header%orig_base = 0
 2717.       (fields%base_addr)(5, 0)%p%header%orig_size = 0
 2717.       (fields%base_addr)(5, 0)%p%base_addr = loc( work(1, 1, 3) )
 2718.       (interp_type%base_addr)(5, 0) = 1
 2722.       ipa$434 = loc( w0(1, 1, 1) )
 2722.       datum = _copyin( w0(1, 1, 1) )
 2722.       ipa$436 = loc( work(1, 1, 4) )
 2722.       work = _copyin( work(1, 1, 4) )
 2722.       ipa$438 = loc( imask(1, 1) )
 2722.       imask = _copyin( imask(1, 1) )
 2722.       ipa$440 = loc( gtsea(1, 1) )
 2722.       tsea = _copyin( gtsea(1, 1) )
 2722.       t$193 = ibmax
 2722.       t$194 = 3
 2722.       t$195 = jbmax
 2722.       t$374 = max( 0, ibmax )
 2722.       t$375 = max( 0, ibmax )
 2722.       t$376 = 3
 2722.       t$377 = 3 * max( 0, ibmax )
 2722.       t$378 = max( 0, jbmax )
 2722.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 2722.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2722.       if ( jbmax > 0 ) then
 2722.          if ( ibmax > 0 ) then
 2722.             $I_L2722_146 = 0
 2722.             do
 2722.                $ncount_S13 = 0
 2722.                $I_L2722_114 = 0
 2722. !dir$ ivdep
 2722.                do
 2722.                   if ( imask(1 + $I_L2722_114, 1 + $I_L2722_146) > 0 ) then
 2722.                      $ncount_S13 = 1 + $ncount_S13
 2722.                      work(1 + $I_L2722_114, 1 + $I_L2722_146) = datum($ncount_S13, 1, 1 + $I_L2722_146)
 2722.                   else
 2722.                      work(1 + $I_L2722_114, 1 + $I_L2722_146) = 1.0
 2722.                   endif
 2722.                   $I_L2722_114 = 1 + $I_L2722_114
 2722.                   if ( $I_L2722_114 >= ibmax ) exit
 2722.                enddo
 2722.                $I_L2722_146 = 1 + $I_L2722_146
 2722.                if ( $I_L2722_146 >= jbmax ) exit
 2722.             enddo
 2722.          endif
 2722.       endif
 2722.       gtsea(1, 1) = _copyout( tsea )
 2722.       imask(1, 1) = _copyout( imask )
 2722.       work(1, 1, 4) = _copyout( work )
 2722.       w0(1, 1, 1) = _copyout( datum )
 2723.       (fields%base_addr)(6, 0)%p%header%a_contig = 1
 2723.       (fields%base_addr)(6, 0)%p%header%assoc = 1
 2723.       (fields%base_addr)(6, 0)%p%header%d_type_idx = 13
 2723.       (fields%base_addr)(6, 0)%p%dim_1%LB = 1
 2723.       (fields%base_addr)(6, 0)%p%dim_1%EX = max( 0, t$196 )
 2723.       (fields%base_addr)(6, 0)%p%dim_1%SM = 1
 2723.       (fields%base_addr)(6, 0)%p%dim_2%LB = 1
 2723.       (fields%base_addr)(6, 0)%p%dim_2%EX = max( 0, t$197 )
 2723.       (fields%base_addr)(6, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2723.       (fields%base_addr)(6, 0)%p%header%ptr_alloc = 0
 2723.       (fields%base_addr)(6, 0)%p%header%orig_base = 0
 2723.       (fields%base_addr)(6, 0)%p%header%orig_size = 0
 2723.       (fields%base_addr)(6, 0)%p%base_addr = loc( work(1, 1, 4) )
 2724.       (interp_type%base_addr)(6, 0) = 1
 2728.       ipa$466 = loc( w0(1, 1, 1) )
 2728.       datum = _copyin( w0(1, 1, 1) )
 2728.       ipa$468 = loc( work(1, 1, 5) )
 2728.       work = _copyin( work(1, 1, 5) )
 2728.       ipa$470 = loc( imask(1, 1) )
 2728.       imask = _copyin( imask(1, 1) )
 2728.       ipa$472 = loc( gtsea(1, 1) )
 2728.       tsea = _copyin( gtsea(1, 1) )
 2728.       t$193 = ibmax
 2728.       t$194 = 3
 2728.       t$195 = jbmax
 2728.       t$374 = max( 0, ibmax )
 2728.       t$375 = max( 0, ibmax )
 2728.       t$376 = 3
 2728.       t$377 = 3 * max( 0, ibmax )
 2728.       t$378 = max( 0, jbmax )
 2728.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 2728.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2728.       if ( jbmax > 0 ) then
 2728.          if ( ibmax > 0 ) then
 2728.             $I_L2728_148 = 0
 2728.             do
 2728.                $ncount_S16 = 0
 2728.                $I_L2728_116 = 0
 2728. !dir$ ivdep
 2728.                do
 2728.                   if ( imask(1 + $I_L2728_116, 1 + $I_L2728_148) > 0 ) then
 2728.                      $ncount_S16 = 1 + $ncount_S16
 2728.                      work(1 + $I_L2728_116, 1 + $I_L2728_148) = datum($ncount_S16, 2, 1 + $I_L2728_148)
 2728.                   else
 2728.                      work(1 + $I_L2728_116, 1 + $I_L2728_148) = 1.0
 2728.                   endif
 2728.                   $I_L2728_116 = 1 + $I_L2728_116
 2728.                   if ( $I_L2728_116 >= ibmax ) exit
 2728.                enddo
 2728.                $I_L2728_148 = 1 + $I_L2728_148
 2728.                if ( $I_L2728_148 >= jbmax ) exit
 2728.             enddo
 2728.          endif
 2728.       endif
 2728.       gtsea(1, 1) = _copyout( tsea )
 2728.       imask(1, 1) = _copyout( imask )
 2728.       work(1, 1, 5) = _copyout( work )
 2728.       w0(1, 1, 1) = _copyout( datum )
 2729.       (fields%base_addr)(7, 0)%p%header%a_contig = 1
 2729.       (fields%base_addr)(7, 0)%p%header%assoc = 1
 2729.       (fields%base_addr)(7, 0)%p%header%d_type_idx = 13
 2729.       (fields%base_addr)(7, 0)%p%dim_1%LB = 1
 2729.       (fields%base_addr)(7, 0)%p%dim_1%EX = max( 0, t$196 )
 2729.       (fields%base_addr)(7, 0)%p%dim_1%SM = 1
 2729.       (fields%base_addr)(7, 0)%p%dim_2%LB = 1
 2729.       (fields%base_addr)(7, 0)%p%dim_2%EX = max( 0, t$197 )
 2729.       (fields%base_addr)(7, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2729.       (fields%base_addr)(7, 0)%p%header%ptr_alloc = 0
 2729.       (fields%base_addr)(7, 0)%p%header%orig_base = 0
 2729.       (fields%base_addr)(7, 0)%p%header%orig_size = 0
 2729.       (fields%base_addr)(7, 0)%p%base_addr = loc( work(1, 1, 5) )
 2730.       (interp_type%base_addr)(7, 0) = 1
 2734.       ipa$498 = loc( w0(1, 1, 1) )
 2734.       datum = _copyin( w0(1, 1, 1) )
 2734.       ipa$500 = loc( work(1, 1, 6) )
 2734.       work = _copyin( work(1, 1, 6) )
 2734.       ipa$502 = loc( imask(1, 1) )
 2734.       imask = _copyin( imask(1, 1) )
 2734.       ipa$504 = loc( gtsea(1, 1) )
 2734.       tsea = _copyin( gtsea(1, 1) )
 2734.       t$193 = ibmax
 2734.       t$194 = 3
 2734.       t$195 = jbmax
 2734.       t$374 = max( 0, ibmax )
 2734.       t$375 = max( 0, ibmax )
 2734.       t$376 = 3
 2734.       t$377 = 3 * max( 0, ibmax )
 2734.       t$378 = max( 0, jbmax )
 2734.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 2734.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 2734.       if ( jbmax > 0 ) then
 2734.          if ( ibmax > 0 ) then
 2734.             $I_L2734_150 = 0
 2734.             do
 2734.                $ncount_S19 = 0
 2734.                $I_L2734_118 = 0
 2734. !dir$ ivdep
 2734.                do
 2734.                   if ( imask(1 + $I_L2734_118, 1 + $I_L2734_150) > 0 ) then
 2734.                      $ncount_S19 = 1 + $ncount_S19
 2734.                      work(1 + $I_L2734_118, 1 + $I_L2734_150) = datum($ncount_S19, 3, 1 + $I_L2734_150)
 2734.                   else
 2734.                      work(1 + $I_L2734_118, 1 + $I_L2734_150) = 1.0
 2734.                   endif
 2734.                   $I_L2734_118 = 1 + $I_L2734_118
 2734.                   if ( $I_L2734_118 >= ibmax ) exit
 2734.                enddo
 2734.                $I_L2734_150 = 1 + $I_L2734_150
 2734.                if ( $I_L2734_150 >= jbmax ) exit
 2734.             enddo
 2734.          endif
 2734.       endif
 2734.       gtsea(1, 1) = _copyout( tsea )
 2734.       imask(1, 1) = _copyout( imask )
 2734.       work(1, 1, 6) = _copyout( work )
 2734.       w0(1, 1, 1) = _copyout( datum )
 2735.       (fields%base_addr)(8, 0)%p%header%a_contig = 1
 2735.       (fields%base_addr)(8, 0)%p%header%assoc = 1
 2735.       (fields%base_addr)(8, 0)%p%header%d_type_idx = 13
 2735.       (fields%base_addr)(8, 0)%p%dim_1%LB = 1
 2735.       (fields%base_addr)(8, 0)%p%dim_1%EX = max( 0, t$196 )
 2735.       (fields%base_addr)(8, 0)%p%dim_1%SM = 1
 2735.       (fields%base_addr)(8, 0)%p%dim_2%LB = 1
 2735.       (fields%base_addr)(8, 0)%p%dim_2%EX = max( 0, t$197 )
 2735.       (fields%base_addr)(8, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2735.       (fields%base_addr)(8, 0)%p%header%ptr_alloc = 0
 2735.       (fields%base_addr)(8, 0)%p%header%orig_base = 0
 2735.       (fields%base_addr)(8, 0)%p%header%orig_size = 0
 2735.       (fields%base_addr)(8, 0)%p%base_addr = loc( work(1, 1, 6) )
 2736.       (interp_type%base_addr)(8, 0) = 1
 2740.       (fields%base_addr)(9, 0)%p%header%a_contig = 1
 2740.       (fields%base_addr)(9, 0)%p%header%assoc = 1
 2740.       (fields%base_addr)(9, 0)%p%header%d_type_idx = 13
 2740.       (fields%base_addr)(9, 0)%p%dim_1%LB = 1
 2740.       (fields%base_addr)(9, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2740.       (fields%base_addr)(9, 0)%p%dim_1%SM = 1
 2740.       (fields%base_addr)(9, 0)%p%dim_2%LB = 1
 2740.       (fields%base_addr)(9, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2740.       (fields%base_addr)(9, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2740.       (fields%base_addr)(9, 0)%p%header%ptr_alloc = 0
 2740.       (fields%base_addr)(9, 0)%p%header%orig_base = 0
 2740.       (fields%base_addr)(9, 0)%p%header%orig_size = 0
 2740.       (fields%base_addr)(9, 0)%p%base_addr = loc( temp2m(1, 1) )
 2741.       (interp_type%base_addr)(9, 0) = 2
 2745.       (fields%base_addr)(10, 0)%p%header%a_contig = 1
 2745.       (fields%base_addr)(10, 0)%p%header%assoc = 1
 2745.       (fields%base_addr)(10, 0)%p%header%d_type_idx = 13
 2745.       (fields%base_addr)(10, 0)%p%dim_1%LB = 1
 2745.       (fields%base_addr)(10, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2745.       (fields%base_addr)(10, 0)%p%dim_1%SM = 1
 2745.       (fields%base_addr)(10, 0)%p%dim_2%LB = 1
 2745.       (fields%base_addr)(10, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2745.       (fields%base_addr)(10, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2745.       (fields%base_addr)(10, 0)%p%header%ptr_alloc = 0
 2745.       (fields%base_addr)(10, 0)%p%header%orig_base = 0
 2745.       (fields%base_addr)(10, 0)%p%header%orig_size = 0
 2745.       (fields%base_addr)(10, 0)%p%base_addr = loc( umes2m(1, 1) )
 2746.       (interp_type%base_addr)(10, 0) = 2
 2750.       (fields%base_addr)(11, 0)%p%header%a_contig = 1
 2750.       (fields%base_addr)(11, 0)%p%header%assoc = 1
 2750.       (fields%base_addr)(11, 0)%p%header%d_type_idx = 13
 2750.       (fields%base_addr)(11, 0)%p%dim_1%LB = 1
 2750.       (fields%base_addr)(11, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2750.       (fields%base_addr)(11, 0)%p%dim_1%SM = 1
 2750.       (fields%base_addr)(11, 0)%p%dim_2%LB = 1
 2750.       (fields%base_addr)(11, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2750.       (fields%base_addr)(11, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2750.       (fields%base_addr)(11, 0)%p%header%ptr_alloc = 0
 2750.       (fields%base_addr)(11, 0)%p%header%orig_base = 0
 2750.       (fields%base_addr)(11, 0)%p%header%orig_size = 0
 2750.       (fields%base_addr)(11, 0)%p%base_addr = loc( uve10m(1, 1) )
 2751.       (interp_type%base_addr)(11, 0) = 2
 2755.       (fields%base_addr)(12, 0)%p%header%a_contig = 1
 2755.       (fields%base_addr)(12, 0)%p%header%assoc = 1
 2755.       (fields%base_addr)(12, 0)%p%header%d_type_idx = 13
 2755.       (fields%base_addr)(12, 0)%p%dim_1%LB = 1
 2755.       (fields%base_addr)(12, 0)%p%dim_1%EX = _zla( 0, t$196 )
 2755.       (fields%base_addr)(12, 0)%p%dim_1%SM = 1
 2755.       (fields%base_addr)(12, 0)%p%dim_2%LB = 1
 2755.       (fields%base_addr)(12, 0)%p%dim_2%EX = _zla( 0, t$197 )
 2755.       (fields%base_addr)(12, 0)%p%dim_2%SM = _zla( 0, t$196 )
 2755.       (fields%base_addr)(12, 0)%p%header%ptr_alloc = 0
 2755.       (fields%base_addr)(12, 0)%p%header%orig_base = 0
 2755.       (fields%base_addr)(12, 0)%p%header%orig_size = 0
 2755.       (fields%base_addr)(12, 0)%p%base_addr = loc( vve10m(1, 1) )
 2756.       (interp_type%base_addr)(12, 0) = 2
 2760.       ipa$508 = 12
 2760.       ipa$509 = 0
 2760.       call collect_grid_sur_print( (fields%base_addr)(1, 0), (interp_type%base_addr)(1, 0), ipa$508, ipa$509, neprog )
 2762.       $_allo_P2(0) = 0x1000000000001L
 2762.       $_allo_P2(1) = loc( fields )
 2762.       call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 2762.       fields%header%assoc = 0
 2763.       $_allo_P3(0) = 0x1000000000001L
 2763.       $_allo_P3(1) = loc( interp_type )
 2763.       call __deallocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 2763.       interp_type%header%assoc = 0
 2765.       if ( nfctrl(95) > 0 ) then
 2765.          $Unit_temp_O0 = nfprt
 2765.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$201,  _substr(t$200,1,121), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (idate%base_addr)(+:( 1, idate%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ), _iotype( (idatec%base_addr)(+:( 1, idatec%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 2765.       endif
 2611.       $_allo_P4(0) = 0x2000000000001L
 2611.       $_allo_P4(1) = loc( interp_type )
 2611.       $_allo_P4(2) = loc( fields )
 2611.       call _dealloc( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 2565.       _free( t$404 )
 2770.       return
 2770.       end
 2770.       
 2777.       
 2777.       subroutine opnprg( nedrct, neprog, nefcst, ifday, tod, idate, idatec, roperm, namee, labeli, labelf, extw, exdw, trunc, lev )
 2777.       t$412 = _len( trunc )
 2777.       t$413 = _len( lev )
 2812.       $inic_S0 = ifday == 0 .and. tod == 0
 2813.       if ( icall /= 1 ) then
 2777.          goto 10
 2777.       else if ( $inic_S0 ) then
 2814.           _substr(ext,1,3) = 'icn'
 2814.       else
 2814.    10    continue
 2815.          if ( icall /= 2 ) then
 2815.             goto 20
 2815.          else if ( $inic_S0 ) then
 2816.             icall = 3
 2817.              _substr(ext,1,3) = 'inz'
 2817.          else
 2817.    20       continue
 2819.              _substr(ext,1,3) = 'fct'
 2819.          endif
 2819.       endif
 2821.        _substr(modout,1,23) = '/'
 2822.       if ( icall == 1 ) then
 2823.          icall = 2
 2824.          $is_S1 = -1 + ( _index( //(  _substr(roperm,1,200), ' ' ), ' ', .false. ) )
 2825.          is = cvmg( $is_S1, 1, $is_S1 > 0 )
 2829.          ierr = 0
 2826.          t$1328 = nefcst
 2826.          t$1329 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + _zla( 0, cvmg( $is_S1, 1, $is_S1 > 0 ) ) + 39
 2827.          t$1331 = int( _alloc( _zla( 0, t$1329 ) ), 8 )
 2827.           _substr(t$1330,1,_zla( 0, t$1329 )) = //(  _substr(roperm,1,_zla( 0, cvmg( $is_S1, 1, $is_S1 > 0 ) )), //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelf,1,10), //(  _substr(extw,1,2), //( 'dir', //( '.', //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )), //(  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )), '.files' ) ) ) ) ) ) ) ) ) )
 2829.           _substr(t$1332,1,7) = 'REPLACE'
 2828.           _substr(t$1333,1,10) = 'SEQUENTIAL'
 2828.           _substr(t$1334,1,9) = 'FORMATTED'
 2828.           _substr(t$1335,1,5) = 'WRITE'
 2826.          t$1336(1) = 0x100000000000000L
 2826. !dir$ suppress t$1328
 2826.          t$1336(2) = int( loc( t$1328 ), 8 )
 2826. !dir$ suppress ierr
 2826.          t$1336(3) = int( loc( ierr ), 8 )
 2826.          t$1336(4) = 0
 2826. !dir$ suppress  _substr(t$1330,1,max( 0, t$1329 ))
 2826.          t$1336(5) = int( loc(  _substr(t$1330,1,max( 0, t$1329 )) ), 8 )
 2826.          t$1336(6) = ( max( 0, t$1329 ) )
 2826. !dir$ suppress  _substr(t$1332,1,7)
 2826.          t$1336(7) = int( loc(  _substr(t$1332,1,7) ), 8 )
 2826.          t$1336(8) = 7
 2826. !dir$ suppress  _substr(t$1333,1,10)
 2826.          t$1336(9) = int( loc(  _substr(t$1333,1,10) ), 8 )
 2826.          t$1336(10) = 10
 2826. !dir$ suppress  _substr(t$1334,1,9)
 2826.          t$1336(11) = int( loc(  _substr(t$1334,1,9) ), 8 )
 2826.          t$1336(12) = 9
 2826.          t$1336(13) = 0
 2826.          t$1336(14) = 0
 2826.          t$1336(16) = 0
 2826. !dir$ suppress  _substr(t$1335,1,5)
 2826.          t$1336(18) = int( loc(  _substr(t$1335,1,5) ), 8 )
 2826.          t$1336(19) = 5
 2826.          t$1336(20) = 0
 2826.          t$1336(22) = 0
 2826.          t$1336(24) = 0x2000200000000L
 2826.          t$1336(25) = 0
 2826.          t$1336(27) = 0
 2826.          t$1336(29) = 0
 2826.          t$1336(31) = 0
 2826.          t$1336(33) = 0
 2826.          t$1336(35) = 0
 2826.          t$1327 = _open( t$1336 )
 2827.          _free( t$1331 )
 2830.          if ( ierr /= 0 ) then
 2831.             t$1337 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + 39
 2833.             t$1339 = int( _alloc( max( 0, t$1337 ) ), 8 )
 2833.              _substr(t$1338,1,max( 0, t$1337 )) = //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelf,1,10), //(  _substr(extw,1,2), //( 'dir', //( '.', //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )), //(  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )), '.files' ) ) ) ) ) ) ) ) )
 2831.             $Unit_temp_O0 = nfprt
 2831.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$203,  _substr(t$202,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1338,1,max( 0, t$1337 )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 2833.             _free( t$1339 )
 2834.              _substr(t$1340,1,11) = '**(ERROR)**'
 2834.             call _stop(  _substr(t$1340,1,11) )
 2834.          else
 2834.             goto 30
 2834.          endif
 2834.       else
 2834.    30    continue
 2838.          iyi = idate(4)
 2839.          imi = idate(2)
 2840.          idi = idate(3)
 2841.          ihi = idate(1)
 2842.          $_IOitem_P0(0) = iyi
 2842.          $_IOitem_P0(1) = imi
 2842.          $_IOitem_P0(2) = idi
 2842.          $_IOitem_P0(3) = ihi
 2842.          _fwrite( _clist( 0, 0, 3,  _substr(label,1,10), Null_Arg, Null_Arg, t$205,  _substr(t$204,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2843.          iyc = idatec(4)
 2844.          imc = idatec(2)
 2845.          idc = idatec(3)
 2846.          ihc = idatec(1)
 2847.          $_IOitem_P1(0) = iyc
 2847.          $_IOitem_P1(1) = imc
 2847.          $_IOitem_P1(2) = idc
 2847.          $_IOitem_P1(3) = ihc
 2847.          _fwrite( _clist( 0, 0, 3,  _substr(labelc,1,10), Null_Arg, Null_Arg, t$207,  _substr(t$206,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2848.           _substr(extn,1,2) =  _substr(extw,1,2)
 2849.           _substr(extn,3,3) =  _substr(ext,1,3)
 2850.           _substr(extn,6,1) = '.'
 2851.           _substr(exdn,1,2) =  _substr(exdw,1,2)
 2852.          if (  _substr(ext,1,3) == 'icn' ) then
 2853.              _substr(exdn,3,3) = 'dic'
 2854.          else if (  _substr(ext,1,3) == 'inz' ) then
 2855.              _substr(exdn,3,3) = 'din'
 2855.          else
 2857.              _substr(exdn,3,3) = 'dir'
 2857.          endif
 2859.           _substr(exdn,6,1) = '.'
 2861.          $Unit_temp_O1 = nfprt
 2861.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$209,  _substr(t$208,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' OPNPRG : ', 0x800600000000L ), _iotype(  _substr(labeli,1,10), 0x800600000000L ), _iotype(  _substr(label,1,10), 0x800600000000L ), _iotype(  _substr(labelc,1,10), 0x800600000000L ) ) )
 2863.          t$1328 = nedrct
 2863.          t$1342(1) = 0x100000000000000L
 2863. !dir$ suppress t$1328
 2863.          t$1342(2) = int( loc( t$1328 ), 8 )
 2863.          t$1342(3) = 0
 2863.          t$1342(4) = 0
 2863.          t$1342(5) = 0
 2863.          t$1342(7) = 0
 2863.          t$1342(8) = 0
 2863.          t$1341 = _close( t$1342 )
 2864.          t$1328 = neprog
 2864.          t$1344(1) = 0x100000000000000L
 2864. !dir$ suppress t$1328
 2864.          t$1344(2) = int( loc( t$1328 ), 8 )
 2864.          t$1344(3) = 0
 2864.          t$1344(4) = 0
 2864.          t$1344(5) = 0
 2864.          t$1344(7) = 0
 2864.          t$1344(8) = 0
 2864.          t$1343 = _close( t$1344 )
 2867.          ierr = 0
 2865.          t$1328 = nedrct
 2865.          t$1346 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + max( 0, is ) + 33
 2866.          t$1348 = int( _alloc( max( 0, t$1346 ) ), 8 )
 2866.           _substr(t$1347,1,max( 0, t$1346 )) = //(  _substr(roperm,1,max( 0, is )), //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(exdn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) ) )
 2867.           _substr(t$1349,1,7) = 'REPLACE'
 2867.           _substr(t$1350,1,10) = 'SEQUENTIAL'
 2866.           _substr(t$1351,1,9) = 'FORMATTED'
 2867.           _substr(t$1352,1,5) = 'WRITE'
 2865.          t$1353(1) = 0x100000000000000L
 2865. !dir$ suppress t$1328
 2865.          t$1353(2) = int( loc( t$1328 ), 8 )
 2865. !dir$ suppress ierr
 2865.          t$1353(3) = int( loc( ierr ), 8 )
 2865.          t$1353(4) = 0
 2865. !dir$ suppress  _substr(t$1347,1,max( 0, t$1346 ))
 2865.          t$1353(5) = int( loc(  _substr(t$1347,1,max( 0, t$1346 )) ), 8 )
 2865.          t$1353(6) = ( max( 0, t$1346 ) )
 2865. !dir$ suppress  _substr(t$1349,1,7)
 2865.          t$1353(7) = int( loc(  _substr(t$1349,1,7) ), 8 )
 2865.          t$1353(8) = 7
 2865. !dir$ suppress  _substr(t$1350,1,10)
 2865.          t$1353(9) = int( loc(  _substr(t$1350,1,10) ), 8 )
 2865.          t$1353(10) = 10
 2865. !dir$ suppress  _substr(t$1351,1,9)
 2865.          t$1353(11) = int( loc(  _substr(t$1351,1,9) ), 8 )
 2865.          t$1353(12) = 9
 2865.          t$1353(13) = 0
 2865.          t$1353(14) = 0
 2865.          t$1353(16) = 0
 2865. !dir$ suppress  _substr(t$1352,1,5)
 2865.          t$1353(18) = int( loc(  _substr(t$1352,1,5) ), 8 )
 2865.          t$1353(19) = 5
 2865.          t$1353(20) = 0
 2865.          t$1353(22) = 0
 2865.          t$1353(24) = 0x2000200000000L
 2865.          t$1353(25) = 0
 2865.          t$1353(27) = 0
 2865.          t$1353(29) = 0
 2865.          t$1353(31) = 0
 2865.          t$1353(33) = 0
 2865.          t$1353(35) = 0
 2865.          t$1345 = _open( t$1353 )
 2866.          _free( t$1348 )
 2868.          if ( ierr /= 0 ) then
 2869.             t$1354 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + 33
 2870.             t$1356 = int( _alloc( max( 0, t$1354 ) ), 8 )
 2870.              _substr(t$1355,1,max( 0, t$1354 )) = //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(exdn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) )
 2869.             $Unit_temp_O2 = nfprt
 2869.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$211,  _substr(t$210,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1355,1,max( 0, t$1354 )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 2870.             _free( t$1356 )
 2871.              _substr(t$1357,1,11) = '**(ERROR)**'
 2871.             call _stop(  _substr(t$1357,1,11) )
 2871.          else
 2876.             ierr = 0
 2874.             t$1328 = neprog
 2874.             t$1359 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + max( 0, is ) + 33
 2875.             t$1361 = int( _alloc( max( 0, t$1359 ) ), 8 )
 2875.              _substr(t$1360,1,max( 0, t$1359 )) = //(  _substr(roperm,1,max( 0, is )), //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(extn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) ) )
 2876.              _substr(t$1362,1,7) = 'REPLACE'
 2876.              _substr(t$1363,1,10) = 'SEQUENTIAL'
 2875.              _substr(t$1364,1,11) = 'UNFORMATTED'
 2876.              _substr(t$1365,1,5) = 'WRITE'
 2874.             t$1366(1) = 0x100000000000000L
 2874. !dir$ suppress t$1328
 2874.             t$1366(2) = int( loc( t$1328 ), 8 )
 2874. !dir$ suppress ierr
 2874.             t$1366(3) = int( loc( ierr ), 8 )
 2874.             t$1366(4) = 0
 2874. !dir$ suppress  _substr(t$1360,1,max( 0, t$1359 ))
 2874.             t$1366(5) = int( loc(  _substr(t$1360,1,max( 0, t$1359 )) ), 8 )
 2874.             t$1366(6) = ( max( 0, t$1359 ) )
 2874. !dir$ suppress  _substr(t$1362,1,7)
 2874.             t$1366(7) = int( loc(  _substr(t$1362,1,7) ), 8 )
 2874.             t$1366(8) = 7
 2874. !dir$ suppress  _substr(t$1363,1,10)
 2874.             t$1366(9) = int( loc(  _substr(t$1363,1,10) ), 8 )
 2874.             t$1366(10) = 10
 2874. !dir$ suppress  _substr(t$1364,1,11)
 2874.             t$1366(11) = int( loc(  _substr(t$1364,1,11) ), 8 )
 2874.             t$1366(12) = 11
 2874.             t$1366(13) = 0
 2874.             t$1366(14) = 0
 2874.             t$1366(16) = 0
 2874. !dir$ suppress  _substr(t$1365,1,5)
 2874.             t$1366(18) = int( loc(  _substr(t$1365,1,5) ), 8 )
 2874.             t$1366(19) = 5
 2874.             t$1366(20) = 0
 2874.             t$1366(22) = 0
 2874.             t$1366(24) = 0x2000200000000L
 2874.             t$1366(25) = 0
 2874.             t$1366(27) = 0
 2874.             t$1366(29) = 0
 2874.             t$1366(31) = 0
 2874.             t$1366(33) = 0
 2874.             t$1366(35) = 0
 2874.             t$1358 = _open( t$1366 )
 2875.             _free( t$1361 )
 2877.             if ( ierr /= 0 ) then
 2878.                t$1367 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + 33
 2879.                t$1369 = int( _alloc( max( 0, t$1367 ) ), 8 )
 2879.                 _substr(t$1368,1,max( 0, t$1367 )) = //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(extn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) )
 2878.                $Unit_temp_O3 = nfprt
 2878.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$213,  _substr(t$212,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1368,1,max( 0, t$1367 )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 2879.                _free( t$1369 )
 2880.                 _substr(t$1370,1,11) = '**(ERROR)**'
 2880.                call _stop(  _substr(t$1370,1,11) )
 2880.             else
 2883.                t$1371 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + max( 0, is ) + 33
 2884.                t$1373 = int( _alloc( max( 0, t$1371 ) ), 8 )
 2884.                 _substr(t$1372,1,max( 0, t$1371 )) = //(  _substr(roperm,1,max( 0, is )), //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(exdn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) ) )
 2883.                $Unit_temp_O4 = nefcst
 2883.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$215,  _substr(t$214,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1372,1,max( 0, t$1371 )), 0x800600000000L ) ) )
 2884.                _free( t$1373 )
 2885.                t$1374 = ( _ltrim(  _substr(modout,1,23) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + max( 0, is ) + 33
 2886.                t$1376 = int( _alloc( max( 0, t$1374 ) ), 8 )
 2886.                 _substr(t$1375,1,max( 0, t$1374 )) = //(  _substr(roperm,1,max( 0, is )), //(  _substr(modout,1,_ltrim(  _substr(modout,1,23) )), //(  _substr(namee,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(extn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) ) ) )
 2885.                $Unit_temp_O5 = nefcst
 2885.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$217,  _substr(t$216,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1375,1,max( 0, t$1374 )), 0x800600000000L ) ) )
 2886.                _free( t$1376 )
 2886.             endif
 2886.          endif
 2886.       endif
 2887.       return
 2887.       end
 2887.       
 3032.       
 3032.       subroutine opnfct( nfdrct, nfdiag, nffcst, ifday, tod, idate, idatec, roperm, namef, labeli, labelf, extw, exdw, trunc, lev )
 2896.       t$414 = _len( trunc )
 2896.       t$415 = _len( lev )
 2896.       t$218 = _len( trunc ) + _len( lev ) + 33
 2896.       t$416 = _len( trunc ) + _len( lev ) + 33
 2896.       t$417 = int( _alloc( _len( trunc ) + _len( lev ) + 33 ), 8 )
 2896.       t$219 = _len( trunc ) + _len( lev ) + 33
 2896.       t$418 = _len( trunc ) + _len( lev ) + 33
 2896.       t$419 = int( _alloc( _len( trunc ) + _len( lev ) + 33 ), 8 )
 2942.       $inic_S0 = ifday == 0 .and. tod == 0
 2944.       if ( icall /= 1 ) then
 2896.          goto 10
 2896.       else if ( $inic_S0 ) then
 2945.           _substr(ext,1,3) = 'icn'
 2945.       else
 2945.    10    continue
 2946.          if ( icall /= 2 ) then
 2946.             goto 20
 2946.          else if ( $inic_S0 ) then
 2947.             icall = 3
 2948.              _substr(ext,1,3) = 'inz'
 2948.          else
 2948.    20       continue
 2950.              _substr(ext,1,3) = 'fct'
 2950.          endif
 2950.       endif
 2952.       if ( icall == 1 ) then
 2953.          icall = 2
 2954.          $is_S1 = -1 + ( _index( //(  _substr(roperm,1,200), ' ' ), ' ', .false. ) )
 2955.          is = cvmg( $is_S1, 1, $is_S1 > 0 )
 2958.          ierr = 0
 2956.          t$1378 = nffcst
 2956.          t$1379 = ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + _zla( 0, cvmg( $is_S1, 1, $is_S1 > 0 ) ) + 40
 2957.          t$1381 = int( _alloc( _zla( 0, t$1379 ) ), 8 )
 2957.           _substr(t$1380,1,_zla( 0, t$1379 )) = //(  _substr(roperm,1,_zla( 0, cvmg( $is_S1, 1, $is_S1 > 0 ) )), //( '/', //(  _substr(namef,1,7), //(  _substr(labeli,1,10), //(  _substr(labelf,1,10), //(  _substr(extw,1,2), //( 'dir', //( '.', //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )), //(  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )), '.files' ) ) ) ) ) ) ) ) ) )
 2958.           _substr(t$1382,1,7) = 'REPLACE'
 2958.           _substr(t$1383,1,10) = 'SEQUENTIAL'
 2958.           _substr(t$1384,1,9) = 'FORMATTED'
 2958.           _substr(t$1385,1,5) = 'WRITE'
 2956.          t$1386(1) = 0x100000000000000L
 2956. !dir$ suppress t$1378
 2956.          t$1386(2) = int( loc( t$1378 ), 8 )
 2956. !dir$ suppress ierr
 2956.          t$1386(3) = int( loc( ierr ), 8 )
 2956.          t$1386(4) = 0
 2956. !dir$ suppress  _substr(t$1380,1,max( 0, t$1379 ))
 2956.          t$1386(5) = int( loc(  _substr(t$1380,1,max( 0, t$1379 )) ), 8 )
 2956.          t$1386(6) = ( max( 0, t$1379 ) )
 2956. !dir$ suppress  _substr(t$1382,1,7)
 2956.          t$1386(7) = int( loc(  _substr(t$1382,1,7) ), 8 )
 2956.          t$1386(8) = 7
 2956. !dir$ suppress  _substr(t$1383,1,10)
 2956.          t$1386(9) = int( loc(  _substr(t$1383,1,10) ), 8 )
 2956.          t$1386(10) = 10
 2956. !dir$ suppress  _substr(t$1384,1,9)
 2956.          t$1386(11) = int( loc(  _substr(t$1384,1,9) ), 8 )
 2956.          t$1386(12) = 9
 2956.          t$1386(13) = 0
 2956.          t$1386(14) = 0
 2956.          t$1386(16) = 0
 2956. !dir$ suppress  _substr(t$1385,1,5)
 2956.          t$1386(18) = int( loc(  _substr(t$1385,1,5) ), 8 )
 2956.          t$1386(19) = 5
 2956.          t$1386(20) = 0
 2956.          t$1386(22) = 0
 2956.          t$1386(24) = 0x2000200000000L
 2956.          t$1386(25) = 0
 2956.          t$1386(27) = 0
 2956.          t$1386(29) = 0
 2956.          t$1386(31) = 0
 2956.          t$1386(33) = 0
 2956.          t$1386(35) = 0
 2956.          t$1377 = _open( t$1386 )
 2957.          _free( t$1381 )
 2959.          if ( ierr /= 0 ) then
 2960.             _fwrite( _clist( 0, 0, 3,  _substr(c0,1,8), Null_Arg, Null_Arg, t$221,  _substr(t$220,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
 2963.             _f90_adjustl(  _substr(t$1387,1,8),  _substr(c0,1,8) )
 2961.             t$1388 = ( _ltrim(  _substr(t$1387,1,8) ) ) + ( _ltrim(  _substr(lev,1,_len( lev )) ) ) + ( _ltrim(  _substr(trunc,1,_len( trunc )) ) ) + max( 0, is ) + 80
 2963.             t$1390 = int( _alloc( max( 0, t$1388 ) ), 8 )
 2963.              _substr(t$1389,1,max( 0, t$1388 )) = //( '**(opnfct)** Open file ', //(  _substr(roperm,1,max( 0, is )), //( '/', //(  _substr(namef,1,7), //(  _substr(labeli,1,10), //(  _substr(labelf,1,10), //(  _substr(extw,1,2), //( 'dir', //( '.', //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )), //(  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )), //( '.files', //( ' returned iostat=',  _substr(t$1387,1,_ltrim(  _substr(t$1387,1,8) )) ) ) ) ) ) ) ) ) ) ) ) ) )
 2961.             call fatalerror(  _substr(t$1389,1,max( 0, t$1388 )) )
 2963.             _free( t$1390 )
 2963.          endif
 2963.       endif
 2966.       iyi = idate(4)
 2967.       imi = idate(2)
 2968.       idi = idate(3)
 2969.       ihi = idate(1)
 2970.       $_IOitem_P0(0) = iyi
 2970.       $_IOitem_P0(1) = imi
 2970.       $_IOitem_P0(2) = idi
 2970.       $_IOitem_P0(3) = ihi
 2970.       _fwrite( _clist( 0, 0, 3,  _substr(label,1,10), Null_Arg, Null_Arg, t$223,  _substr(t$222,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2971.       iyc = idatec(4)
 2972.       imc = idatec(2)
 2973.       idc = idatec(3)
 2974.       ihc = idatec(1)
 2975.       $_IOitem_P1(0) = iyc
 2975.       $_IOitem_P1(1) = imc
 2975.       $_IOitem_P1(2) = idc
 2975.       $_IOitem_P1(3) = ihc
 2975.       _fwrite( _clist( 0, 0, 3,  _substr(labelc,1,10), Null_Arg, Null_Arg, t$225,  _substr(t$224,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2976.        _substr(extn,1,2) =  _substr(extw,1,2)
 2977.        _substr(extn,3,3) =  _substr(ext,1,3)
 2978.        _substr(extn,6,1) = '.'
 2979.        _substr(exdn,1,2) =  _substr(exdw,1,2)
 2980.       if (  _substr(ext,1,3) == 'icn' ) then
 2981.           _substr(exdn,3,3) = 'dic'
 2982.       else if (  _substr(ext,1,3) == 'inz' ) then
 2983.           _substr(exdn,3,3) = 'din'
 2983.       else
 2985.           _substr(exdn,3,3) = 'dir'
 2985.       endif
 2987.        _substr(exdn,6,1) = '.'
 2989.       t$1378 = nfdrct
 2989.       t$1392(1) = 0x100000000000000L
 2989. !dir$ suppress t$1378
 2989.       t$1392(2) = int( loc( t$1378 ), 8 )
 2989.       t$1392(3) = 0
 2989.       t$1392(4) = 0
 2989.       t$1392(5) = 0
 2989.       t$1392(7) = 0
 2989.       t$1392(8) = 0
 2989.       t$1391 = _close( t$1392 )
 2990.       t$1378 = nfdiag
 2990.       t$1394(1) = 0x100000000000000L
 2990. !dir$ suppress t$1378
 2990.       t$1394(2) = int( loc( t$1378 ), 8 )
 2990.       t$1394(3) = 0
 2990.       t$1394(4) = 0
 2990.       t$1394(5) = 0
 2990.       t$1394(7) = 0
 2990.       t$1394(8) = 0
 2990.       t$1393 = _close( t$1394 )
 2994.        _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) = //(  _substr(namef,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(exdn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) )
 2996.       ierr = 0
 2995.       t$1378 = nfdrct
 2995.       t$1396 = ( _ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 1
 2995.       t$1398 = int( _alloc( max( 0, t$1396 ) ), 8 )
 2995.        _substr(t$1397,1,max( 0, t$1396 )) = //(  _substr(roperm,1,max( 0, is )), //( '/',  _substr(fnameasc,1,_ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) )) ) )
 2996.        _substr(t$1399,1,7) = 'REPLACE'
 2996.        _substr(t$1400,1,10) = 'SEQUENTIAL'
 2995.        _substr(t$1401,1,9) = 'FORMATTED'
 2996.        _substr(t$1402,1,5) = 'WRITE'
 2995.       t$1403(1) = 0x100000000000000L
 2995. !dir$ suppress t$1378
 2995.       t$1403(2) = int( loc( t$1378 ), 8 )
 2995. !dir$ suppress ierr
 2995.       t$1403(3) = int( loc( ierr ), 8 )
 2995.       t$1403(4) = 0
 2995. !dir$ suppress  _substr(t$1397,1,max( 0, t$1396 ))
 2995.       t$1403(5) = int( loc(  _substr(t$1397,1,max( 0, t$1396 )) ), 8 )
 2995.       t$1403(6) = ( max( 0, t$1396 ) )
 2995. !dir$ suppress  _substr(t$1399,1,7)
 2995.       t$1403(7) = int( loc(  _substr(t$1399,1,7) ), 8 )
 2995.       t$1403(8) = 7
 2995. !dir$ suppress  _substr(t$1400,1,10)
 2995.       t$1403(9) = int( loc(  _substr(t$1400,1,10) ), 8 )
 2995.       t$1403(10) = 10
 2995. !dir$ suppress  _substr(t$1401,1,9)
 2995.       t$1403(11) = int( loc(  _substr(t$1401,1,9) ), 8 )
 2995.       t$1403(12) = 9
 2995.       t$1403(13) = 0
 2995.       t$1403(14) = 0
 2995.       t$1403(16) = 0
 2995. !dir$ suppress  _substr(t$1402,1,5)
 2995.       t$1403(18) = int( loc(  _substr(t$1402,1,5) ), 8 )
 2995.       t$1403(19) = 5
 2995.       t$1403(20) = 0
 2995.       t$1403(22) = 0
 2995.       t$1403(24) = 0x2000200000000L
 2995.       t$1403(25) = 0
 2995.       t$1403(27) = 0
 2995.       t$1403(29) = 0
 2995.       t$1403(31) = 0
 2995.       t$1403(33) = 0
 2995.       t$1403(35) = 0
 2995.       t$1395 = _open( t$1403 )
 2995.       _free( t$1398 )
 2997.       if ( ierr /= 0 ) then
 2999.          _f90_adjustl(  _substr(t$1404,1,8),  _substr(c0,1,8) )
 2998.          t$1405 = ( _ltrim(  _substr(t$1404,1,8) ) ) + ( _ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 41
 2999.          t$1407 = int( _alloc( max( 0, t$1405 ) ), 8 )
 2999.           _substr(t$1406,1,max( 0, t$1405 )) = //( '**(opnfct)** Open file ', //(  _substr(roperm,1,max( 0, is )), //( '/', //(  _substr(fnameasc,1,_ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) )), //( ' returned iostat=',  _substr(t$1404,1,_ltrim(  _substr(t$1404,1,8) )) ) ) ) ) )
 2998.          call fatalerror(  _substr(t$1406,1,max( 0, t$1405 )) )
 2999.          _free( t$1407 )
 2999.       endif
 3004.        _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) = //(  _substr(namef,1,7), //(  _substr(labeli,1,10), //(  _substr(labelc,1,10), //(  _substr(extn,1,6), //(  _substr(trunc,1,_ltrim(  _substr(trunc,1,_len( trunc )) )),  _substr(lev,1,_ltrim(  _substr(lev,1,_len( lev )) )) ) ) ) ) )
 3006.       ierr = 0
 3005.       t$1378 = nfdiag
 3005.       t$1409 = ( _ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 1
 3005.       t$1411 = int( _alloc( max( 0, t$1409 ) ), 8 )
 3005.        _substr(t$1410,1,max( 0, t$1409 )) = //(  _substr(roperm,1,max( 0, is )), //( '/',  _substr(fnamebin,1,_ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) )) ) )
 3006.        _substr(t$1412,1,7) = 'REPLACE'
 3006.        _substr(t$1413,1,10) = 'SEQUENTIAL'
 3005.        _substr(t$1414,1,11) = 'UNFORMATTED'
 3006.        _substr(t$1415,1,5) = 'WRITE'
 3005.       t$1416(1) = 0x100000000000000L
 3005. !dir$ suppress t$1378
 3005.       t$1416(2) = int( loc( t$1378 ), 8 )
 3005. !dir$ suppress ierr
 3005.       t$1416(3) = int( loc( ierr ), 8 )
 3005.       t$1416(4) = 0
 3005. !dir$ suppress  _substr(t$1410,1,max( 0, t$1409 ))
 3005.       t$1416(5) = int( loc(  _substr(t$1410,1,max( 0, t$1409 )) ), 8 )
 3005.       t$1416(6) = ( max( 0, t$1409 ) )
 3005. !dir$ suppress  _substr(t$1412,1,7)
 3005.       t$1416(7) = int( loc(  _substr(t$1412,1,7) ), 8 )
 3005.       t$1416(8) = 7
 3005. !dir$ suppress  _substr(t$1413,1,10)
 3005.       t$1416(9) = int( loc(  _substr(t$1413,1,10) ), 8 )
 3005.       t$1416(10) = 10
 3005. !dir$ suppress  _substr(t$1414,1,11)
 3005.       t$1416(11) = int( loc(  _substr(t$1414,1,11) ), 8 )
 3005.       t$1416(12) = 11
 3005.       t$1416(13) = 0
 3005.       t$1416(14) = 0
 3005.       t$1416(16) = 0
 3005. !dir$ suppress  _substr(t$1415,1,5)
 3005.       t$1416(18) = int( loc(  _substr(t$1415,1,5) ), 8 )
 3005.       t$1416(19) = 5
 3005.       t$1416(20) = 0
 3005.       t$1416(22) = 0
 3005.       t$1416(24) = 0x2000200000000L
 3005.       t$1416(25) = 0
 3005.       t$1416(27) = 0
 3005.       t$1416(29) = 0
 3005.       t$1416(31) = 0
 3005.       t$1416(33) = 0
 3005.       t$1416(35) = 0
 3005.       t$1408 = _open( t$1416 )
 3005.       _free( t$1411 )
 3007.       if ( ierr /= 0 ) then
 3009.          _f90_adjustl(  _substr(t$1417,1,8),  _substr(c0,1,8) )
 3008.          t$1418 = ( _ltrim(  _substr(t$1417,1,8) ) ) + ( _ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 41
 3009.          t$1420 = int( _alloc( max( 0, t$1418 ) ), 8 )
 3009.           _substr(t$1419,1,max( 0, t$1418 )) = //( '**(opnfct)** Open file ', //(  _substr(roperm,1,max( 0, is )), //( '/', //(  _substr(fnamebin,1,_ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) )), //( ' returned iostat=',  _substr(t$1417,1,_ltrim(  _substr(t$1417,1,8) )) ) ) ) ) )
 3008.          call fatalerror(  _substr(t$1419,1,max( 0, t$1418 )) )
 3009.          _free( t$1420 )
 3009.       endif
 3014.       _fwrite( _clist( 0, 0, 3,  _substr(c0,1,8), Null_Arg, Null_Arg, t$227,  _substr(t$226,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ) ) )
 3015.       _fwrite( _clist( 0, 0, 3,  _substr(c1,1,8), Null_Arg, Null_Arg, t$229,  _substr(t$228,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( tod, 0x804060300000000L ) ) )
 3016.        _substr(t$1421,1,12) = '**(opnfct)**'
 3016.       t$1422 = 32 + ( _ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) ) )
 3016.       t$1424 = int( _alloc( max( 0, t$1422 ) ), 8 )
 3016.        _substr(t$1423,1,max( 0, t$1422 )) = //( ' writes file ', //(  _substr(fnamebin,1,_ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) )), ' at simulation time' ) )
 3016.       call msgone(  _substr(t$1421,1,12),  _substr(t$1423,1,max( 0, t$1422 )) )
 3016.       _free( t$1424 )
 3018.       _f90_adjustl(  _substr(t$1425,1,8),  _substr(c0,1,8) )
 3019.       _f90_adjustl(  _substr(t$1426,1,8),  _substr(c1,1,8) )
 3018.        _substr(line,1,256) = //( ' ', //(  _substr(t$1425,1,_ltrim(  _substr(t$1425,1,8) )), //( ' days and ', //(  _substr(t$1426,1,_ltrim(  _substr(t$1426,1,8) )), ' seconds; contains state of the atmosphere at' ) ) ) )
 3020.       lastused = _ltrim(  _substr(line,1,256) )
 3021.       $IOitem_O2 = ihc
 3021.       _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,8), Null_Arg, Null_Arg, t$231,  _substr(t$230,1,18), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O2, 0x2000200000000L ) ) )
 3022.       lastused = 8 + lastused
 3023.       $_IOitem_P2(0) = idc
 3023.       $_IOitem_P2(1) = imc
 3023.       $_IOitem_P2(2) = iyc
 3023.       _fwrite( _clist( 0, 0, 3,  _substr(line,1 + lastused,10), Null_Arg, Null_Arg, t$233,  _substr(t$232,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P2(:( 0, 2, 1 )), 0x2000200000000L ) ) )
 3026.        _substr(t$1427,1,12) = '**(opnfct)**'
 3026.       call msgone(  _substr(t$1427,1,12),  _substr(line,1,max( 0, 10 + lastused )) )
 3030.       t$1428 = ( _ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 1
 3030.       t$1430 = int( _alloc( max( 0, t$1428 ) ), 8 )
 3030.        _substr(t$1429,1,max( 0, t$1428 )) = //(  _substr(roperm,1,max( 0, is )), //( '/',  _substr(fnameasc,1,_ltrim(  _substr(fnameasc,1,( _len( trunc ) + _len( lev ) + 33 )) )) ) )
 3030.       $Unit_temp_O0 = nffcst
 3030.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$235,  _substr(t$234,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1429,1,max( 0, t$1428 )), 0x800600000000L ) ) )
 3030.       _free( t$1430 )
 3031.       t$1431 = ( _ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) ) ) + max( 0, is ) + 1
 3031.       t$1433 = int( _alloc( max( 0, t$1431 ) ), 8 )
 3031.        _substr(t$1432,1,max( 0, t$1431 )) = //(  _substr(roperm,1,max( 0, is )), //( '/',  _substr(fnamebin,1,_ltrim(  _substr(fnamebin,1,( _len( trunc ) + _len( lev ) + 33 )) )) ) )
 3031.       $Unit_temp_O1 = nffcst
 3031.       _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$237,  _substr(t$236,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(t$1432,1,max( 0, t$1431 )), 0x800600000000L ) ) )
 3031.       _free( t$1433 )
 2896.       _free( t$419 )
 2896.       _free( t$417 )
 3032.       return
 3032.       end
 3032.       
 3254.       
 3254.       subroutine wrprog( nfdrct, nfdiag, ifday, tod, idate, idatec, qrot, qdiv, qq, qlnp, qtmp, z0, gtsea, td0, capac0, w0, imask, temp2m, umes2m, uve10m, vve10m, nffcst, del, qgzs, lsmk, roperm, namef, labeli, labelf, extw, exdw, trunc, lev )
 3040.       idate%dim_1%LB = 1
 3040.       idatec%dim_1%LB = 1
 3040.       qrot%dim_1%LB = 1
 3040.       qrot%dim_2%LB = 1
 3040.       qdiv%dim_1%LB = 1
 3040.       qdiv%dim_2%LB = 1
 3040.       qq%dim_1%LB = 1
 3040.       qq%dim_2%LB = 1
 3040.       qlnp%dim_1%LB = 1
 3040.       qtmp%dim_1%LB = 1
 3040.       qtmp%dim_2%LB = 1
 3040.       t$238 = ibmax
 3040.       t$239 = jbmax
 3058.       t$420 = _zla( 0, ibmax )
 3040.       t$421 = _zla( 0, ibmax )
 3058.       t$422 = _zla( 0, jbmax )
 3040.       t$423 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3040.       t$424 = 2 * _zla( 0, ibmax )
 3040.       t$425 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 2
 3040.       t$426 = 3 * _zla( 0, ibmax )
 3040.       t$427 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 3
 3040.       t$240 = kmaxnew
 3069.       t$428 = _zla( 0, kmaxnew )
 3069.       qgzs%dim_1%LB = 1
 3069.       lsmk%dim_1%LB = 1
 3040.       t$429 = _len( trunc )
 3040.       t$430 = _len( lev )
   79.       if ( t$143 == 0 ) then
   79.          t$436(1) = 3
   79.          t$437(1) = 0
   79.          t$438(1) = 1
   79.          t$433(1) = int( loc( t$142 ), 8 )
   79.          t$434(1) = 0
   79.          t$435(1) = int( loc( t$431 ), 8 )
   79.          t$143 = __get_dynamic_type( 3, t$433(1), t$436(1), 1, t$434(1), t$435(1), t$437(1), t$438(1) )
   79.       endif
 3088.       fields%header%el_len = 768
 3088.       fields%header%assoc = 0
 3088.       fields%header%ptr_alloc = 0
 3088.       fields%header%p_or_a = 2
 3088.       fields%header%a_contig = 1
 3088.       fields%header%dv_versn = 2
 3088.       fields%header%dv_smunit = 64
 3088.       fields%header%d_type = 0
 3088.       fields%header%n_params = 0
 3088.       fields%header%pad_codim = 0
 3088.       fields%header%n_codim = 0
 3088.       fields%header%pad_dim = 0
 3088.       fields%header%n_dim = 1
 3088.       fields%header%d_type_idx = t$143
 3088.       fields%header%typ_code = 8
 3088.       fields%header%orig_base = 0
 3088.       fields%header%orig_size = 0
 3088.       fields%dim_1%LB = 1
 3088.       fields%dim_1%EX = 0
 3088.       fields%dim_1%SM = 1
   79.       interp_type%header%el_len = 32
   79.       interp_type%header%assoc = 0
   79.       interp_type%header%ptr_alloc = 0
   79.       interp_type%header%p_or_a = 2
   79.       interp_type%header%a_contig = 1
   79.       interp_type%header%dv_versn = 2
   79.       interp_type%header%dv_smunit = 32
   79.       interp_type%header%d_type = 0
   79.       interp_type%header%n_params = 0
   79.       interp_type%header%pad_codim = 0
   79.       interp_type%header%n_codim = 0
   79.       interp_type%header%pad_dim = 0
   79.       interp_type%header%n_dim = 1
   79.       interp_type%header%d_type_idx = 10
   79.       interp_type%header%typ_code = 131074
   79.       interp_type%header%orig_base = 0
   79.       interp_type%header%orig_size = 0
   79.       interp_type%dim_1%LB = 1
   79.       interp_type%dim_1%EX = 0
   79.       interp_type%dim_1%SM = 1
 3040.       t$241 = ( 2 * mnmax )
 3081.       t$440 = max( 0, ( 2 * mnmax ) )
 3040.       t$441 = max( 0, ( 2 * mnmax ) )
 3040.       t$442 = _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) )
 3081.       t$445 = _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8
 3082.       t$446 = 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 )
 3082.       t$448 = 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 ) + 8 * max( 0, ( 2 * mnmax ) )
 3040.       t$449 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 3040.       t$450 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 6
 3080.       t$451 = 8 * ( ( 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 ) + 8 * max( 0, ( 2 * mnmax ) ) + 7 ) / 8 )
 3080.       t$453 = 8 * ( ( 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 ) + 8 * max( 0, ( 2 * mnmax ) ) + 7 ) / 8 ) + _zla( 0, ibmax ) * _zla( 0, jbmax ) * 48
 3040.       t$443 = int( _alloc( 8 * ( ( 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 ) + 8 * max( 0, ( 2 * mnmax ) ) + 7 ) / 8 ) + _zla( 0, ibmax ) * _zla( 0, jbmax ) * 48 ), 8 )
 3081.       t$444 = t$443
 3082.       t$447 = t$443 + 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 )
 3080.       t$452 = t$443 + 8 * ( ( 8 * ( ( 7 + _zla( 0, kmaxnew ) * max( 0, ( 2 * mnmax ) ) * 8 ) / 8 ) + 8 * max( 0, ( 2 * mnmax ) ) + 7 ) / 8 )
 3092.       if ( myid == 0 ) then
 3093.          t$1435 = 0
 3093.          t$1438 = 0
 3093.          if ( idate%header%a_contig == 1 ) then
 3093. !dir$ suppress (idate%base_addr)(1, 0)
 3093.             t$1434 = loc( (idate%base_addr)(1, 0) )
 3093.          else
 3093.             t$1435 = idate%dim_1%EX
 3093.             t$1438 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 3093.             $F_A33 = idate%dim_1%EX
 3093.             if ( idate%dim_1%EX > 0 ) then
 3093.                $SC_idate_I34 = idate%dim_1%SM
 3093.                $I_L3093_118 = 0
 3093. !dir$ ivdep
 3093.                do
 3093.                   t$1437(1 + $I_L3093_118) = (idate%base_addr)(1 + $I_L3093_118, 0)
 3093.                   $I_L3093_118 = 1 + $I_L3093_118
 3093.                   if ( $I_L3093_118 >= $F_A33 ) exit
 3093.                enddo
 3093.             endif
 3093. !dir$ suppress t$1437
 3093.             t$1434 = loc( t$1437 )
 3093.          endif
 3093.          t$1440 = 0
 3093.          t$1443 = 0
 3093.          if ( idatec%header%a_contig == 1 ) then
 3093. !dir$ suppress (idatec%base_addr)(1, 0)
 3093.             t$1439 = loc( (idatec%base_addr)(1, 0) )
 3093.          else
 3093.             t$1440 = idatec%dim_1%EX
 3093.             t$1443 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
 3093.             $F_A34 = idatec%dim_1%EX
 3093.             if ( idatec%dim_1%EX > 0 ) then
 3093.                $SC_idatec_I35 = idatec%dim_1%SM
 3093.                $I_L3093_120 = 0
 3093. !dir$ ivdep
 3093.                do
 3093.                   t$1442(1 + $I_L3093_120) = (idatec%base_addr)(1 + $I_L3093_120, 0)
 3093.                   $I_L3093_120 = 1 + $I_L3093_120
 3093.                   if ( $I_L3093_120 >= $F_A34 ) exit
 3093.                enddo
 3093.             endif
 3093. !dir$ suppress t$1442
 3093.             t$1439 = loc( t$1442 )
 3093.          endif
 3093.          call opnfct( nfdrct, nfdiag, nffcst, ifday, tod, t$1434, t$1439,  _substr(roperm,1,200),  _substr(namef,1,7),  _substr(labeli,1,10),  _substr(labelf,1,10),  _substr(extw,1,5),  _substr(exdw,1,5),  _substr(trunc,1,_len( trunc )),  _substr(lev,1,_len( lev )) )
 3093.          if ( idatec%header%a_contig /= 1 ) then
 3093.             _free( t$1443 )
 3093.          endif
 3093.          if ( idate%header%a_contig /= 1 ) then
 3093.             _free( t$1438 )
 3093.          endif
 3096.          t$1445 = 0
 3096.          t$1448 = 0
 3096.          if ( idate%header%a_contig == 1 ) then
 3096. !dir$ suppress (idate%base_addr)(1, 0)
 3096.             t$1444 = loc( (idate%base_addr)(1, 0) )
 3096.          else
 3096.             t$1445 = idate%dim_1%EX
 3096.             t$1448 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 3096.             $F_A35 = idate%dim_1%EX
 3096.             if ( idate%dim_1%EX > 0 ) then
 3096.                $SC_idate_I34 = idate%dim_1%SM
 3096.                $SC_idate_I36 = idate%dim_1%LB
 3096.                $I_L3096_122 = 0
 3096. !dir$ ivdep
 3096.                do
 3096.                   t$1447(1 + $I_L3096_122) = (idate%base_addr)(1 + $I_L3096_122, 0)
 3096.                   $I_L3096_122 = 1 + $I_L3096_122
 3096.                   if ( $I_L3096_122 >= $F_A35 ) exit
 3096.                enddo
 3096.             endif
 3096. !dir$ suppress t$1447
 3096.             t$1444 = loc( t$1447 )
 3096.          endif
 3096.          call writedir8( nfdrct, t$1444, (idatec%base_addr)(1, 0), (idatec%base_addr)(3, 0), (idatec%base_addr)(2, 0), (idatec%base_addr)(4, 0), del(1), tod, ifday )
 3096.          if ( idate%header%a_contig /= 1 ) then
 3096.             _free( t$1448 )
 3096.          endif
 3098.          ifday4 = ifday
 3099.          tod4 = tod
 3100.          $I_L3100_102 = 0
 3100. !dir$ ivdep
 3100.          do
 3101.             idat4(1 + $I_L3100_102) = (idate%base_addr)(1 + $I_L3100_102, 0)
 3102.             idat4c(1 + $I_L3100_102) = (idatec%base_addr)(1 + $I_L3100_102, 0)
 3103.             $I_L3100_102 = 1 + $I_L3100_102
 3100.             if ( $I_L3100_102 >= 4 ) exit
 3100.          enddo
 3105.          call writeproghead8( nfdiag, ifday4, tod4, idat4(1), idat4c(1) )
 3105.       endif
 3110.       t$1451 = 0
 3110.       t$1454 = 0
 3110.       if ( qlnp%header%a_contig == 1 ) then
 3110. !dir$ suppress (qlnp%base_addr)(1, 0)
 3110.          t$1450 = loc( (qlnp%base_addr)(1, 0) )
 3110.       else
 3110.          t$1451 = qlnp%dim_1%EX
 3110.          t$1454 = int( _alloc( max( 0, 8 * max( 0, qlnp%dim_1%EX ) ) ), 8 )
 3110.          $F_A36 = qlnp%dim_1%EX
 3110.          if ( qlnp%dim_1%EX > 0 ) then
 3110.             $SC_qlnp_I37 = qlnp%dim_1%SM
 3110.             $SC_qlnp_I38 = qlnp%dim_1%LB
 3110.             $I_L3110_124 = 0
 3110. !dir$ ivdep
 3110.             do
 3110.                t$1453(1 + $I_L3110_124) = (qlnp%base_addr)(1 + $I_L3110_124, 0)
 3110.                $I_L3110_124 = 1 + $I_L3110_124
 3110.                if ( $I_L3110_124 >= $F_A36 ) exit
 3110.             enddo
 3110.          endif
 3110. !dir$ suppress t$1453
 3110.          t$1450 = loc( t$1453 )
 3110.       endif
 3110.       t$1456 = 0
 3110.       t$1457 = 0
 3110.       t$1461 = 0
 3110.       if ( qdiv%header%a_contig == 1 ) then
 3110. !dir$ suppress (qdiv%base_addr)(1, 1, 0)
 3110.          t$1455 = loc( (qdiv%base_addr)(1, 1, 0) )
 3110.       else
 3110.          t$1456 = qdiv%dim_1%EX
 3110.          t$1457 = qdiv%dim_2%EX
 3110.          t$1461 = int( _alloc( max( 0, max( 0, qdiv%dim_2%EX ) * max( 0, qdiv%dim_1%EX ) * 8 ) ), 8 )
 3110.          $F_A37 = qdiv%dim_2%EX
 3110.          $F_A38 = qdiv%dim_1%EX
 3110.          if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 3110.             $SC_qdiv_I39 = qdiv%dim_1%SM
 3110.             $SC_qdiv_I43 = qdiv%dim_1%EX
 3110.             $SC_qdiv_I41 = qdiv%dim_2%SM
 3110.             $SC_qdiv_I42 = qdiv%dim_2%LB
 3110.             $SC_qdiv_I40 = qdiv%dim_1%LB
 3110.             $I_L3110_148 = 0
 3110.             do
 3110.                $I_L3110_126 = 0
 3110. !dir$ ivdep
 3110.                do
 3110.                   t$1460(1 + $I_L3110_126, 1 + $I_L3110_148) = (qdiv%base_addr)(1 + $I_L3110_126, 1 + $I_L3110_148, 0)
 3110.                   $I_L3110_126 = 1 + $I_L3110_126
 3110.                   if ( $I_L3110_126 >= $F_A38 ) exit
 3110.                enddo
 3110.                $I_L3110_148 = 1 + $I_L3110_148
 3110.                if ( $I_L3110_148 >= $F_A37 ) exit
 3110.             enddo
 3110.          endif
 3110. !dir$ suppress t$1460
 3110.          t$1455 = loc( t$1460 )
 3110.       endif
 3110.       t$1463 = 0
 3110.       t$1464 = 0
 3110.       t$1468 = 0
 3110.       if ( qtmp%header%a_contig == 1 ) then
 3110. !dir$ suppress (qtmp%base_addr)(1, 1, 0)
 3110.          t$1462 = loc( (qtmp%base_addr)(1, 1, 0) )
 3110.       else
 3110.          t$1463 = qtmp%dim_1%EX
 3110.          t$1464 = qtmp%dim_2%EX
 3110.          t$1468 = int( _alloc( max( 0, max( 0, qtmp%dim_2%EX ) * max( 0, qtmp%dim_1%EX ) * 8 ) ), 8 )
 3110.          $F_A39 = qtmp%dim_2%EX
 3110.          $F_A40 = qtmp%dim_1%EX
 3110.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 3110.             $SC_qtmp_I44 = qtmp%dim_1%SM
 3110.             $SC_qtmp_I48 = qtmp%dim_1%EX
 3110.             $SC_qtmp_I46 = qtmp%dim_2%SM
 3110.             $SC_qtmp_I47 = qtmp%dim_2%LB
 3110.             $SC_qtmp_I45 = qtmp%dim_1%LB
 3110.             $I_L3110_150 = 0
 3110.             do
 3110.                $I_L3110_128 = 0
 3110. !dir$ ivdep
 3110.                do
 3110.                   t$1467(1 + $I_L3110_128, 1 + $I_L3110_150) = (qtmp%base_addr)(1 + $I_L3110_128, 1 + $I_L3110_150, 0)
 3110.                   $I_L3110_128 = 1 + $I_L3110_128
 3110.                   if ( $I_L3110_128 >= $F_A40 ) exit
 3110.                enddo
 3110.                $I_L3110_150 = 1 + $I_L3110_150
 3110.                if ( $I_L3110_150 >= $F_A39 ) exit
 3110.             enddo
 3110.          endif
 3110. !dir$ suppress t$1467
 3110.          t$1462 = loc( t$1467 )
 3110.       endif
 3110.       t$1470 = 0
 3110.       t$1471 = 0
 3110.       t$1475 = 0
 3110.       if ( qrot%header%a_contig == 1 ) then
 3110. !dir$ suppress (qrot%base_addr)(1, 1, 0)
 3110.          t$1469 = loc( (qrot%base_addr)(1, 1, 0) )
 3110.       else
 3110.          t$1470 = qrot%dim_1%EX
 3110.          t$1471 = qrot%dim_2%EX
 3110.          t$1475 = int( _alloc( max( 0, max( 0, qrot%dim_2%EX ) * max( 0, qrot%dim_1%EX ) * 8 ) ), 8 )
 3110.          $F_A41 = qrot%dim_2%EX
 3110.          $F_A42 = qrot%dim_1%EX
 3110.          if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 3110.             $SC_qrot_I49 = qrot%dim_1%SM
 3110.             $SC_qrot_I53 = qrot%dim_1%EX
 3110.             $SC_qrot_I51 = qrot%dim_2%SM
 3110.             $SC_qrot_I52 = qrot%dim_2%LB
 3110.             $SC_qrot_I50 = qrot%dim_1%LB
 3110.             $I_L3110_152 = 0
 3110.             do
 3110.                $I_L3110_130 = 0
 3110. !dir$ ivdep
 3110.                do
 3110.                   t$1474(1 + $I_L3110_130, 1 + $I_L3110_152) = (qrot%base_addr)(1 + $I_L3110_130, 1 + $I_L3110_152, 0)
 3110.                   $I_L3110_130 = 1 + $I_L3110_130
 3110.                   if ( $I_L3110_130 >= $F_A42 ) exit
 3110.                enddo
 3110.                $I_L3110_152 = 1 + $I_L3110_152
 3110.                if ( $I_L3110_152 >= $F_A41 ) exit
 3110.             enddo
 3110.          endif
 3110. !dir$ suppress t$1474
 3110.          t$1469 = loc( t$1474 )
 3110.       endif
 3110.       t$1477 = 0
 3110.       t$1478 = 0
 3110.       t$1482 = 0
 3110.       if ( qq%header%a_contig == 1 ) then
 3110. !dir$ suppress (qq%base_addr)(1, 1, 0)
 3110.          t$1476 = loc( (qq%base_addr)(1, 1, 0) )
 3110.       else
 3110.          t$1477 = qq%dim_1%EX
 3110.          t$1478 = qq%dim_2%EX
 3110.          t$1482 = int( _alloc( max( 0, max( 0, qq%dim_2%EX ) * max( 0, qq%dim_1%EX ) * 8 ) ), 8 )
 3110.          $F_A43 = qq%dim_2%EX
 3110.          $F_A44 = qq%dim_1%EX
 3110.          if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 3110.             $SC_qq_I54 = qq%dim_1%SM
 3110.             $SC_qq_I58 = qq%dim_1%EX
 3110.             $SC_qq_I56 = qq%dim_2%SM
 3110.             $SC_qq_I57 = qq%dim_2%LB
 3110.             $SC_qq_I55 = qq%dim_1%LB
 3110.             $I_L3110_154 = 0
 3110.             do
 3110.                $I_L3110_132 = 0
 3110. !dir$ ivdep
 3110.                do
 3110.                   t$1481(1 + $I_L3110_132, 1 + $I_L3110_154) = (qq%base_addr)(1 + $I_L3110_132, 1 + $I_L3110_154, 0)
 3110.                   $I_L3110_132 = 1 + $I_L3110_132
 3110.                   if ( $I_L3110_132 >= $F_A44 ) exit
 3110.                enddo
 3110.                $I_L3110_154 = 1 + $I_L3110_154
 3110.                if ( $I_L3110_154 >= $F_A43 ) exit
 3110.             enddo
 3110.          endif
 3110. !dir$ suppress t$1481
 3110.          t$1476 = loc( t$1481 )
 3110.       endif
 3110.       t$1483 = idatec
 3110.       call rmsgt( t$1450, t$1455, t$1462, t$1469, del(1), t$1476, t$1483 )
 3110.       if ( qq%header%a_contig /= 1 ) then
 3110.          _free( t$1482 )
 3110.       endif
 3110.       if ( qrot%header%a_contig /= 1 ) then
 3110.          _free( t$1475 )
 3110.       endif
 3110.       if ( qtmp%header%a_contig /= 1 ) then
 3110.          _free( t$1468 )
 3110.       endif
 3110.       if ( qdiv%header%a_contig /= 1 ) then
 3110.          _free( t$1461 )
 3110.       endif
 3110.       if ( qlnp%header%a_contig /= 1 ) then
 3110.          _free( t$1454 )
 3110.       endif
 3114.       if ( maxnodes > 1 ) then
 3117.          if ( havesurf ) then
 3117.             t$1485 = 0
 3117.             t$1488 = 0
 3117.             if ( qgzs%header%a_contig == 1 ) then
 3117. !dir$ suppress (qgzs%base_addr)(1, 0)
 3117.                t$1484 = loc( (qgzs%base_addr)(1, 0) )
 3117.             else
 3117.                t$1485 = qgzs%dim_1%EX
 3117.                t$1488 = int( _alloc( max( 0, 8 * max( 0, qgzs%dim_1%EX ) ) ), 8 )
 3117.                $F_A45 = qgzs%dim_1%EX
 3117.                if ( qgzs%dim_1%EX > 0 ) then
 3117.                   $SC_qgzs_I59 = qgzs%dim_1%SM
 3117.                   $SC_qgzs_I60 = qgzs%dim_1%LB
 3117.                   $I_L3117_134 = 0
 3117. !dir$ ivdep
 3117.                   do
 3117.                      t$1487(1 + $I_L3117_134) = (qgzs%base_addr)(1 + $I_L3117_134, 0)
 3117.                      $I_L3117_134 = 1 + $I_L3117_134
 3117.                      if ( $I_L3117_134 >= $F_A45 ) exit
 3117.                   enddo
 3117.                endif
 3117. !dir$ suppress t$1487
 3117.                t$1484 = loc( t$1487 )
 3117.             endif
 3117.             ipa$571 = 1
 3117.             ipa$572 = 1
 3117.             ipa$573 = 0
 3117.             call collect_spec( t$1484, qspec1(1), ipa$571, ipa$572, ipa$573 )
 3117.             if ( qgzs%header%a_contig /= 1 ) then
 3117.                _free( t$1488 )
 3117.             endif
 3117.          endif
 3118.          if ( myid == 0 ) then
 3119. !dir$ suppress qspec1(1)
 3119.             t$1489%base_addr = pointer to array[1] of real (kind=8)( loc( qspec1(1) ) )
 3119.             t$1489%header%el_len = 64
 3119.             t$1489%header%assoc = 1
 3119.             t$1489%header%ptr_alloc = 0
 3119.             t$1489%header%p_or_a = 0
 3119.             t$1489%header%a_contig = 1
 3119.             t$1489%header%dv_versn = 2
 3119.             t$1489%header%dv_smunit = 64
 3119.             t$1489%header%d_type = 0
 3119.             t$1489%header%n_params = 0
 3119.             t$1489%header%pad_codim = 0
 3119.             t$1489%header%n_codim = 0
 3119.             t$1489%header%pad_dim = 0
 3119.             t$1489%header%n_dim = 1
 3119.             t$1489%header%d_type_idx = 13
 3119.             t$1489%header%typ_code = 134481411
 3119.             t$1489%header%orig_base = 0
 3119.             t$1489%header%orig_size = 0
 3119.             t$1489%dim_1%LB = 1
 3119.             t$1489%dim_1%EX = ( max( 0, t$241 ) )
 3119.             t$1489%dim_1%SM = 1
 3119.             call writefield81d( nfdiag, t$1489 )
 3119.          endif
 3124.          if ( myid == 0 ) then
 3125.             t$1490 = lsmk
 3125.             call writefield81d( nfdiag, t$1490 )
 3125.          endif
 3132.          if ( havesurf ) then
 3132.             t$1492 = 0
 3132.             t$1495 = 0
 3132.             if ( qlnp%header%a_contig == 1 ) then
 3132. !dir$ suppress (qlnp%base_addr)(1, 0)
 3132.                t$1491 = loc( (qlnp%base_addr)(1, 0) )
 3132.             else
 3132.                t$1492 = qlnp%dim_1%EX
 3132.                t$1495 = int( _alloc( max( 0, 8 * max( 0, qlnp%dim_1%EX ) ) ), 8 )
 3132.                call _f90_copy_from_dv( t$1494, qlnp )
 3132. !dir$ suppress t$1494
 3132.                t$1491 = loc( t$1494 )
 3132.             endif
 3132.             ipa$576 = 1
 3132.             ipa$577 = 1
 3132.             ipa$578 = 0
 3132.             call collect_spec( t$1491, qspec1(1), ipa$576, ipa$577, ipa$578 )
 3132.             if ( qlnp%header%a_contig /= 1 ) then
 3132.                _free( t$1495 )
 3132.             endif
 3132.          endif
 3133.          if ( myid == 0 ) then
 3134. !dir$ suppress qspec1(1)
 3134.             t$1496%base_addr = pointer to array[1] of real (kind=8)( loc( qspec1(1) ) )
 3134.             t$1496%header%el_len = 64
 3134.             t$1496%header%assoc = 1
 3134.             t$1496%header%ptr_alloc = 0
 3134.             t$1496%header%p_or_a = 0
 3134.             t$1496%header%a_contig = 1
 3134.             t$1496%header%dv_versn = 2
 3134.             t$1496%header%dv_smunit = 64
 3134.             t$1496%header%d_type = 0
 3134.             t$1496%header%n_params = 0
 3134.             t$1496%header%pad_codim = 0
 3134.             t$1496%header%n_codim = 0
 3134.             t$1496%header%pad_dim = 0
 3134.             t$1496%header%n_dim = 1
 3134.             t$1496%header%d_type_idx = 13
 3134.             t$1496%header%typ_code = 134481411
 3134.             t$1496%header%orig_base = 0
 3134.             t$1496%header%orig_size = 0
 3134.             t$1496%dim_1%LB = 1
 3134.             t$1496%dim_1%EX = ( max( 0, t$241 ) )
 3134.             t$1496%dim_1%SM = 1
 3134.             call writefield81d( nfdiag, t$1496 )
 3134.          endif
 3139.          t$1498 = 0
 3139.          t$1499 = 0
 3139.          t$1503 = 0
 3139.          if ( qdiv%header%a_contig == 1 ) then
 3139. !dir$ suppress (qdiv%base_addr)(1, 1, 0)
 3139.             t$1497 = loc( (qdiv%base_addr)(1, 1, 0) )
 3139.          else
 3139.             t$1498 = qdiv%dim_1%EX
 3139.             t$1499 = qdiv%dim_2%EX
 3139.             t$1503 = int( _alloc( max( 0, max( 0, qdiv%dim_2%EX ) * max( 0, qdiv%dim_1%EX ) * 8 ) ), 8 )
 3139.             call _f90_copy_from_dv( t$1502, qdiv )
 3139. !dir$ suppress t$1502
 3139.             t$1497 = loc( t$1502 )
 3139.          endif
 3139.          ipa$582 = 0
 3139.          call collect_spec( t$1497, qspec(1, 1), kmaxloc, kmaxnew, ipa$582 )
 3139.          if ( qdiv%header%a_contig /= 1 ) then
 3139.             _free( t$1503 )
 3139.          endif
 3140.          if ( myid == 0 ) then
 3141. !dir$ suppress qspec(1, 1)
 3141.             t$1504%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 3141.             t$1504%header%el_len = 64
 3141.             t$1504%header%assoc = 1
 3141.             t$1504%header%ptr_alloc = 0
 3141.             t$1504%header%p_or_a = 0
 3141.             t$1504%header%a_contig = 1
 3141.             t$1504%header%dv_versn = 2
 3141.             t$1504%header%dv_smunit = 64
 3141.             t$1504%header%d_type = 0
 3141.             t$1504%header%n_params = 0
 3141.             t$1504%header%pad_codim = 0
 3141.             t$1504%header%n_codim = 0
 3141.             t$1504%header%pad_dim = 0
 3141.             t$1504%header%n_dim = 2
 3141.             t$1504%header%d_type_idx = 13
 3141.             t$1504%header%typ_code = 134481411
 3141.             t$1504%header%orig_base = 0
 3141.             t$1504%header%orig_size = 0
 3141.             t$1504%dim_1%LB = 1
 3141.             t$1504%dim_1%EX = ( max( 0, t$241 ) )
 3141.             t$1504%dim_1%SM = 1
 3141.             t$1504%dim_2%LB = 1
 3141.             t$1504%dim_2%EX = _zla( 0, t$240 )
 3141.             t$1504%dim_2%SM = max( 0, t$241 )
 3141.             call writefield82d( nfdiag, t$1504 )
 3141.          endif
 3146.          t$1506 = 0
 3146.          t$1507 = 0
 3146.          t$1511 = 0
 3146.          if ( qrot%header%a_contig == 1 ) then
 3146. !dir$ suppress (qrot%base_addr)(1, 1, 0)
 3146.             t$1505 = loc( (qrot%base_addr)(1, 1, 0) )
 3146.          else
 3146.             t$1506 = qrot%dim_1%EX
 3146.             t$1507 = qrot%dim_2%EX
 3146.             t$1511 = int( _alloc( max( 0, max( 0, qrot%dim_2%EX ) * max( 0, qrot%dim_1%EX ) * 8 ) ), 8 )
 3146.             call _f90_copy_from_dv( t$1510, qrot )
 3146. !dir$ suppress t$1510
 3146.             t$1505 = loc( t$1510 )
 3146.          endif
 3146.          ipa$587 = 0
 3146.          call collect_spec( t$1505, qspec(1, 1), kmaxloc, kmaxnew, ipa$587 )
 3146.          if ( qrot%header%a_contig /= 1 ) then
 3146.             _free( t$1511 )
 3146.          endif
 3147.          if ( myid == 0 ) then
 3148. !dir$ suppress qspec(1, 1)
 3148.             t$1512%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 3148.             t$1512%header%el_len = 64
 3148.             t$1512%header%assoc = 1
 3148.             t$1512%header%ptr_alloc = 0
 3148.             t$1512%header%p_or_a = 0
 3148.             t$1512%header%a_contig = 1
 3148.             t$1512%header%dv_versn = 2
 3148.             t$1512%header%dv_smunit = 64
 3148.             t$1512%header%d_type = 0
 3148.             t$1512%header%n_params = 0
 3148.             t$1512%header%pad_codim = 0
 3148.             t$1512%header%n_codim = 0
 3148.             t$1512%header%pad_dim = 0
 3148.             t$1512%header%n_dim = 2
 3148.             t$1512%header%d_type_idx = 13
 3148.             t$1512%header%typ_code = 134481411
 3148.             t$1512%header%orig_base = 0
 3148.             t$1512%header%orig_size = 0
 3148.             t$1512%dim_1%LB = 1
 3148.             t$1512%dim_1%EX = ( max( 0, t$241 ) )
 3148.             t$1512%dim_1%SM = 1
 3148.             t$1512%dim_2%LB = 1
 3148.             t$1512%dim_2%EX = _zla( 0, t$240 )
 3148.             t$1512%dim_2%SM = max( 0, t$241 )
 3148.             call writefield82d( nfdiag, t$1512 )
 3148.          endif
 3153.          t$1514 = 0
 3153.          t$1515 = 0
 3153.          t$1519 = 0
 3153.          if ( qq%header%a_contig == 1 ) then
 3153. !dir$ suppress (qq%base_addr)(1, 1, 0)
 3153.             t$1513 = loc( (qq%base_addr)(1, 1, 0) )
 3153.          else
 3153.             t$1514 = qq%dim_1%EX
 3153.             t$1515 = qq%dim_2%EX
 3153.             t$1519 = int( _alloc( max( 0, max( 0, qq%dim_2%EX ) * max( 0, qq%dim_1%EX ) * 8 ) ), 8 )
 3153.             call _f90_copy_from_dv( t$1518, qq )
 3153. !dir$ suppress t$1518
 3153.             t$1513 = loc( t$1518 )
 3153.          endif
 3153.          ipa$592 = 0
 3153.          call collect_spec( t$1513, qspec(1, 1), kmaxloc, kmaxnew, ipa$592 )
 3153.          if ( qq%header%a_contig /= 1 ) then
 3153.             _free( t$1519 )
 3153.          endif
 3154.          if ( myid == 0 ) then
 3155. !dir$ suppress qspec(1, 1)
 3155.             t$1520%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 3155.             t$1520%header%el_len = 64
 3155.             t$1520%header%assoc = 1
 3155.             t$1520%header%ptr_alloc = 0
 3155.             t$1520%header%p_or_a = 0
 3155.             t$1520%header%a_contig = 1
 3155.             t$1520%header%dv_versn = 2
 3155.             t$1520%header%dv_smunit = 64
 3155.             t$1520%header%d_type = 0
 3155.             t$1520%header%n_params = 0
 3155.             t$1520%header%pad_codim = 0
 3155.             t$1520%header%n_codim = 0
 3155.             t$1520%header%pad_dim = 0
 3155.             t$1520%header%n_dim = 2
 3155.             t$1520%header%d_type_idx = 13
 3155.             t$1520%header%typ_code = 134481411
 3155.             t$1520%header%orig_base = 0
 3155.             t$1520%header%orig_size = 0
 3155.             t$1520%dim_1%LB = 1
 3155.             t$1520%dim_1%EX = ( max( 0, t$241 ) )
 3155.             t$1520%dim_1%SM = 1
 3155.             t$1520%dim_2%LB = 1
 3155.             t$1520%dim_2%EX = _zla( 0, t$240 )
 3155.             t$1520%dim_2%SM = max( 0, t$241 )
 3155.             call writefield82d( nfdiag, t$1520 )
 3155.          endif
 3160.          t$1522 = 0
 3160.          t$1523 = 0
 3160.          t$1527 = 0
 3160.          if ( qtmp%header%a_contig == 1 ) then
 3160. !dir$ suppress (qtmp%base_addr)(1, 1, 0)
 3160.             t$1521 = loc( (qtmp%base_addr)(1, 1, 0) )
 3160.          else
 3160.             t$1522 = qtmp%dim_1%EX
 3160.             t$1523 = qtmp%dim_2%EX
 3160.             t$1527 = int( _alloc( max( 0, max( 0, qtmp%dim_2%EX ) * max( 0, qtmp%dim_1%EX ) * 8 ) ), 8 )
 3160.             call _f90_copy_from_dv( t$1526, qtmp )
 3160. !dir$ suppress t$1526
 3160.             t$1521 = loc( t$1526 )
 3160.          endif
 3160.          ipa$597 = 0
 3160.          call collect_spec( t$1521, qspec(1, 1), kmaxloc, kmaxnew, ipa$597 )
 3160.          if ( qtmp%header%a_contig /= 1 ) then
 3160.             _free( t$1527 )
 3160.          endif
 3161.          if ( myid == 0 ) then
 3162. !dir$ suppress qspec(1, 1)
 3162.             t$1528%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qspec(1, 1) ) )
 3162.             t$1528%header%el_len = 64
 3162.             t$1528%header%assoc = 1
 3162.             t$1528%header%ptr_alloc = 0
 3162.             t$1528%header%p_or_a = 0
 3162.             t$1528%header%a_contig = 1
 3162.             t$1528%header%dv_versn = 2
 3162.             t$1528%header%dv_smunit = 64
 3162.             t$1528%header%d_type = 0
 3162.             t$1528%header%n_params = 0
 3162.             t$1528%header%pad_codim = 0
 3162.             t$1528%header%n_codim = 0
 3162.             t$1528%header%pad_dim = 0
 3162.             t$1528%header%n_dim = 2
 3162.             t$1528%header%d_type_idx = 13
 3162.             t$1528%header%typ_code = 134481411
 3162.             t$1528%header%orig_base = 0
 3162.             t$1528%header%orig_size = 0
 3162.             t$1528%dim_1%LB = 1
 3162.             t$1528%dim_1%EX = ( max( 0, t$241 ) )
 3162.             t$1528%dim_1%SM = 1
 3162.             t$1528%dim_2%LB = 1
 3162.             t$1528%dim_2%EX = _zla( 0, t$240 )
 3162.             t$1528%dim_2%SM = max( 0, t$241 )
 3162.             call writefield82d( nfdiag, t$1528 )
 3162.          endif
 3162.       else
 3168.          t$1529 = qgzs
 3168.          call writefield81d( nfdiag, t$1529 )
 3169.          t$1530 = lsmk
 3169.          call writefield81d( nfdiag, t$1530 )
 3170.          t$1531 = qlnp
 3170.          call writefield81d( nfdiag, t$1531 )
 3171.          t$1532 = qdiv
 3171.          call writefield82d( nfdiag, t$1532 )
 3172.          t$1533 = qrot
 3172.          call writefield82d( nfdiag, t$1533 )
 3173.          t$1534 = qq
 3173.          call writefield82d( nfdiag, t$1534 )
 3174.          t$1535 = qtmp
 3174.          call writefield82d( nfdiag, t$1535 )
 3174.       endif
 3176.       fields%header%a_contig = 1
 3176.       fields%dim_1%LB = 1
 3176.       fields%dim_1%EX = 12
 3176.       fields%dim_1%SM = 12
 3176.       $_allo_P0(0) = 0x1000000000001L
 3176.       $_allo_P0(1) = loc( fields )
 3176.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 3176.       $I_L3176_104 = 0
 3176. !dir$ novector
 3176. !dir$ nextscalar
 3176. !dir$ rsi.nextscalar
 3176. !dir$ unroll 4
 3176.       do
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%el_len = 64
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%assoc = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%ptr_alloc = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%p_or_a = 1
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%a_contig = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%dv_versn = 2
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%dv_smunit = 64
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%d_type = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%n_params = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%pad_codim = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%n_codim = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%pad_dim = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%n_dim = 2
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%d_type_idx = 13
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%typ_code = 134481411
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%orig_base = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%header%orig_size = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_1%LB = 1
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_1%EX = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_1%SM = 1
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_2%LB = 1
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_2%EX = 0
 3176.          (fields%base_addr)(1 + $I_L3176_104, 0)%p%dim_2%SM = 1
 3176.          $I_L3176_104 = 1 + $I_L3176_104
 3176.          if ( $I_L3176_104 >= 12 ) exit
 3176.       enddo
 3177.       interp_type%header%a_contig = 1
 3177.       interp_type%dim_1%LB = 1
 3177.       interp_type%dim_1%EX = 12
 3177.       interp_type%dim_1%SM = 1
 3177.       $_allo_P1(0) = 0x1000000000001L
 3177.       $_allo_P1(1) = loc( interp_type )
 3177.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 3180.       (fields%base_addr)(1, 0)%p%header%a_contig = 1
 3180.       (fields%base_addr)(1, 0)%p%header%assoc = 1
 3180.       (fields%base_addr)(1, 0)%p%header%d_type_idx = 13
 3180.       (fields%base_addr)(1, 0)%p%dim_1%LB = 1
 3180.       (fields%base_addr)(1, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3180.       (fields%base_addr)(1, 0)%p%dim_1%SM = 1
 3180.       (fields%base_addr)(1, 0)%p%dim_2%LB = 1
 3180.       (fields%base_addr)(1, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3180.       (fields%base_addr)(1, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3180.       (fields%base_addr)(1, 0)%p%header%ptr_alloc = 0
 3180.       (fields%base_addr)(1, 0)%p%header%orig_base = 0
 3180.       (fields%base_addr)(1, 0)%p%header%orig_size = 0
 3180.       (fields%base_addr)(1, 0)%p%base_addr = loc( z0(1, 1) )
 3181.       (interp_type%base_addr)(1, 0) = 1
 3185.       (fields%base_addr)(2, 0)%p%header%a_contig = 1
 3185.       (fields%base_addr)(2, 0)%p%header%assoc = 1
 3185.       (fields%base_addr)(2, 0)%p%header%d_type_idx = 13
 3185.       (fields%base_addr)(2, 0)%p%dim_1%LB = 1
 3185.       (fields%base_addr)(2, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3185.       (fields%base_addr)(2, 0)%p%dim_1%SM = 1
 3185.       (fields%base_addr)(2, 0)%p%dim_2%LB = 1
 3185.       (fields%base_addr)(2, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3185.       (fields%base_addr)(2, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3185.       (fields%base_addr)(2, 0)%p%header%ptr_alloc = 0
 3185.       (fields%base_addr)(2, 0)%p%header%orig_base = 0
 3185.       (fields%base_addr)(2, 0)%p%header%orig_size = 0
 3185.       (fields%base_addr)(2, 0)%p%base_addr = loc( gtsea(1, 1) )
 3186.       (interp_type%base_addr)(2, 0) = 3
 3190.       ipa$622 = loc( td0(1, 1) )
 3190.       datum = _copyin( td0(1, 1) )
 3190.       ipa$624 = loc( work(1, 1, 1) )
 3190.       work = _copyin( work(1, 1, 1) )
 3190.       ipa$626 = loc( imask(1, 1) )
 3190.       imask = _copyin( imask(1, 1) )
 3190.       ipa$628 = loc( gtsea(1, 1) )
 3190.       tsea = _copyin( gtsea(1, 1) )
 3190.       t$193 = ibmax
 3190.       t$194 = 1
 3190.       t$195 = jbmax
 3190.       t$374 = max( 0, ibmax )
 3190.       t$375 = max( 0, ibmax )
 3190.       t$376 = 1
 3190.       t$377 = max( 0, ibmax )
 3190.       t$378 = max( 0, jbmax )
 3190.       t$379 = max( 0, ibmax ) * max( 0, jbmax )
 3190.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3190.       if ( jbmax > 0 ) then
 3190.          if ( ibmax > 0 ) then
 3190.             $I_L3190_136 = 0
 3190.             do
 3190.                $ncount_S4 = 0
 3190.                $I_L3190_106 = 0
 3190. !dir$ ivdep
 3190.                do
 3190.                   if ( imask(1 + $I_L3190_106, 1 + $I_L3190_136) > 0 ) then
 3190.                      $ncount_S4 = 1 + $ncount_S4
 3190.                      work(1 + $I_L3190_106, 1 + $I_L3190_136) = datum($ncount_S4, 1, 1 + $I_L3190_136)
 3190.                   else
 3190.                      work(1 + $I_L3190_106, 1 + $I_L3190_136) = abs( tsea(1 + $I_L3190_106, 1 + $I_L3190_136) )
 3190.                   endif
 3190.                   $I_L3190_106 = 1 + $I_L3190_106
 3190.                   if ( $I_L3190_106 >= ibmax ) exit
 3190.                enddo
 3190.                $I_L3190_136 = 1 + $I_L3190_136
 3190.                if ( $I_L3190_136 >= jbmax ) exit
 3190.             enddo
 3190.          endif
 3190.       endif
 3190.       gtsea(1, 1) = _copyout( tsea )
 3190.       imask(1, 1) = _copyout( imask )
 3190.       work(1, 1, 1) = _copyout( work )
 3190.       td0(1, 1) = _copyout( datum )
 3191.       (fields%base_addr)(3, 0)%p%header%a_contig = 1
 3191.       (fields%base_addr)(3, 0)%p%header%assoc = 1
 3191.       (fields%base_addr)(3, 0)%p%header%d_type_idx = 13
 3191.       (fields%base_addr)(3, 0)%p%dim_1%LB = 1
 3191.       (fields%base_addr)(3, 0)%p%dim_1%EX = max( 0, t$238 )
 3191.       (fields%base_addr)(3, 0)%p%dim_1%SM = 1
 3191.       (fields%base_addr)(3, 0)%p%dim_2%LB = 1
 3191.       (fields%base_addr)(3, 0)%p%dim_2%EX = max( 0, t$239 )
 3191.       (fields%base_addr)(3, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3191.       (fields%base_addr)(3, 0)%p%header%ptr_alloc = 0
 3191.       (fields%base_addr)(3, 0)%p%header%orig_base = 0
 3191.       (fields%base_addr)(3, 0)%p%header%orig_size = 0
 3191.       (fields%base_addr)(3, 0)%p%base_addr = loc( work(1, 1, 1) )
 3192.       (interp_type%base_addr)(3, 0) = 1
 3196.       ipa$654 = loc( capac0(1, 1, 1) )
 3196.       datum = _copyin( capac0(1, 1, 1) )
 3196.       ipa$656 = loc( work(1, 1, 2) )
 3196.       work = _copyin( work(1, 1, 2) )
 3196.       ipa$658 = loc( imask(1, 1) )
 3196.       imask = _copyin( imask(1, 1) )
 3196.       ipa$660 = loc( gtsea(1, 1) )
 3196.       tsea = _copyin( gtsea(1, 1) )
 3196.       t$193 = ibmax
 3196.       t$194 = 2
 3196.       t$195 = jbmax
 3196.       t$374 = max( 0, ibmax )
 3196.       t$375 = max( 0, ibmax )
 3196.       t$376 = 2
 3196.       t$377 = 2 * max( 0, ibmax )
 3196.       t$378 = max( 0, jbmax )
 3196.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 2
 3196.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3196.       if ( jbmax > 0 ) then
 3196.          if ( ibmax > 0 ) then
 3196.             $I_L3196_138 = 0
 3196.             do
 3196.                $ncount_S7 = 0
 3196.                $I_L3196_108 = 0
 3196. !dir$ ivdep
 3196.                do
 3196.                   if ( imask(1 + $I_L3196_108, 1 + $I_L3196_138) > 0 ) then
 3196.                      $ncount_S7 = 1 + $ncount_S7
 3196.                      work(1 + $I_L3196_108, 1 + $I_L3196_138) = datum($ncount_S7, 1, 1 + $I_L3196_138)
 3196.                   else
 3196.                      work(1 + $I_L3196_108, 1 + $I_L3196_138) = 0.0
 3196.                   endif
 3196.                   $I_L3196_108 = 1 + $I_L3196_108
 3196.                   if ( $I_L3196_108 >= ibmax ) exit
 3196.                enddo
 3196.                $I_L3196_138 = 1 + $I_L3196_138
 3196.                if ( $I_L3196_138 >= jbmax ) exit
 3196.             enddo
 3196.          endif
 3196.       endif
 3196.       gtsea(1, 1) = _copyout( tsea )
 3196.       imask(1, 1) = _copyout( imask )
 3196.       work(1, 1, 2) = _copyout( work )
 3196.       capac0(1, 1, 1) = _copyout( datum )
 3197.       (fields%base_addr)(4, 0)%p%header%a_contig = 1
 3197.       (fields%base_addr)(4, 0)%p%header%assoc = 1
 3197.       (fields%base_addr)(4, 0)%p%header%d_type_idx = 13
 3197.       (fields%base_addr)(4, 0)%p%dim_1%LB = 1
 3197.       (fields%base_addr)(4, 0)%p%dim_1%EX = max( 0, t$238 )
 3197.       (fields%base_addr)(4, 0)%p%dim_1%SM = 1
 3197.       (fields%base_addr)(4, 0)%p%dim_2%LB = 1
 3197.       (fields%base_addr)(4, 0)%p%dim_2%EX = max( 0, t$239 )
 3197.       (fields%base_addr)(4, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3197.       (fields%base_addr)(4, 0)%p%header%ptr_alloc = 0
 3197.       (fields%base_addr)(4, 0)%p%header%orig_base = 0
 3197.       (fields%base_addr)(4, 0)%p%header%orig_size = 0
 3197.       (fields%base_addr)(4, 0)%p%base_addr = loc( work(1, 1, 2) )
 3198.       (interp_type%base_addr)(4, 0) = 1
 3202.       ipa$686 = loc( capac0(1, 1, 1) )
 3202.       datum = _copyin( capac0(1, 1, 1) )
 3202.       ipa$688 = loc( work(1, 1, 3) )
 3202.       work = _copyin( work(1, 1, 3) )
 3202.       ipa$690 = loc( imask(1, 1) )
 3202.       imask = _copyin( imask(1, 1) )
 3202.       ipa$692 = loc( gtsea(1, 1) )
 3202.       tsea = _copyin( gtsea(1, 1) )
 3202.       t$193 = ibmax
 3202.       t$194 = 2
 3202.       t$195 = jbmax
 3202.       t$374 = max( 0, ibmax )
 3202.       t$375 = max( 0, ibmax )
 3202.       t$376 = 2
 3202.       t$377 = 2 * max( 0, ibmax )
 3202.       t$378 = max( 0, jbmax )
 3202.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 2
 3202.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3202.       if ( jbmax > 0 ) then
 3202.          if ( ibmax > 0 ) then
 3202.             $I_L3202_140 = 0
 3202.             do
 3202.                $ncount_S10 = 0
 3202.                $I_L3202_110 = 0
 3202. !dir$ ivdep
 3202.                do
 3202.                   if ( imask(1 + $I_L3202_110, 1 + $I_L3202_140) > 0 ) then
 3202.                      $ncount_S10 = 1 + $ncount_S10
 3202.                      work(1 + $I_L3202_110, 1 + $I_L3202_140) = datum($ncount_S10, 2, 1 + $I_L3202_140)
 3202.                   else
 3202.                      work(1 + $I_L3202_110, 1 + $I_L3202_140) = 0.0
 3202.                   endif
 3202.                   $I_L3202_110 = 1 + $I_L3202_110
 3202.                   if ( $I_L3202_110 >= ibmax ) exit
 3202.                enddo
 3202.                $I_L3202_140 = 1 + $I_L3202_140
 3202.                if ( $I_L3202_140 >= jbmax ) exit
 3202.             enddo
 3202.          endif
 3202.       endif
 3202.       gtsea(1, 1) = _copyout( tsea )
 3202.       imask(1, 1) = _copyout( imask )
 3202.       work(1, 1, 3) = _copyout( work )
 3202.       capac0(1, 1, 1) = _copyout( datum )
 3203.       (fields%base_addr)(5, 0)%p%header%a_contig = 1
 3203.       (fields%base_addr)(5, 0)%p%header%assoc = 1
 3203.       (fields%base_addr)(5, 0)%p%header%d_type_idx = 13
 3203.       (fields%base_addr)(5, 0)%p%dim_1%LB = 1
 3203.       (fields%base_addr)(5, 0)%p%dim_1%EX = max( 0, t$238 )
 3203.       (fields%base_addr)(5, 0)%p%dim_1%SM = 1
 3203.       (fields%base_addr)(5, 0)%p%dim_2%LB = 1
 3203.       (fields%base_addr)(5, 0)%p%dim_2%EX = max( 0, t$239 )
 3203.       (fields%base_addr)(5, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3203.       (fields%base_addr)(5, 0)%p%header%ptr_alloc = 0
 3203.       (fields%base_addr)(5, 0)%p%header%orig_base = 0
 3203.       (fields%base_addr)(5, 0)%p%header%orig_size = 0
 3203.       (fields%base_addr)(5, 0)%p%base_addr = loc( work(1, 1, 3) )
 3204.       (interp_type%base_addr)(5, 0) = 1
 3208.       ipa$718 = loc( w0(1, 1, 1) )
 3208.       datum = _copyin( w0(1, 1, 1) )
 3208.       ipa$720 = loc( work(1, 1, 4) )
 3208.       work = _copyin( work(1, 1, 4) )
 3208.       ipa$722 = loc( imask(1, 1) )
 3208.       imask = _copyin( imask(1, 1) )
 3208.       ipa$724 = loc( gtsea(1, 1) )
 3208.       tsea = _copyin( gtsea(1, 1) )
 3208.       t$193 = ibmax
 3208.       t$194 = 3
 3208.       t$195 = jbmax
 3208.       t$374 = max( 0, ibmax )
 3208.       t$375 = max( 0, ibmax )
 3208.       t$376 = 3
 3208.       t$377 = 3 * max( 0, ibmax )
 3208.       t$378 = max( 0, jbmax )
 3208.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 3208.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3208.       if ( jbmax > 0 ) then
 3208.          if ( ibmax > 0 ) then
 3208.             $I_L3208_142 = 0
 3208.             do
 3208.                $ncount_S13 = 0
 3208.                $I_L3208_112 = 0
 3208. !dir$ ivdep
 3208.                do
 3208.                   if ( imask(1 + $I_L3208_112, 1 + $I_L3208_142) > 0 ) then
 3208.                      $ncount_S13 = 1 + $ncount_S13
 3208.                      work(1 + $I_L3208_112, 1 + $I_L3208_142) = datum($ncount_S13, 1, 1 + $I_L3208_142)
 3208.                   else
 3208.                      work(1 + $I_L3208_112, 1 + $I_L3208_142) = 1.0
 3208.                   endif
 3208.                   $I_L3208_112 = 1 + $I_L3208_112
 3208.                   if ( $I_L3208_112 >= ibmax ) exit
 3208.                enddo
 3208.                $I_L3208_142 = 1 + $I_L3208_142
 3208.                if ( $I_L3208_142 >= jbmax ) exit
 3208.             enddo
 3208.          endif
 3208.       endif
 3208.       gtsea(1, 1) = _copyout( tsea )
 3208.       imask(1, 1) = _copyout( imask )
 3208.       work(1, 1, 4) = _copyout( work )
 3208.       w0(1, 1, 1) = _copyout( datum )
 3209.       (fields%base_addr)(6, 0)%p%header%a_contig = 1
 3209.       (fields%base_addr)(6, 0)%p%header%assoc = 1
 3209.       (fields%base_addr)(6, 0)%p%header%d_type_idx = 13
 3209.       (fields%base_addr)(6, 0)%p%dim_1%LB = 1
 3209.       (fields%base_addr)(6, 0)%p%dim_1%EX = max( 0, t$238 )
 3209.       (fields%base_addr)(6, 0)%p%dim_1%SM = 1
 3209.       (fields%base_addr)(6, 0)%p%dim_2%LB = 1
 3209.       (fields%base_addr)(6, 0)%p%dim_2%EX = max( 0, t$239 )
 3209.       (fields%base_addr)(6, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3209.       (fields%base_addr)(6, 0)%p%header%ptr_alloc = 0
 3209.       (fields%base_addr)(6, 0)%p%header%orig_base = 0
 3209.       (fields%base_addr)(6, 0)%p%header%orig_size = 0
 3209.       (fields%base_addr)(6, 0)%p%base_addr = loc( work(1, 1, 4) )
 3210.       (interp_type%base_addr)(6, 0) = 1
 3214.       ipa$750 = loc( w0(1, 1, 1) )
 3214.       datum = _copyin( w0(1, 1, 1) )
 3214.       ipa$752 = loc( work(1, 1, 5) )
 3214.       work = _copyin( work(1, 1, 5) )
 3214.       ipa$754 = loc( imask(1, 1) )
 3214.       imask = _copyin( imask(1, 1) )
 3214.       ipa$756 = loc( gtsea(1, 1) )
 3214.       tsea = _copyin( gtsea(1, 1) )
 3214.       t$193 = ibmax
 3214.       t$194 = 3
 3214.       t$195 = jbmax
 3214.       t$374 = max( 0, ibmax )
 3214.       t$375 = max( 0, ibmax )
 3214.       t$376 = 3
 3214.       t$377 = 3 * max( 0, ibmax )
 3214.       t$378 = max( 0, jbmax )
 3214.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 3214.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3214.       if ( jbmax > 0 ) then
 3214.          if ( ibmax > 0 ) then
 3214.             $I_L3214_144 = 0
 3214.             do
 3214.                $ncount_S16 = 0
 3214.                $I_L3214_114 = 0
 3214. !dir$ ivdep
 3214.                do
 3214.                   if ( imask(1 + $I_L3214_114, 1 + $I_L3214_144) > 0 ) then
 3214.                      $ncount_S16 = 1 + $ncount_S16
 3214.                      work(1 + $I_L3214_114, 1 + $I_L3214_144) = datum($ncount_S16, 2, 1 + $I_L3214_144)
 3214.                   else
 3214.                      work(1 + $I_L3214_114, 1 + $I_L3214_144) = 1.0
 3214.                   endif
 3214.                   $I_L3214_114 = 1 + $I_L3214_114
 3214.                   if ( $I_L3214_114 >= ibmax ) exit
 3214.                enddo
 3214.                $I_L3214_144 = 1 + $I_L3214_144
 3214.                if ( $I_L3214_144 >= jbmax ) exit
 3214.             enddo
 3214.          endif
 3214.       endif
 3214.       gtsea(1, 1) = _copyout( tsea )
 3214.       imask(1, 1) = _copyout( imask )
 3214.       work(1, 1, 5) = _copyout( work )
 3214.       w0(1, 1, 1) = _copyout( datum )
 3215.       (fields%base_addr)(7, 0)%p%header%a_contig = 1
 3215.       (fields%base_addr)(7, 0)%p%header%assoc = 1
 3215.       (fields%base_addr)(7, 0)%p%header%d_type_idx = 13
 3215.       (fields%base_addr)(7, 0)%p%dim_1%LB = 1
 3215.       (fields%base_addr)(7, 0)%p%dim_1%EX = max( 0, t$238 )
 3215.       (fields%base_addr)(7, 0)%p%dim_1%SM = 1
 3215.       (fields%base_addr)(7, 0)%p%dim_2%LB = 1
 3215.       (fields%base_addr)(7, 0)%p%dim_2%EX = max( 0, t$239 )
 3215.       (fields%base_addr)(7, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3215.       (fields%base_addr)(7, 0)%p%header%ptr_alloc = 0
 3215.       (fields%base_addr)(7, 0)%p%header%orig_base = 0
 3215.       (fields%base_addr)(7, 0)%p%header%orig_size = 0
 3215.       (fields%base_addr)(7, 0)%p%base_addr = loc( work(1, 1, 5) )
 3216.       (interp_type%base_addr)(7, 0) = 1
 3220.       ipa$782 = loc( w0(1, 1, 1) )
 3220.       datum = _copyin( w0(1, 1, 1) )
 3220.       ipa$784 = loc( work(1, 1, 6) )
 3220.       work = _copyin( work(1, 1, 6) )
 3220.       ipa$786 = loc( imask(1, 1) )
 3220.       imask = _copyin( imask(1, 1) )
 3220.       ipa$788 = loc( gtsea(1, 1) )
 3220.       tsea = _copyin( gtsea(1, 1) )
 3220.       t$193 = ibmax
 3220.       t$194 = 3
 3220.       t$195 = jbmax
 3220.       t$374 = max( 0, ibmax )
 3220.       t$375 = max( 0, ibmax )
 3220.       t$376 = 3
 3220.       t$377 = 3 * max( 0, ibmax )
 3220.       t$378 = max( 0, jbmax )
 3220.       t$379 = max( 0, ibmax ) * max( 0, jbmax ) * 3
 3220.       t$380 = max( 0, ibmax ) * max( 0, jbmax )
 3220.       if ( jbmax > 0 ) then
 3220.          if ( ibmax > 0 ) then
 3220.             $I_L3220_146 = 0
 3220.             do
 3220.                $ncount_S19 = 0
 3220.                $I_L3220_116 = 0
 3220. !dir$ ivdep
 3220.                do
 3220.                   if ( imask(1 + $I_L3220_116, 1 + $I_L3220_146) > 0 ) then
 3220.                      $ncount_S19 = 1 + $ncount_S19
 3220.                      work(1 + $I_L3220_116, 1 + $I_L3220_146) = datum($ncount_S19, 3, 1 + $I_L3220_146)
 3220.                   else
 3220.                      work(1 + $I_L3220_116, 1 + $I_L3220_146) = 1.0
 3220.                   endif
 3220.                   $I_L3220_116 = 1 + $I_L3220_116
 3220.                   if ( $I_L3220_116 >= ibmax ) exit
 3220.                enddo
 3220.                $I_L3220_146 = 1 + $I_L3220_146
 3220.                if ( $I_L3220_146 >= jbmax ) exit
 3220.             enddo
 3220.          endif
 3220.       endif
 3220.       gtsea(1, 1) = _copyout( tsea )
 3220.       imask(1, 1) = _copyout( imask )
 3220.       work(1, 1, 6) = _copyout( work )
 3220.       w0(1, 1, 1) = _copyout( datum )
 3221.       (fields%base_addr)(8, 0)%p%header%a_contig = 1
 3221.       (fields%base_addr)(8, 0)%p%header%assoc = 1
 3221.       (fields%base_addr)(8, 0)%p%header%d_type_idx = 13
 3221.       (fields%base_addr)(8, 0)%p%dim_1%LB = 1
 3221.       (fields%base_addr)(8, 0)%p%dim_1%EX = max( 0, t$238 )
 3221.       (fields%base_addr)(8, 0)%p%dim_1%SM = 1
 3221.       (fields%base_addr)(8, 0)%p%dim_2%LB = 1
 3221.       (fields%base_addr)(8, 0)%p%dim_2%EX = max( 0, t$239 )
 3221.       (fields%base_addr)(8, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3221.       (fields%base_addr)(8, 0)%p%header%ptr_alloc = 0
 3221.       (fields%base_addr)(8, 0)%p%header%orig_base = 0
 3221.       (fields%base_addr)(8, 0)%p%header%orig_size = 0
 3221.       (fields%base_addr)(8, 0)%p%base_addr = loc( work(1, 1, 6) )
 3222.       (interp_type%base_addr)(8, 0) = 1
 3226.       (fields%base_addr)(9, 0)%p%header%a_contig = 1
 3226.       (fields%base_addr)(9, 0)%p%header%assoc = 1
 3226.       (fields%base_addr)(9, 0)%p%header%d_type_idx = 13
 3226.       (fields%base_addr)(9, 0)%p%dim_1%LB = 1
 3226.       (fields%base_addr)(9, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3226.       (fields%base_addr)(9, 0)%p%dim_1%SM = 1
 3226.       (fields%base_addr)(9, 0)%p%dim_2%LB = 1
 3226.       (fields%base_addr)(9, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3226.       (fields%base_addr)(9, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3226.       (fields%base_addr)(9, 0)%p%header%ptr_alloc = 0
 3226.       (fields%base_addr)(9, 0)%p%header%orig_base = 0
 3226.       (fields%base_addr)(9, 0)%p%header%orig_size = 0
 3226.       (fields%base_addr)(9, 0)%p%base_addr = loc( temp2m(1, 1) )
 3227.       (interp_type%base_addr)(9, 0) = 1
 3231.       (fields%base_addr)(10, 0)%p%header%a_contig = 1
 3231.       (fields%base_addr)(10, 0)%p%header%assoc = 1
 3231.       (fields%base_addr)(10, 0)%p%header%d_type_idx = 13
 3231.       (fields%base_addr)(10, 0)%p%dim_1%LB = 1
 3231.       (fields%base_addr)(10, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3231.       (fields%base_addr)(10, 0)%p%dim_1%SM = 1
 3231.       (fields%base_addr)(10, 0)%p%dim_2%LB = 1
 3231.       (fields%base_addr)(10, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3231.       (fields%base_addr)(10, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3231.       (fields%base_addr)(10, 0)%p%header%ptr_alloc = 0
 3231.       (fields%base_addr)(10, 0)%p%header%orig_base = 0
 3231.       (fields%base_addr)(10, 0)%p%header%orig_size = 0
 3231.       (fields%base_addr)(10, 0)%p%base_addr = loc( umes2m(1, 1) )
 3232.       (interp_type%base_addr)(10, 0) = 1
 3236.       (fields%base_addr)(11, 0)%p%header%a_contig = 1
 3236.       (fields%base_addr)(11, 0)%p%header%assoc = 1
 3236.       (fields%base_addr)(11, 0)%p%header%d_type_idx = 13
 3236.       (fields%base_addr)(11, 0)%p%dim_1%LB = 1
 3236.       (fields%base_addr)(11, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3236.       (fields%base_addr)(11, 0)%p%dim_1%SM = 1
 3236.       (fields%base_addr)(11, 0)%p%dim_2%LB = 1
 3236.       (fields%base_addr)(11, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3236.       (fields%base_addr)(11, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3236.       (fields%base_addr)(11, 0)%p%header%ptr_alloc = 0
 3236.       (fields%base_addr)(11, 0)%p%header%orig_base = 0
 3236.       (fields%base_addr)(11, 0)%p%header%orig_size = 0
 3236.       (fields%base_addr)(11, 0)%p%base_addr = loc( uve10m(1, 1) )
 3237.       (interp_type%base_addr)(11, 0) = 1
 3241.       (fields%base_addr)(12, 0)%p%header%a_contig = 1
 3241.       (fields%base_addr)(12, 0)%p%header%assoc = 1
 3241.       (fields%base_addr)(12, 0)%p%header%d_type_idx = 13
 3241.       (fields%base_addr)(12, 0)%p%dim_1%LB = 1
 3241.       (fields%base_addr)(12, 0)%p%dim_1%EX = _zla( 0, t$238 )
 3241.       (fields%base_addr)(12, 0)%p%dim_1%SM = 1
 3241.       (fields%base_addr)(12, 0)%p%dim_2%LB = 1
 3241.       (fields%base_addr)(12, 0)%p%dim_2%EX = _zla( 0, t$239 )
 3241.       (fields%base_addr)(12, 0)%p%dim_2%SM = _zla( 0, t$238 )
 3241.       (fields%base_addr)(12, 0)%p%header%ptr_alloc = 0
 3241.       (fields%base_addr)(12, 0)%p%header%orig_base = 0
 3241.       (fields%base_addr)(12, 0)%p%header%orig_size = 0
 3241.       (fields%base_addr)(12, 0)%p%base_addr = loc( vve10m(1, 1) )
 3242.       (interp_type%base_addr)(12, 0) = 1
 3246.       ipa$792 = 12
 3246.       ipa$793 = 0
 3246.       call collect_grid_sur_print( (fields%base_addr)(1, 0), (interp_type%base_addr)(1, 0), ipa$792, ipa$793, nfdiag )
 3248.       $_allo_P2(0) = 0x1000000000001L
 3248.       $_allo_P2(1) = loc( fields )
 3248.       call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 3248.       fields%header%assoc = 0
 3249.       $_allo_P3(0) = 0x1000000000001L
 3249.       $_allo_P3(1) = loc( interp_type )
 3249.       call __deallocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 3249.       interp_type%header%assoc = 0
 3089.       $_allo_P4(0) = 0x2000000000001L
 3089.       $_allo_P4(1) = loc( interp_type )
 3089.       $_allo_P4(2) = loc( fields )
 3089.       call _dealloc( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 3040.       _free( t$443 )
 3254.       return
 3254.       end
 3254.       
  291.       
  291.       module diagnostics
 3255.       return
 3255.       end
 3255.       
