       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  GridDynamics.f90
       !        File                  :  GridDynamics.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  648.       
  648.       subroutine grpcomp( gyu, gyv, gtd, gqd, gvdlnp, gdiv, gtmp, grot, gu, gv, gw, gq, gplam, gpphi, gum, gzs, gvm, gtm, gqm, omg, ps, gtlam, gtphi, gqlam, gqphi, gulam, guphi, gvlam, gvphi, gtlamm, gtphim, gplamm, gpphim, glnpm, gdivm, gzslam, gzsphi, gyum, gyvm, gtdm, gqdm, gvdlnpm, colrad, rcl, vmax, ifday, tod, ibmax, kmax, iblim, slagr, jb, lonrad, cos2d, intcosz, cos2lat, ercossin, fcor, cosiv, initial )
  193.       t$14 = ibmax
  193.       t$15 = kmax
  222.       t$44 = _zla( 0, ibmax )
  193.       t$45 = _zla( 0, ibmax )
  222.       t$46 = _zla( 0, kmax )
  193.       t$47 = _zla( 0, ibmax ) * _zla( 0, kmax )
  287.       t$50 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
  291.       t$51 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
  291.       t$53 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
  288.       t$54 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
  288.       t$56 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
  289.       t$57 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
  289.       t$59 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 32
  290.       t$60 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 32
  290.       t$62 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 40
  284.       t$63 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 40
  284.       t$65 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 48
  285.       t$66 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 48
  285.       t$68 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 56
  282.       t$69 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 56
  282.       t$71 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 64
  283.       t$72 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 64
  283.       t$74 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 72
  286.       t$75 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 72
  286.       t$77 = 8 * _zla( 0, ibmax ) + _zla( 0, ibmax ) * _zla( 0, kmax ) * 72
  193.       t$48 = int( _alloc( 8 * _zla( 0, ibmax ) + _zla( 0, ibmax ) * _zla( 0, kmax ) * 72 ), 8 )
  287.       t$49 = t$48
  291.       t$52 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
  288.       t$55 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
  289.       t$58 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
  290.       t$61 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 32
  284.       t$64 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 40
  285.       t$67 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 48
  282.       t$70 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 56
  283.       t$73 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 64
  286.       t$76 = t$48 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 72
  298.       $F_A33 = kmax
  298.       $F_A34 = ibmax
  298.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  298.          $I_L298_599 = 0
  298.          do
  298.             $I_L298_509 = 0
  298. !dir$ ivdep
  298.             do
  298.                gyu(1 + $I_L298_509, 1 + $I_L298_599) = 0.0
  298.                $I_L298_509 = 1 + $I_L298_509
  298.                if ( $I_L298_509 >= $F_A34 ) exit
  298.             enddo
  298.             $I_L298_599 = 1 + $I_L298_599
  298.             if ( $I_L298_599 >= $F_A33 ) exit
  298.          enddo
  298.       endif
  299.       $F_A35 = kmax
  299.       $F_A36 = ibmax
  299.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  299.          $I_L299_601 = 0
  299.          do
  299.             $I_L299_511 = 0
  299. !dir$ ivdep
  299.             do
  299.                gyv(1 + $I_L299_511, 1 + $I_L299_601) = 0.0
  299.                $I_L299_511 = 1 + $I_L299_511
  299.                if ( $I_L299_511 >= $F_A36 ) exit
  299.             enddo
  299.             $I_L299_601 = 1 + $I_L299_601
  299.             if ( $I_L299_601 >= $F_A35 ) exit
  299.          enddo
  299.       endif
  300.       $F_A37 = kmax
  300.       $F_A38 = ibmax
  300.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  300.          $I_L300_603 = 0
  300.          do
  300.             $I_L300_513 = 0
  300. !dir$ ivdep
  300.             do
  300.                gtd(1 + $I_L300_513, 1 + $I_L300_603) = 0.0
  300.                $I_L300_513 = 1 + $I_L300_513
  300.                if ( $I_L300_513 >= $F_A38 ) exit
  300.             enddo
  300.             $I_L300_603 = 1 + $I_L300_603
  300.             if ( $I_L300_603 >= $F_A37 ) exit
  300.          enddo
  300.       endif
  301.       $F_A39 = kmax
  301.       $F_A40 = ibmax
  301.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  301.          $I_L301_605 = 0
  301.          do
  301.             $I_L301_515 = 0
  301. !dir$ ivdep
  301.             do
  301.                gqd(1 + $I_L301_515, 1 + $I_L301_605) = 0.0
  301.                $I_L301_515 = 1 + $I_L301_515
  301.                if ( $I_L301_515 >= $F_A40 ) exit
  301.             enddo
  301.             $I_L301_605 = 1 + $I_L301_605
  301.             if ( $I_L301_605 >= $F_A39 ) exit
  301.          enddo
  301.       endif
  302.       $F_A41 = ibmax
  302.       if ( ibmax > 0 ) then
  302.          $I_L302_517 = 0
  302. !dir$ ivdep
  302.          do
  302.             gvdlnp(1 + $I_L302_517) = 0.0
  302.             $I_L302_517 = 1 + $I_L302_517
  302.             if ( $I_L302_517 >= $F_A41 ) exit
  302.          enddo
  302.       endif
  303.       if ( initial == 1 ) then
  287.          goto 10
  303.       else if ( slagr == 0 ) then
  303.          goto 10
  303.       else if ( sl_twotime_scheme == 0 ) then
  303.    10    continue
  304.          $F_A42 = kmax
  304.          $F_A43 = ibmax
  304.          if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  304.             $I_L304_607 = 0
  304.             do
  304.                $I_L304_519 = 0
  304. !dir$ ivdep
  304.                do
  304.                   gyum(1 + $I_L304_519, 1 + $I_L304_607) = 0.0
  304.                   $I_L304_519 = 1 + $I_L304_519
  304.                   if ( $I_L304_519 >= $F_A43 ) exit
  304.                enddo
  304.                $I_L304_607 = 1 + $I_L304_607
  304.                if ( $I_L304_607 >= $F_A42 ) exit
  304.             enddo
  304.          endif
  305.          $F_A44 = kmax
  305.          $F_A45 = ibmax
  305.          if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  305.             $I_L305_609 = 0
  305.             do
  305.                $I_L305_521 = 0
  305. !dir$ ivdep
  305.                do
  305.                   gyvm(1 + $I_L305_521, 1 + $I_L305_609) = 0.0
  305.                   $I_L305_521 = 1 + $I_L305_521
  305.                   if ( $I_L305_521 >= $F_A45 ) exit
  305.                enddo
  305.                $I_L305_609 = 1 + $I_L305_609
  305.                if ( $I_L305_609 >= $F_A44 ) exit
  305.             enddo
  305.          endif
  306.          $F_A46 = kmax
  306.          $F_A47 = ibmax
  306.          if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  306.             $I_L306_611 = 0
  306.             do
  306.                $I_L306_523 = 0
  306. !dir$ ivdep
  306.                do
  306.                   gtdm(1 + $I_L306_523, 1 + $I_L306_611) = 0.0
  306.                   $I_L306_523 = 1 + $I_L306_523
  306.                   if ( $I_L306_523 >= $F_A47 ) exit
  306.                enddo
  306.                $I_L306_611 = 1 + $I_L306_611
  306.                if ( $I_L306_611 >= $F_A46 ) exit
  306.             enddo
  306.          endif
  307.          $F_A48 = kmax
  307.          $F_A49 = ibmax
  307.          if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  307.             $I_L307_613 = 0
  307.             do
  307.                $I_L307_525 = 0
  307. !dir$ ivdep
  307.                do
  307.                   gqdm(1 + $I_L307_525, 1 + $I_L307_613) = 0.0
  307.                   $I_L307_525 = 1 + $I_L307_525
  307.                   if ( $I_L307_525 >= $F_A49 ) exit
  307.                enddo
  307.                $I_L307_613 = 1 + $I_L307_613
  307.                if ( $I_L307_613 >= $F_A48 ) exit
  307.             enddo
  307.          endif
  308.          $F_A50 = ibmax
  308.          if ( ibmax > 0 ) then
  308.             $I_L308_527 = 0
  308. !dir$ ivdep
  308.             do
  308.                gvdlnpm(1 + $I_L308_527) = 0.0
  308.                $I_L308_527 = 1 + $I_L308_527
  308.                if ( $I_L308_527 >= $F_A50 ) exit
  308.             enddo
  308.          endif
  308.       endif
  310.       latco = jb
  311.       rk = 2.8573561616563808e-1
  317.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  318.          $F_A51 = kmax
  318.          $F_A52 = ibmax
  318.          if ( and( -$F_A52, -$F_A51 ) < 0 ) then
  318.             $I_L318_615 = 0
  318.             do
  318.                $I_L318_529 = 0
  318. !dir$ ivdep
  318.                do
  318.                   gq(1 + $I_L318_529, 1 + $I_L318_615) = max( 9.9999999999999998e-13, gq(1 + $I_L318_529, 1 + $I_L318_615) )
  318.                   $I_L318_529 = 1 + $I_L318_529
  318.                   if ( $I_L318_529 >= $F_A52 ) exit
  318.                enddo
  318.                $I_L318_615 = 1 + $I_L318_615
  318.                if ( $I_L318_615 >= $F_A51 ) exit
  318.             enddo
  318.          endif
  318.       endif
  321.       if ( (dodia%base_addr)(64, 0) ) then
  319.          goto 20
  321.       else if ( (dodia%base_addr)(65, 0) ) then
  321.          goto 20
  321.       else if ( (dodia%base_addr)(66, 0) ) then
  321.    20    continue
  322.          $ncount_S1 = 0
  323.          if ( iblim > 0 ) then
  323.             $I_L323_460 = 0
  323. !dir$ ivdep
  323.             do
  324.                gdt(1 + $I_L323_460, 1) = -(gtsea%base_addr)(1 + $I_L323_460, jb, 0)
  325.                gdt(1 + $I_L323_460, 2) = -(gtsea%base_addr)(1 + $I_L323_460, jb, 0)
  326.                gdt(1 + $I_L323_460, 3) = -(gtsea%base_addr)(1 + $I_L323_460, jb, 0)
  327.                if ( (imask%base_addr)(1 + $I_L323_460, jb, 0) > 0 ) then
  328.                   $ncount_S1 = 1 + $ncount_S1
  329.                   gdt(1 + $I_L323_460, 1) = (tcm%base_addr)($ncount_S1, jb, 0)
  330.                   gdt(1 + $I_L323_460, 2) = (tgm%base_addr)($ncount_S1, jb, 0)
  331.                   gdt(1 + $I_L323_460, 3) = (tdm%base_addr)($ncount_S1, jb, 0)
  331.                endif
  333.                $I_L323_460 = 1 + $I_L323_460
  332.                if ( $I_L323_460 >= iblim ) exit
  332.             enddo
  332.          endif
  334.          if ( (dodia%base_addr)(64, 0) ) then
  334. !dir$ suppress gdt(1, 3)
  334.             t$158%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 3) ) )
  334.             t$158%header%el_len = 64
  334.             t$158%header%assoc = 1
  334.             t$158%header%ptr_alloc = 0
  334.             t$158%header%p_or_a = 0
  334.             t$158%header%a_contig = 1
  334.             t$158%header%dv_versn = 2
  334.             t$158%header%dv_smunit = 64
  334.             t$158%header%d_type = 0
  334.             t$158%header%n_params = 0
  334.             t$158%header%pad_codim = 0
  334.             t$158%header%n_codim = 0
  334.             t$158%header%pad_dim = 0
  334.             t$158%header%n_dim = 1
  334.             t$158%header%d_type_idx = 13
  334.             t$158%header%typ_code = 134481411
  334.             t$158%header%orig_base = 0
  334.             t$158%header%orig_size = 0
  334.             t$158%dim_1%LB = 1
  334.             t$158%dim_1%EX = ( max( 0, iblim ) )
  334.             t$158%dim_1%SM = 1
  334.             ipa$1 = 64
  334.             call updia1d( t$158, ipa$1, latco )
  334.          endif
  335.          if ( (dodia%base_addr)(65, 0) ) then
  335. !dir$ suppress gdt(1, 2)
  335.             t$159%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 2) ) )
  335.             t$159%header%el_len = 64
  335.             t$159%header%assoc = 1
  335.             t$159%header%ptr_alloc = 0
  335.             t$159%header%p_or_a = 0
  335.             t$159%header%a_contig = 1
  335.             t$159%header%dv_versn = 2
  335.             t$159%header%dv_smunit = 64
  335.             t$159%header%d_type = 0
  335.             t$159%header%n_params = 0
  335.             t$159%header%pad_codim = 0
  335.             t$159%header%n_codim = 0
  335.             t$159%header%pad_dim = 0
  335.             t$159%header%n_dim = 1
  335.             t$159%header%d_type_idx = 13
  335.             t$159%header%typ_code = 134481411
  335.             t$159%header%orig_base = 0
  335.             t$159%header%orig_size = 0
  335.             t$159%dim_1%LB = 1
  335.             t$159%dim_1%EX = ( max( 0, iblim ) )
  335.             t$159%dim_1%SM = 1
  335.             ipa$4 = 65
  335.             call updia1d( t$159, ipa$4, latco )
  335.          endif
  336.          if ( (dodia%base_addr)(66, 0) ) then
  336. !dir$ suppress gdt(1, 1)
  336.             t$160%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 1) ) )
  336.             t$160%header%el_len = 64
  336.             t$160%header%assoc = 1
  336.             t$160%header%ptr_alloc = 0
  336.             t$160%header%p_or_a = 0
  336.             t$160%header%a_contig = 1
  336.             t$160%header%dv_versn = 2
  336.             t$160%header%dv_smunit = 64
  336.             t$160%header%d_type = 0
  336.             t$160%header%n_params = 0
  336.             t$160%header%pad_codim = 0
  336.             t$160%header%n_codim = 0
  336.             t$160%header%pad_dim = 0
  336.             t$160%header%n_dim = 1
  336.             t$160%header%d_type_idx = 13
  336.             t$160%header%typ_code = 134481411
  336.             t$160%header%orig_base = 0
  336.             t$160%header%orig_size = 0
  336.             t$160%dim_1%LB = 1
  336.             t$160%dim_1%EX = ( max( 0, iblim ) )
  336.             t$160%dim_1%SM = 1
  336.             ipa$7 = 66
  336.             call updia1d( t$160, ipa$7, latco )
  336.          endif
  336.       endif
  341.       $t_S2 = isgridhistoryon
  341.       if ( $t_S2 ) then
  342.          if ( kmax > 0 ) then
  343.             if ( iblim > 0 ) then
  342.                $I_L342_577 = 0
  342.                do
  343.                   $SCA_tov_I57 = (tov%base_addr)(1 + $I_L342_577, 0)
  343.                   $I_L343_462 = 0
  343. !dir$ ivdep
  343.                   do
  344.                      gtd(1 + $I_L343_462, 1 + $I_L342_577) = $SCA_tov_I57 + gtmp(1 + $I_L343_462, 1 + $I_L342_577)
  345.                      $I_L343_462 = 1 + $I_L343_462
  343.                      if ( $I_L343_462 >= iblim ) exit
  343.                   enddo
  346.                   $I_L342_577 = 1 + $I_L342_577
  345.                   if ( $I_L342_577 >= kmax ) exit
  345.                enddo
  345.             endif
  345.          endif
  348.          if ( (dogrh%base_addr)(60, latco, 0) ) then
  348. !dir$ suppress gtd(1, 1)
  348.             t$168%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  348.             t$168%header%el_len = 64
  348.             t$168%header%assoc = 1
  348.             t$168%header%ptr_alloc = 0
  348.             t$168%header%p_or_a = 0
  348.             t$168%header%a_contig = 0
  348.             t$168%header%dv_versn = 2
  348.             t$168%header%dv_smunit = 64
  348.             t$168%header%d_type = 0
  348.             t$168%header%n_params = 0
  348.             t$168%header%pad_codim = 0
  348.             t$168%header%n_codim = 0
  348.             t$168%header%pad_dim = 0
  348.             t$168%header%n_dim = 2
  348.             t$168%header%d_type_idx = 13
  348.             t$168%header%typ_code = 134481411
  348.             t$168%header%orig_base = 0
  348.             t$168%header%orig_size = 0
  348.             t$168%dim_1%LB = 1
  348.             t$168%dim_1%EX = ( max( 0, iblim ) )
  348.             t$168%dim_1%SM = 1
  348.             t$168%dim_2%LB = 1
  348.             t$168%dim_2%EX = ( max( 0, kmax ) )
  348.             t$168%dim_2%SM = _zla( 0, ibmax )
  348.             ipa$10 = 60
  348.             call store2d( t$168, ipa$10, latco, 0 )
  348.          endif
  349.          if ( (dogrh%base_addr)(58, latco, 0) ) then
  349. !dir$ suppress gu(1, 1)
  349.             t$169%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gu(1, 1) ) )
  349.             t$169%header%el_len = 64
  349.             t$169%header%assoc = 1
  349.             t$169%header%ptr_alloc = 0
  349.             t$169%header%p_or_a = 0
  349.             t$169%header%a_contig = 0
  349.             t$169%header%dv_versn = 2
  349.             t$169%header%dv_smunit = 64
  349.             t$169%header%d_type = 0
  349.             t$169%header%n_params = 0
  349.             t$169%header%pad_codim = 0
  349.             t$169%header%n_codim = 0
  349.             t$169%header%pad_dim = 0
  349.             t$169%header%n_dim = 2
  349.             t$169%header%d_type_idx = 13
  349.             t$169%header%typ_code = 134481411
  349.             t$169%header%orig_base = 0
  349.             t$169%header%orig_size = 0
  349.             t$169%dim_1%LB = 1
  349.             t$169%dim_1%EX = ( max( 0, iblim ) )
  349.             t$169%dim_1%SM = 1
  349.             t$169%dim_2%LB = 1
  349.             t$169%dim_2%EX = ( max( 0, kmax ) )
  349.             t$169%dim_2%SM = _zla( 0, ibmax )
  349.             t$170 = ( max( 0, iblim ) )
  349.             t$173 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  349.             $F_A53 = iblim
  349.             if ( iblim > 0 ) then
  349.                $I_L349_531 = 0
  349. !dir$ ivdep
  349.                do
  349.                   t$172(1 + $I_L349_531) = _sqrt( rcl(1 + $I_L349_531) )
  349.                   $I_L349_531 = 1 + $I_L349_531
  349.                   if ( $I_L349_531 >= $F_A53 ) exit
  349.                enddo
  349.             endif
  349. !dir$ suppress t$172(1)
  349.             t$174%base_addr = pointer to array[1] of real (kind=8)( loc( t$172(1) ) )
  349.             t$174%header%el_len = 64
  349.             t$174%header%assoc = 1
  349.             t$174%header%ptr_alloc = 0
  349.             t$174%header%p_or_a = 0
  349.             t$174%header%a_contig = 1
  349.             t$174%header%dv_versn = 2
  349.             t$174%header%dv_smunit = 64
  349.             t$174%header%d_type = 0
  349.             t$174%header%n_params = 0
  349.             t$174%header%pad_codim = 0
  349.             t$174%header%n_codim = 0
  349.             t$174%header%pad_dim = 0
  349.             t$174%header%n_dim = 1
  349.             t$174%header%d_type_idx = 13
  349.             t$174%header%typ_code = 134481411
  349.             t$174%header%orig_base = 0
  349.             t$174%header%orig_size = 0
  349.             t$174%dim_1%LB = 1
  349.             t$174%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  349.             t$174%dim_1%SM = 1
  349.             ipa$11 = 58
  349.             call store2dv( t$169, ipa$11, latco, t$174 )
  349.             _free( t$173 )
  349.          endif
  350.          if ( (dogrh%base_addr)(59, latco, 0) ) then
  350. !dir$ suppress gv(1, 1)
  350.             t$175%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gv(1, 1) ) )
  350.             t$175%header%el_len = 64
  350.             t$175%header%assoc = 1
  350.             t$175%header%ptr_alloc = 0
  350.             t$175%header%p_or_a = 0
  350.             t$175%header%a_contig = 0
  350.             t$175%header%dv_versn = 2
  350.             t$175%header%dv_smunit = 64
  350.             t$175%header%d_type = 0
  350.             t$175%header%n_params = 0
  350.             t$175%header%pad_codim = 0
  350.             t$175%header%n_codim = 0
  350.             t$175%header%pad_dim = 0
  350.             t$175%header%n_dim = 2
  350.             t$175%header%d_type_idx = 13
  350.             t$175%header%typ_code = 134481411
  350.             t$175%header%orig_base = 0
  350.             t$175%header%orig_size = 0
  350.             t$175%dim_1%LB = 1
  350.             t$175%dim_1%EX = ( max( 0, iblim ) )
  350.             t$175%dim_1%SM = 1
  350.             t$175%dim_2%LB = 1
  350.             t$175%dim_2%EX = ( max( 0, kmax ) )
  350.             t$175%dim_2%SM = _zla( 0, ibmax )
  350.             t$176 = ( max( 0, iblim ) )
  350.             t$179 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  350.             $F_A54 = iblim
  350.             if ( iblim > 0 ) then
  350.                $I_L350_533 = 0
  350. !dir$ ivdep
  350.                do
  350.                   t$178(1 + $I_L350_533) = _sqrt( rcl(1 + $I_L350_533) )
  350.                   $I_L350_533 = 1 + $I_L350_533
  350.                   if ( $I_L350_533 >= $F_A54 ) exit
  350.                enddo
  350.             endif
  350. !dir$ suppress t$178(1)
  350.             t$180%base_addr = pointer to array[1] of real (kind=8)( loc( t$178(1) ) )
  350.             t$180%header%el_len = 64
  350.             t$180%header%assoc = 1
  350.             t$180%header%ptr_alloc = 0
  350.             t$180%header%p_or_a = 0
  350.             t$180%header%a_contig = 1
  350.             t$180%header%dv_versn = 2
  350.             t$180%header%dv_smunit = 64
  350.             t$180%header%d_type = 0
  350.             t$180%header%n_params = 0
  350.             t$180%header%pad_codim = 0
  350.             t$180%header%n_codim = 0
  350.             t$180%header%pad_dim = 0
  350.             t$180%header%n_dim = 1
  350.             t$180%header%d_type_idx = 13
  350.             t$180%header%typ_code = 134481411
  350.             t$180%header%orig_base = 0
  350.             t$180%header%orig_size = 0
  350.             t$180%dim_1%LB = 1
  350.             t$180%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  350.             t$180%dim_1%SM = 1
  350.             ipa$13 = 59
  350.             call store2dv( t$175, ipa$13, latco, t$180 )
  350.             _free( t$179 )
  350.          endif
  351.          if ( (dogrh%base_addr)(61, latco, 0) ) then
  351. !dir$ suppress gq(1, 1)
  351.             t$181%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gq(1, 1) ) )
  351.             t$181%header%el_len = 64
  351.             t$181%header%assoc = 1
  351.             t$181%header%ptr_alloc = 0
  351.             t$181%header%p_or_a = 0
  351.             t$181%header%a_contig = 0
  351.             t$181%header%dv_versn = 2
  351.             t$181%header%dv_smunit = 64
  351.             t$181%header%d_type = 0
  351.             t$181%header%n_params = 0
  351.             t$181%header%pad_codim = 0
  351.             t$181%header%n_codim = 0
  351.             t$181%header%pad_dim = 0
  351.             t$181%header%n_dim = 2
  351.             t$181%header%d_type_idx = 13
  351.             t$181%header%typ_code = 134481411
  351.             t$181%header%orig_base = 0
  351.             t$181%header%orig_size = 0
  351.             t$181%dim_1%LB = 1
  351.             t$181%dim_1%EX = ( max( 0, iblim ) )
  351.             t$181%dim_1%SM = 1
  351.             t$181%dim_2%LB = 1
  351.             t$181%dim_2%EX = ( max( 0, kmax ) )
  351.             t$181%dim_2%SM = _zla( 0, ibmax )
  351.             ipa$15 = 61
  351.             call store2d( t$181, ipa$15, latco, 0 )
  351.          endif
  353.          if ( (dogrh%base_addr)(78, latco, 0) ) then
  353. !dir$ suppress gtd(1, 1)
  353.             t$182%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  353.             t$182%header%el_len = 64
  353.             t$182%header%assoc = 1
  353.             t$182%header%ptr_alloc = 0
  353.             t$182%header%p_or_a = 0
  353.             t$182%header%a_contig = 1
  353.             t$182%header%dv_versn = 2
  353.             t$182%header%dv_smunit = 64
  353.             t$182%header%d_type = 0
  353.             t$182%header%n_params = 0
  353.             t$182%header%pad_codim = 0
  353.             t$182%header%n_codim = 0
  353.             t$182%header%pad_dim = 0
  353.             t$182%header%n_dim = 1
  353.             t$182%header%d_type_idx = 13
  353.             t$182%header%typ_code = 134481411
  353.             t$182%header%orig_base = 0
  353.             t$182%header%orig_size = 0
  353.             t$182%dim_1%LB = 1
  353.             t$182%dim_1%EX = ( max( 0, iblim ) )
  353.             t$182%dim_1%SM = 1
  353.             ipa$16 = 78
  353.             call store1d( t$182, ipa$16, latco, 0 )
  353.          endif
  354.          if ( (dogrh%base_addr)(76, latco, 0) ) then
  354. !dir$ suppress gu(1, 1)
  354.             t$183%base_addr = pointer to array[1] of real (kind=8)( loc( gu(1, 1) ) )
  354.             t$183%header%el_len = 64
  354.             t$183%header%assoc = 1
  354.             t$183%header%ptr_alloc = 0
  354.             t$183%header%p_or_a = 0
  354.             t$183%header%a_contig = 1
  354.             t$183%header%dv_versn = 2
  354.             t$183%header%dv_smunit = 64
  354.             t$183%header%d_type = 0
  354.             t$183%header%n_params = 0
  354.             t$183%header%pad_codim = 0
  354.             t$183%header%n_codim = 0
  354.             t$183%header%pad_dim = 0
  354.             t$183%header%n_dim = 1
  354.             t$183%header%d_type_idx = 13
  354.             t$183%header%typ_code = 134481411
  354.             t$183%header%orig_base = 0
  354.             t$183%header%orig_size = 0
  354.             t$183%dim_1%LB = 1
  354.             t$183%dim_1%EX = ( max( 0, iblim ) )
  354.             t$183%dim_1%SM = 1
  354.             t$184 = ( max( 0, iblim ) )
  354.             t$187 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  354.             $F_A55 = iblim
  354.             if ( iblim > 0 ) then
  354.                $I_L354_535 = 0
  354. !dir$ ivdep
  354.                do
  354.                   t$186(1 + $I_L354_535) = _sqrt( rcl(1 + $I_L354_535) )
  354.                   $I_L354_535 = 1 + $I_L354_535
  354.                   if ( $I_L354_535 >= $F_A55 ) exit
  354.                enddo
  354.             endif
  354. !dir$ suppress t$186(1)
  354.             t$188%base_addr = pointer to array[1] of real (kind=8)( loc( t$186(1) ) )
  354.             t$188%header%el_len = 64
  354.             t$188%header%assoc = 1
  354.             t$188%header%ptr_alloc = 0
  354.             t$188%header%p_or_a = 0
  354.             t$188%header%a_contig = 1
  354.             t$188%header%dv_versn = 2
  354.             t$188%header%dv_smunit = 64
  354.             t$188%header%d_type = 0
  354.             t$188%header%n_params = 0
  354.             t$188%header%pad_codim = 0
  354.             t$188%header%n_codim = 0
  354.             t$188%header%pad_dim = 0
  354.             t$188%header%n_dim = 1
  354.             t$188%header%d_type_idx = 13
  354.             t$188%header%typ_code = 134481411
  354.             t$188%header%orig_base = 0
  354.             t$188%header%orig_size = 0
  354.             t$188%dim_1%LB = 1
  354.             t$188%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  354.             t$188%dim_1%SM = 1
  354.             ipa$19 = 76
  354.             call store1dv( t$183, ipa$19, latco, t$188 )
  354.             _free( t$187 )
  354.          endif
  355.          if ( (dogrh%base_addr)(77, latco, 0) ) then
  355. !dir$ suppress gv(1, 1)
  355.             t$189%base_addr = pointer to array[1] of real (kind=8)( loc( gv(1, 1) ) )
  355.             t$189%header%el_len = 64
  355.             t$189%header%assoc = 1
  355.             t$189%header%ptr_alloc = 0
  355.             t$189%header%p_or_a = 0
  355.             t$189%header%a_contig = 1
  355.             t$189%header%dv_versn = 2
  355.             t$189%header%dv_smunit = 64
  355.             t$189%header%d_type = 0
  355.             t$189%header%n_params = 0
  355.             t$189%header%pad_codim = 0
  355.             t$189%header%n_codim = 0
  355.             t$189%header%pad_dim = 0
  355.             t$189%header%n_dim = 1
  355.             t$189%header%d_type_idx = 13
  355.             t$189%header%typ_code = 134481411
  355.             t$189%header%orig_base = 0
  355.             t$189%header%orig_size = 0
  355.             t$189%dim_1%LB = 1
  355.             t$189%dim_1%EX = ( max( 0, iblim ) )
  355.             t$189%dim_1%SM = 1
  355.             t$190 = ( max( 0, iblim ) )
  355.             t$193 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  355.             $F_A56 = iblim
  355.             if ( iblim > 0 ) then
  355.                $I_L355_537 = 0
  355. !dir$ ivdep
  355.                do
  355.                   t$192(1 + $I_L355_537) = _sqrt( rcl(1 + $I_L355_537) )
  355.                   $I_L355_537 = 1 + $I_L355_537
  355.                   if ( $I_L355_537 >= $F_A56 ) exit
  355.                enddo
  355.             endif
  355. !dir$ suppress t$192(1)
  355.             t$194%base_addr = pointer to array[1] of real (kind=8)( loc( t$192(1) ) )
  355.             t$194%header%el_len = 64
  355.             t$194%header%assoc = 1
  355.             t$194%header%ptr_alloc = 0
  355.             t$194%header%p_or_a = 0
  355.             t$194%header%a_contig = 1
  355.             t$194%header%dv_versn = 2
  355.             t$194%header%dv_smunit = 64
  355.             t$194%header%d_type = 0
  355.             t$194%header%n_params = 0
  355.             t$194%header%pad_codim = 0
  355.             t$194%header%n_codim = 0
  355.             t$194%header%pad_dim = 0
  355.             t$194%header%n_dim = 1
  355.             t$194%header%d_type_idx = 13
  355.             t$194%header%typ_code = 134481411
  355.             t$194%header%orig_base = 0
  355.             t$194%header%orig_size = 0
  355.             t$194%dim_1%LB = 1
  355.             t$194%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  355.             t$194%dim_1%SM = 1
  355.             ipa$21 = 77
  355.             call store1dv( t$189, ipa$21, latco, t$194 )
  355.             _free( t$193 )
  355.          endif
  356.          if ( (dogrh%base_addr)(79, latco, 0) ) then
  356. !dir$ suppress gq(1, 1)
  356.             t$195%base_addr = pointer to array[1] of real (kind=8)( loc( gq(1, 1) ) )
  356.             t$195%header%el_len = 64
  356.             t$195%header%assoc = 1
  356.             t$195%header%ptr_alloc = 0
  356.             t$195%header%p_or_a = 0
  356.             t$195%header%a_contig = 1
  356.             t$195%header%dv_versn = 2
  356.             t$195%header%dv_smunit = 64
  356.             t$195%header%d_type = 0
  356.             t$195%header%n_params = 0
  356.             t$195%header%pad_codim = 0
  356.             t$195%header%n_codim = 0
  356.             t$195%header%pad_dim = 0
  356.             t$195%header%n_dim = 1
  356.             t$195%header%d_type_idx = 13
  356.             t$195%header%typ_code = 134481411
  356.             t$195%header%orig_base = 0
  356.             t$195%header%orig_size = 0
  356.             t$195%dim_1%LB = 1
  356.             t$195%dim_1%EX = ( max( 0, iblim ) )
  356.             t$195%dim_1%SM = 1
  356.             ipa$23 = 79
  356.             call store1d( t$195, ipa$23, latco, 0 )
  356.          endif
  358.          if ( (dogrh%base_addr)(10, latco, 0) ) then
  358. !dir$ suppress (sheleg%base_addr)(1, latco, 0)
  358.             t$196%base_addr = pointer to array[1] of real (kind=8)( loc( (sheleg%base_addr)(1, latco, 0) ) )
  358.             t$196%header%el_len = 64
  358.             t$196%header%assoc = 1
  358.             t$196%header%ptr_alloc = sheleg%header%ptr_alloc
  358.             t$196%header%p_or_a = 0
  358.             t$196%header%a_contig = sheleg%header%a_contig
  358.             t$196%header%dv_versn = 2
  358.             t$196%header%dv_smunit = 64
  358.             t$196%header%d_type = 0
  358.             t$196%header%n_params = 0
  358.             t$196%header%pad_codim = 0
  358.             t$196%header%n_codim = 0
  358.             t$196%header%pad_dim = 0
  358.             t$196%header%n_dim = 1
  358.             t$196%header%d_type_idx = 13
  358.             t$196%header%typ_code = 134481411
  358.             t$196%header%orig_base = sheleg%header%orig_base
  358.             t$196%header%orig_size = sheleg%header%orig_size
  358.             t$196%dim_1%LB = 1
  358.             t$196%dim_1%EX = ( max( 0, iblim ) )
  358.             t$196%dim_1%SM = sheleg%dim_1%SM
  358.             ipa$26 = 10
  358.             call store1d( t$196, ipa$26, latco, 0 )
  358.          endif
  359.          if ( (dogrh%base_addr)(12, latco, 0) ) then
  359. !dir$ suppress (zorl%base_addr)(1, latco, 0)
  359.             t$197%base_addr = pointer to array[1] of real (kind=8)( loc( (zorl%base_addr)(1, latco, 0) ) )
  359.             t$197%header%el_len = 64
  359.             t$197%header%assoc = 1
  359.             t$197%header%ptr_alloc = zorl%header%ptr_alloc
  359.             t$197%header%p_or_a = 0
  359.             t$197%header%a_contig = zorl%header%a_contig
  359.             t$197%header%dv_versn = 2
  359.             t$197%header%dv_smunit = 64
  359.             t$197%header%d_type = 0
  359.             t$197%header%n_params = 0
  359.             t$197%header%pad_codim = 0
  359.             t$197%header%n_codim = 0
  359.             t$197%header%pad_dim = 0
  359.             t$197%header%n_dim = 1
  359.             t$197%header%d_type_idx = 13
  359.             t$197%header%typ_code = 134481411
  359.             t$197%header%orig_base = zorl%header%orig_base
  359.             t$197%header%orig_size = zorl%header%orig_size
  359.             t$197%dim_1%LB = 1
  359.             t$197%dim_1%EX = ( max( 0, iblim ) )
  359.             t$197%dim_1%SM = zorl%dim_1%SM
  359.             ipa$27 = 12
  359.             call store1d( t$197, ipa$27, latco, 0 )
  359.          endif
  361.          $ncount_S6 = 0
  362.          if ( iblim > 0 ) then
  362.             $I_L362_464 = 0
  362. !dir$ ivdep
  362.             do
  363.                gtd(1 + $I_L362_464, 1) = (gtsea%base_addr)(1 + $I_L362_464, latco, 0)
  364.                gtd(1 + $I_L362_464, 2) = (gtsea%base_addr)(1 + $I_L362_464, latco, 0)
  365.                gtd(1 + $I_L362_464, 3) = (gtsea%base_addr)(1 + $I_L362_464, latco, 0)
  366.                gtd(1 + $I_L362_464, 4) = 1.0
  367.                gtd(1 + $I_L362_464, 5) = 1.0
  368.                gtd(1 + $I_L362_464, 6) = 1.0
  369.                gtd(1 + $I_L362_464, 7) = 0.0
  370.                gtd(1 + $I_L362_464, 8) = 0.0
  371.                gtd(1 + $I_L362_464, 9) = real( (imask%base_addr)(1 + $I_L362_464, latco, 0), 8 )
  372.                if ( (imask%base_addr)(1 + $I_L362_464, latco, 0) > 0 ) then
  373.                   $ncount_S6 = 1 + $ncount_S6
  374.                   gtd(1 + $I_L362_464, 1) = (tcm%base_addr)($ncount_S6, latco, 0)
  375.                   gtd(1 + $I_L362_464, 2) = (tgm%base_addr)($ncount_S6, latco, 0)
  376.                   gtd(1 + $I_L362_464, 3) = (tdm%base_addr)($ncount_S6, latco, 0)
  377.                   gtd(1 + $I_L362_464, 4) = (wm%base_addr)($ncount_S6, 1, latco, 0)
  378.                   gtd(1 + $I_L362_464, 5) = (wm%base_addr)($ncount_S6, 2, latco, 0)
  379.                   gtd(1 + $I_L362_464, 6) = (wm%base_addr)($ncount_S6, 3, latco, 0)
  380.                   gtd(1 + $I_L362_464, 7) = (capacm%base_addr)($ncount_S6, 1, latco, 0)
  381.                   gtd(1 + $I_L362_464, 8) = (capacm%base_addr)($ncount_S6, 2, latco, 0)
  381.                endif
  383.                $I_L362_464 = 1 + $I_L362_464
  382.                if ( $I_L362_464 >= iblim ) exit
  382.             enddo
  382.          endif
  385.          if ( (dogrh%base_addr)(2, latco, 0) ) then
  385. !dir$ suppress gtd(1, 1)
  385.             t$201%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  385.             t$201%header%el_len = 64
  385.             t$201%header%assoc = 1
  385.             t$201%header%ptr_alloc = 0
  385.             t$201%header%p_or_a = 0
  385.             t$201%header%a_contig = 1
  385.             t$201%header%dv_versn = 2
  385.             t$201%header%dv_smunit = 64
  385.             t$201%header%d_type = 0
  385.             t$201%header%n_params = 0
  385.             t$201%header%pad_codim = 0
  385.             t$201%header%n_codim = 0
  385.             t$201%header%pad_dim = 0
  385.             t$201%header%n_dim = 1
  385.             t$201%header%d_type_idx = 13
  385.             t$201%header%typ_code = 134481411
  385.             t$201%header%orig_base = 0
  385.             t$201%header%orig_size = 0
  385.             t$201%dim_1%LB = 1
  385.             t$201%dim_1%EX = ( max( 0, iblim ) )
  385.             t$201%dim_1%SM = 1
  385.             ipa$28 = 2
  385.             call store1d( t$201, ipa$28, latco, 0 )
  385.          endif
  386.          if ( (dogrh%base_addr)(3, latco, 0) ) then
  386. !dir$ suppress gtd(1, 2)
  386.             t$202%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 2) ) )
  386.             t$202%header%el_len = 64
  386.             t$202%header%assoc = 1
  386.             t$202%header%ptr_alloc = 0
  386.             t$202%header%p_or_a = 0
  386.             t$202%header%a_contig = 1
  386.             t$202%header%dv_versn = 2
  386.             t$202%header%dv_smunit = 64
  386.             t$202%header%d_type = 0
  386.             t$202%header%n_params = 0
  386.             t$202%header%pad_codim = 0
  386.             t$202%header%n_codim = 0
  386.             t$202%header%pad_dim = 0
  386.             t$202%header%n_dim = 1
  386.             t$202%header%d_type_idx = 13
  386.             t$202%header%typ_code = 134481411
  386.             t$202%header%orig_base = 0
  386.             t$202%header%orig_size = 0
  386.             t$202%dim_1%LB = 1
  386.             t$202%dim_1%EX = ( max( 0, iblim ) )
  386.             t$202%dim_1%SM = 1
  386.             ipa$31 = 3
  386.             call store1d( t$202, ipa$31, latco, 0 )
  386.          endif
  387.          if ( (dogrh%base_addr)(4, latco, 0) ) then
  387. !dir$ suppress gtd(1, 3)
  387.             t$203%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 3) ) )
  387.             t$203%header%el_len = 64
  387.             t$203%header%assoc = 1
  387.             t$203%header%ptr_alloc = 0
  387.             t$203%header%p_or_a = 0
  387.             t$203%header%a_contig = 1
  387.             t$203%header%dv_versn = 2
  387.             t$203%header%dv_smunit = 64
  387.             t$203%header%d_type = 0
  387.             t$203%header%n_params = 0
  387.             t$203%header%pad_codim = 0
  387.             t$203%header%n_codim = 0
  387.             t$203%header%pad_dim = 0
  387.             t$203%header%n_dim = 1
  387.             t$203%header%d_type_idx = 13
  387.             t$203%header%typ_code = 134481411
  387.             t$203%header%orig_base = 0
  387.             t$203%header%orig_size = 0
  387.             t$203%dim_1%LB = 1
  387.             t$203%dim_1%EX = ( max( 0, iblim ) )
  387.             t$203%dim_1%SM = 1
  387.             ipa$34 = 4
  387.             call store1d( t$203, ipa$34, latco, 0 )
  387.          endif
  388.          if ( (dogrh%base_addr)(5, latco, 0) ) then
  388. !dir$ suppress gtd(1, 4)
  388.             t$204%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 4) ) )
  388.             t$204%header%el_len = 64
  388.             t$204%header%assoc = 1
  388.             t$204%header%ptr_alloc = 0
  388.             t$204%header%p_or_a = 0
  388.             t$204%header%a_contig = 1
  388.             t$204%header%dv_versn = 2
  388.             t$204%header%dv_smunit = 64
  388.             t$204%header%d_type = 0
  388.             t$204%header%n_params = 0
  388.             t$204%header%pad_codim = 0
  388.             t$204%header%n_codim = 0
  388.             t$204%header%pad_dim = 0
  388.             t$204%header%n_dim = 1
  388.             t$204%header%d_type_idx = 13
  388.             t$204%header%typ_code = 134481411
  388.             t$204%header%orig_base = 0
  388.             t$204%header%orig_size = 0
  388.             t$204%dim_1%LB = 1
  388.             t$204%dim_1%EX = ( max( 0, iblim ) )
  388.             t$204%dim_1%SM = 1
  388.             ipa$37 = 5
  388.             call store1d( t$204, ipa$37, latco, 0 )
  388.          endif
  389.          if ( (dogrh%base_addr)(6, latco, 0) ) then
  389. !dir$ suppress gtd(1, 5)
  389.             t$205%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 5) ) )
  389.             t$205%header%el_len = 64
  389.             t$205%header%assoc = 1
  389.             t$205%header%ptr_alloc = 0
  389.             t$205%header%p_or_a = 0
  389.             t$205%header%a_contig = 1
  389.             t$205%header%dv_versn = 2
  389.             t$205%header%dv_smunit = 64
  389.             t$205%header%d_type = 0
  389.             t$205%header%n_params = 0
  389.             t$205%header%pad_codim = 0
  389.             t$205%header%n_codim = 0
  389.             t$205%header%pad_dim = 0
  389.             t$205%header%n_dim = 1
  389.             t$205%header%d_type_idx = 13
  389.             t$205%header%typ_code = 134481411
  389.             t$205%header%orig_base = 0
  389.             t$205%header%orig_size = 0
  389.             t$205%dim_1%LB = 1
  389.             t$205%dim_1%EX = ( max( 0, iblim ) )
  389.             t$205%dim_1%SM = 1
  389.             ipa$40 = 6
  389.             call store1d( t$205, ipa$40, latco, 0 )
  389.          endif
  390.          if ( (dogrh%base_addr)(7, latco, 0) ) then
  390. !dir$ suppress gtd(1, 6)
  390.             t$206%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 6) ) )
  390.             t$206%header%el_len = 64
  390.             t$206%header%assoc = 1
  390.             t$206%header%ptr_alloc = 0
  390.             t$206%header%p_or_a = 0
  390.             t$206%header%a_contig = 1
  390.             t$206%header%dv_versn = 2
  390.             t$206%header%dv_smunit = 64
  390.             t$206%header%d_type = 0
  390.             t$206%header%n_params = 0
  390.             t$206%header%pad_codim = 0
  390.             t$206%header%n_codim = 0
  390.             t$206%header%pad_dim = 0
  390.             t$206%header%n_dim = 1
  390.             t$206%header%d_type_idx = 13
  390.             t$206%header%typ_code = 134481411
  390.             t$206%header%orig_base = 0
  390.             t$206%header%orig_size = 0
  390.             t$206%dim_1%LB = 1
  390.             t$206%dim_1%EX = ( max( 0, iblim ) )
  390.             t$206%dim_1%SM = 1
  390.             ipa$43 = 7
  390.             call store1d( t$206, ipa$43, latco, 0 )
  390.          endif
  391.          if ( (dogrh%base_addr)(8, latco, 0) ) then
  391. !dir$ suppress gtd(1, 7)
  391.             t$207%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 7) ) )
  391.             t$207%header%el_len = 64
  391.             t$207%header%assoc = 1
  391.             t$207%header%ptr_alloc = 0
  391.             t$207%header%p_or_a = 0
  391.             t$207%header%a_contig = 1
  391.             t$207%header%dv_versn = 2
  391.             t$207%header%dv_smunit = 64
  391.             t$207%header%d_type = 0
  391.             t$207%header%n_params = 0
  391.             t$207%header%pad_codim = 0
  391.             t$207%header%n_codim = 0
  391.             t$207%header%pad_dim = 0
  391.             t$207%header%n_dim = 1
  391.             t$207%header%d_type_idx = 13
  391.             t$207%header%typ_code = 134481411
  391.             t$207%header%orig_base = 0
  391.             t$207%header%orig_size = 0
  391.             t$207%dim_1%LB = 1
  391.             t$207%dim_1%EX = ( max( 0, iblim ) )
  391.             t$207%dim_1%SM = 1
  391.             ipa$46 = 8
  391.             ipa$47 = 1000.0
  391.             call store1d( t$207, ipa$46, latco, ipa$47 )
  391.          endif
  392.          if ( (dogrh%base_addr)(9, latco, 0) ) then
  392. !dir$ suppress gtd(1, 8)
  392.             t$208%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 8) ) )
  392.             t$208%header%el_len = 64
  392.             t$208%header%assoc = 1
  392.             t$208%header%ptr_alloc = 0
  392.             t$208%header%p_or_a = 0
  392.             t$208%header%a_contig = 1
  392.             t$208%header%dv_versn = 2
  392.             t$208%header%dv_smunit = 64
  392.             t$208%header%d_type = 0
  392.             t$208%header%n_params = 0
  392.             t$208%header%pad_codim = 0
  392.             t$208%header%n_codim = 0
  392.             t$208%header%pad_dim = 0
  392.             t$208%header%n_dim = 1
  392.             t$208%header%d_type_idx = 13
  392.             t$208%header%typ_code = 134481411
  392.             t$208%header%orig_base = 0
  392.             t$208%header%orig_size = 0
  392.             t$208%dim_1%LB = 1
  392.             t$208%dim_1%EX = ( max( 0, iblim ) )
  392.             t$208%dim_1%SM = 1
  392.             ipa$50 = 9
  392.             ipa$51 = 1000.0
  392.             call store1d( t$208, ipa$50, latco, ipa$51 )
  392.          endif
  393.          if ( (dogrh%base_addr)(32, latco, 0) ) then
  393. !dir$ suppress gtd(1, 9)
  393.             t$209%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 9) ) )
  393.             t$209%header%el_len = 64
  393.             t$209%header%assoc = 1
  393.             t$209%header%ptr_alloc = 0
  393.             t$209%header%p_or_a = 0
  393.             t$209%header%a_contig = 1
  393.             t$209%header%dv_versn = 2
  393.             t$209%header%dv_smunit = 64
  393.             t$209%header%d_type = 0
  393.             t$209%header%n_params = 0
  393.             t$209%header%pad_codim = 0
  393.             t$209%header%n_codim = 0
  393.             t$209%header%pad_dim = 0
  393.             t$209%header%n_dim = 1
  393.             t$209%header%d_type_idx = 13
  393.             t$209%header%typ_code = 134481411
  393.             t$209%header%orig_base = 0
  393.             t$209%header%orig_size = 0
  393.             t$209%dim_1%LB = 1
  393.             t$209%dim_1%EX = ( max( 0, iblim ) )
  393.             t$209%dim_1%SM = 1
  393.             ipa$54 = 32
  393.             call store1d( t$209, ipa$54, latco, 0 )
  393.          endif
  393.       endif
  396.       $F_A57 = kmax
  396.       $F_A58 = ibmax
  396.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  396.          $I_L396_617 = 0
  396.          do
  396.             $I_L396_539 = 0
  396. !dir$ ivdep
  396.             do
  396.                gtd(1 + $I_L396_539, 1 + $I_L396_617) = 0.0
  396.                $I_L396_539 = 1 + $I_L396_539
  396.                if ( $I_L396_539 >= $F_A58 ) exit
  396.             enddo
  396.             $I_L396_617 = 1 + $I_L396_617
  396.             if ( $I_L396_617 >= $F_A57 ) exit
  396.          enddo
  396.       endif
  401.       if ( kmax > 0 ) then
  402.          if ( iblim > 0 ) then
  401.             $I_L401_579 = 0
  401.             if ( kmax >= 4 ) then
  401.                $I_L401_689 = 0
  401. !dir$ blocking_size( 0, 0 )
  401.                do
  402.                   $SCA_vmax#1_U0 = vmax(1 + 4 * $I_L401_689)
  402.                   $SCA_vmax#2_U1 = vmax(2 + 4 * $I_L401_689)
  402.                   $SCA_vmax#3_U2 = vmax(3 + 4 * $I_L401_689)
  402.                   $SCA_vmax#4_U3 = vmax(4 + 4 * $I_L401_689)
  402.                   $I_L402_466 = 0
  402. !dir$ ivdep
  402. !dir$ blocking_size( 0, 0 )
  402.                   do
  403.                      $SCA_vmax#1_U0 = max( $SCA_vmax#1_U0, cosiv(1 + $I_L402_466) * _sqrt( gu(1 + $I_L402_466, 1 + 4 * $I_L401_689) * gu(1 + $I_L402_466, 1 + 4 * $I_L401_689) + gv(1 + $I_L402_466, 1 + 4 * $I_L401_689) * gv(1 + $I_L402_466, 1 + 4 * $I_L401_689) ) )
  403.                      $SCA_vmax#2_U1 = max( $SCA_vmax#2_U1, cosiv(1 + $I_L402_466) * _sqrt( gu(1 + $I_L402_466, 2 + 4 * $I_L401_689) * gu(1 + $I_L402_466, 2 + 4 * $I_L401_689) + gv(1 + $I_L402_466, 2 + 4 * $I_L401_689) * gv(1 + $I_L402_466, 2 + 4 * $I_L401_689) ) )
  403.                      $SCA_vmax#3_U2 = max( $SCA_vmax#3_U2, cosiv(1 + $I_L402_466) * _sqrt( gu(1 + $I_L402_466, 3 + 4 * $I_L401_689) * gu(1 + $I_L402_466, 3 + 4 * $I_L401_689) + gv(1 + $I_L402_466, 3 + 4 * $I_L401_689) * gv(1 + $I_L402_466, 3 + 4 * $I_L401_689) ) )
  403.                      $SCA_vmax#4_U3 = max( $SCA_vmax#4_U3, cosiv(1 + $I_L402_466) * _sqrt( gu(1 + $I_L402_466, 4 + 4 * $I_L401_689) * gu(1 + $I_L402_466, 4 + 4 * $I_L401_689) + gv(1 + $I_L402_466, 4 + 4 * $I_L401_689) * gv(1 + $I_L402_466, 4 + 4 * $I_L401_689) ) )
  404.                      $I_L402_466 = 1 + $I_L402_466
  402.                      if ( $I_L402_466 >= iblim ) exit
  402.                   enddo
  402.                   vmax(1 + 4 * $I_L401_689) = $SCA_vmax#1_U0
  402.                   vmax(2 + 4 * $I_L401_689) = $SCA_vmax#2_U1
  402.                   vmax(3 + 4 * $I_L401_689) = $SCA_vmax#3_U2
  402.                   vmax(4 + 4 * $I_L401_689) = $SCA_vmax#4_U3
  405.                   $I_L401_689 = 1 + $I_L401_689
  404.                   if ( $I_L401_689 >= _rsh( kmax, 2 ) ) exit
  404.                enddo
  405.                $I_L401_579 = and( 0xfffffffffffffffcUL, kmax )
  405.             endif
  401.             if ( $I_L401_579 < kmax ) then
  401.                $I_L401_659 = 0
  401. !dir$ blocking_size( 0, 0 )
  401.                do
  402.                   $SCA_vmax_I58 = vmax($I_L401_579 + $I_L401_659 + 1)
  402.                   $I_L402_466 = 0
  402. !dir$ ivdep
  402. !dir$ blocking_size( 0, 0 )
  402.                   do
  403.                      $SCA_vmax_I58 = max( $SCA_vmax_I58, cosiv(1 + $I_L402_466) * _sqrt( gu(1 + $I_L402_466, $I_L401_579 + $I_L401_659 + 1) * gu(1 + $I_L402_466, $I_L401_579 + $I_L401_659 + 1) + gv(1 + $I_L402_466, $I_L401_579 + $I_L401_659 + 1) * gv(1 + $I_L402_466, $I_L401_579 + $I_L401_659 + 1) ) )
  404.                      $I_L402_466 = 1 + $I_L402_466
  402.                      if ( $I_L402_466 >= iblim ) exit
  402.                   enddo
  402.                   vmax($I_L401_579 + $I_L401_659 + 1) = $SCA_vmax_I58
  405.                   $I_L401_659 = 1 + $I_L401_659
  404.                   if ( $I_L401_659 >= kmax + -$I_L401_579 ) exit
  404.                enddo
  404.             endif
  404.          endif
  404.       endif
  413.       if ( slagr == 0 ) then
  414.          call delwind( gulam(1, 1), gvlam(1, 1), grot(1, 1), gdiv(1, 1), guphi(1, 1), gvphi(1, 1), cos2lat(1), ibmax, kmax, iblim )
  414.       endif
  421.       call vertint( slagr, zsint(1), psint(1, 1), adveps(1, 1), divint(1, 1), divintm(1, 1), dot(1, 1), gu(1, 1), gv(1, 1), gdiv(1, 1), gdivm(1, 1), gplam(1), gpphi(1), gzslam(1), gzsphi(1), rcl(1), (del%base_addr)(del%dim_1%LB, 0), ibmax, kmax, iblim )
  427.       if ( -1 + kmax > 0 ) then
  428.          if ( iblim > 0 ) then
  428.             $I_L428_653 = 0
  428.             do
  427.                $I_L427_647 = 0
  427.                if ( -5 + kmax >= 0 ) then
  427.                   $I_L427_691 = 0
  427. !dir$ blocking_size( 0, 0 )
  427.                   do
  428.                      $I_L428_468 = 0
  428. !dir$ ivdep
  428. !dir$ blocking_size( 1024, 1024 )
  428.                      do
  429.                         gw($I_L428_468 + 1024 * $I_L428_653 + 1, 1 + 4 * $I_L427_691) = 5.0e-1 * ( dot($I_L428_468 + 1024 * $I_L428_653 + 1, 2 + 4 * $I_L427_691) + dot($I_L428_468 + 1024 * $I_L428_653 + 1, 1 + 4 * $I_L427_691) )
  429.                         gw($I_L428_468 + 1024 * $I_L428_653 + 1, 2 + 4 * $I_L427_691) = 5.0e-1 * ( dot($I_L428_468 + 1024 * $I_L428_653 + 1, 3 + 4 * $I_L427_691) + dot($I_L428_468 + 1024 * $I_L428_653 + 1, 2 + 4 * $I_L427_691) )
  429.                         gw($I_L428_468 + 1024 * $I_L428_653 + 1, 3 + 4 * $I_L427_691) = 5.0e-1 * ( dot($I_L428_468 + 1024 * $I_L428_653 + 1, 4 + 4 * $I_L427_691) + dot($I_L428_468 + 1024 * $I_L428_653 + 1, 3 + 4 * $I_L427_691) )
  429.                         gw($I_L428_468 + 1024 * $I_L428_653 + 1, 4 + 4 * $I_L427_691) = 5.0e-1 * ( dot($I_L428_468 + 1024 * $I_L428_653 + 1, 5 + 4 * $I_L427_691) + dot($I_L428_468 + 1024 * $I_L428_653 + 1, 4 + 4 * $I_L427_691) )
  428.                         $I_L428_468 = 1 + $I_L428_468
  428.                         if ( $I_L428_468 >= min( iblim, 1024 + 1024 * $I_L428_653 ) + -1024 * $I_L428_653 ) exit
  428.                      enddo
  431.                      $I_L427_691 = 1 + $I_L427_691
  431.                      if ( $I_L427_691 >= _rsh( -1 + kmax, 2 ) ) exit
  431.                   enddo
  431.                   $I_L427_647 = and( 0xfffffffffffffffcUL, -1 + kmax )
  431.                endif
  427.                if ( $I_L427_647 < -1 + kmax ) then
  427.                   $I_L427_680 = 0
  427. !dir$ blocking_size( 0, 0 )
  427.                   do
  428.                      $I_L428_468 = 0
  428. !dir$ ivdep
  428. !dir$ blocking_size( 1024, 1024 )
  428.                      do
  429.                         gw($I_L428_468 + 1024 * $I_L428_653 + 1, $I_L427_647 + $I_L427_680 + 1) = 5.0e-1 * ( dot($I_L428_468 + 1024 * $I_L428_653 + 1, $I_L427_647 + $I_L427_680 + 2) + dot($I_L428_468 + 1024 * $I_L428_653 + 1, $I_L427_647 + $I_L427_680 + 1) )
  428.                         $I_L428_468 = 1 + $I_L428_468
  428.                         if ( $I_L428_468 >= min( iblim, 1024 + 1024 * $I_L428_653 ) + -1024 * $I_L428_653 ) exit
  428.                      enddo
  431.                      $I_L427_680 = 1 + $I_L427_680
  431.                      if ( $I_L427_680 >= kmax + -$I_L427_647 + -1 ) exit
  431.                   enddo
  431.                endif
  428.                $I_L428_653 = 1 + $I_L428_653
  430.                if ( $I_L428_653 >= 1 + max( 0, -1 + _rsh( 1023 + iblim, 10 ) ) ) exit
  430.             enddo
  430.          endif
  430.       endif
  433.       if ( iblim > 0 ) then
  433.          $I_L433_471 = 0
  433. !dir$ ivdep
  433.          do
  434.             gw(1 + $I_L433_471, kmax) = 5.0e-1 * dot(1 + $I_L433_471, kmax)
  435.             $I_L433_471 = 1 + $I_L433_471
  433.             if ( $I_L433_471 >= iblim ) exit
  433.          enddo
  433.       endif
  440.       call omega( omg(1, 1), psint(1, 1), adveps(1, 1), divint(1, 1), dot(1, 1), ps(1), (sl%base_addr)(sl%dim_1%LB, 0), ibmax, kmax, iblim )
  448.       if ( (dodia%base_addr)(86, 0) ) then
  448.          t$228 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  448.          $F_A59 = kmax
  448.          $F_A60 = ibmax
  448.          if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  448.             $I_L448_619 = 0
  448.             do
  448.                $I_L448_541 = 0
  448. !dir$ ivdep
  448.                do
  448.                   t$227(1 + $I_L448_541, 1 + $I_L448_619) = gv(1 + $I_L448_541, 1 + $I_L448_619) * gu(1 + $I_L448_541, 1 + $I_L448_619)
  448.                   $I_L448_541 = 1 + $I_L448_541
  448.                   if ( $I_L448_541 >= $F_A60 ) exit
  448.                enddo
  448.                $I_L448_619 = 1 + $I_L448_619
  448.                if ( $I_L448_619 >= $F_A59 ) exit
  448.             enddo
  448.          endif
  448. !dir$ suppress t$227(1, 1)
  448.          t$229%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$227(1, 1) ) )
  448.          t$229%header%el_len = 64
  448.          t$229%header%assoc = 1
  448.          t$229%header%ptr_alloc = 0
  448.          t$229%header%p_or_a = 0
  448.          t$229%header%a_contig = 1
  448.          t$229%header%dv_versn = 2
  448.          t$229%header%dv_smunit = 64
  448.          t$229%header%d_type = 0
  448.          t$229%header%n_params = 0
  448.          t$229%header%pad_codim = 0
  448.          t$229%header%n_codim = 0
  448.          t$229%header%pad_dim = 0
  448.          t$229%header%n_dim = 2
  448.          t$229%header%d_type_idx = 13
  448.          t$229%header%typ_code = 262147
  448.          t$229%header%orig_base = 0
  448.          t$229%header%orig_size = 0
  448.          t$229%dim_1%LB = 1
  448.          t$229%dim_1%EX = _zla( 0, ibmax )
  448.          t$229%dim_1%SM = 1
  448.          t$229%dim_2%LB = 1
  448.          t$229%dim_2%EX = _zla( 0, kmax )
  448.          t$229%dim_2%SM = _zla( 0, ibmax )
  448.          ipa$161 = 86
  448.          call updia2d( t$229, ipa$161, latco )
  448.          _free( t$228 )
  448.       endif
  450.       if ( (dodia%base_addr)(87, 0) ) then
  450.          t$233 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  450.          $F_A61 = kmax
  450.          $F_A62 = ibmax
  450.          if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  450.             $I_L450_621 = 0
  450.             do
  450.                $I_L450_543 = 0
  450. !dir$ ivdep
  450.                do
  450.                   t$232(1 + $I_L450_543, 1 + $I_L450_621) = omg(1 + $I_L450_543, 1 + $I_L450_621) * gu(1 + $I_L450_543, 1 + $I_L450_621)
  450.                   $I_L450_543 = 1 + $I_L450_543
  450.                   if ( $I_L450_543 >= $F_A62 ) exit
  450.                enddo
  450.                $I_L450_621 = 1 + $I_L450_621
  450.                if ( $I_L450_621 >= $F_A61 ) exit
  450.             enddo
  450.          endif
  450. !dir$ suppress t$232(1, 1)
  450.          t$234%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$232(1, 1) ) )
  450.          t$234%header%el_len = 64
  450.          t$234%header%assoc = 1
  450.          t$234%header%ptr_alloc = 0
  450.          t$234%header%p_or_a = 0
  450.          t$234%header%a_contig = 1
  450.          t$234%header%dv_versn = 2
  450.          t$234%header%dv_smunit = 64
  450.          t$234%header%d_type = 0
  450.          t$234%header%n_params = 0
  450.          t$234%header%pad_codim = 0
  450.          t$234%header%n_codim = 0
  450.          t$234%header%pad_dim = 0
  450.          t$234%header%n_dim = 2
  450.          t$234%header%d_type_idx = 13
  450.          t$234%header%typ_code = 262147
  450.          t$234%header%orig_base = 0
  450.          t$234%header%orig_size = 0
  450.          t$234%dim_1%LB = 1
  450.          t$234%dim_1%EX = _zla( 0, ibmax )
  450.          t$234%dim_1%SM = 1
  450.          t$234%dim_2%LB = 1
  450.          t$234%dim_2%EX = _zla( 0, kmax )
  450.          t$234%dim_2%SM = _zla( 0, ibmax )
  450.          ipa$162 = 87
  450.          call updia2d( t$234, ipa$162, latco )
  450.          _free( t$233 )
  450.       endif
  452.       if ( (dodia%base_addr)(88, 0) ) then
  452.          t$238 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  452.          $F_A63 = kmax
  452.          $F_A64 = ibmax
  452.          if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  452.             $I_L452_623 = 0
  452.             do
  452.                $I_L452_545 = 0
  452. !dir$ ivdep
  452.                do
  452.                   t$237(1 + $I_L452_545, 1 + $I_L452_623) = omg(1 + $I_L452_545, 1 + $I_L452_623) * gv(1 + $I_L452_545, 1 + $I_L452_623)
  452.                   $I_L452_545 = 1 + $I_L452_545
  452.                   if ( $I_L452_545 >= $F_A64 ) exit
  452.                enddo
  452.                $I_L452_623 = 1 + $I_L452_623
  452.                if ( $I_L452_623 >= $F_A63 ) exit
  452.             enddo
  452.          endif
  452. !dir$ suppress t$237(1, 1)
  452.          t$239%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$237(1, 1) ) )
  452.          t$239%header%el_len = 64
  452.          t$239%header%assoc = 1
  452.          t$239%header%ptr_alloc = 0
  452.          t$239%header%p_or_a = 0
  452.          t$239%header%a_contig = 1
  452.          t$239%header%dv_versn = 2
  452.          t$239%header%dv_smunit = 64
  452.          t$239%header%d_type = 0
  452.          t$239%header%n_params = 0
  452.          t$239%header%pad_codim = 0
  452.          t$239%header%n_codim = 0
  452.          t$239%header%pad_dim = 0
  452.          t$239%header%n_dim = 2
  452.          t$239%header%d_type_idx = 13
  452.          t$239%header%typ_code = 262147
  452.          t$239%header%orig_base = 0
  452.          t$239%header%orig_size = 0
  452.          t$239%dim_1%LB = 1
  452.          t$239%dim_1%EX = _zla( 0, ibmax )
  452.          t$239%dim_1%SM = 1
  452.          t$239%dim_2%LB = 1
  452.          t$239%dim_2%EX = _zla( 0, kmax )
  452.          t$239%dim_2%SM = _zla( 0, ibmax )
  452.          ipa$163 = 88
  452.          call updia2d( t$239, ipa$163, latco )
  452.          _free( t$238 )
  452.       endif
  453.       if ( (dodia%base_addr)(89, 0) ) then
  452.          goto 30
  453.       else if ( (dodia%base_addr)(90, 0) ) then
  453.          goto 30
  453.       else if ( (dodia%base_addr)(91, 0) ) then
  453.    30    continue
  455.          if ( kmax > 0 ) then
  456.             if ( iblim > 0 ) then
  455.                $I_L455_581 = 0
  455.                do
  456.                   $SCA_tov_I59 = (tov%base_addr)(1 + $I_L455_581, 0)
  456.                   $I_L456_473 = 0
  456. !dir$ ivdep
  456.                   do
  457.                      gtd(1 + $I_L456_473, 1 + $I_L455_581) = ( ( $SCA_tov_I59 + gtmp(1 + $I_L456_473, 1 + $I_L455_581) ) * 1.0/( 1.0 + 6.0799999999999998e-1 * gq(1 + $I_L456_473, 1 + $I_L455_581) ) )
  458.                      $I_L456_473 = 1 + $I_L456_473
  456.                      if ( $I_L456_473 >= iblim ) exit
  456.                   enddo
  459.                   $I_L455_581 = 1 + $I_L455_581
  458.                   if ( $I_L455_581 >= kmax ) exit
  458.                enddo
  458.             endif
  458.          endif
  461.          if ( (dodia%base_addr)(89, 0) ) then
  461.             t$249 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  461.             $F_A65 = kmax
  461.             $F_A66 = ibmax
  461.             if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  461.                $I_L461_625 = 0
  461.                do
  461.                   $I_L461_547 = 0
  461. !dir$ ivdep
  461.                   do
  461.                      t$248(1 + $I_L461_547, 1 + $I_L461_625) = gv(1 + $I_L461_547, 1 + $I_L461_625) * gtd(1 + $I_L461_547, 1 + $I_L461_625)
  461.                      $I_L461_547 = 1 + $I_L461_547
  461.                      if ( $I_L461_547 >= $F_A66 ) exit
  461.                   enddo
  461.                   $I_L461_625 = 1 + $I_L461_625
  461.                   if ( $I_L461_625 >= $F_A65 ) exit
  461.                enddo
  461.             endif
  461. !dir$ suppress t$248(1, 1)
  461.             t$250%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$248(1, 1) ) )
  461.             t$250%header%el_len = 64
  461.             t$250%header%assoc = 1
  461.             t$250%header%ptr_alloc = 0
  461.             t$250%header%p_or_a = 0
  461.             t$250%header%a_contig = 1
  461.             t$250%header%dv_versn = 2
  461.             t$250%header%dv_smunit = 64
  461.             t$250%header%d_type = 0
  461.             t$250%header%n_params = 0
  461.             t$250%header%pad_codim = 0
  461.             t$250%header%n_codim = 0
  461.             t$250%header%pad_dim = 0
  461.             t$250%header%n_dim = 2
  461.             t$250%header%d_type_idx = 13
  461.             t$250%header%typ_code = 262147
  461.             t$250%header%orig_base = 0
  461.             t$250%header%orig_size = 0
  461.             t$250%dim_1%LB = 1
  461.             t$250%dim_1%EX = _zla( 0, ibmax )
  461.             t$250%dim_1%SM = 1
  461.             t$250%dim_2%LB = 1
  461.             t$250%dim_2%EX = _zla( 0, kmax )
  461.             t$250%dim_2%SM = _zla( 0, ibmax )
  461.             ipa$164 = 89
  461.             call updia2d( t$250, ipa$164, latco )
  461.             _free( t$249 )
  461.          endif
  463.          if ( (dodia%base_addr)(90, 0) ) then
  463.             t$254 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  463.             $F_A67 = kmax
  463.             $F_A68 = ibmax
  463.             if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  463.                $I_L463_627 = 0
  463.                do
  463.                   $I_L463_549 = 0
  463. !dir$ ivdep
  463.                   do
  463.                      t$253(1 + $I_L463_549, 1 + $I_L463_627) = gu(1 + $I_L463_549, 1 + $I_L463_627) * gtd(1 + $I_L463_549, 1 + $I_L463_627)
  463.                      $I_L463_549 = 1 + $I_L463_549
  463.                      if ( $I_L463_549 >= $F_A68 ) exit
  463.                   enddo
  463.                   $I_L463_627 = 1 + $I_L463_627
  463.                   if ( $I_L463_627 >= $F_A67 ) exit
  463.                enddo
  463.             endif
  463. !dir$ suppress t$253(1, 1)
  463.             t$255%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$253(1, 1) ) )
  463.             t$255%header%el_len = 64
  463.             t$255%header%assoc = 1
  463.             t$255%header%ptr_alloc = 0
  463.             t$255%header%p_or_a = 0
  463.             t$255%header%a_contig = 1
  463.             t$255%header%dv_versn = 2
  463.             t$255%header%dv_smunit = 64
  463.             t$255%header%d_type = 0
  463.             t$255%header%n_params = 0
  463.             t$255%header%pad_codim = 0
  463.             t$255%header%n_codim = 0
  463.             t$255%header%pad_dim = 0
  463.             t$255%header%n_dim = 2
  463.             t$255%header%d_type_idx = 13
  463.             t$255%header%typ_code = 262147
  463.             t$255%header%orig_base = 0
  463.             t$255%header%orig_size = 0
  463.             t$255%dim_1%LB = 1
  463.             t$255%dim_1%EX = _zla( 0, ibmax )
  463.             t$255%dim_1%SM = 1
  463.             t$255%dim_2%LB = 1
  463.             t$255%dim_2%EX = _zla( 0, kmax )
  463.             t$255%dim_2%SM = _zla( 0, ibmax )
  463.             ipa$165 = 90
  463.             call updia2d( t$255, ipa$165, latco )
  463.             _free( t$254 )
  463.          endif
  465.          if ( (dodia%base_addr)(91, 0) ) then
  465.             t$259 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  465.             $F_A69 = kmax
  465.             $F_A70 = ibmax
  465.             if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  465.                $I_L465_629 = 0
  465.                do
  465.                   $I_L465_551 = 0
  465. !dir$ ivdep
  465.                   do
  465.                      t$258(1 + $I_L465_551, 1 + $I_L465_629) = omg(1 + $I_L465_551, 1 + $I_L465_629) * gtd(1 + $I_L465_551, 1 + $I_L465_629)
  465.                      $I_L465_551 = 1 + $I_L465_551
  465.                      if ( $I_L465_551 >= $F_A70 ) exit
  465.                   enddo
  465.                   $I_L465_629 = 1 + $I_L465_629
  465.                   if ( $I_L465_629 >= $F_A69 ) exit
  465.                enddo
  465.             endif
  465. !dir$ suppress t$258(1, 1)
  465.             t$260%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$258(1, 1) ) )
  465.             t$260%header%el_len = 64
  465.             t$260%header%assoc = 1
  465.             t$260%header%ptr_alloc = 0
  465.             t$260%header%p_or_a = 0
  465.             t$260%header%a_contig = 1
  465.             t$260%header%dv_versn = 2
  465.             t$260%header%dv_smunit = 64
  465.             t$260%header%d_type = 0
  465.             t$260%header%n_params = 0
  465.             t$260%header%pad_codim = 0
  465.             t$260%header%n_codim = 0
  465.             t$260%header%pad_dim = 0
  465.             t$260%header%n_dim = 2
  465.             t$260%header%d_type_idx = 13
  465.             t$260%header%typ_code = 262147
  465.             t$260%header%orig_base = 0
  465.             t$260%header%orig_size = 0
  465.             t$260%dim_1%LB = 1
  465.             t$260%dim_1%EX = _zla( 0, ibmax )
  465.             t$260%dim_1%SM = 1
  465.             t$260%dim_2%LB = 1
  465.             t$260%dim_2%EX = _zla( 0, kmax )
  465.             t$260%dim_2%SM = _zla( 0, ibmax )
  465.             ipa$166 = 91
  465.             call updia2d( t$260, ipa$166, latco )
  465.             _free( t$259 )
  465.          endif
  467.          $F_A71 = kmax
  467.          $F_A72 = ibmax
  467.          if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  467.             $I_L467_631 = 0
  467.             do
  467.                $I_L467_553 = 0
  467. !dir$ ivdep
  467.                do
  467.                   gtd(1 + $I_L467_553, 1 + $I_L467_631) = 0.0
  467.                   $I_L467_553 = 1 + $I_L467_553
  467.                   if ( $I_L467_553 >= $F_A72 ) exit
  467.                enddo
  467.                $I_L467_631 = 1 + $I_L467_631
  467.                if ( $I_L467_631 >= $F_A71 ) exit
  467.             enddo
  467.          endif
  467.       endif
  470.       if ( (dodia%base_addr)(92, 0) ) then
  470.          t$264 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  470.          $F_A73 = kmax
  470.          $F_A74 = ibmax
  470.          if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  470.             $I_L470_633 = 0
  470.             do
  470.                $I_L470_555 = 0
  470. !dir$ ivdep
  470.                do
  470.                   t$263(1 + $I_L470_555, 1 + $I_L470_633) = gv(1 + $I_L470_555, 1 + $I_L470_633) * gq(1 + $I_L470_555, 1 + $I_L470_633)
  470.                   $I_L470_555 = 1 + $I_L470_555
  470.                   if ( $I_L470_555 >= $F_A74 ) exit
  470.                enddo
  470.                $I_L470_633 = 1 + $I_L470_633
  470.                if ( $I_L470_633 >= $F_A73 ) exit
  470.             enddo
  470.          endif
  470. !dir$ suppress t$263(1, 1)
  470.          t$265%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$263(1, 1) ) )
  470.          t$265%header%el_len = 64
  470.          t$265%header%assoc = 1
  470.          t$265%header%ptr_alloc = 0
  470.          t$265%header%p_or_a = 0
  470.          t$265%header%a_contig = 1
  470.          t$265%header%dv_versn = 2
  470.          t$265%header%dv_smunit = 64
  470.          t$265%header%d_type = 0
  470.          t$265%header%n_params = 0
  470.          t$265%header%pad_codim = 0
  470.          t$265%header%n_codim = 0
  470.          t$265%header%pad_dim = 0
  470.          t$265%header%n_dim = 2
  470.          t$265%header%d_type_idx = 13
  470.          t$265%header%typ_code = 262147
  470.          t$265%header%orig_base = 0
  470.          t$265%header%orig_size = 0
  470.          t$265%dim_1%LB = 1
  470.          t$265%dim_1%EX = _zla( 0, ibmax )
  470.          t$265%dim_1%SM = 1
  470.          t$265%dim_2%LB = 1
  470.          t$265%dim_2%EX = _zla( 0, kmax )
  470.          t$265%dim_2%SM = _zla( 0, ibmax )
  470.          ipa$167 = 92
  470.          call updia2d( t$265, ipa$167, latco )
  470.          _free( t$264 )
  470.       endif
  472.       if ( (dodia%base_addr)(93, 0) ) then
  472.          t$269 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  472.          $F_A75 = kmax
  472.          $F_A76 = ibmax
  472.          if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  472.             $I_L472_635 = 0
  472.             do
  472.                $I_L472_557 = 0
  472. !dir$ ivdep
  472.                do
  472.                   t$268(1 + $I_L472_557, 1 + $I_L472_635) = gu(1 + $I_L472_557, 1 + $I_L472_635) * gq(1 + $I_L472_557, 1 + $I_L472_635)
  472.                   $I_L472_557 = 1 + $I_L472_557
  472.                   if ( $I_L472_557 >= $F_A76 ) exit
  472.                enddo
  472.                $I_L472_635 = 1 + $I_L472_635
  472.                if ( $I_L472_635 >= $F_A75 ) exit
  472.             enddo
  472.          endif
  472. !dir$ suppress t$268(1, 1)
  472.          t$270%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$268(1, 1) ) )
  472.          t$270%header%el_len = 64
  472.          t$270%header%assoc = 1
  472.          t$270%header%ptr_alloc = 0
  472.          t$270%header%p_or_a = 0
  472.          t$270%header%a_contig = 1
  472.          t$270%header%dv_versn = 2
  472.          t$270%header%dv_smunit = 64
  472.          t$270%header%d_type = 0
  472.          t$270%header%n_params = 0
  472.          t$270%header%pad_codim = 0
  472.          t$270%header%n_codim = 0
  472.          t$270%header%pad_dim = 0
  472.          t$270%header%n_dim = 2
  472.          t$270%header%d_type_idx = 13
  472.          t$270%header%typ_code = 262147
  472.          t$270%header%orig_base = 0
  472.          t$270%header%orig_size = 0
  472.          t$270%dim_1%LB = 1
  472.          t$270%dim_1%EX = _zla( 0, ibmax )
  472.          t$270%dim_1%SM = 1
  472.          t$270%dim_2%LB = 1
  472.          t$270%dim_2%EX = _zla( 0, kmax )
  472.          t$270%dim_2%SM = _zla( 0, ibmax )
  472.          ipa$168 = 93
  472.          call updia2d( t$270, ipa$168, latco )
  472.          _free( t$269 )
  472.       endif
  474.       if ( (dodia%base_addr)(94, 0) ) then
  474.          t$274 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 8 ), 8 )
  474.          $F_A77 = kmax
  474.          $F_A78 = ibmax
  474.          if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  474.             $I_L474_637 = 0
  474.             do
  474.                $I_L474_559 = 0
  474. !dir$ ivdep
  474.                do
  474.                   t$273(1 + $I_L474_559, 1 + $I_L474_637) = omg(1 + $I_L474_559, 1 + $I_L474_637) * gq(1 + $I_L474_559, 1 + $I_L474_637)
  474.                   $I_L474_559 = 1 + $I_L474_559
  474.                   if ( $I_L474_559 >= $F_A78 ) exit
  474.                enddo
  474.                $I_L474_637 = 1 + $I_L474_637
  474.                if ( $I_L474_637 >= $F_A77 ) exit
  474.             enddo
  474.          endif
  474. !dir$ suppress t$273(1, 1)
  474.          t$275%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$273(1, 1) ) )
  474.          t$275%header%el_len = 64
  474.          t$275%header%assoc = 1
  474.          t$275%header%ptr_alloc = 0
  474.          t$275%header%p_or_a = 0
  474.          t$275%header%a_contig = 1
  474.          t$275%header%dv_versn = 2
  474.          t$275%header%dv_smunit = 64
  474.          t$275%header%d_type = 0
  474.          t$275%header%n_params = 0
  474.          t$275%header%pad_codim = 0
  474.          t$275%header%n_codim = 0
  474.          t$275%header%pad_dim = 0
  474.          t$275%header%n_dim = 2
  474.          t$275%header%d_type_idx = 13
  474.          t$275%header%typ_code = 262147
  474.          t$275%header%orig_base = 0
  474.          t$275%header%orig_size = 0
  474.          t$275%dim_1%LB = 1
  474.          t$275%dim_1%EX = _zla( 0, ibmax )
  474.          t$275%dim_1%SM = 1
  474.          t$275%dim_2%LB = 1
  474.          t$275%dim_2%EX = _zla( 0, kmax )
  474.          t$275%dim_2%SM = _zla( 0, ibmax )
  474.          ipa$169 = 94
  474.          call updia2d( t$275, ipa$169, latco )
  474.          _free( t$274 )
  474.       endif
  477.       if ( (dodia%base_addr)(104, 0) ) then
  478.          if ( kmax > 0 ) then
  479.             if ( iblim > 0 ) then
  478.                $I_L478_583 = 0
  478.                if ( kmax >= 4 ) then
  478.                   $I_L478_693 = 0
  478. !dir$ blocking_size( 0, 0 )
  478.                   do
  479.                      $SCA_sl#1_U4 = (sl%base_addr)(1 + 4 * $I_L478_693, 0)
  479.                      $SCA_sl#2_U5 = (sl%base_addr)(2 + 4 * $I_L478_693, 0)
  479.                      $SCA_sl#3_U6 = (sl%base_addr)(3 + 4 * $I_L478_693, 0)
  479.                      $SCA_sl#4_U7 = (sl%base_addr)(4 + 4 * $I_L478_693, 0)
  479.                      $I_L479_475 = 0
  479. !dir$ ivdep
  479. !dir$ blocking_size( 0, 0 )
  479.                      do
  480.                         dewpoint(1 + $I_L479_475, 1 + 4 * $I_L478_693) = ( ( -4717.4732000000004 + 35.859999999999999 * log( gq(1 + $I_L479_475, 1 + 4 * $I_L478_693) * ( $SCA_sl#1_U4 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) * 1.0/( -17.27 + log( gq(1 + $I_L479_475, 1 + 4 * $I_L478_693) * ( $SCA_sl#1_U4 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) )
  480.                         dewpoint(1 + $I_L479_475, 2 + 4 * $I_L478_693) = ( ( -4717.4732000000004 + 35.859999999999999 * log( gq(1 + $I_L479_475, 2 + 4 * $I_L478_693) * ( $SCA_sl#2_U5 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) * 1.0/( -17.27 + log( gq(1 + $I_L479_475, 2 + 4 * $I_L478_693) * ( $SCA_sl#2_U5 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) )
  480.                         dewpoint(1 + $I_L479_475, 3 + 4 * $I_L478_693) = ( ( -4717.4732000000004 + 35.859999999999999 * log( gq(1 + $I_L479_475, 3 + 4 * $I_L478_693) * ( $SCA_sl#3_U6 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) * 1.0/( -17.27 + log( gq(1 + $I_L479_475, 3 + 4 * $I_L478_693) * ( $SCA_sl#3_U6 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) )
  480.                         dewpoint(1 + $I_L479_475, 4 + 4 * $I_L478_693) = ( ( -4717.4732000000004 + 35.859999999999999 * log( gq(1 + $I_L479_475, 4 + 4 * $I_L478_693) * ( $SCA_sl#4_U7 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) * 1.0/( -17.27 + log( gq(1 + $I_L479_475, 4 + 4 * $I_L478_693) * ( $SCA_sl#4_U7 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) )
  484.                         $I_L479_475 = 1 + $I_L479_475
  479.                         if ( $I_L479_475 >= iblim ) exit
  479.                      enddo
  485.                      $I_L478_693 = 1 + $I_L478_693
  484.                      if ( $I_L478_693 >= _rsh( kmax, 2 ) ) exit
  484.                   enddo
  485.                   $I_L478_583 = and( 0xfffffffffffffffcUL, kmax )
  485.                endif
  478.                if ( $I_L478_583 < kmax ) then
  478.                   $I_L478_662 = 0
  478. !dir$ blocking_size( 0, 0 )
  478.                   do
  479.                      $SCA_sl_I60 = (sl%base_addr)($I_L478_583 + $I_L478_662 + 1, 0)
  479.                      $I_L479_475 = 0
  479. !dir$ ivdep
  479. !dir$ blocking_size( 0, 0 )
  479.                      do
  480.                         dewpoint(1 + $I_L479_475, $I_L478_583 + $I_L478_662 + 1) = ( ( -4717.4732000000004 + 35.859999999999999 * log( gq(1 + $I_L479_475, $I_L478_583 + $I_L478_662 + 1) * ( $SCA_sl_I60 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) * 1.0/( -17.27 + log( gq(1 + $I_L479_475, $I_L478_583 + $I_L478_662 + 1) * ( $SCA_sl_I60 * ps(1 + $I_L479_475) * 1000.0 ) * 2.6312881207866501e-3 ) ) )
  484.                         $I_L479_475 = 1 + $I_L479_475
  479.                         if ( $I_L479_475 >= iblim ) exit
  479.                      enddo
  485.                      $I_L478_662 = 1 + $I_L478_662
  484.                      if ( $I_L478_662 >= kmax + -$I_L478_583 ) exit
  484.                   enddo
  484.                endif
  484.             endif
  484.          endif
  486. !dir$ suppress dewpoint(1, 1)
  486.          t$282%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dewpoint(1, 1) ) )
  486.          t$282%header%el_len = 64
  486.          t$282%header%assoc = 1
  486.          t$282%header%ptr_alloc = 0
  486.          t$282%header%p_or_a = 0
  486.          t$282%header%a_contig = 1
  486.          t$282%header%dv_versn = 2
  486.          t$282%header%dv_smunit = 64
  486.          t$282%header%d_type = 0
  486.          t$282%header%n_params = 0
  486.          t$282%header%pad_codim = 0
  486.          t$282%header%n_codim = 0
  486.          t$282%header%pad_dim = 0
  486.          t$282%header%n_dim = 2
  486.          t$282%header%d_type_idx = 13
  486.          t$282%header%typ_code = 134481411
  486.          t$282%header%orig_base = 0
  486.          t$282%header%orig_size = 0
  486.          t$282%dim_1%LB = 1
  486.          t$282%dim_1%EX = _zla( 0, ibmax )
  486.          t$282%dim_1%SM = 1
  486.          t$282%dim_2%LB = 1
  486.          t$282%dim_2%EX = _zla( 0, kmax )
  486.          t$282%dim_2%SM = _zla( 0, ibmax )
  486.          ipa$170 = 104
  486.          call updia2d( t$282, ipa$170, latco )
  486.       endif
  493.       if ( slagr == 0 ) then
  487.          goto 40
  493.       else if ( sl_twotime_scheme ) then
  494.          call delgeo( gtlam(1, 1), zlam(1, 1), gzslam(1), gtphi(1, 1), zphi(1, 1), gzsphi(1), (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0), ibmax, iblim, kmax )
  494.       else
  494.    40    continue
  496.          call delgeo( gtlamm(1, 1), zlam(1, 1), gzslam(1), gtphim(1, 1), zphi(1, 1), gzsphi(1), (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0), ibmax, iblim, kmax )
  496.       endif
  500.       if ( slagr == 0 ) then
  505.          call hadvec( gu(1, 1), gv(1, 1), gulam(1, 1), guphi(1, 1), gyu(1, 1), rcl(1), ibmax, kmax, iblim )
  506.          call hadvec( gu(1, 1), gv(1, 1), gvlam(1, 1), gvphi(1, 1), gyv(1, 1), rcl(1), ibmax, kmax, iblim )
  511.          call vadvec( gu(1, 1), dot(1, 1), (rdel2%base_addr)(rdel2%dim_1%LB, 0), gyu(1, 1), ibmax, kmax, iblim )
  512.          call vadvec( gv(1, 1), dot(1, 1), (rdel2%base_addr)(rdel2%dim_1%LB, 0), gyv(1, 1), ibmax, kmax, iblim )
  517.          call metric( gu(1, 1), gv(1, 1), gyv(1, 1), ercossin(1), ibmax, kmax, iblim )
  517.       endif
  524.       call coriol( gu(1, 1), gv(1, 1), gyu(1, 1), gyv(1, 1), fcor(1), ibmax, kmax, iblim )
  529.       t$32 = ibmax
  529.       t$112 = max( 0, ibmax )
  529.       t$33 = kmax
  529.       t$113 = ibmax
  529.       t$114 = max( 0, kmax )
  529.       t$115 = ( ibmax * kmax )
  529.       if ( kmax > 0 ) then
  529.          if ( iblim > 0 ) then
  529.             $I_L529_585 = 0
  529.             if ( kmax >= 4 ) then
  529.                $I_L529_695 = 0
  529. !dir$ blocking_size( 0, 0 )
  529.                do
  529.                   $I_L529_477 = 0
  529. !dir$ ivdep
  529. !dir$ blocking_size( 0, 0 )
  529.                   do
  529.                      gyu(1 + $I_L529_477, 1 + 4 * $I_L529_695) = gyu(1 + $I_L529_477, 1 + 4 * $I_L529_695) + gplam(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 1 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyv(1 + $I_L529_477, 1 + 4 * $I_L529_695) = gyv(1 + $I_L529_477, 1 + 4 * $I_L529_695) + gpphi(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 1 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyu(1 + $I_L529_477, 2 + 4 * $I_L529_695) = gyu(1 + $I_L529_477, 2 + 4 * $I_L529_695) + gplam(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 2 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyv(1 + $I_L529_477, 2 + 4 * $I_L529_695) = gyv(1 + $I_L529_477, 2 + 4 * $I_L529_695) + gpphi(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 2 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyu(1 + $I_L529_477, 3 + 4 * $I_L529_695) = gyu(1 + $I_L529_477, 3 + 4 * $I_L529_695) + gplam(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 3 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyv(1 + $I_L529_477, 3 + 4 * $I_L529_695) = gyv(1 + $I_L529_477, 3 + 4 * $I_L529_695) + gpphi(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 3 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyu(1 + $I_L529_477, 4 + 4 * $I_L529_695) = gyu(1 + $I_L529_477, 4 + 4 * $I_L529_695) + gplam(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 4 + 4 * $I_L529_695) * -287.05000000000001
  529.                      gyv(1 + $I_L529_477, 4 + 4 * $I_L529_695) = gyv(1 + $I_L529_477, 4 + 4 * $I_L529_695) + gpphi(1 + $I_L529_477) * gtmp(1 + $I_L529_477, 4 + 4 * $I_L529_695) * -287.05000000000001
  529.                      $I_L529_477 = 1 + $I_L529_477
  529.                      if ( $I_L529_477 >= iblim ) exit
  529.                   enddo
  529.                   $I_L529_695 = 1 + $I_L529_695
  529.                   if ( $I_L529_695 >= _rsh( kmax, 2 ) ) exit
  529.                enddo
  529.                $I_L529_585 = and( 0xfffffffffffffffcUL, kmax )
  529.             endif
  529.             if ( $I_L529_585 < kmax ) then
  529.                $I_L529_665 = 0
  529. !dir$ blocking_size( 0, 0 )
  529.                do
  529.                   $I_L529_477 = 0
  529. !dir$ ivdep
  529. !dir$ blocking_size( 0, 0 )
  529.                   do
  529.                      gyu(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) = gyu(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) + gplam(1 + $I_L529_477) * gtmp(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) * -287.05000000000001
  529.                      gyv(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) = gyv(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) + gpphi(1 + $I_L529_477) * gtmp(1 + $I_L529_477, $I_L529_585 + $I_L529_665 + 1) * -287.05000000000001
  529.                      $I_L529_477 = 1 + $I_L529_477
  529.                      if ( $I_L529_477 >= iblim ) exit
  529.                   enddo
  529.                   $I_L529_665 = 1 + $I_L529_665
  529.                   if ( $I_L529_665 >= kmax + -$I_L529_585 ) exit
  529.                enddo
  529.             endif
  529.          endif
  529.       endif
  535.       if ( slagr == 0 ) then
  536.          call hadvec( gu(1, 1), gv(1, 1), gtlam(1, 1), gtphi(1, 1), gtd(1, 1), rcl(1), ibmax, kmax, iblim )
  536.       endif
  542.       call vadvtmp( gtmp(1, 1), (p1%base_addr)(p1%dim_1%LB, 0), (p2%base_addr)(p2%dim_1%LB, 0), (h1%base_addr)(h1%dim_1%LB, 0), (h2%base_addr)(h2%dim_1%LB, 0), dot(1, 1), psint(1, 1), (ci%base_addr)(ci%dim_1%LB, 0), (rdel2%base_addr)(rdel2%dim_1%LB, 0), gtd(1, 1), ibmax, kmax, iblim, slagr )
  548.       call tmptend( gtd(1, 1), gtmp(1, 1), (tov%base_addr)(tov%dim_1%LB, 0), psint(1, 1), adveps(1, 1), divint(1, 1), rk, ibmax, kmax, iblim )
  550.       if ( slagr == 0 ) then
  555.          call hadvec( gu(1, 1), gv(1, 1), gqlam(1, 1), gqphi(1, 1), gqd(1, 1), rcl(1), ibmax, kmax, iblim )
  560.          call vadvec( gq(1, 1), dot(1, 1), (rdel2%base_addr)(rdel2%dim_1%LB, 0), gqd(1, 1), ibmax, kmax, iblim )
  565.          $F_A79 = iblim
  565.          if ( iblim > 0 ) then
  565.             $I_L565_561 = 0
  565. !dir$ ivdep
  565.             do
  565.                gvdlnp(1 + $I_L565_561) = -psint(1 + $I_L565_561, kmax)
  565.                $I_L565_561 = 1 + $I_L565_561
  565.                if ( $I_L565_561 >= $F_A79 ) exit
  565.             enddo
  565.          endif
  565.       else
  569.          $F_A80 = iblim
  569.          if ( iblim > 0 ) then
  569.             $I_L569_563 = 0
  569. !dir$ ivdep
  569.             do
  569.                gvdlnp(1 + $I_L569_563) = 1.161237879579632e-5 * zsint(1 + $I_L569_563)
  569.                $I_L569_563 = 1 + $I_L569_563
  569.                if ( $I_L569_563 >= $F_A80 ) exit
  569.             enddo
  569.          endif
  569.       endif
  573.       if ( (dodia%base_addr)(51, 0) ) then
  573. !dir$ suppress psint(1, 1)
  573.          t$283%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( psint(1, 1) ) )
  573.          t$283%header%el_len = 64
  573.          t$283%header%assoc = 1
  573.          t$283%header%ptr_alloc = 0
  573.          t$283%header%p_or_a = 0
  573.          t$283%header%a_contig = 1
  573.          t$283%header%dv_versn = 2
  573.          t$283%header%dv_smunit = 64
  573.          t$283%header%d_type = 0
  573.          t$283%header%n_params = 0
  573.          t$283%header%pad_codim = 0
  573.          t$283%header%n_codim = 0
  573.          t$283%header%pad_dim = 0
  573.          t$283%header%n_dim = 2
  573.          t$283%header%d_type_idx = 13
  573.          t$283%header%typ_code = 134481411
  573.          t$283%header%orig_base = 0
  573.          t$283%header%orig_size = 0
  573.          t$283%dim_1%LB = 1
  573.          t$283%dim_1%EX = _zla( 0, ibmax )
  573.          t$283%dim_1%SM = 1
  573.          t$283%dim_2%LB = 1
  573.          t$283%dim_2%EX = _zla( 0, kmax )
  573.          t$283%dim_2%SM = _zla( 0, ibmax )
  573.          ipa$472 = 51
  573.          call updia2d( t$283, ipa$472, latco )
  573.       endif
  574.       if ( (dodia%base_addr)(52, 0) ) then
  574. !dir$ suppress divint(1, 1)
  574.          t$284%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( divint(1, 1) ) )
  574.          t$284%header%el_len = 64
  574.          t$284%header%assoc = 1
  574.          t$284%header%ptr_alloc = 0
  574.          t$284%header%p_or_a = 0
  574.          t$284%header%a_contig = 1
  574.          t$284%header%dv_versn = 2
  574.          t$284%header%dv_smunit = 64
  574.          t$284%header%d_type = 0
  574.          t$284%header%n_params = 0
  574.          t$284%header%pad_codim = 0
  574.          t$284%header%n_codim = 0
  574.          t$284%header%pad_dim = 0
  574.          t$284%header%n_dim = 2
  574.          t$284%header%d_type_idx = 13
  574.          t$284%header%typ_code = 134481411
  574.          t$284%header%orig_base = 0
  574.          t$284%header%orig_size = 0
  574.          t$284%dim_1%LB = 1
  574.          t$284%dim_1%EX = _zla( 0, ibmax )
  574.          t$284%dim_1%SM = 1
  574.          t$284%dim_2%LB = 1
  574.          t$284%dim_2%EX = _zla( 0, kmax )
  574.          t$284%dim_2%SM = _zla( 0, ibmax )
  574.          ipa$473 = 52
  574.          call updia2d( t$284, ipa$473, latco )
  574.       endif
  575.       if ( (dodia%base_addr)(7, 0) ) then
  575. !dir$ suppress omg(1, 1)
  575.          t$285%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( omg(1, 1) ) )
  575.          t$285%header%el_len = 64
  575.          t$285%header%assoc = 1
  575.          t$285%header%ptr_alloc = 0
  575.          t$285%header%p_or_a = 0
  575.          t$285%header%a_contig = 1
  575.          t$285%header%dv_versn = 2
  575.          t$285%header%dv_smunit = 64
  575.          t$285%header%d_type = 0
  575.          t$285%header%n_params = 0
  575.          t$285%header%pad_codim = 0
  575.          t$285%header%n_codim = 0
  575.          t$285%header%pad_dim = 0
  575.          t$285%header%n_dim = 2
  575.          t$285%header%d_type_idx = 13
  575.          t$285%header%typ_code = 134481411
  575.          t$285%header%orig_base = 0
  575.          t$285%header%orig_size = 0
  575.          t$285%dim_1%LB = 1
  575.          t$285%dim_1%EX = _zla( 0, ibmax )
  575.          t$285%dim_1%SM = 1
  575.          t$285%dim_2%LB = 1
  575.          t$285%dim_2%EX = _zla( 0, kmax )
  575.          t$285%dim_2%SM = _zla( 0, ibmax )
  575.          ipa$474 = 7
  575.          call updia2d( t$285, ipa$474, latco )
  575.       endif
  579.       $t_S18 = isgridhistoryon
  579.       if ( $t_S18 ) then
  580.          if ( (dogrh%base_addr)(1, latco, 0) ) then
  580. !dir$ suppress ps(1)
  580.             t$286%base_addr = pointer to array[1] of real (kind=8)( loc( ps(1) ) )
  580.             t$286%header%el_len = 64
  580.             t$286%header%assoc = 1
  580.             t$286%header%ptr_alloc = 0
  580.             t$286%header%p_or_a = 0
  580.             t$286%header%a_contig = 1
  580.             t$286%header%dv_versn = 2
  580.             t$286%header%dv_smunit = 64
  580.             t$286%header%d_type = 0
  580.             t$286%header%n_params = 0
  580.             t$286%header%pad_codim = 0
  580.             t$286%header%n_codim = 0
  580.             t$286%header%pad_dim = 0
  580.             t$286%header%n_dim = 1
  580.             t$286%header%d_type_idx = 13
  580.             t$286%header%typ_code = 134481411
  580.             t$286%header%orig_base = 0
  580.             t$286%header%orig_size = 0
  580.             t$286%dim_1%LB = 1
  580.             t$286%dim_1%EX = ( max( 0, iblim ) )
  580.             t$286%dim_1%SM = 1
  580.             ipa$475 = 1
  580.             ipa$476 = 10.0
  580.             call store1d( t$286, ipa$475, latco, ipa$476 )
  580.          endif
  580.       endif
  586.       if ( (dodia%base_addr)(8, 0) ) then
  586. !dir$ suppress dot(1, 1)
  586.          t$287%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dot(1, 1) ) )
  586.          t$287%header%el_len = 64
  586.          t$287%header%assoc = 1
  586.          t$287%header%ptr_alloc = 0
  586.          t$287%header%p_or_a = 0
  586.          t$287%header%a_contig = 1
  586.          t$287%header%dv_versn = 2
  586.          t$287%header%dv_smunit = 64
  586.          t$287%header%d_type = 0
  586.          t$287%header%n_params = 0
  586.          t$287%header%pad_codim = 0
  586.          t$287%header%n_codim = 0
  586.          t$287%header%pad_dim = 0
  586.          t$287%header%n_dim = 2
  586.          t$287%header%d_type_idx = 13
  586.          t$287%header%typ_code = 134481411
  586.          t$287%header%orig_base = 0
  586.          t$287%header%orig_size = 0
  586.          t$287%dim_1%LB = 1
  586.          t$287%dim_1%EX = _zla( 0, ibmax )
  586.          t$287%dim_1%SM = 1
  586.          t$287%dim_2%LB = 1
  586.          t$287%dim_2%EX = _zla( 0, kmax )
  586.          t$287%dim_2%SM = _zla( 0, ibmax )
  586.          ipa$478 = 8
  586.          call updia2d( t$287, ipa$478, latco )
  586.       endif
  591.       if ( slagr == 0 .orelse. sl_twotime_scheme == 0 ) then
  597.          ipa$579 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  597.          rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  597.          ipa$581 = loc( (ci%base_addr)(ci%dim_1%LB, 0) )
  597.          ci = _copyin( (ci%base_addr)(ci%dim_1%LB, 0) )
  597.          ipa$583 = loc( (h1%base_addr)(h1%dim_1%LB, 0) )
  597.          h1 = _copyin( (h1%base_addr)(h1%dim_1%LB, 0) )
  597.          ipa$585 = loc( (h2%base_addr)(h2%dim_1%LB, 0) )
  597.          h2 = _copyin( (h2%base_addr)(h2%dim_1%LB, 0) )
  597.          ipa$587 = loc( (tov%base_addr)(tov%dim_1%LB, 0) )
  597.          tov = _copyin( (tov%base_addr)(tov%dim_1%LB, 0) )
  597.          t$39 = ibmax
  597.          t$40 = kmax
  597.          t$134 = max( 0, ibmax )
  597.          t$135 = ibmax
  597.          t$136 = max( 0, kmax )
  597.          t$137 = ( ibmax * kmax )
  597.          t$41 = ( 1 + kmax )
  597.          t$138 = max( 0, ( 1 + kmax ) )
  597.          if ( kmax > 0 ) then
  597.             if ( iblim > 0 ) then
  597.                $I_L597_587 = 0
  597.                if ( kmax >= 4 ) then
  597.                   $I_L597_703 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                   do
  597.                      $SCA_tov#1_U32 = tov(1 + 4 * $I_L597_703)
  597.                      $SCA_tov#2_U33 = tov(2 + 4 * $I_L597_703)
  597.                      $SCA_tov#3_U34 = tov(3 + 4 * $I_L597_703)
  597.                      $SCA_tov#4_U35 = tov(4 + 4 * $I_L597_703)
  597.                      $I_L597_479 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         gyum(1 + $I_L597_479, 1 + 4 * $I_L597_703) = gyum(1 + $I_L597_479, 1 + 4 * $I_L597_703) + -5.0e-1 * ( zlam(1 + $I_L597_479, 1 + 4 * $I_L597_703) + gplamm(1 + $I_L597_479) * $SCA_tov#1_U32 * 287.05000000000001 )
  597.                         gyvm(1 + $I_L597_479, 1 + 4 * $I_L597_703) = gyvm(1 + $I_L597_479, 1 + 4 * $I_L597_703) + -5.0e-1 * ( zphi(1 + $I_L597_479, 1 + 4 * $I_L597_703) + gpphim(1 + $I_L597_479) * $SCA_tov#1_U32 * 287.05000000000001 )
  597.                         gyum(1 + $I_L597_479, 2 + 4 * $I_L597_703) = gyum(1 + $I_L597_479, 2 + 4 * $I_L597_703) + -5.0e-1 * ( zlam(1 + $I_L597_479, 2 + 4 * $I_L597_703) + gplamm(1 + $I_L597_479) * $SCA_tov#2_U33 * 287.05000000000001 )
  597.                         gyvm(1 + $I_L597_479, 2 + 4 * $I_L597_703) = gyvm(1 + $I_L597_479, 2 + 4 * $I_L597_703) + -5.0e-1 * ( zphi(1 + $I_L597_479, 2 + 4 * $I_L597_703) + gpphim(1 + $I_L597_479) * $SCA_tov#2_U33 * 287.05000000000001 )
  597.                         gyum(1 + $I_L597_479, 3 + 4 * $I_L597_703) = gyum(1 + $I_L597_479, 3 + 4 * $I_L597_703) + -5.0e-1 * ( zlam(1 + $I_L597_479, 3 + 4 * $I_L597_703) + gplamm(1 + $I_L597_479) * $SCA_tov#3_U34 * 287.05000000000001 )
  597.                         gyvm(1 + $I_L597_479, 3 + 4 * $I_L597_703) = gyvm(1 + $I_L597_479, 3 + 4 * $I_L597_703) + -5.0e-1 * ( zphi(1 + $I_L597_479, 3 + 4 * $I_L597_703) + gpphim(1 + $I_L597_479) * $SCA_tov#3_U34 * 287.05000000000001 )
  597.                         gyum(1 + $I_L597_479, 4 + 4 * $I_L597_703) = gyum(1 + $I_L597_479, 4 + 4 * $I_L597_703) + -5.0e-1 * ( zlam(1 + $I_L597_479, 4 + 4 * $I_L597_703) + gplamm(1 + $I_L597_479) * $SCA_tov#4_U35 * 287.05000000000001 )
  597.                         gyvm(1 + $I_L597_479, 4 + 4 * $I_L597_703) = gyvm(1 + $I_L597_479, 4 + 4 * $I_L597_703) + -5.0e-1 * ( zphi(1 + $I_L597_479, 4 + 4 * $I_L597_703) + gpphim(1 + $I_L597_479) * $SCA_tov#4_U35 * 287.05000000000001 )
  597.                         $I_L597_479 = 1 + $I_L597_479
  597.                         if ( $I_L597_479 >= iblim ) exit
  597.                      enddo
  597.                      $I_L597_703 = 1 + $I_L597_703
  597.                      if ( $I_L597_703 >= _rsh( kmax, 2 ) ) exit
  597.                   enddo
  597.                   $I_L597_587 = and( 0xfffffffffffffffcUL, kmax )
  597.                endif
  597.                if ( $I_L597_587 < kmax ) then
  597.                   $I_L597_668 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                   do
  597.                      $SCA_tov_I67 = tov($I_L597_587 + $I_L597_668 + 1)
  597.                      $I_L597_479 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         gyum(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) = gyum(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) + -5.0e-1 * ( zlam(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) + gplamm(1 + $I_L597_479) * $SCA_tov_I67 * 287.05000000000001 )
  597.                         gyvm(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) = gyvm(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) + -5.0e-1 * ( zphi(1 + $I_L597_479, $I_L597_587 + $I_L597_668 + 1) + gpphim(1 + $I_L597_479) * $SCA_tov_I67 * 287.05000000000001 )
  597.                         $I_L597_479 = 1 + $I_L597_479
  597.                         if ( $I_L597_479 >= iblim ) exit
  597.                      enddo
  597.                      $I_L597_668 = 1 + $I_L597_668
  597.                      if ( $I_L597_668 >= kmax + -$I_L597_587 ) exit
  597.                   enddo
  597.                endif
  597.             endif
  597.          endif
  597.          if ( iblim > 0 ) then
  597.             $I_L597_481 = 0
  597. !dir$ ivdep
  597.             do
  597.                gvdlnpm(1 + $I_L597_481) = gvdlnpm(1 + $I_L597_481) + -5.0e-1 * divintm(1 + $I_L597_481, kmax)
  597.                $I_L597_481 = 1 + $I_L597_481
  597.                if ( $I_L597_481 >= iblim ) exit
  597.             enddo
  597.          endif
  597.          if ( -1 + kmax > 0 ) then
  597.             if ( iblim > 0 ) then
  597.                $I_L597_589 = 0
  597.                if ( -5 + kmax >= 0 ) then
  597.                   $I_L597_705 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                   do
  597.                      $SCA_ci#1_U36 = ci(2 + 4 * $I_L597_705)
  597.                      $SCA_ci#2_U37 = ci(3 + 4 * $I_L597_705)
  597.                      $SCA_ci#3_U38 = ci(4 + 4 * $I_L597_705)
  597.                      $SCA_ci#4_U39 = ci(5 + 4 * $I_L597_705)
  597.                      $I_L597_483 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         dot(1 + $I_L597_483, 1 + 4 * $I_L597_705) = $SCA_ci#1_U36 * divintm(1 + $I_L597_483, kmax) + -divintm(1 + $I_L597_483, 1 + 4 * $I_L597_705)
  597.                         dot(1 + $I_L597_483, 2 + 4 * $I_L597_705) = $SCA_ci#2_U37 * divintm(1 + $I_L597_483, kmax) + -divintm(1 + $I_L597_483, 2 + 4 * $I_L597_705)
  597.                         dot(1 + $I_L597_483, 3 + 4 * $I_L597_705) = $SCA_ci#3_U38 * divintm(1 + $I_L597_483, kmax) + -divintm(1 + $I_L597_483, 3 + 4 * $I_L597_705)
  597.                         dot(1 + $I_L597_483, 4 + 4 * $I_L597_705) = $SCA_ci#4_U39 * divintm(1 + $I_L597_483, kmax) + -divintm(1 + $I_L597_483, 4 + 4 * $I_L597_705)
  597.                         $I_L597_483 = 1 + $I_L597_483
  597.                         if ( $I_L597_483 >= iblim ) exit
  597.                      enddo
  597.                      $I_L597_705 = 1 + $I_L597_705
  597.                      if ( $I_L597_705 >= _rsh( -1 + kmax, 2 ) ) exit
  597.                   enddo
  597.                   $I_L597_589 = and( 0xfffffffffffffffcUL, -1 + kmax )
  597.                endif
  597.                if ( $I_L597_589 < -1 + kmax ) then
  597.                   $I_L597_671 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                   do
  597.                      $SCA_ci_I68 = ci($I_L597_589 + $I_L597_671 + 2)
  597.                      $I_L597_483 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         dot(1 + $I_L597_483, $I_L597_589 + $I_L597_671 + 1) = $SCA_ci_I68 * divintm(1 + $I_L597_483, kmax) + -divintm(1 + $I_L597_483, $I_L597_589 + $I_L597_671 + 1)
  597.                         $I_L597_483 = 1 + $I_L597_483
  597.                         if ( $I_L597_483 >= iblim ) exit
  597.                      enddo
  597.                      $I_L597_671 = 1 + $I_L597_671
  597.                      if ( $I_L597_671 >= kmax + -$I_L597_589 + -1 ) exit
  597.                   enddo
  597.                endif
  597.             endif
  597.          endif
  597.          if ( iblim > 0 ) then
  597.             $SC_tov_I53 = tov(1)
  597.             $SC_rdel2_I52 = rdel2(1)
  597.             $SC_h1_I51 = h1(1)
  597.             $I_L597_485 = 0
  597. !dir$ ivdep
  597.             do
  597.                gtdm(1 + $I_L597_485, 1) = gtdm(1 + $I_L597_485, 1) + -5.0e-1 * ( rk * $SC_tov_I53 * divintm(1 + $I_L597_485, kmax) + $SC_rdel2_I52 * $SC_h1_I51 * dot(1 + $I_L597_485, 1) )
  597.                $I_L597_485 = 1 + $I_L597_485
  597.                if ( $I_L597_485 >= iblim ) exit
  597.             enddo
  597.          endif
  597.          if ( -3 + kmax >= 0 ) then
  597.             if ( iblim > 0 ) then
  597.                $I_L597_655 = 0
  597.                do
  597.                   $I_L597_651 = 0
  597.                   if ( -6 + kmax >= 0 ) then
  597.                      $I_L597_707 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         $SCA#1_U40 = h2(2 + 4 * $I_L597_707)
  597.                         $SCA#1_U44 = h1(2 + 4 * $I_L597_707)
  597.                         $SCA_rdel2#1_U48 = rdel2(2 + 4 * $I_L597_707)
  597.                         $SCA_tov#1_U52 = tov(2 + 4 * $I_L597_707)
  597.                         $SCA#2_U41 = h2(3 + 4 * $I_L597_707)
  597.                         $SCA#2_U45 = h1(3 + 4 * $I_L597_707)
  597.                         $SCA_rdel2#2_U49 = rdel2(3 + 4 * $I_L597_707)
  597.                         $SCA_tov#2_U53 = tov(3 + 4 * $I_L597_707)
  597.                         $SCA#3_U42 = h2(4 + 4 * $I_L597_707)
  597.                         $SCA#3_U46 = h1(4 + 4 * $I_L597_707)
  597.                         $SCA_rdel2#3_U50 = rdel2(4 + 4 * $I_L597_707)
  597.                         $SCA_tov#3_U54 = tov(4 + 4 * $I_L597_707)
  597.                         $SCA#4_U43 = h2(5 + 4 * $I_L597_707)
  597.                         $SCA#4_U47 = h1(5 + 4 * $I_L597_707)
  597.                         $SCA_rdel2#4_U51 = rdel2(5 + 4 * $I_L597_707)
  597.                         $SCA_tov#4_U55 = tov(5 + 4 * $I_L597_707)
  597.                         $I_L597_487 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 256, 256 )
  597.                         do
  597.                            gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 2 + 4 * $I_L597_707) = gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 2 + 4 * $I_L597_707) + -5.0e-1 * ( rk * $SCA_tov#1_U52 * divintm($I_L597_487 + 256 * $I_L597_655 + 1, kmax) + $SCA_rdel2#1_U48 * ( $SCA#1_U44 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 2 + 4 * $I_L597_707) + $SCA#1_U40 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 1 + 4 * $I_L597_707) ) )
  597.                            gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 3 + 4 * $I_L597_707) = gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 3 + 4 * $I_L597_707) + -5.0e-1 * ( rk * $SCA_tov#2_U53 * divintm($I_L597_487 + 256 * $I_L597_655 + 1, kmax) + $SCA_rdel2#2_U49 * ( $SCA#2_U45 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 3 + 4 * $I_L597_707) + $SCA#2_U41 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 2 + 4 * $I_L597_707) ) )
  597.                            gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 4 + 4 * $I_L597_707) = gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 4 + 4 * $I_L597_707) + -5.0e-1 * ( rk * $SCA_tov#3_U54 * divintm($I_L597_487 + 256 * $I_L597_655 + 1, kmax) + $SCA_rdel2#3_U50 * ( $SCA#3_U46 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 4 + 4 * $I_L597_707) + $SCA#3_U42 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 3 + 4 * $I_L597_707) ) )
  597.                            gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 5 + 4 * $I_L597_707) = gtdm($I_L597_487 + 256 * $I_L597_655 + 1, 5 + 4 * $I_L597_707) + -5.0e-1 * ( rk * $SCA_tov#4_U55 * divintm($I_L597_487 + 256 * $I_L597_655 + 1, kmax) + $SCA_rdel2#4_U51 * ( $SCA#4_U47 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 5 + 4 * $I_L597_707) + $SCA#4_U43 * dot($I_L597_487 + 256 * $I_L597_655 + 1, 4 + 4 * $I_L597_707) ) )
  597.                            $I_L597_487 = 1 + $I_L597_487
  597.                            if ( $I_L597_487 >= min( iblim, 256 + 256 * $I_L597_655 ) + -256 * $I_L597_655 ) exit
  597.                         enddo
  597.                         $I_L597_707 = 1 + $I_L597_707
  597.                         if ( $I_L597_707 >= _rsh( -2 + kmax, 2 ) ) exit
  597.                      enddo
  597.                      $I_L597_651 = and( 0xfffffffffffffffcUL, -2 + kmax )
  597.                   endif
  597.                   if ( $I_L597_651 < -2 + kmax ) then
  597.                      $I_L597_686 = 0
  597. !dir$ blocking_size( 0, 0 )
  597.                      do
  597.                         $SCA_h2_I69 = h2($I_L597_651 + $I_L597_686 + 2)
  597.                         $SCA_h1_I70 = h1($I_L597_651 + $I_L597_686 + 2)
  597.                         $SCA_rdel2_I71 = rdel2($I_L597_651 + $I_L597_686 + 2)
  597.                         $SCA_tov_I72 = tov($I_L597_651 + $I_L597_686 + 2)
  597.                         $I_L597_487 = 0
  597. !dir$ ivdep
  597. !dir$ blocking_size( 256, 256 )
  597.                         do
  597.                            gtdm($I_L597_487 + 256 * $I_L597_655 + 1, $I_L597_651 + $I_L597_686 + 2) = gtdm($I_L597_487 + 256 * $I_L597_655 + 1, $I_L597_651 + $I_L597_686 + 2) + -5.0e-1 * ( rk * $SCA_tov_I72 * divintm($I_L597_487 + 256 * $I_L597_655 + 1, kmax) + $SCA_rdel2_I71 * ( $SCA_h1_I70 * dot($I_L597_487 + 256 * $I_L597_655 + 1, $I_L597_651 + $I_L597_686 + 2) + $SCA_h2_I69 * dot($I_L597_487 + 256 * $I_L597_655 + 1, $I_L597_651 + $I_L597_686 + 1) ) )
  597.                            $I_L597_487 = 1 + $I_L597_487
  597.                            if ( $I_L597_487 >= min( iblim, 256 + 256 * $I_L597_655 ) + -256 * $I_L597_655 ) exit
  597.                         enddo
  597.                         $I_L597_686 = 1 + $I_L597_686
  597.                         if ( $I_L597_686 >= kmax + -$I_L597_651 + -2 ) exit
  597.                      enddo
  597.                   endif
  597.                   $I_L597_655 = 1 + $I_L597_655
  597.                   if ( $I_L597_655 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  597.                enddo
  597.             endif
  597.          endif
  597.          if ( iblim > 0 ) then
  597.             $SC_tov_I56 = tov(kmax)
  597.             $SC_rdel2_I55 = rdel2(kmax)
  597.             $SC_h2_I54 = h2(kmax)
  597.             $I_L597_490 = 0
  597. !dir$ ivdep
  597.             do
  597.                gtdm(1 + $I_L597_490, kmax) = gtdm(1 + $I_L597_490, kmax) + -5.0e-1 * ( rk * $SC_tov_I56 * divintm(1 + $I_L597_490, kmax) + $SC_rdel2_I55 * $SC_h2_I54 * dot(1 + $I_L597_490, -1 + kmax) )
  597.                $I_L597_490 = 1 + $I_L597_490
  597.                if ( $I_L597_490 >= iblim ) exit
  597.             enddo
  597.          endif
  597.          (tov%base_addr)(tov%dim_1%LB, 0) = _copyout( tov )
  597.          (h2%base_addr)(h2%dim_1%LB, 0) = _copyout( h2 )
  597.          (h1%base_addr)(h1%dim_1%LB, 0) = _copyout( h1 )
  597.          (ci%base_addr)(ci%dim_1%LB, 0) = _copyout( ci )
  597.          (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  597.       else
  592.          if ( initial /= 2 ) then
  593.             ipa$524 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  593.             rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  593.             ipa$526 = loc( (ci%base_addr)(ci%dim_1%LB, 0) )
  593.             ci = _copyin( (ci%base_addr)(ci%dim_1%LB, 0) )
  593.             ipa$528 = loc( (h1%base_addr)(h1%dim_1%LB, 0) )
  593.             h1 = _copyin( (h1%base_addr)(h1%dim_1%LB, 0) )
  593.             ipa$530 = loc( (h2%base_addr)(h2%dim_1%LB, 0) )
  593.             h2 = _copyin( (h2%base_addr)(h2%dim_1%LB, 0) )
  593.             ipa$532 = loc( (tov%base_addr)(tov%dim_1%LB, 0) )
  593.             tov = _copyin( (tov%base_addr)(tov%dim_1%LB, 0) )
  593.             t$39 = ibmax
  593.             t$40 = kmax
  593.             t$134 = max( 0, ibmax )
  593.             t$135 = ibmax
  593.             t$136 = max( 0, kmax )
  593.             t$137 = ( ibmax * kmax )
  593.             t$41 = ( 1 + kmax )
  593.             t$138 = max( 0, ( 1 + kmax ) )
  593.             if ( kmax > 0 ) then
  593.                if ( iblim > 0 ) then
  593.                   $I_L593_591 = 0
  593.                   if ( kmax >= 4 ) then
  593.                      $I_L593_697 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                      do
  593.                         $SCA_tov#1_U8 = tov(1 + 4 * $I_L593_697)
  593.                         $SCA_tov#2_U9 = tov(2 + 4 * $I_L593_697)
  593.                         $SCA_tov#3_U10 = tov(3 + 4 * $I_L593_697)
  593.                         $SCA_tov#4_U11 = tov(4 + 4 * $I_L593_697)
  593.                         $I_L593_492 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            gyum(1 + $I_L593_492, 1 + 4 * $I_L593_697) = gyum(1 + $I_L593_492, 1 + 4 * $I_L593_697) + -5.0e-1 * ( zlam(1 + $I_L593_492, 1 + 4 * $I_L593_697) + gplam(1 + $I_L593_492) * $SCA_tov#1_U8 * 287.05000000000001 )
  593.                            gyvm(1 + $I_L593_492, 1 + 4 * $I_L593_697) = gyvm(1 + $I_L593_492, 1 + 4 * $I_L593_697) + -5.0e-1 * ( zphi(1 + $I_L593_492, 1 + 4 * $I_L593_697) + gpphi(1 + $I_L593_492) * $SCA_tov#1_U8 * 287.05000000000001 )
  593.                            gyum(1 + $I_L593_492, 2 + 4 * $I_L593_697) = gyum(1 + $I_L593_492, 2 + 4 * $I_L593_697) + -5.0e-1 * ( zlam(1 + $I_L593_492, 2 + 4 * $I_L593_697) + gplam(1 + $I_L593_492) * $SCA_tov#2_U9 * 287.05000000000001 )
  593.                            gyvm(1 + $I_L593_492, 2 + 4 * $I_L593_697) = gyvm(1 + $I_L593_492, 2 + 4 * $I_L593_697) + -5.0e-1 * ( zphi(1 + $I_L593_492, 2 + 4 * $I_L593_697) + gpphi(1 + $I_L593_492) * $SCA_tov#2_U9 * 287.05000000000001 )
  593.                            gyum(1 + $I_L593_492, 3 + 4 * $I_L593_697) = gyum(1 + $I_L593_492, 3 + 4 * $I_L593_697) + -5.0e-1 * ( zlam(1 + $I_L593_492, 3 + 4 * $I_L593_697) + gplam(1 + $I_L593_492) * $SCA_tov#3_U10 * 287.05000000000001 )
  593.                            gyvm(1 + $I_L593_492, 3 + 4 * $I_L593_697) = gyvm(1 + $I_L593_492, 3 + 4 * $I_L593_697) + -5.0e-1 * ( zphi(1 + $I_L593_492, 3 + 4 * $I_L593_697) + gpphi(1 + $I_L593_492) * $SCA_tov#3_U10 * 287.05000000000001 )
  593.                            gyum(1 + $I_L593_492, 4 + 4 * $I_L593_697) = gyum(1 + $I_L593_492, 4 + 4 * $I_L593_697) + -5.0e-1 * ( zlam(1 + $I_L593_492, 4 + 4 * $I_L593_697) + gplam(1 + $I_L593_492) * $SCA_tov#4_U11 * 287.05000000000001 )
  593.                            gyvm(1 + $I_L593_492, 4 + 4 * $I_L593_697) = gyvm(1 + $I_L593_492, 4 + 4 * $I_L593_697) + -5.0e-1 * ( zphi(1 + $I_L593_492, 4 + 4 * $I_L593_697) + gpphi(1 + $I_L593_492) * $SCA_tov#4_U11 * 287.05000000000001 )
  593.                            $I_L593_492 = 1 + $I_L593_492
  593.                            if ( $I_L593_492 >= iblim ) exit
  593.                         enddo
  593.                         $I_L593_697 = 1 + $I_L593_697
  593.                         if ( $I_L593_697 >= _rsh( kmax, 2 ) ) exit
  593.                      enddo
  593.                      $I_L593_591 = and( 0xfffffffffffffffcUL, kmax )
  593.                   endif
  593.                   if ( $I_L593_591 < kmax ) then
  593.                      $I_L593_674 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                      do
  593.                         $SCA_tov_I61 = tov($I_L593_591 + $I_L593_674 + 1)
  593.                         $I_L593_492 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            gyum(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) = gyum(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) + -5.0e-1 * ( zlam(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) + gplam(1 + $I_L593_492) * $SCA_tov_I61 * 287.05000000000001 )
  593.                            gyvm(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) = gyvm(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) + -5.0e-1 * ( zphi(1 + $I_L593_492, $I_L593_591 + $I_L593_674 + 1) + gpphi(1 + $I_L593_492) * $SCA_tov_I61 * 287.05000000000001 )
  593.                            $I_L593_492 = 1 + $I_L593_492
  593.                            if ( $I_L593_492 >= iblim ) exit
  593.                         enddo
  593.                         $I_L593_674 = 1 + $I_L593_674
  593.                         if ( $I_L593_674 >= kmax + -$I_L593_591 ) exit
  593.                      enddo
  593.                   endif
  593.                endif
  593.             endif
  593.             if ( iblim > 0 ) then
  593.                $I_L593_494 = 0
  593. !dir$ ivdep
  593.                do
  593.                   gvdlnpm(1 + $I_L593_494) = gvdlnpm(1 + $I_L593_494) + -5.0e-1 * divint(1 + $I_L593_494, kmax)
  593.                   $I_L593_494 = 1 + $I_L593_494
  593.                   if ( $I_L593_494 >= iblim ) exit
  593.                enddo
  593.             endif
  593.             if ( -1 + kmax > 0 ) then
  593.                if ( iblim > 0 ) then
  593.                   $I_L593_593 = 0
  593.                   if ( -5 + kmax >= 0 ) then
  593.                      $I_L593_699 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                      do
  593.                         $SCA_ci#1_U12 = ci(2 + 4 * $I_L593_699)
  593.                         $SCA_ci#2_U13 = ci(3 + 4 * $I_L593_699)
  593.                         $SCA_ci#3_U14 = ci(4 + 4 * $I_L593_699)
  593.                         $SCA_ci#4_U15 = ci(5 + 4 * $I_L593_699)
  593.                         $I_L593_496 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            dot(1 + $I_L593_496, 1 + 4 * $I_L593_699) = $SCA_ci#1_U12 * divint(1 + $I_L593_496, kmax) + -divint(1 + $I_L593_496, 1 + 4 * $I_L593_699)
  593.                            dot(1 + $I_L593_496, 2 + 4 * $I_L593_699) = $SCA_ci#2_U13 * divint(1 + $I_L593_496, kmax) + -divint(1 + $I_L593_496, 2 + 4 * $I_L593_699)
  593.                            dot(1 + $I_L593_496, 3 + 4 * $I_L593_699) = $SCA_ci#3_U14 * divint(1 + $I_L593_496, kmax) + -divint(1 + $I_L593_496, 3 + 4 * $I_L593_699)
  593.                            dot(1 + $I_L593_496, 4 + 4 * $I_L593_699) = $SCA_ci#4_U15 * divint(1 + $I_L593_496, kmax) + -divint(1 + $I_L593_496, 4 + 4 * $I_L593_699)
  593.                            $I_L593_496 = 1 + $I_L593_496
  593.                            if ( $I_L593_496 >= iblim ) exit
  593.                         enddo
  593.                         $I_L593_699 = 1 + $I_L593_699
  593.                         if ( $I_L593_699 >= _rsh( -1 + kmax, 2 ) ) exit
  593.                      enddo
  593.                      $I_L593_593 = and( 0xfffffffffffffffcUL, -1 + kmax )
  593.                   endif
  593.                   if ( $I_L593_593 < -1 + kmax ) then
  593.                      $I_L593_677 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                      do
  593.                         $SCA_ci_I62 = ci($I_L593_593 + $I_L593_677 + 2)
  593.                         $I_L593_496 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            dot(1 + $I_L593_496, $I_L593_593 + $I_L593_677 + 1) = $SCA_ci_I62 * divint(1 + $I_L593_496, kmax) + -divint(1 + $I_L593_496, $I_L593_593 + $I_L593_677 + 1)
  593.                            $I_L593_496 = 1 + $I_L593_496
  593.                            if ( $I_L593_496 >= iblim ) exit
  593.                         enddo
  593.                         $I_L593_677 = 1 + $I_L593_677
  593.                         if ( $I_L593_677 >= kmax + -$I_L593_593 + -1 ) exit
  593.                      enddo
  593.                   endif
  593.                endif
  593.             endif
  593.             if ( iblim > 0 ) then
  593.                $SC_tov_I47 = tov(1)
  593.                $SC_rdel2_I46 = rdel2(1)
  593.                $SC_h1_I45 = h1(1)
  593.                $I_L593_498 = 0
  593. !dir$ ivdep
  593.                do
  593.                   gtdm(1 + $I_L593_498, 1) = gtdm(1 + $I_L593_498, 1) + -5.0e-1 * ( rk * $SC_tov_I47 * divint(1 + $I_L593_498, kmax) + $SC_rdel2_I46 * $SC_h1_I45 * dot(1 + $I_L593_498, 1) )
  593.                   $I_L593_498 = 1 + $I_L593_498
  593.                   if ( $I_L593_498 >= iblim ) exit
  593.                enddo
  593.             endif
  593.             if ( -3 + kmax >= 0 ) then
  593.                if ( iblim > 0 ) then
  593.                   $I_L593_657 = 0
  593.                   do
  593.                      $I_L593_649 = 0
  593.                      if ( -6 + kmax >= 0 ) then
  593.                         $I_L593_701 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            $SCA#1_U16 = h2(2 + 4 * $I_L593_701)
  593.                            $SCA#1_U20 = h1(2 + 4 * $I_L593_701)
  593.                            $SCA_rdel2#1_U24 = rdel2(2 + 4 * $I_L593_701)
  593.                            $SCA_tov#1_U28 = tov(2 + 4 * $I_L593_701)
  593.                            $SCA#2_U17 = h2(3 + 4 * $I_L593_701)
  593.                            $SCA#2_U21 = h1(3 + 4 * $I_L593_701)
  593.                            $SCA_rdel2#2_U25 = rdel2(3 + 4 * $I_L593_701)
  593.                            $SCA_tov#2_U29 = tov(3 + 4 * $I_L593_701)
  593.                            $SCA#3_U18 = h2(4 + 4 * $I_L593_701)
  593.                            $SCA#3_U22 = h1(4 + 4 * $I_L593_701)
  593.                            $SCA_rdel2#3_U26 = rdel2(4 + 4 * $I_L593_701)
  593.                            $SCA_tov#3_U30 = tov(4 + 4 * $I_L593_701)
  593.                            $SCA#4_U19 = h2(5 + 4 * $I_L593_701)
  593.                            $SCA#4_U23 = h1(5 + 4 * $I_L593_701)
  593.                            $SCA_rdel2#4_U27 = rdel2(5 + 4 * $I_L593_701)
  593.                            $SCA_tov#4_U31 = tov(5 + 4 * $I_L593_701)
  593.                            $I_L593_500 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 256, 256 )
  593.                            do
  593.                               gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 2 + 4 * $I_L593_701) = gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 2 + 4 * $I_L593_701) + -5.0e-1 * ( rk * $SCA_tov#1_U28 * divint($I_L593_500 + 256 * $I_L593_657 + 1, kmax) + $SCA_rdel2#1_U24 * ( $SCA#1_U20 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 2 + 4 * $I_L593_701) + $SCA#1_U16 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 1 + 4 * $I_L593_701) ) )
  593.                               gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 3 + 4 * $I_L593_701) = gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 3 + 4 * $I_L593_701) + -5.0e-1 * ( rk * $SCA_tov#2_U29 * divint($I_L593_500 + 256 * $I_L593_657 + 1, kmax) + $SCA_rdel2#2_U25 * ( $SCA#2_U21 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 3 + 4 * $I_L593_701) + $SCA#2_U17 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 2 + 4 * $I_L593_701) ) )
  593.                               gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 4 + 4 * $I_L593_701) = gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 4 + 4 * $I_L593_701) + -5.0e-1 * ( rk * $SCA_tov#3_U30 * divint($I_L593_500 + 256 * $I_L593_657 + 1, kmax) + $SCA_rdel2#3_U26 * ( $SCA#3_U22 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 4 + 4 * $I_L593_701) + $SCA#3_U18 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 3 + 4 * $I_L593_701) ) )
  593.                               gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 5 + 4 * $I_L593_701) = gtdm($I_L593_500 + 256 * $I_L593_657 + 1, 5 + 4 * $I_L593_701) + -5.0e-1 * ( rk * $SCA_tov#4_U31 * divint($I_L593_500 + 256 * $I_L593_657 + 1, kmax) + $SCA_rdel2#4_U27 * ( $SCA#4_U23 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 5 + 4 * $I_L593_701) + $SCA#4_U19 * dot($I_L593_500 + 256 * $I_L593_657 + 1, 4 + 4 * $I_L593_701) ) )
  593.                               $I_L593_500 = 1 + $I_L593_500
  593.                               if ( $I_L593_500 >= min( iblim, 256 + 256 * $I_L593_657 ) + -256 * $I_L593_657 ) exit
  593.                            enddo
  593.                            $I_L593_701 = 1 + $I_L593_701
  593.                            if ( $I_L593_701 >= _rsh( -2 + kmax, 2 ) ) exit
  593.                         enddo
  593.                         $I_L593_649 = and( 0xfffffffffffffffcUL, -2 + kmax )
  593.                      endif
  593.                      if ( $I_L593_649 < -2 + kmax ) then
  593.                         $I_L593_683 = 0
  593. !dir$ blocking_size( 0, 0 )
  593.                         do
  593.                            $SCA_h2_I63 = h2($I_L593_649 + $I_L593_683 + 2)
  593.                            $SCA_h1_I64 = h1($I_L593_649 + $I_L593_683 + 2)
  593.                            $SCA_rdel2_I65 = rdel2($I_L593_649 + $I_L593_683 + 2)
  593.                            $SCA_tov_I66 = tov($I_L593_649 + $I_L593_683 + 2)
  593.                            $I_L593_500 = 0
  593. !dir$ ivdep
  593. !dir$ blocking_size( 256, 256 )
  593.                            do
  593.                               gtdm($I_L593_500 + 256 * $I_L593_657 + 1, $I_L593_649 + $I_L593_683 + 2) = gtdm($I_L593_500 + 256 * $I_L593_657 + 1, $I_L593_649 + $I_L593_683 + 2) + -5.0e-1 * ( rk * $SCA_tov_I66 * divint($I_L593_500 + 256 * $I_L593_657 + 1, kmax) + $SCA_rdel2_I65 * ( $SCA_h1_I64 * dot($I_L593_500 + 256 * $I_L593_657 + 1, $I_L593_649 + $I_L593_683 + 2) + $SCA_h2_I63 * dot($I_L593_500 + 256 * $I_L593_657 + 1, $I_L593_649 + $I_L593_683 + 1) ) )
  593.                               $I_L593_500 = 1 + $I_L593_500
  593.                               if ( $I_L593_500 >= min( iblim, 256 + 256 * $I_L593_657 ) + -256 * $I_L593_657 ) exit
  593.                            enddo
  593.                            $I_L593_683 = 1 + $I_L593_683
  593.                            if ( $I_L593_683 >= kmax + -$I_L593_649 + -2 ) exit
  593.                         enddo
  593.                      endif
  593.                      $I_L593_657 = 1 + $I_L593_657
  593.                      if ( $I_L593_657 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  593.                   enddo
  593.                endif
  593.             endif
  593.             if ( iblim > 0 ) then
  593.                $SC_tov_I50 = tov(kmax)
  593.                $SC_rdel2_I49 = rdel2(kmax)
  593.                $SC_h2_I48 = h2(kmax)
  593.                $I_L593_503 = 0
  593. !dir$ ivdep
  593.                do
  593.                   gtdm(1 + $I_L593_503, kmax) = gtdm(1 + $I_L593_503, kmax) + -5.0e-1 * ( rk * $SC_tov_I50 * divint(1 + $I_L593_503, kmax) + $SC_rdel2_I49 * $SC_h2_I48 * dot(1 + $I_L593_503, -1 + kmax) )
  593.                   $I_L593_503 = 1 + $I_L593_503
  593.                   if ( $I_L593_503 >= iblim ) exit
  593.                enddo
  593.             endif
  593.             (tov%base_addr)(tov%dim_1%LB, 0) = _copyout( tov )
  593.             (h2%base_addr)(h2%dim_1%LB, 0) = _copyout( h2 )
  593.             (h1%base_addr)(h1%dim_1%LB, 0) = _copyout( h1 )
  593.             (ci%base_addr)(ci%dim_1%LB, 0) = _copyout( ci )
  593.             (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  593.          endif
  593.       endif
  601.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  605.          if ( kmax > 0 ) then
  606.             if ( iblim > 0 ) then
  605.                $I_L605_595 = 0
  605.                do
  606.                   $SCA_tov_I73 = (tov%base_addr)(1 + $I_L605_595, 0)
  606.                   $I_L606_505 = 0
  606. !dir$ ivdep
  606.                   do
  607.                      gtmp(1 + $I_L606_505, 1 + $I_L605_595) = gtmp(1 + $I_L606_505, 1 + $I_L605_595) + $SCA_tov_I73
  608.                      gtm(1 + $I_L606_505, 1 + $I_L605_595) = gtm(1 + $I_L606_505, 1 + $I_L605_595) + $SCA_tov_I73
  609.                      $I_L606_505 = 1 + $I_L606_505
  606.                      if ( $I_L606_505 >= iblim ) exit
  606.                   enddo
  610.                   $I_L605_595 = 1 + $I_L605_595
  609.                   if ( $I_L605_595 >= kmax ) exit
  609.                enddo
  609.             endif
  609.          endif
  614.          t$296 = int( _alloc( 8 * _zla( 0, ibmax ) ), 8 )
  614.          $F_A81 = ibmax
  614.          if ( ibmax > 0 ) then
  614.             $I_L614_565 = 0
  614. !dir$ ivdep
  614.             do
  614.                t$295(1 + $I_L614_565) = 10.0 * ps(1 + $I_L614_565)
  614.                $I_L614_565 = 1 + $I_L614_565
  614.                if ( $I_L614_565 >= $F_A81 ) exit
  614.             enddo
  614.          endif
  613.          call dryphysics( gzs(1), gtm(1, 1), gqm(1, 1), gum(1, 1), gvm(1, 1), t$295(1), gyu(1, 1), gyv(1, 1), gtd(1, 1), gqd(1, 1), colrad(1), ifday, tod, gtmp(1, 1), gq(1, 1), omg(1, 1), jb, lonrad(1), glnpm(1), cos2d(1), intcosz )
  614.          _free( t$296 )
  618.          if ( kmax > 0 ) then
  619.             if ( iblim > 0 ) then
  618.                $I_L618_597 = 0
  618.                do
  619.                   $SCA_tov_I74 = (tov%base_addr)(1 + $I_L618_597, 0)
  619.                   $I_L619_507 = 0
  619. !dir$ ivdep
  619.                   do
  620.                      gtm(1 + $I_L619_507, 1 + $I_L618_597) = gtm(1 + $I_L619_507, 1 + $I_L618_597) + -$SCA_tov_I74
  621.                      gtmp(1 + $I_L619_507, 1 + $I_L618_597) = gtmp(1 + $I_L619_507, 1 + $I_L618_597) + -$SCA_tov_I74
  622.                      $I_L619_507 = 1 + $I_L619_507
  619.                      if ( $I_L619_507 >= iblim ) exit
  619.                   enddo
  623.                   $I_L618_597 = 1 + $I_L618_597
  622.                   if ( $I_L618_597 >= kmax ) exit
  622.                enddo
  622.             endif
  622.          endif
  627.          call pwater( gq(1, 1), dot(1, 1), ps(1), (del%base_addr)(del%dim_1%LB, 0), ibmax, iblim, kmax )
  628.          if ( (dodia%base_addr)(14, 0) ) then
  628. !dir$ suppress dot(1, 1)
  628.             t$303%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dot(1, 1) ) )
  628.             t$303%header%el_len = 64
  628.             t$303%header%assoc = 1
  628.             t$303%header%ptr_alloc = 0
  628.             t$303%header%p_or_a = 0
  628.             t$303%header%a_contig = 1
  628.             t$303%header%dv_versn = 2
  628.             t$303%header%dv_smunit = 64
  628.             t$303%header%d_type = 0
  628.             t$303%header%n_params = 0
  628.             t$303%header%pad_codim = 0
  628.             t$303%header%n_codim = 0
  628.             t$303%header%pad_dim = 0
  628.             t$303%header%n_dim = 2
  628.             t$303%header%d_type_idx = 13
  628.             t$303%header%typ_code = 134481411
  628.             t$303%header%orig_base = 0
  628.             t$303%header%orig_size = 0
  628.             t$303%dim_1%LB = 1
  628.             t$303%dim_1%EX = _zla( 0, ibmax )
  628.             t$303%dim_1%SM = 1
  628.             t$303%dim_2%LB = 1
  628.             t$303%dim_2%EX = _zla( 0, kmax )
  628.             t$303%dim_2%SM = _zla( 0, ibmax )
  628.             ipa$647 = 14
  628.             call updia2d( t$303, ipa$647, latco )
  628.          endif
  628.       endif
  639.       if ( (dodia%base_addr)(1, 0) ) then
  639. !dir$ suppress ps(1)
  639.          t$304%base_addr = pointer to array[1] of real (kind=8)( loc( ps(1) ) )
  639.          t$304%header%el_len = 64
  639.          t$304%header%assoc = 1
  639.          t$304%header%ptr_alloc = 0
  639.          t$304%header%p_or_a = 0
  639.          t$304%header%a_contig = 1
  639.          t$304%header%dv_versn = 2
  639.          t$304%header%dv_smunit = 64
  639.          t$304%header%d_type = 0
  639.          t$304%header%n_params = 0
  639.          t$304%header%pad_codim = 0
  639.          t$304%header%n_codim = 0
  639.          t$304%header%pad_dim = 0
  639.          t$304%header%n_dim = 1
  639.          t$304%header%d_type_idx = 13
  639.          t$304%header%typ_code = 134481411
  639.          t$304%header%orig_base = 0
  639.          t$304%header%orig_size = 0
  639.          t$304%dim_1%LB = 1
  639.          t$304%dim_1%EX = _zla( 0, ibmax )
  639.          t$304%dim_1%SM = 1
  639.          ipa$648 = 1
  639.          call updia1d( t$304, ipa$648, latco )
  639.       endif
  641.       if ( initial == 1 ) then
  641.          if ( slagr ) then
  641.             if ( sl_twotime_scheme ) then
  642.                $F_A82 = kmax
  642.                $F_A83 = ibmax
  642.                if ( and( -$F_A83, -$F_A82 ) < 0 ) then
  642.                   $I_L642_639 = 0
  642.                   do
  642.                      $I_L642_567 = 0
  642. !dir$ ivdep
  642.                      do
  642.                         gyum(1 + $I_L642_567, 1 + $I_L642_639) = gyum(1 + $I_L642_567, 1 + $I_L642_639) + -5.0e-1 * gyu(1 + $I_L642_567, 1 + $I_L642_639)
  642.                         $I_L642_567 = 1 + $I_L642_567
  642.                         if ( $I_L642_567 >= $F_A83 ) exit
  642.                      enddo
  642.                      $I_L642_639 = 1 + $I_L642_639
  642.                      if ( $I_L642_639 >= $F_A82 ) exit
  642.                   enddo
  642.                endif
  643.                $F_A84 = kmax
  643.                $F_A85 = ibmax
  643.                if ( and( -$F_A85, -$F_A84 ) < 0 ) then
  643.                   $I_L643_641 = 0
  643.                   do
  643.                      $I_L643_569 = 0
  643. !dir$ ivdep
  643.                      do
  643.                         gyvm(1 + $I_L643_569, 1 + $I_L643_641) = gyvm(1 + $I_L643_569, 1 + $I_L643_641) + -5.0e-1 * gyv(1 + $I_L643_569, 1 + $I_L643_641)
  643.                         $I_L643_569 = 1 + $I_L643_569
  643.                         if ( $I_L643_569 >= $F_A85 ) exit
  643.                      enddo
  643.                      $I_L643_641 = 1 + $I_L643_641
  643.                      if ( $I_L643_641 >= $F_A84 ) exit
  643.                   enddo
  643.                endif
  644.                $F_A86 = kmax
  644.                $F_A87 = ibmax
  644.                if ( and( -$F_A87, -$F_A86 ) < 0 ) then
  644.                   $I_L644_643 = 0
  644.                   do
  644.                      $I_L644_571 = 0
  644. !dir$ ivdep
  644.                      do
  644.                         gtdm(1 + $I_L644_571, 1 + $I_L644_643) = gtdm(1 + $I_L644_571, 1 + $I_L644_643) + -5.0e-1 * gtd(1 + $I_L644_571, 1 + $I_L644_643)
  644.                         $I_L644_571 = 1 + $I_L644_571
  644.                         if ( $I_L644_571 >= $F_A87 ) exit
  644.                      enddo
  644.                      $I_L644_643 = 1 + $I_L644_643
  644.                      if ( $I_L644_643 >= $F_A86 ) exit
  644.                   enddo
  644.                endif
  645.                $F_A88 = kmax
  645.                $F_A89 = ibmax
  645.                if ( and( -$F_A89, -$F_A88 ) < 0 ) then
  645.                   $I_L645_645 = 0
  645.                   do
  645.                      $I_L645_573 = 0
  645. !dir$ ivdep
  645.                      do
  645.                         gqdm(1 + $I_L645_573, 1 + $I_L645_645) = gqdm(1 + $I_L645_573, 1 + $I_L645_645) + -5.0e-1 * gqd(1 + $I_L645_573, 1 + $I_L645_645)
  645.                         $I_L645_573 = 1 + $I_L645_573
  645.                         if ( $I_L645_573 >= $F_A89 ) exit
  645.                      enddo
  645.                      $I_L645_645 = 1 + $I_L645_645
  645.                      if ( $I_L645_645 >= $F_A88 ) exit
  645.                   enddo
  645.                endif
  646.                $F_A90 = ibmax
  646.                if ( ibmax > 0 ) then
  646.                   $I_L646_575 = 0
  646. !dir$ ivdep
  646.                   do
  646.                      gvdlnpm(1 + $I_L646_575) = gvdlnpm(1 + $I_L646_575) + -5.0e-1 * gvdlnp(1 + $I_L646_575)
  646.                      $I_L646_575 = 1 + $I_L646_575
  646.                      if ( $I_L646_575 >= $F_A90 ) exit
  646.                   enddo
  646.                endif
  646.             endif
  646.          endif
  646.       endif
  193.       _free( t$48 )
  648.       return
  648.       end
  648.       
  655.       
  655.       subroutine delwind( ulam, vlam, vor, div, uphi, vphi, cos2lat, ibmax, kmax, iblim )
  655.       t$16 = ibmax
  655.       t$17 = kmax
  660.       t$78 = _zla( 0, ibmax )
  655.       t$79 = _zla( 0, ibmax )
  660.       t$80 = _zla( 0, kmax )
  655.       t$81 = _zla( 0, ibmax ) * _zla( 0, kmax )
  673.       if ( kmax > 0 ) then
  674.          if ( iblim > 0 ) then
  673.             $I_L673_14 = 0
  673.             if ( kmax >= 4 ) then
  673.                $I_L673_19 = 0
  673. !dir$ blocking_size( 0, 0 )
  673.                do
  674.                   $I_L674_12 = 0
  674. !dir$ ivdep
  674. !dir$ blocking_size( 0, 0 )
  674.                   do
  675.                      uphi(1 + $I_L674_12, 1 + 4 * $I_L673_19) = vlam(1 + $I_L674_12, 1 + 4 * $I_L673_19) + -( cos2lat(1 + $I_L674_12) * vor(1 + $I_L674_12, 1 + 4 * $I_L673_19) )
  676.                      vphi(1 + $I_L674_12, 1 + 4 * $I_L673_19) = cos2lat(1 + $I_L674_12) * div(1 + $I_L674_12, 1 + 4 * $I_L673_19) + -ulam(1 + $I_L674_12, 1 + 4 * $I_L673_19)
  675.                      uphi(1 + $I_L674_12, 2 + 4 * $I_L673_19) = vlam(1 + $I_L674_12, 2 + 4 * $I_L673_19) + -( cos2lat(1 + $I_L674_12) * vor(1 + $I_L674_12, 2 + 4 * $I_L673_19) )
  676.                      vphi(1 + $I_L674_12, 2 + 4 * $I_L673_19) = cos2lat(1 + $I_L674_12) * div(1 + $I_L674_12, 2 + 4 * $I_L673_19) + -ulam(1 + $I_L674_12, 2 + 4 * $I_L673_19)
  675.                      uphi(1 + $I_L674_12, 3 + 4 * $I_L673_19) = vlam(1 + $I_L674_12, 3 + 4 * $I_L673_19) + -( cos2lat(1 + $I_L674_12) * vor(1 + $I_L674_12, 3 + 4 * $I_L673_19) )
  676.                      vphi(1 + $I_L674_12, 3 + 4 * $I_L673_19) = cos2lat(1 + $I_L674_12) * div(1 + $I_L674_12, 3 + 4 * $I_L673_19) + -ulam(1 + $I_L674_12, 3 + 4 * $I_L673_19)
  675.                      uphi(1 + $I_L674_12, 4 + 4 * $I_L673_19) = vlam(1 + $I_L674_12, 4 + 4 * $I_L673_19) + -( cos2lat(1 + $I_L674_12) * vor(1 + $I_L674_12, 4 + 4 * $I_L673_19) )
  676.                      vphi(1 + $I_L674_12, 4 + 4 * $I_L673_19) = cos2lat(1 + $I_L674_12) * div(1 + $I_L674_12, 4 + 4 * $I_L673_19) + -ulam(1 + $I_L674_12, 4 + 4 * $I_L673_19)
  677.                      $I_L674_12 = 1 + $I_L674_12
  674.                      if ( $I_L674_12 >= iblim ) exit
  674.                   enddo
  678.                   $I_L673_19 = 1 + $I_L673_19
  677.                   if ( $I_L673_19 >= _rsh( kmax, 2 ) ) exit
  677.                enddo
  678.                $I_L673_14 = and( 0xfffffffffffffffcUL, kmax )
  678.             endif
  673.             if ( $I_L673_14 < kmax ) then
  673.                $I_L673_16 = 0
  673. !dir$ blocking_size( 0, 0 )
  673.                do
  674.                   $I_L674_12 = 0
  674. !dir$ ivdep
  674. !dir$ blocking_size( 0, 0 )
  674.                   do
  675.                      uphi(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1) = vlam(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1) + -( cos2lat(1 + $I_L674_12) * vor(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1) )
  676.                      vphi(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1) = cos2lat(1 + $I_L674_12) * div(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1) + -ulam(1 + $I_L674_12, $I_L673_14 + $I_L673_16 + 1)
  677.                      $I_L674_12 = 1 + $I_L674_12
  674.                      if ( $I_L674_12 >= iblim ) exit
  674.                   enddo
  678.                   $I_L673_16 = 1 + $I_L673_16
  677.                   if ( $I_L673_16 >= kmax + -$I_L673_14 ) exit
  677.                enddo
  677.             endif
  677.          endif
  677.       endif
  679.       return
  679.       end
  679.       
  686.       
  686.       subroutine vertint( slagr, zsint, psint, adveps, divint, divintm, dot, u, v, div, divm, plam, pphi, zlam, zphi, rcl, del, ibmax, kmax, iblim )
  686.       t$18 = ibmax
  702.       t$82 = _zla( 0, ibmax )
  686.       t$19 = kmax
  686.       t$83 = _zla( 0, ibmax )
  703.       t$84 = _zla( 0, kmax )
  686.       t$85 = _zla( 0, ibmax ) * _zla( 0, kmax )
  718.       if ( kmax > 0 ) then
  719.          if ( iblim > 0 ) then
  718.             $I_L718_113 = 0
  718.             if ( kmax >= 4 ) then
  718.                $I_L718_129 = 0
  718. !dir$ blocking_size( 0, 0 )
  718.                do
  719.                   $I_L719_98 = 0
  719. !dir$ ivdep
  719. !dir$ blocking_size( 0, 0 )
  719.                   do
  720.                      adveps(1 + $I_L719_98, 1 + 4 * $I_L718_129) = rcl(1 + $I_L719_98) * ( u(1 + $I_L719_98, 1 + 4 * $I_L718_129) * plam(1 + $I_L719_98) + v(1 + $I_L719_98, 1 + 4 * $I_L718_129) * pphi(1 + $I_L719_98) )
  720.                      adveps(1 + $I_L719_98, 2 + 4 * $I_L718_129) = rcl(1 + $I_L719_98) * ( u(1 + $I_L719_98, 2 + 4 * $I_L718_129) * plam(1 + $I_L719_98) + v(1 + $I_L719_98, 2 + 4 * $I_L718_129) * pphi(1 + $I_L719_98) )
  720.                      adveps(1 + $I_L719_98, 3 + 4 * $I_L718_129) = rcl(1 + $I_L719_98) * ( u(1 + $I_L719_98, 3 + 4 * $I_L718_129) * plam(1 + $I_L719_98) + v(1 + $I_L719_98, 3 + 4 * $I_L718_129) * pphi(1 + $I_L719_98) )
  720.                      adveps(1 + $I_L719_98, 4 + 4 * $I_L718_129) = rcl(1 + $I_L719_98) * ( u(1 + $I_L719_98, 4 + 4 * $I_L718_129) * plam(1 + $I_L719_98) + v(1 + $I_L719_98, 4 + 4 * $I_L718_129) * pphi(1 + $I_L719_98) )
  721.                      $I_L719_98 = 1 + $I_L719_98
  719.                      if ( $I_L719_98 >= iblim ) exit
  719.                   enddo
  722.                   $I_L718_129 = 1 + $I_L718_129
  721.                   if ( $I_L718_129 >= _rsh( kmax, 2 ) ) exit
  721.                enddo
  722.                $I_L718_113 = and( 0xfffffffffffffffcUL, kmax )
  722.             endif
  718.             if ( $I_L718_113 < kmax ) then
  718.                $I_L718_123 = 0
  718. !dir$ blocking_size( 0, 0 )
  718.                do
  719.                   $I_L719_98 = 0
  719. !dir$ ivdep
  719. !dir$ blocking_size( 0, 0 )
  719.                   do
  720.                      adveps(1 + $I_L719_98, $I_L718_113 + $I_L718_123 + 1) = rcl(1 + $I_L719_98) * ( u(1 + $I_L719_98, $I_L718_113 + $I_L718_123 + 1) * plam(1 + $I_L719_98) + v(1 + $I_L719_98, $I_L718_113 + $I_L718_123 + 1) * pphi(1 + $I_L719_98) )
  721.                      $I_L719_98 = 1 + $I_L719_98
  719.                      if ( $I_L719_98 >= iblim ) exit
  719.                   enddo
  722.                   $I_L718_123 = 1 + $I_L718_123
  721.                   if ( $I_L718_123 >= kmax + -$I_L718_113 ) exit
  721.                enddo
  721.             endif
  721.          endif
  721.       endif
  724.       if ( iblim > 0 ) then
  726.          $SC_del_I0 = del(1)
  724.          $I_L724_100 = 0
  724. !dir$ ivdep
  724.          do
  725.             dot(1 + $I_L724_100, 1) = 0.0
  726.             psint(1 + $I_L724_100, 1) = $SC_del_I0 * adveps(1 + $I_L724_100, 1)
  727.             divint(1 + $I_L724_100, 1) = $SC_del_I0 * div(1 + $I_L724_100, 1)
  728.             divintm(1 + $I_L724_100, 1) = $SC_del_I0 * divm(1 + $I_L724_100, 1)
  729.             $I_L724_100 = 1 + $I_L724_100
  724.             if ( $I_L724_100 >= iblim ) exit
  724.          enddo
  724.       endif
  730.       if ( slagr ) then
  731.          if ( iblim > 0 ) then
  732.             $SC_del_I0 = del(1)
  731.             $I_L731_102 = 0
  731. !dir$ ivdep
  731.             do
  732.                zsint(1 + $I_L731_102) = $SC_del_I0 * rcl(1 + $I_L731_102) * ( u(1 + $I_L731_102, 1) * zlam(1 + $I_L731_102) + v(1 + $I_L731_102, 1) * zphi(1 + $I_L731_102) )
  733.                $I_L731_102 = 1 + $I_L731_102
  731.                if ( $I_L731_102 >= iblim ) exit
  731.             enddo
  731.          endif
  731.       endif
  735.       if ( -2 + kmax >= 0 ) then
  736.          if ( iblim > 0 ) then
  741.             if ( slagr ) then
  735.                $I_L735_115 = 0
  735.                do
  736.                   $SCA_del_I2 = del(2 + $I_L735_115)
  736.                   $I_L736_104 = 0
  736. !dir$ ivdep
  736.                   do
  737.                      psint(1 + $I_L736_104, 2 + $I_L735_115) = psint(1 + $I_L736_104, 1 + $I_L735_115) + $SCA_del_I2 * adveps(1 + $I_L736_104, 2 + $I_L735_115)
  738.                      divint(1 + $I_L736_104, 2 + $I_L735_115) = divint(1 + $I_L736_104, 1 + $I_L735_115) + $SCA_del_I2 * div(1 + $I_L736_104, 2 + $I_L735_115)
  739.                      divintm(1 + $I_L736_104, 2 + $I_L735_115) = divintm(1 + $I_L736_104, 1 + $I_L735_115) + $SCA_del_I2 * divm(1 + $I_L736_104, 2 + $I_L735_115)
  740.                      $I_L736_104 = 1 + $I_L736_104
  736.                      if ( $I_L736_104 >= iblim ) exit
  736.                   enddo
  742.                   $I_L742_106 = 0
  742. !dir$ ivdep
  742.                   do
  743.                      zsint(1 + $I_L742_106) = zsint(1 + $I_L742_106) + $SCA_del_I2 * rcl(1 + $I_L742_106) * ( u(1 + $I_L742_106, 2 + $I_L735_115) * zlam(1 + $I_L742_106) + v(1 + $I_L742_106, 2 + $I_L735_115) * zphi(1 + $I_L742_106) )
  744.                      $I_L742_106 = 1 + $I_L742_106
  742.                      if ( $I_L742_106 >= iblim ) exit
  742.                   enddo
  746.                   $I_L735_115 = 1 + $I_L735_115
  745.                   if ( $I_L735_115 >= -1 + kmax ) exit
  745.                enddo
  745.             else
  736.                $I_L736_121 = 0
  736.                do
  735.                   $I_L735_119 = 0
  735.                   if ( -3 + kmax >= 0 ) then
  735.                      $I_L735_131 = 0
  735. !dir$ blocking_size( 0, 0 )
  735.                      do
  736.                         $SCA_del#1_U0 = del(2 + 2 * $I_L735_131)
  736.                         $SCA_del#2_U1 = del(3 + 2 * $I_L735_131)
  736.                         $I_L736_110 = 0
  736. !dir$ ivdep
  736. !dir$ blocking_size( 256, 256 )
  736.                         do
  737.                            psint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) = psint($I_L736_110 + 256 * $I_L736_121 + 1, 1 + 2 * $I_L735_131) + $SCA_del#1_U0 * adveps($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131)
  738.                            divint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) = divint($I_L736_110 + 256 * $I_L736_121 + 1, 1 + 2 * $I_L735_131) + $SCA_del#1_U0 * div($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131)
  739.                            divintm($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) = divintm($I_L736_110 + 256 * $I_L736_121 + 1, 1 + 2 * $I_L735_131) + $SCA_del#1_U0 * divm($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131)
  737.                            psint($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131) = psint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) + $SCA_del#2_U1 * adveps($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131)
  738.                            divint($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131) = divint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) + $SCA_del#2_U1 * div($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131)
  739.                            divintm($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131) = divintm($I_L736_110 + 256 * $I_L736_121 + 1, 2 + 2 * $I_L735_131) + $SCA_del#2_U1 * divm($I_L736_110 + 256 * $I_L736_121 + 1, 3 + 2 * $I_L735_131)
  736.                            $I_L736_110 = 1 + $I_L736_110
  736.                            if ( $I_L736_110 >= min( iblim, 256 + 256 * $I_L736_121 ) + -256 * $I_L736_121 ) exit
  736.                         enddo
  746.                         $I_L735_131 = 1 + $I_L735_131
  746.                         if ( $I_L735_131 >= _rsh( -1 + kmax, 1 ) ) exit
  746.                      enddo
  746.                      $I_L735_119 = and( 0xfffffffffffffffeUL, -1 + kmax )
  746.                   endif
  735.                   if ( $I_L735_119 < -1 + kmax ) then
  736.                      $SCA_del_I3 = del(2 + $I_L735_119)
  736.                      $I_L736_110 = 0
  736. !dir$ ivdep
  736. !dir$ blocking_size( 256, 256 )
  736.                      do
  737.                         psint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119) = psint($I_L736_110 + 256 * $I_L736_121 + 1, 1 + $I_L735_119) + $SCA_del_I3 * adveps($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119)
  738.                         divint($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119) = divint($I_L736_110 + 256 * $I_L736_121 + 1, 1 + $I_L735_119) + $SCA_del_I3 * div($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119)
  739.                         divintm($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119) = divintm($I_L736_110 + 256 * $I_L736_121 + 1, 1 + $I_L735_119) + $SCA_del_I3 * divm($I_L736_110 + 256 * $I_L736_121 + 1, 2 + $I_L735_119)
  736.                         $I_L736_110 = 1 + $I_L736_110
  736.                         if ( $I_L736_110 >= min( iblim, 256 + 256 * $I_L736_121 ) + -256 * $I_L736_121 ) exit
  736.                      enddo
  736.                   endif
  736.                   $I_L736_121 = 1 + $I_L736_121
  745.                   if ( $I_L736_121 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  745.                enddo
  745.             endif
  747.             $I_L747_117 = 0
  747.             if ( -5 + kmax >= 0 ) then
  747.                $I_L747_133 = 0
  747. !dir$ blocking_size( 0, 0 )
  747.                do
  748.                   $SCA_del#1_U2 = del(1 + 4 * $I_L747_133)
  748.                   $SCA_del#2_U3 = del(2 + 4 * $I_L747_133)
  748.                   $SCA_del#3_U4 = del(3 + 4 * $I_L747_133)
  748.                   $SCA_del#4_U5 = del(4 + 4 * $I_L747_133)
  748.                   $I_L748_108 = 0
  748. !dir$ ivdep
  748. !dir$ blocking_size( 0, 0 )
  748.                   do
  749.                      dot(1 + $I_L748_108, 2 + 4 * $I_L747_133) = dot(1 + $I_L748_108, 1 + 4 * $I_L747_133) + $SCA_del#1_U2 * ( divint(1 + $I_L748_108, kmax) + psint(1 + $I_L748_108, kmax) + -div(1 + $I_L748_108, 1 + 4 * $I_L747_133) + -adveps(1 + $I_L748_108, 1 + 4 * $I_L747_133) )
  749.                      dot(1 + $I_L748_108, 3 + 4 * $I_L747_133) = dot(1 + $I_L748_108, 2 + 4 * $I_L747_133) + $SCA_del#2_U3 * ( divint(1 + $I_L748_108, kmax) + psint(1 + $I_L748_108, kmax) + -div(1 + $I_L748_108, 2 + 4 * $I_L747_133) + -adveps(1 + $I_L748_108, 2 + 4 * $I_L747_133) )
  749.                      dot(1 + $I_L748_108, 4 + 4 * $I_L747_133) = dot(1 + $I_L748_108, 3 + 4 * $I_L747_133) + $SCA_del#3_U4 * ( divint(1 + $I_L748_108, kmax) + psint(1 + $I_L748_108, kmax) + -div(1 + $I_L748_108, 3 + 4 * $I_L747_133) + -adveps(1 + $I_L748_108, 3 + 4 * $I_L747_133) )
  749.                      dot(1 + $I_L748_108, 5 + 4 * $I_L747_133) = dot(1 + $I_L748_108, 4 + 4 * $I_L747_133) + $SCA_del#4_U5 * ( divint(1 + $I_L748_108, kmax) + psint(1 + $I_L748_108, kmax) + -div(1 + $I_L748_108, 4 + 4 * $I_L747_133) + -adveps(1 + $I_L748_108, 4 + 4 * $I_L747_133) )
  751.                      $I_L748_108 = 1 + $I_L748_108
  748.                      if ( $I_L748_108 >= iblim ) exit
  748.                   enddo
  752.                   $I_L747_133 = 1 + $I_L747_133
  751.                   if ( $I_L747_133 >= _rsh( -1 + kmax, 2 ) ) exit
  751.                enddo
  752.                $I_L747_117 = and( 0xfffffffffffffffcUL, -1 + kmax )
  752.             endif
  747.             if ( $I_L747_117 < -1 + kmax ) then
  747.                $I_L747_126 = 0
  747. !dir$ blocking_size( 0, 0 )
  747.                do
  748.                   $SCA_del_I4 = del($I_L747_117 + $I_L747_126 + 1)
  748.                   $I_L748_108 = 0
  748. !dir$ ivdep
  748. !dir$ blocking_size( 0, 0 )
  748.                   do
  749.                      dot(1 + $I_L748_108, $I_L747_117 + $I_L747_126 + 2) = dot(1 + $I_L748_108, $I_L747_117 + $I_L747_126 + 1) + $SCA_del_I4 * ( divint(1 + $I_L748_108, kmax) + psint(1 + $I_L748_108, kmax) + -div(1 + $I_L748_108, $I_L747_117 + $I_L747_126 + 1) + -adveps(1 + $I_L748_108, $I_L747_117 + $I_L747_126 + 1) )
  751.                      $I_L748_108 = 1 + $I_L748_108
  748.                      if ( $I_L748_108 >= iblim ) exit
  748.                   enddo
  752.                   $I_L747_126 = 1 + $I_L747_126
  751.                   if ( $I_L747_126 >= kmax + -$I_L747_117 + -1 ) exit
  751.                enddo
  751.             endif
  751.          endif
  751.       endif
  753.       return
  753.       end
  753.       
  760.       
  760.       subroutine omega( omg, psint, adveps, divint, dot, ps, sl, ibmax, kmax, iblim )
  760.       t$20 = ibmax
  760.       t$21 = kmax
  769.       t$86 = _zla( 0, ibmax )
  760.       t$87 = _zla( 0, ibmax )
  769.       t$88 = _zla( 0, kmax )
  760.       t$89 = _zla( 0, ibmax ) * _zla( 0, kmax )
  777.       if ( -1 + kmax > 0 ) then
  778.          if ( iblim > 0 ) then
  778.             $I_L778_35 = 0
  778.             do
  777.                $I_L777_33 = 0
  777.                if ( -5 + kmax >= 0 ) then
  777.                   $I_L777_40 = 0
  777. !dir$ blocking_size( 0, 0 )
  777.                   do
  778.                      $SCA_sl#1_U0 = sl(1 + 4 * $I_L777_40)
  778.                      $SCA_sl#2_U1 = sl(2 + 4 * $I_L777_40)
  778.                      $SCA_sl#3_U2 = sl(3 + 4 * $I_L777_40)
  778.                      $SCA_sl#4_U3 = sl(4 + 4 * $I_L777_40)
  778.                      $I_L778_28 = 0
  778. !dir$ ivdep
  778. !dir$ blocking_size( 256, 256 )
  778.                      do
  779.                         omg($I_L778_28 + 256 * $I_L778_35 + 1, 1 + 4 * $I_L777_40) = ps($I_L778_28 + 256 * $I_L778_35 + 1) * ( $SCA_sl#1_U0 * ( adveps($I_L778_28 + 256 * $I_L778_35 + 1, 1 + 4 * $I_L777_40) + -psint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) + -divint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) ) + -5.0e-1 * ( dot($I_L778_28 + 256 * $I_L778_35 + 1, 2 + 4 * $I_L777_40) + dot($I_L778_28 + 256 * $I_L778_35 + 1, 1 + 4 * $I_L777_40) ) )
  779.                         omg($I_L778_28 + 256 * $I_L778_35 + 1, 2 + 4 * $I_L777_40) = ps($I_L778_28 + 256 * $I_L778_35 + 1) * ( $SCA_sl#2_U1 * ( adveps($I_L778_28 + 256 * $I_L778_35 + 1, 2 + 4 * $I_L777_40) + -psint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) + -divint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) ) + -5.0e-1 * ( dot($I_L778_28 + 256 * $I_L778_35 + 1, 3 + 4 * $I_L777_40) + dot($I_L778_28 + 256 * $I_L778_35 + 1, 2 + 4 * $I_L777_40) ) )
  779.                         omg($I_L778_28 + 256 * $I_L778_35 + 1, 3 + 4 * $I_L777_40) = ps($I_L778_28 + 256 * $I_L778_35 + 1) * ( $SCA_sl#3_U2 * ( adveps($I_L778_28 + 256 * $I_L778_35 + 1, 3 + 4 * $I_L777_40) + -psint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) + -divint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) ) + -5.0e-1 * ( dot($I_L778_28 + 256 * $I_L778_35 + 1, 4 + 4 * $I_L777_40) + dot($I_L778_28 + 256 * $I_L778_35 + 1, 3 + 4 * $I_L777_40) ) )
  779.                         omg($I_L778_28 + 256 * $I_L778_35 + 1, 4 + 4 * $I_L777_40) = ps($I_L778_28 + 256 * $I_L778_35 + 1) * ( $SCA_sl#4_U3 * ( adveps($I_L778_28 + 256 * $I_L778_35 + 1, 4 + 4 * $I_L777_40) + -psint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) + -divint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) ) + -5.0e-1 * ( dot($I_L778_28 + 256 * $I_L778_35 + 1, 5 + 4 * $I_L777_40) + dot($I_L778_28 + 256 * $I_L778_35 + 1, 4 + 4 * $I_L777_40) ) )
  778.                         $I_L778_28 = 1 + $I_L778_28
  778.                         if ( $I_L778_28 >= min( iblim, 256 + 256 * $I_L778_35 ) + -256 * $I_L778_35 ) exit
  778.                      enddo
  783.                      $I_L777_40 = 1 + $I_L777_40
  783.                      if ( $I_L777_40 >= _rsh( -1 + kmax, 2 ) ) exit
  783.                   enddo
  783.                   $I_L777_33 = and( 0xfffffffffffffffcUL, -1 + kmax )
  783.                endif
  777.                if ( $I_L777_33 < -1 + kmax ) then
  777.                   $I_L777_37 = 0
  777. !dir$ blocking_size( 0, 0 )
  777.                   do
  778.                      $SCA_sl_I1 = sl($I_L777_33 + $I_L777_37 + 1)
  778.                      $I_L778_28 = 0
  778. !dir$ ivdep
  778. !dir$ blocking_size( 256, 256 )
  778.                      do
  779.                         omg($I_L778_28 + 256 * $I_L778_35 + 1, $I_L777_33 + $I_L777_37 + 1) = ps($I_L778_28 + 256 * $I_L778_35 + 1) * ( $SCA_sl_I1 * ( adveps($I_L778_28 + 256 * $I_L778_35 + 1, $I_L777_33 + $I_L777_37 + 1) + -psint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) + -divint($I_L778_28 + 256 * $I_L778_35 + 1, kmax) ) + -5.0e-1 * ( dot($I_L778_28 + 256 * $I_L778_35 + 1, $I_L777_33 + $I_L777_37 + 2) + dot($I_L778_28 + 256 * $I_L778_35 + 1, $I_L777_33 + $I_L777_37 + 1) ) )
  778.                         $I_L778_28 = 1 + $I_L778_28
  778.                         if ( $I_L778_28 >= min( iblim, 256 + 256 * $I_L778_35 ) + -256 * $I_L778_35 ) exit
  778.                      enddo
  783.                      $I_L777_37 = 1 + $I_L777_37
  783.                      if ( $I_L777_37 >= kmax + -$I_L777_33 + -1 ) exit
  783.                   enddo
  783.                endif
  778.                $I_L778_35 = 1 + $I_L778_35
  782.                if ( $I_L778_35 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  782.             enddo
  782.          endif
  782.       endif
  785.       if ( iblim > 0 ) then
  786.          $SC_sl_I0 = sl(kmax)
  785.          $I_L785_31 = 0
  785. !dir$ ivdep
  785.          do
  786.             omg(1 + $I_L785_31, kmax) = ps(1 + $I_L785_31) * ( $SC_sl_I0 * ( adveps(1 + $I_L785_31, kmax) + -psint(1 + $I_L785_31, kmax) + -divint(1 + $I_L785_31, kmax) ) + -5.0e-1 * dot(1 + $I_L785_31, kmax) )
  789.             $I_L785_31 = 1 + $I_L785_31
  785.             if ( $I_L785_31 >= iblim ) exit
  785.          enddo
  785.       endif
  790.       return
  790.       end
  790.       
  797.       
  797.       subroutine delgeo( tlam, zlam, zslam, tphi, zphi, zsphi, hmt, imx, imax, kmax )
  797.       t$22 = imx
  797.       t$23 = kmax
  801.       t$90 = _zla( 0, imx )
  797.       t$91 = _zla( 0, imx )
  801.       t$92 = _zla( 0, kmax )
  797.       t$93 = _zla( 0, imx ) * _zla( 0, kmax )
  797.       t$94 = _zla( 0, kmax )
  797.       t$95 = _zla( 0, kmax ) * _zla( 0, kmax )
  816.       if ( kmax > 0 ) then
  817.          if ( imax > 0 ) then
  816.             $I_L816_32 = 0
  816.             if ( kmax >= 4 ) then
  816.                $I_L816_37 = 0
  816. !dir$ blocking_size( 0, 0 )
  816.                do
  817.                   $I_L817_30 = 0
  817. !dir$ ivdep
  817. !dir$ blocking_size( 0, 0 )
  817.                   do
  818.                      zlam(1 + $I_L817_30, 1 + 4 * $I_L816_37) = zslam(1 + $I_L817_30)
  819.                      zphi(1 + $I_L817_30, 1 + 4 * $I_L816_37) = zsphi(1 + $I_L817_30)
  818.                      zlam(1 + $I_L817_30, 2 + 4 * $I_L816_37) = zslam(1 + $I_L817_30)
  819.                      zphi(1 + $I_L817_30, 2 + 4 * $I_L816_37) = zsphi(1 + $I_L817_30)
  818.                      zlam(1 + $I_L817_30, 3 + 4 * $I_L816_37) = zslam(1 + $I_L817_30)
  819.                      zphi(1 + $I_L817_30, 3 + 4 * $I_L816_37) = zsphi(1 + $I_L817_30)
  818.                      zlam(1 + $I_L817_30, 4 + 4 * $I_L816_37) = zslam(1 + $I_L817_30)
  819.                      zphi(1 + $I_L817_30, 4 + 4 * $I_L816_37) = zsphi(1 + $I_L817_30)
  820.                      $I_L817_30 = 1 + $I_L817_30
  817.                      if ( $I_L817_30 >= imax ) exit
  817.                   enddo
  821.                   $I_L816_37 = 1 + $I_L816_37
  820.                   if ( $I_L816_37 >= _rsh( kmax, 2 ) ) exit
  820.                enddo
  821.                $I_L816_32 = and( 0xfffffffffffffffcUL, kmax )
  821.             endif
  816.             if ( $I_L816_32 < kmax ) then
  816.                $I_L816_34 = 0
  816. !dir$ blocking_size( 0, 0 )
  816.                do
  817.                   $I_L817_30 = 0
  817. !dir$ ivdep
  817. !dir$ blocking_size( 0, 0 )
  817.                   do
  818.                      zlam(1 + $I_L817_30, $I_L816_32 + $I_L816_34 + 1) = zslam(1 + $I_L817_30)
  819.                      zphi(1 + $I_L817_30, $I_L816_32 + $I_L816_34 + 1) = zsphi(1 + $I_L817_30)
  820.                      $I_L817_30 = 1 + $I_L817_30
  817.                      if ( $I_L817_30 >= imax ) exit
  817.                   enddo
  821.                   $I_L816_34 = 1 + $I_L816_34
  820.                   if ( $I_L816_34 >= kmax + -$I_L816_32 ) exit
  820.                enddo
  820.             endif
  826.              _substr($W10,1,1) = 'n'
  826.              _substr($W11,1,1) = 'n'
  826.             $W12 = imax
  826.             $W13 = kmax
  826.             $W14 = kmax
  826.             $W15 = 1.0
  826.             $W16 = imx
  826.             $W17 = kmax
  826.             $W18 = 1.0
  826.             $W19 = imx
  826.             _dgemm(  _substr($W10,1,1),  _substr($W11,1,1), $W12, $W13, $W14, $W15, tphi(1, 1), $W16, hmt(1, 1), $W17, $W18, zphi(1, 1), $W19 )
  825.              _substr($W0,1,1) = 'n'
  825.              _substr($W1,1,1) = 'n'
  825.             $W2 = imax
  825.             $W3 = kmax
  825.             $W4 = kmax
  825.             $W5 = 1.0
  825.             $W6 = imx
  825.             $W7 = kmax
  825.             $W8 = 1.0
  825.             $W9 = imx
  825.             _dgemm(  _substr($W0,1,1),  _substr($W1,1,1), $W2, $W3, $W4, $W5, tlam(1, 1), $W6, hmt(1, 1), $W7, $W8, zlam(1, 1), $W9 )
  825.          endif
  825.       endif
  830.       return
  830.       end
  830.       
  836.       
  836.       subroutine hadvec( u, v, flam, fphi, tend, rcl, ibmax, kmax, iblim )
  836.       t$24 = ibmax
  836.       t$25 = kmax
  841.       t$96 = _zla( 0, ibmax )
  836.       t$97 = _zla( 0, ibmax )
  841.       t$98 = _zla( 0, kmax )
  836.       t$99 = _zla( 0, ibmax ) * _zla( 0, kmax )
  852.       if ( kmax > 0 ) then
  853.          if ( iblim > 0 ) then
  852.             $I_L852_14 = 0
  852.             if ( kmax >= 4 ) then
  852.                $I_L852_19 = 0
  852. !dir$ blocking_size( 0, 0 )
  852.                do
  853.                   $I_L853_12 = 0
  853. !dir$ ivdep
  853. !dir$ blocking_size( 0, 0 )
  853.                   do
  854.                      tend(1 + $I_L853_12, 1 + 4 * $I_L852_19) = tend(1 + $I_L853_12, 1 + 4 * $I_L852_19) + -( rcl(1 + $I_L853_12) * ( u(1 + $I_L853_12, 1 + 4 * $I_L852_19) * flam(1 + $I_L853_12, 1 + 4 * $I_L852_19) + v(1 + $I_L853_12, 1 + 4 * $I_L852_19) * fphi(1 + $I_L853_12, 1 + 4 * $I_L852_19) ) )
  854.                      tend(1 + $I_L853_12, 2 + 4 * $I_L852_19) = tend(1 + $I_L853_12, 2 + 4 * $I_L852_19) + -( rcl(1 + $I_L853_12) * ( u(1 + $I_L853_12, 2 + 4 * $I_L852_19) * flam(1 + $I_L853_12, 2 + 4 * $I_L852_19) + v(1 + $I_L853_12, 2 + 4 * $I_L852_19) * fphi(1 + $I_L853_12, 2 + 4 * $I_L852_19) ) )
  854.                      tend(1 + $I_L853_12, 3 + 4 * $I_L852_19) = tend(1 + $I_L853_12, 3 + 4 * $I_L852_19) + -( rcl(1 + $I_L853_12) * ( u(1 + $I_L853_12, 3 + 4 * $I_L852_19) * flam(1 + $I_L853_12, 3 + 4 * $I_L852_19) + v(1 + $I_L853_12, 3 + 4 * $I_L852_19) * fphi(1 + $I_L853_12, 3 + 4 * $I_L852_19) ) )
  854.                      tend(1 + $I_L853_12, 4 + 4 * $I_L852_19) = tend(1 + $I_L853_12, 4 + 4 * $I_L852_19) + -( rcl(1 + $I_L853_12) * ( u(1 + $I_L853_12, 4 + 4 * $I_L852_19) * flam(1 + $I_L853_12, 4 + 4 * $I_L852_19) + v(1 + $I_L853_12, 4 + 4 * $I_L852_19) * fphi(1 + $I_L853_12, 4 + 4 * $I_L852_19) ) )
  855.                      $I_L853_12 = 1 + $I_L853_12
  853.                      if ( $I_L853_12 >= iblim ) exit
  853.                   enddo
  856.                   $I_L852_19 = 1 + $I_L852_19
  855.                   if ( $I_L852_19 >= _rsh( kmax, 2 ) ) exit
  855.                enddo
  856.                $I_L852_14 = and( 0xfffffffffffffffcUL, kmax )
  856.             endif
  852.             if ( $I_L852_14 < kmax ) then
  852.                $I_L852_16 = 0
  852. !dir$ blocking_size( 0, 0 )
  852.                do
  853.                   $I_L853_12 = 0
  853. !dir$ ivdep
  853. !dir$ blocking_size( 0, 0 )
  853.                   do
  854.                      tend(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) = tend(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) + -( rcl(1 + $I_L853_12) * ( u(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) * flam(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) + v(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) * fphi(1 + $I_L853_12, $I_L852_14 + $I_L852_16 + 1) ) )
  855.                      $I_L853_12 = 1 + $I_L853_12
  853.                      if ( $I_L853_12 >= iblim ) exit
  853.                   enddo
  856.                   $I_L852_16 = 1 + $I_L852_16
  855.                   if ( $I_L852_16 >= kmax + -$I_L852_14 ) exit
  855.                enddo
  855.             endif
  855.          endif
  855.       endif
  857.       return
  857.       end
  857.       
  863.       
  863.       subroutine vadvec( f, dot, rdel2, tend, ibmax, kmax, iblim )
  863.       t$26 = ibmax
  863.       t$27 = kmax
  867.       t$100 = _zla( 0, ibmax )
  863.       t$101 = _zla( 0, ibmax )
  867.       t$102 = _zla( 0, kmax )
  863.       t$103 = _zla( 0, ibmax ) * _zla( 0, kmax )
  879.       if ( iblim > 0 ) then
  880.          $SC_rdel2_I0 = rdel2(1)
  879.          $I_L879_36 = 0
  879. !dir$ ivdep
  879.          do
  880.             tend(1 + $I_L879_36, 1) = tend(1 + $I_L879_36, 1) + -( $SC_rdel2_I0 * ( dot(1 + $I_L879_36, 2) * ( f(1 + $I_L879_36, 2) + -f(1 + $I_L879_36, 1) ) ) )
  881.             $I_L879_36 = 1 + $I_L879_36
  879.             if ( $I_L879_36 >= iblim ) exit
  879.          enddo
  879.       endif
  882.       if ( -3 + kmax >= 0 ) then
  883.          if ( iblim > 0 ) then
  883.             $I_L883_45 = 0
  883.             do
  882.                $I_L882_43 = 0
  882.                if ( -4 + kmax >= 0 ) then
  882.                   $I_L882_47 = 0
  882. !dir$ blocking_size( 0, 0 )
  882.                   do
  883.                      $SCA_rdel2#1_U0 = rdel2(2 + 2 * $I_L882_47)
  883.                      $SCA_rdel2#2_U1 = rdel2(3 + 2 * $I_L882_47)
  883.                      $I_L883_38 = 0
  883. !dir$ ivdep
  883. !dir$ blocking_size( 256, 256 )
  883.                      do
  884.                         tend($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) = tend($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) + -( $SCA_rdel2#1_U0 * ( dot($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) ) + dot($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 1 + 2 * $I_L882_47) ) ) )
  884.                         tend($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) = tend($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) + -( $SCA_rdel2#2_U1 * ( dot($I_L883_38 + 256 * $I_L883_45 + 1, 4 + 2 * $I_L882_47) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 4 + 2 * $I_L882_47) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) ) + dot($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 3 + 2 * $I_L882_47) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 2 + 2 * $I_L882_47) ) ) )
  883.                         $I_L883_38 = 1 + $I_L883_38
  883.                         if ( $I_L883_38 >= min( iblim, 256 + 256 * $I_L883_45 ) + -256 * $I_L883_45 ) exit
  883.                      enddo
  887.                      $I_L882_47 = 1 + $I_L882_47
  887.                      if ( $I_L882_47 >= _rsh( -2 + kmax, 1 ) ) exit
  887.                   enddo
  887.                   $I_L882_43 = and( 0xfffffffffffffffeUL, -2 + kmax )
  887.                endif
  882.                if ( $I_L882_43 < -2 + kmax ) then
  883.                   $SCA_rdel2_I2 = rdel2(2 + $I_L882_43)
  883.                   $I_L883_38 = 0
  883. !dir$ ivdep
  883. !dir$ blocking_size( 256, 256 )
  883.                   do
  884.                      tend($I_L883_38 + 256 * $I_L883_45 + 1, 2 + $I_L882_43) = tend($I_L883_38 + 256 * $I_L883_45 + 1, 2 + $I_L882_43) + -( $SCA_rdel2_I2 * ( dot($I_L883_38 + 256 * $I_L883_45 + 1, 3 + $I_L882_43) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 3 + $I_L882_43) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 2 + $I_L882_43) ) + dot($I_L883_38 + 256 * $I_L883_45 + 1, 2 + $I_L882_43) * ( f($I_L883_38 + 256 * $I_L883_45 + 1, 2 + $I_L882_43) + -f($I_L883_38 + 256 * $I_L883_45 + 1, 1 + $I_L882_43) ) ) )
  883.                      $I_L883_38 = 1 + $I_L883_38
  883.                      if ( $I_L883_38 >= min( iblim, 256 + 256 * $I_L883_45 ) + -256 * $I_L883_45 ) exit
  883.                   enddo
  883.                endif
  883.                $I_L883_45 = 1 + $I_L883_45
  886.                if ( $I_L883_45 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  886.             enddo
  886.          endif
  886.       endif
  889.       if ( iblim > 0 ) then
  890.          $SC_rdel2_I1 = rdel2(kmax)
  889.          $I_L889_41 = 0
  889. !dir$ ivdep
  889.          do
  890.             tend(1 + $I_L889_41, kmax) = tend(1 + $I_L889_41, kmax) + -( $SC_rdel2_I1 * ( dot(1 + $I_L889_41, kmax) * ( f(1 + $I_L889_41, kmax) + -f(1 + $I_L889_41, -1 + kmax) ) ) )
  891.             $I_L889_41 = 1 + $I_L889_41
  889.             if ( $I_L889_41 >= iblim ) exit
  889.          enddo
  889.       endif
  892.       return
  892.       end
  892.       
  899.       
  899.       subroutine metric( u, v, tend, ercossin, ibmax, kmax, iblim )
  899.       t$28 = ibmax
  899.       t$29 = kmax
  904.       t$104 = _zla( 0, ibmax )
  899.       t$105 = _zla( 0, ibmax )
  904.       t$106 = _zla( 0, kmax )
  899.       t$107 = _zla( 0, ibmax ) * _zla( 0, kmax )
  915.       if ( kmax > 0 ) then
  916.          if ( iblim > 0 ) then
  915.             $I_L915_14 = 0
  915.             if ( kmax >= 4 ) then
  915.                $I_L915_19 = 0
  915. !dir$ blocking_size( 0, 0 )
  915.                do
  916.                   $I_L916_12 = 0
  916. !dir$ ivdep
  916. !dir$ blocking_size( 0, 0 )
  916.                   do
  917.                      tend(1 + $I_L916_12, 1 + 4 * $I_L915_19) = tend(1 + $I_L916_12, 1 + 4 * $I_L915_19) + -( ercossin(1 + $I_L916_12) * ( u(1 + $I_L916_12, 1 + 4 * $I_L915_19) * u(1 + $I_L916_12, 1 + 4 * $I_L915_19) + v(1 + $I_L916_12, 1 + 4 * $I_L915_19) * v(1 + $I_L916_12, 1 + 4 * $I_L915_19) ) )
  917.                      tend(1 + $I_L916_12, 2 + 4 * $I_L915_19) = tend(1 + $I_L916_12, 2 + 4 * $I_L915_19) + -( ercossin(1 + $I_L916_12) * ( u(1 + $I_L916_12, 2 + 4 * $I_L915_19) * u(1 + $I_L916_12, 2 + 4 * $I_L915_19) + v(1 + $I_L916_12, 2 + 4 * $I_L915_19) * v(1 + $I_L916_12, 2 + 4 * $I_L915_19) ) )
  917.                      tend(1 + $I_L916_12, 3 + 4 * $I_L915_19) = tend(1 + $I_L916_12, 3 + 4 * $I_L915_19) + -( ercossin(1 + $I_L916_12) * ( u(1 + $I_L916_12, 3 + 4 * $I_L915_19) * u(1 + $I_L916_12, 3 + 4 * $I_L915_19) + v(1 + $I_L916_12, 3 + 4 * $I_L915_19) * v(1 + $I_L916_12, 3 + 4 * $I_L915_19) ) )
  917.                      tend(1 + $I_L916_12, 4 + 4 * $I_L915_19) = tend(1 + $I_L916_12, 4 + 4 * $I_L915_19) + -( ercossin(1 + $I_L916_12) * ( u(1 + $I_L916_12, 4 + 4 * $I_L915_19) * u(1 + $I_L916_12, 4 + 4 * $I_L915_19) + v(1 + $I_L916_12, 4 + 4 * $I_L915_19) * v(1 + $I_L916_12, 4 + 4 * $I_L915_19) ) )
  918.                      $I_L916_12 = 1 + $I_L916_12
  916.                      if ( $I_L916_12 >= iblim ) exit
  916.                   enddo
  919.                   $I_L915_19 = 1 + $I_L915_19
  918.                   if ( $I_L915_19 >= _rsh( kmax, 2 ) ) exit
  918.                enddo
  919.                $I_L915_14 = and( 0xfffffffffffffffcUL, kmax )
  919.             endif
  915.             if ( $I_L915_14 < kmax ) then
  915.                $I_L915_16 = 0
  915. !dir$ blocking_size( 0, 0 )
  915.                do
  916.                   $I_L916_12 = 0
  916. !dir$ ivdep
  916. !dir$ blocking_size( 0, 0 )
  916.                   do
  917.                      tend(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) = tend(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) + -( ercossin(1 + $I_L916_12) * ( u(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) * u(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) + v(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) * v(1 + $I_L916_12, $I_L915_14 + $I_L915_16 + 1) ) )
  918.                      $I_L916_12 = 1 + $I_L916_12
  916.                      if ( $I_L916_12 >= iblim ) exit
  916.                   enddo
  919.                   $I_L915_16 = 1 + $I_L915_16
  918.                   if ( $I_L915_16 >= kmax + -$I_L915_14 ) exit
  918.                enddo
  918.             endif
  918.          endif
  918.       endif
  920.       return
  920.       end
  920.       
  927.       
  927.       subroutine coriol( u, v, tendu, tendv, fcor, ibmax, kmax, iblim )
  927.       t$30 = ibmax
  927.       t$31 = kmax
  932.       t$108 = _zla( 0, ibmax )
  927.       t$109 = _zla( 0, ibmax )
  932.       t$110 = _zla( 0, kmax )
  927.       t$111 = _zla( 0, ibmax ) * _zla( 0, kmax )
  941.       if ( kmax > 0 ) then
  942.          if ( iblim > 0 ) then
  941.             $I_L941_14 = 0
  941.             if ( kmax >= 4 ) then
  941.                $I_L941_19 = 0
  941. !dir$ blocking_size( 0, 0 )
  941.                do
  942.                   $I_L942_12 = 0
  942. !dir$ ivdep
  942. !dir$ blocking_size( 0, 0 )
  942.                   do
  943.                      tendu(1 + $I_L942_12, 1 + 4 * $I_L941_19) = tendu(1 + $I_L942_12, 1 + 4 * $I_L941_19) + fcor(1 + $I_L942_12) * v(1 + $I_L942_12, 1 + 4 * $I_L941_19)
  944.                      tendv(1 + $I_L942_12, 1 + 4 * $I_L941_19) = tendv(1 + $I_L942_12, 1 + 4 * $I_L941_19) + -( fcor(1 + $I_L942_12) * u(1 + $I_L942_12, 1 + 4 * $I_L941_19) )
  943.                      tendu(1 + $I_L942_12, 2 + 4 * $I_L941_19) = tendu(1 + $I_L942_12, 2 + 4 * $I_L941_19) + fcor(1 + $I_L942_12) * v(1 + $I_L942_12, 2 + 4 * $I_L941_19)
  944.                      tendv(1 + $I_L942_12, 2 + 4 * $I_L941_19) = tendv(1 + $I_L942_12, 2 + 4 * $I_L941_19) + -( fcor(1 + $I_L942_12) * u(1 + $I_L942_12, 2 + 4 * $I_L941_19) )
  943.                      tendu(1 + $I_L942_12, 3 + 4 * $I_L941_19) = tendu(1 + $I_L942_12, 3 + 4 * $I_L941_19) + fcor(1 + $I_L942_12) * v(1 + $I_L942_12, 3 + 4 * $I_L941_19)
  944.                      tendv(1 + $I_L942_12, 3 + 4 * $I_L941_19) = tendv(1 + $I_L942_12, 3 + 4 * $I_L941_19) + -( fcor(1 + $I_L942_12) * u(1 + $I_L942_12, 3 + 4 * $I_L941_19) )
  943.                      tendu(1 + $I_L942_12, 4 + 4 * $I_L941_19) = tendu(1 + $I_L942_12, 4 + 4 * $I_L941_19) + fcor(1 + $I_L942_12) * v(1 + $I_L942_12, 4 + 4 * $I_L941_19)
  944.                      tendv(1 + $I_L942_12, 4 + 4 * $I_L941_19) = tendv(1 + $I_L942_12, 4 + 4 * $I_L941_19) + -( fcor(1 + $I_L942_12) * u(1 + $I_L942_12, 4 + 4 * $I_L941_19) )
  945.                      $I_L942_12 = 1 + $I_L942_12
  942.                      if ( $I_L942_12 >= iblim ) exit
  942.                   enddo
  946.                   $I_L941_19 = 1 + $I_L941_19
  945.                   if ( $I_L941_19 >= _rsh( kmax, 2 ) ) exit
  945.                enddo
  946.                $I_L941_14 = and( 0xfffffffffffffffcUL, kmax )
  946.             endif
  941.             if ( $I_L941_14 < kmax ) then
  941.                $I_L941_16 = 0
  941. !dir$ blocking_size( 0, 0 )
  941.                do
  942.                   $I_L942_12 = 0
  942. !dir$ ivdep
  942. !dir$ blocking_size( 0, 0 )
  942.                   do
  943.                      tendu(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1) = tendu(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1) + fcor(1 + $I_L942_12) * v(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1)
  944.                      tendv(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1) = tendv(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1) + -( fcor(1 + $I_L942_12) * u(1 + $I_L942_12, $I_L941_14 + $I_L941_16 + 1) )
  945.                      $I_L942_12 = 1 + $I_L942_12
  942.                      if ( $I_L942_12 >= iblim ) exit
  942.                   enddo
  946.                   $I_L941_16 = 1 + $I_L941_16
  945.                   if ( $I_L941_16 >= kmax + -$I_L941_14 ) exit
  945.                enddo
  945.             endif
  945.          endif
  945.       endif
  947.       return
  947.       end
  947.       
  954.       
  954.       subroutine nlprgr( plam, pphi, tmp, tendu, tendv, rc, ibmax, kmax, iblim )
  954.       t$32 = ibmax
  960.       t$112 = _zla( 0, ibmax )
  954.       t$33 = kmax
  954.       t$113 = _zla( 0, ibmax )
  959.       t$114 = _zla( 0, kmax )
  954.       t$115 = _zla( 0, ibmax ) * _zla( 0, kmax )
  970.       if ( kmax > 0 ) then
  971.          if ( iblim > 0 ) then
  970.             $I_L970_14 = 0
  970.             if ( kmax >= 4 ) then
  970.                $I_L970_19 = 0
  970. !dir$ blocking_size( 0, 0 )
  970.                do
  971.                   $I_L971_12 = 0
  971. !dir$ ivdep
  971. !dir$ blocking_size( 0, 0 )
  971.                   do
  972.                      tendu(1 + $I_L971_12, 1 + 4 * $I_L970_19) = tendu(1 + $I_L971_12, 1 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 1 + 4 * $I_L970_19) * plam(1 + $I_L971_12) )
  973.                      tendv(1 + $I_L971_12, 1 + 4 * $I_L970_19) = tendv(1 + $I_L971_12, 1 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 1 + 4 * $I_L970_19) * pphi(1 + $I_L971_12) )
  972.                      tendu(1 + $I_L971_12, 2 + 4 * $I_L970_19) = tendu(1 + $I_L971_12, 2 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 2 + 4 * $I_L970_19) * plam(1 + $I_L971_12) )
  973.                      tendv(1 + $I_L971_12, 2 + 4 * $I_L970_19) = tendv(1 + $I_L971_12, 2 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 2 + 4 * $I_L970_19) * pphi(1 + $I_L971_12) )
  972.                      tendu(1 + $I_L971_12, 3 + 4 * $I_L970_19) = tendu(1 + $I_L971_12, 3 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 3 + 4 * $I_L970_19) * plam(1 + $I_L971_12) )
  973.                      tendv(1 + $I_L971_12, 3 + 4 * $I_L970_19) = tendv(1 + $I_L971_12, 3 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 3 + 4 * $I_L970_19) * pphi(1 + $I_L971_12) )
  972.                      tendu(1 + $I_L971_12, 4 + 4 * $I_L970_19) = tendu(1 + $I_L971_12, 4 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 4 + 4 * $I_L970_19) * plam(1 + $I_L971_12) )
  973.                      tendv(1 + $I_L971_12, 4 + 4 * $I_L970_19) = tendv(1 + $I_L971_12, 4 + 4 * $I_L970_19) + -( rc * tmp(1 + $I_L971_12, 4 + 4 * $I_L970_19) * pphi(1 + $I_L971_12) )
  974.                      $I_L971_12 = 1 + $I_L971_12
  971.                      if ( $I_L971_12 >= iblim ) exit
  971.                   enddo
  975.                   $I_L970_19 = 1 + $I_L970_19
  974.                   if ( $I_L970_19 >= _rsh( kmax, 2 ) ) exit
  974.                enddo
  975.                $I_L970_14 = and( 0xfffffffffffffffcUL, kmax )
  975.             endif
  970.             if ( $I_L970_14 < kmax ) then
  970.                $I_L970_16 = 0
  970. !dir$ blocking_size( 0, 0 )
  970.                do
  971.                   $I_L971_12 = 0
  971. !dir$ ivdep
  971. !dir$ blocking_size( 0, 0 )
  971.                   do
  972.                      tendu(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) = tendu(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) + -( rc * tmp(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) * plam(1 + $I_L971_12) )
  973.                      tendv(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) = tendv(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) + -( rc * tmp(1 + $I_L971_12, $I_L970_14 + $I_L970_16 + 1) * pphi(1 + $I_L971_12) )
  974.                      $I_L971_12 = 1 + $I_L971_12
  971.                      if ( $I_L971_12 >= iblim ) exit
  971.                   enddo
  975.                   $I_L970_16 = 1 + $I_L970_16
  974.                   if ( $I_L970_16 >= kmax + -$I_L970_14 ) exit
  974.                enddo
  974.             endif
  974.          endif
  974.       endif
  976.       return
  976.       end
  976.       
  983.       
  983.       subroutine vadvtmp( tmp, p1, p2, h1, h2, dot, psint, ci, rdel2, tend, ibmax, kmax, iblim, slagr )
  983.       t$34 = ibmax
  983.       t$35 = kmax
  989.       t$116 = _zla( 0, ibmax )
  983.       t$117 = _zla( 0, ibmax )
  989.       t$118 = _zla( 0, kmax )
  983.       t$119 = _zla( 0, ibmax ) * _zla( 0, kmax )
  983.       t$36 = ( 1 + kmax )
  997.       t$120 = _zla( 0, ( 1 + kmax ) )
 1000.       t$123 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1000.       t$124 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1000.       t$126 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1000.       t$127 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1000.       t$129 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
  983.       t$121 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 24 ), 8 )
 1000.       t$122 = t$121
 1000.       t$125 = t$121 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1000.       t$128 = t$121 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1007.       if ( slagr == 0 ) then
 1008.          if ( -1 + kmax > 0 ) then
 1009.             if ( iblim > 0 ) then
 1009.                $I_L1009_97 = 0
 1009.                do
 1008.                   $I_L1008_89 = 0
 1008.                   if ( -5 + kmax >= 0 ) then
 1008.                      $I_L1008_110 = 0
 1008. !dir$ blocking_size( 0, 0 )
 1008.                      do
 1009.                         $SCA#1_U0 = p1(1 + 4 * $I_L1008_110)
 1009.                         $SCA#1_U4 = p2(2 + 4 * $I_L1008_110)
 1009.                         $SCA_ci#1_U8 = ci(2 + 4 * $I_L1008_110)
 1009.                         $SCA#2_U1 = p1(2 + 4 * $I_L1008_110)
 1009.                         $SCA#2_U5 = p2(3 + 4 * $I_L1008_110)
 1009.                         $SCA_ci#2_U9 = ci(3 + 4 * $I_L1008_110)
 1009.                         $SCA#3_U2 = p1(3 + 4 * $I_L1008_110)
 1009.                         $SCA#3_U6 = p2(4 + 4 * $I_L1008_110)
 1009.                         $SCA_ci#3_U10 = ci(4 + 4 * $I_L1008_110)
 1009.                         $SCA#4_U3 = p1(4 + 4 * $I_L1008_110)
 1009.                         $SCA#4_U7 = p2(5 + 4 * $I_L1008_110)
 1009.                         $SCA_ci#4_U11 = ci(5 + 4 * $I_L1008_110)
 1009.                         $I_L1009_79 = 0
 1009. !dir$ ivdep
 1009. !dir$ blocking_size( 256, 256 )
 1009.                         do
 1010.                            w1($I_L1009_79 + 256 * $I_L1009_97 + 1, 1 + 4 * $I_L1008_110) = $SCA#1_U0 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) + -tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 1 + 4 * $I_L1008_110)
 1011.                            w2($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) = tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) + -( $SCA#1_U4 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 1 + 4 * $I_L1008_110) )
 1012.                            w3($I_L1009_79 + 256 * $I_L1009_97 + 1, 1 + 4 * $I_L1008_110) = $SCA_ci#1_U8 * psint($I_L1009_79 + 256 * $I_L1009_97 + 1, kmax) + -psint($I_L1009_79 + 256 * $I_L1009_97 + 1, 1 + 4 * $I_L1008_110)
 1010.                            w1($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) = $SCA#2_U1 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) + -tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110)
 1011.                            w2($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) = tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) + -( $SCA#2_U5 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) )
 1012.                            w3($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110) = $SCA_ci#2_U9 * psint($I_L1009_79 + 256 * $I_L1009_97 + 1, kmax) + -psint($I_L1009_79 + 256 * $I_L1009_97 + 1, 2 + 4 * $I_L1008_110)
 1010.                            w1($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) = $SCA#3_U2 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) + -tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110)
 1011.                            w2($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) = tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) + -( $SCA#3_U6 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) )
 1012.                            w3($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110) = $SCA_ci#3_U10 * psint($I_L1009_79 + 256 * $I_L1009_97 + 1, kmax) + -psint($I_L1009_79 + 256 * $I_L1009_97 + 1, 3 + 4 * $I_L1008_110)
 1010.                            w1($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) = $SCA#4_U3 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 5 + 4 * $I_L1008_110) + -tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110)
 1011.                            w2($I_L1009_79 + 256 * $I_L1009_97 + 1, 5 + 4 * $I_L1008_110) = tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 5 + 4 * $I_L1008_110) + -( $SCA#4_U7 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) )
 1012.                            w3($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110) = $SCA_ci#4_U11 * psint($I_L1009_79 + 256 * $I_L1009_97 + 1, kmax) + -psint($I_L1009_79 + 256 * $I_L1009_97 + 1, 4 + 4 * $I_L1008_110)
 1009.                            $I_L1009_79 = 1 + $I_L1009_79
 1009.                            if ( $I_L1009_79 >= min( iblim, 256 + 256 * $I_L1009_97 ) + -256 * $I_L1009_97 ) exit
 1009.                         enddo
 1014.                         $I_L1008_110 = 1 + $I_L1008_110
 1014.                         if ( $I_L1008_110 >= _rsh( -1 + kmax, 2 ) ) exit
 1014.                      enddo
 1014.                      $I_L1008_89 = and( 0xfffffffffffffffcUL, -1 + kmax )
 1014.                   endif
 1008.                   if ( $I_L1008_89 < -1 + kmax ) then
 1008.                      $I_L1008_101 = 0
 1008. !dir$ blocking_size( 0, 0 )
 1008.                      do
 1009.                         $SCA_p1_I4 = p1($I_L1008_89 + $I_L1008_101 + 1)
 1009.                         $SCA_p2_I5 = p2($I_L1008_89 + $I_L1008_101 + 2)
 1009.                         $SCA_ci_I6 = ci($I_L1008_89 + $I_L1008_101 + 2)
 1009.                         $I_L1009_79 = 0
 1009. !dir$ ivdep
 1009. !dir$ blocking_size( 256, 256 )
 1009.                         do
 1010.                            w1($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 1) = $SCA_p1_I4 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 2) + -tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 1)
 1011.                            w2($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 2) = tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 2) + -( $SCA_p2_I5 * tmp($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 1) )
 1012.                            w3($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 1) = $SCA_ci_I6 * psint($I_L1009_79 + 256 * $I_L1009_97 + 1, kmax) + -psint($I_L1009_79 + 256 * $I_L1009_97 + 1, $I_L1008_89 + $I_L1008_101 + 1)
 1009.                            $I_L1009_79 = 1 + $I_L1009_79
 1009.                            if ( $I_L1009_79 >= min( iblim, 256 + 256 * $I_L1009_97 ) + -256 * $I_L1009_97 ) exit
 1009.                         enddo
 1014.                         $I_L1008_101 = 1 + $I_L1008_101
 1014.                         if ( $I_L1008_101 >= kmax + -$I_L1008_89 + -1 ) exit
 1014.                      enddo
 1014.                   endif
 1009.                   $I_L1009_97 = 1 + $I_L1009_97
 1013.                   if ( $I_L1009_97 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1013.                enddo
 1013.             endif
 1013.          endif
 1015.       else if ( -1 + kmax > 0 ) then
 1017.          if ( iblim > 0 ) then
 1017.             $I_L1017_95 = 0
 1017.             do
 1016.                $I_L1016_91 = 0
 1016.                if ( -5 + kmax >= 0 ) then
 1016.                   $I_L1016_112 = 0
 1016. !dir$ blocking_size( 0, 0 )
 1016.                   do
 1017.                      $SCA#1_U12 = p1(1 + 4 * $I_L1016_112)
 1017.                      $SCA#1_U16 = p2(2 + 4 * $I_L1016_112)
 1017.                      $SCA_ci#1_U20 = ci(2 + 4 * $I_L1016_112)
 1017.                      $SCA#2_U13 = p1(2 + 4 * $I_L1016_112)
 1017.                      $SCA#2_U17 = p2(3 + 4 * $I_L1016_112)
 1017.                      $SCA_ci#2_U21 = ci(3 + 4 * $I_L1016_112)
 1017.                      $SCA#3_U14 = p1(3 + 4 * $I_L1016_112)
 1017.                      $SCA#3_U18 = p2(4 + 4 * $I_L1016_112)
 1017.                      $SCA_ci#3_U22 = ci(4 + 4 * $I_L1016_112)
 1017.                      $SCA#4_U15 = p1(4 + 4 * $I_L1016_112)
 1017.                      $SCA#4_U19 = p2(5 + 4 * $I_L1016_112)
 1017.                      $SCA_ci#4_U23 = ci(5 + 4 * $I_L1016_112)
 1017.                      $I_L1017_76 = 0
 1017. !dir$ ivdep
 1017. !dir$ blocking_size( 256, 256 )
 1017.                      do
 1018.                         w1($I_L1017_76 + 256 * $I_L1017_95 + 1, 1 + 4 * $I_L1016_112) = ( -1.0 + $SCA#1_U12 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112)
 1019.                         w2($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112) = ( 1.0 + -$SCA#1_U16 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 1 + 4 * $I_L1016_112)
 1020.                         w3($I_L1017_76 + 256 * $I_L1017_95 + 1, 1 + 4 * $I_L1016_112) = $SCA_ci#1_U20 * psint($I_L1017_76 + 256 * $I_L1017_95 + 1, kmax) + -psint($I_L1017_76 + 256 * $I_L1017_95 + 1, 1 + 4 * $I_L1016_112)
 1018.                         w1($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112) = ( -1.0 + $SCA#2_U13 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112)
 1019.                         w2($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112) = ( 1.0 + -$SCA#2_U17 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112)
 1020.                         w3($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112) = $SCA_ci#2_U21 * psint($I_L1017_76 + 256 * $I_L1017_95 + 1, kmax) + -psint($I_L1017_76 + 256 * $I_L1017_95 + 1, 2 + 4 * $I_L1016_112)
 1018.                         w1($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112) = ( -1.0 + $SCA#3_U14 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112)
 1019.                         w2($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112) = ( 1.0 + -$SCA#3_U18 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112)
 1020.                         w3($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112) = $SCA_ci#3_U22 * psint($I_L1017_76 + 256 * $I_L1017_95 + 1, kmax) + -psint($I_L1017_76 + 256 * $I_L1017_95 + 1, 3 + 4 * $I_L1016_112)
 1018.                         w1($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112) = ( -1.0 + $SCA#4_U15 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 5 + 4 * $I_L1016_112)
 1019.                         w2($I_L1017_76 + 256 * $I_L1017_95 + 1, 5 + 4 * $I_L1016_112) = ( 1.0 + -$SCA#4_U19 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112)
 1020.                         w3($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112) = $SCA_ci#4_U23 * psint($I_L1017_76 + 256 * $I_L1017_95 + 1, kmax) + -psint($I_L1017_76 + 256 * $I_L1017_95 + 1, 4 + 4 * $I_L1016_112)
 1017.                         $I_L1017_76 = 1 + $I_L1017_76
 1017.                         if ( $I_L1017_76 >= min( iblim, 256 + 256 * $I_L1017_95 ) + -256 * $I_L1017_95 ) exit
 1017.                      enddo
 1022.                      $I_L1016_112 = 1 + $I_L1016_112
 1022.                      if ( $I_L1016_112 >= _rsh( -1 + kmax, 2 ) ) exit
 1022.                   enddo
 1022.                   $I_L1016_91 = and( 0xfffffffffffffffcUL, -1 + kmax )
 1022.                endif
 1016.                if ( $I_L1016_91 < -1 + kmax ) then
 1016.                   $I_L1016_104 = 0
 1016. !dir$ blocking_size( 0, 0 )
 1016.                   do
 1017.                      $SCA_p1_I7 = p1($I_L1016_91 + $I_L1016_104 + 1)
 1017.                      $SCA_p2_I8 = p2($I_L1016_91 + $I_L1016_104 + 2)
 1017.                      $SCA_ci_I9 = ci($I_L1016_91 + $I_L1016_104 + 2)
 1017.                      $I_L1017_76 = 0
 1017. !dir$ ivdep
 1017. !dir$ blocking_size( 256, 256 )
 1017.                      do
 1018.                         w1($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 1) = ( -1.0 + $SCA_p1_I7 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 2)
 1019.                         w2($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 2) = ( 1.0 + -$SCA_p2_I8 ) * tmp($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 1)
 1020.                         w3($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 1) = $SCA_ci_I9 * psint($I_L1017_76 + 256 * $I_L1017_95 + 1, kmax) + -psint($I_L1017_76 + 256 * $I_L1017_95 + 1, $I_L1016_91 + $I_L1016_104 + 1)
 1017.                         $I_L1017_76 = 1 + $I_L1017_76
 1017.                         if ( $I_L1017_76 >= min( iblim, 256 + 256 * $I_L1017_95 ) + -256 * $I_L1017_95 ) exit
 1017.                      enddo
 1022.                      $I_L1016_104 = 1 + $I_L1016_104
 1022.                      if ( $I_L1016_104 >= kmax + -$I_L1016_91 + -1 ) exit
 1022.                   enddo
 1022.                endif
 1017.                $I_L1017_95 = 1 + $I_L1017_95
 1021.                if ( $I_L1017_95 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1021.             enddo
 1021.          endif
 1021.       endif
 1025.       if ( iblim > 0 ) then
 1026.          $SC_rdel2_I1 = rdel2(1)
 1026.          $SC_h1_I0 = h1(1)
 1025.          $I_L1025_82 = 0
 1025. !dir$ ivdep
 1025.          do
 1026.             tend(1 + $I_L1025_82, 1) = tend(1 + $I_L1025_82, 1) + -( $SC_rdel2_I1 * ( dot(1 + $I_L1025_82, 2) * w1(1 + $I_L1025_82, 1) + $SC_h1_I0 * w3(1 + $I_L1025_82, 1) ) )
 1027.             $I_L1025_82 = 1 + $I_L1025_82
 1025.             if ( $I_L1025_82 >= iblim ) exit
 1025.          enddo
 1025.       endif
 1028.       if ( -3 + kmax >= 0 ) then
 1029.          if ( iblim > 0 ) then
 1029.             $I_L1029_99 = 0
 1029.             do
 1028.                $I_L1028_93 = 0
 1028.                if ( -6 + kmax >= 0 ) then
 1028.                   $I_L1028_114 = 0
 1028. !dir$ blocking_size( 0, 0 )
 1028.                   do
 1029.                      $SCA#1_U24 = h1(2 + 4 * $I_L1028_114)
 1029.                      $SCA#1_U28 = h2(2 + 4 * $I_L1028_114)
 1029.                      $SCA_rdel2#1_U32 = rdel2(2 + 4 * $I_L1028_114)
 1029.                      $SCA#2_U25 = h1(3 + 4 * $I_L1028_114)
 1029.                      $SCA#2_U29 = h2(3 + 4 * $I_L1028_114)
 1029.                      $SCA_rdel2#2_U33 = rdel2(3 + 4 * $I_L1028_114)
 1029.                      $SCA#3_U26 = h1(4 + 4 * $I_L1028_114)
 1029.                      $SCA#3_U30 = h2(4 + 4 * $I_L1028_114)
 1029.                      $SCA_rdel2#3_U34 = rdel2(4 + 4 * $I_L1028_114)
 1029.                      $SCA#4_U27 = h1(5 + 4 * $I_L1028_114)
 1029.                      $SCA#4_U31 = h2(5 + 4 * $I_L1028_114)
 1029.                      $SCA_rdel2#4_U35 = rdel2(5 + 4 * $I_L1028_114)
 1029.                      $I_L1029_84 = 0
 1029. !dir$ ivdep
 1029. !dir$ blocking_size( 256, 256 )
 1029.                      do
 1030.                         tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) = tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) + -( $SCA_rdel2#1_U32 * ( dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) * w1($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) + $SCA#1_U24 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) + dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) * w2($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) + $SCA#1_U28 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 1 + 4 * $I_L1028_114) ) )
 1030.                         tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) = tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) + -( $SCA_rdel2#2_U33 * ( dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) * w1($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) + $SCA#2_U25 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) + dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) * w2($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) + $SCA#2_U29 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 2 + 4 * $I_L1028_114) ) )
 1030.                         tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) = tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) + -( $SCA_rdel2#3_U34 * ( dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) * w1($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) + $SCA#3_U26 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) + dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) * w2($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) + $SCA#3_U30 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 3 + 4 * $I_L1028_114) ) )
 1030.                         tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) = tend($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) + -( $SCA_rdel2#4_U35 * ( dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 6 + 4 * $I_L1028_114) * w1($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) + $SCA#4_U27 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) + dot($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) * w2($I_L1029_84 + 256 * $I_L1029_99 + 1, 5 + 4 * $I_L1028_114) + $SCA#4_U31 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, 4 + 4 * $I_L1028_114) ) )
 1029.                         $I_L1029_84 = 1 + $I_L1029_84
 1029.                         if ( $I_L1029_84 >= min( iblim, 256 + 256 * $I_L1029_99 ) + -256 * $I_L1029_99 ) exit
 1029.                      enddo
 1033.                      $I_L1028_114 = 1 + $I_L1028_114
 1033.                      if ( $I_L1028_114 >= _rsh( -2 + kmax, 2 ) ) exit
 1033.                   enddo
 1033.                   $I_L1028_93 = and( 0xfffffffffffffffcUL, -2 + kmax )
 1033.                endif
 1028.                if ( $I_L1028_93 < -2 + kmax ) then
 1028.                   $I_L1028_107 = 0
 1028. !dir$ blocking_size( 0, 0 )
 1028.                   do
 1029.                      $SCA_h1_I10 = h1($I_L1028_93 + $I_L1028_107 + 2)
 1029.                      $SCA_h2_I11 = h2($I_L1028_93 + $I_L1028_107 + 2)
 1029.                      $SCA_rdel2_I12 = rdel2($I_L1028_93 + $I_L1028_107 + 2)
 1029.                      $I_L1029_84 = 0
 1029. !dir$ ivdep
 1029. !dir$ blocking_size( 256, 256 )
 1029.                      do
 1030.                         tend($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) = tend($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) + -( $SCA_rdel2_I12 * ( dot($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 3) * w1($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) + $SCA_h1_I10 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) + dot($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) * w2($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 2) + $SCA_h2_I11 * w3($I_L1029_84 + 256 * $I_L1029_99 + 1, $I_L1028_93 + $I_L1028_107 + 1) ) )
 1029.                         $I_L1029_84 = 1 + $I_L1029_84
 1029.                         if ( $I_L1029_84 >= min( iblim, 256 + 256 * $I_L1029_99 ) + -256 * $I_L1029_99 ) exit
 1029.                      enddo
 1033.                      $I_L1028_107 = 1 + $I_L1028_107
 1033.                      if ( $I_L1028_107 >= kmax + -$I_L1028_93 + -2 ) exit
 1033.                   enddo
 1033.                endif
 1029.                $I_L1029_99 = 1 + $I_L1029_99
 1032.                if ( $I_L1029_99 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1032.             enddo
 1032.          endif
 1032.       endif
 1035.       if ( iblim > 0 ) then
 1036.          $SC_rdel2_I3 = rdel2(kmax)
 1036.          $SC_h2_I2 = h2(kmax)
 1035.          $I_L1035_87 = 0
 1035. !dir$ ivdep
 1035.          do
 1036.             tend(1 + $I_L1035_87, kmax) = tend(1 + $I_L1035_87, kmax) + -( $SC_rdel2_I3 * ( dot(1 + $I_L1035_87, kmax) * w2(1 + $I_L1035_87, kmax) + $SC_h2_I2 * w3(1 + $I_L1035_87, -1 + kmax) ) )
 1037.             $I_L1035_87 = 1 + $I_L1035_87
 1035.             if ( $I_L1035_87 >= iblim ) exit
 1035.          enddo
 1035.       endif
  983.       _free( t$121 )
 1038.       return
 1038.       end
 1038.       
 1045.       
 1045.       subroutine tmptend( tend, tmp, tov, psint, adveps, divint, rk, ibmax, kmax, iblim )
 1045.       t$38 = ibmax
 1045.       t$37 = kmax
 1056.       t$130 = _zla( 0, ibmax )
 1045.       t$131 = _zla( 0, ibmax )
 1056.       t$132 = _zla( 0, kmax )
 1045.       t$133 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1062.       if ( kmax > 0 ) then
 1063.          if ( iblim > 0 ) then
 1062.             $I_L1062_18 = 0
 1062.             if ( kmax >= 4 ) then
 1062.                $I_L1062_23 = 0
 1062. !dir$ blocking_size( 0, 0 )
 1062.                do
 1063.                   $SCA_tov#1_U0 = tov(1 + 4 * $I_L1062_23)
 1063.                   $SCA_tov#2_U1 = tov(2 + 4 * $I_L1062_23)
 1063.                   $SCA_tov#3_U2 = tov(3 + 4 * $I_L1062_23)
 1063.                   $SCA_tov#4_U3 = tov(4 + 4 * $I_L1062_23)
 1063.                   $I_L1063_16 = 0
 1063. !dir$ ivdep
 1063. !dir$ blocking_size( 0, 0 )
 1063.                   do
 1064.                      tend(1 + $I_L1063_16, 1 + 4 * $I_L1062_23) = tend(1 + $I_L1063_16, 1 + 4 * $I_L1062_23) + -( tmp(1 + $I_L1063_16, 1 + 4 * $I_L1062_23) * rk * divint(1 + $I_L1063_16, kmax) ) + rk * ( $SCA_tov#1_U0 + tmp(1 + $I_L1063_16, 1 + 4 * $I_L1062_23) ) * ( adveps(1 + $I_L1063_16, 1 + 4 * $I_L1062_23) + -psint(1 + $I_L1063_16, kmax) )
 1064.                      tend(1 + $I_L1063_16, 2 + 4 * $I_L1062_23) = tend(1 + $I_L1063_16, 2 + 4 * $I_L1062_23) + -( tmp(1 + $I_L1063_16, 2 + 4 * $I_L1062_23) * rk * divint(1 + $I_L1063_16, kmax) ) + rk * ( $SCA_tov#2_U1 + tmp(1 + $I_L1063_16, 2 + 4 * $I_L1062_23) ) * ( adveps(1 + $I_L1063_16, 2 + 4 * $I_L1062_23) + -psint(1 + $I_L1063_16, kmax) )
 1064.                      tend(1 + $I_L1063_16, 3 + 4 * $I_L1062_23) = tend(1 + $I_L1063_16, 3 + 4 * $I_L1062_23) + -( tmp(1 + $I_L1063_16, 3 + 4 * $I_L1062_23) * rk * divint(1 + $I_L1063_16, kmax) ) + rk * ( $SCA_tov#3_U2 + tmp(1 + $I_L1063_16, 3 + 4 * $I_L1062_23) ) * ( adveps(1 + $I_L1063_16, 3 + 4 * $I_L1062_23) + -psint(1 + $I_L1063_16, kmax) )
 1064.                      tend(1 + $I_L1063_16, 4 + 4 * $I_L1062_23) = tend(1 + $I_L1063_16, 4 + 4 * $I_L1062_23) + -( tmp(1 + $I_L1063_16, 4 + 4 * $I_L1062_23) * rk * divint(1 + $I_L1063_16, kmax) ) + rk * ( $SCA_tov#4_U3 + tmp(1 + $I_L1063_16, 4 + 4 * $I_L1062_23) ) * ( adveps(1 + $I_L1063_16, 4 + 4 * $I_L1062_23) + -psint(1 + $I_L1063_16, kmax) )
 1066.                      $I_L1063_16 = 1 + $I_L1063_16
 1063.                      if ( $I_L1063_16 >= iblim ) exit
 1063.                   enddo
 1067.                   $I_L1062_23 = 1 + $I_L1062_23
 1066.                   if ( $I_L1062_23 >= _rsh( kmax, 2 ) ) exit
 1066.                enddo
 1067.                $I_L1062_18 = and( 0xfffffffffffffffcUL, kmax )
 1067.             endif
 1062.             if ( $I_L1062_18 < kmax ) then
 1062.                $I_L1062_20 = 0
 1062. !dir$ blocking_size( 0, 0 )
 1062.                do
 1063.                   $SCA_tov_I0 = tov($I_L1062_18 + $I_L1062_20 + 1)
 1063.                   $I_L1063_16 = 0
 1063. !dir$ ivdep
 1063. !dir$ blocking_size( 0, 0 )
 1063.                   do
 1064.                      tend(1 + $I_L1063_16, $I_L1062_18 + $I_L1062_20 + 1) = tend(1 + $I_L1063_16, $I_L1062_18 + $I_L1062_20 + 1) + -( tmp(1 + $I_L1063_16, $I_L1062_18 + $I_L1062_20 + 1) * rk * divint(1 + $I_L1063_16, kmax) ) + rk * ( $SCA_tov_I0 + tmp(1 + $I_L1063_16, $I_L1062_18 + $I_L1062_20 + 1) ) * ( adveps(1 + $I_L1063_16, $I_L1062_18 + $I_L1062_20 + 1) + -psint(1 + $I_L1063_16, kmax) )
 1066.                      $I_L1063_16 = 1 + $I_L1063_16
 1063.                      if ( $I_L1063_16 >= iblim ) exit
 1063.                   enddo
 1067.                   $I_L1062_20 = 1 + $I_L1062_20
 1066.                   if ( $I_L1062_20 >= kmax + -$I_L1062_18 ) exit
 1066.                enddo
 1066.             endif
 1066.          endif
 1066.       endif
 1068.       return
 1068.       end
 1068.       
 1075.       
 1075.       subroutine tndtold( tdu, tdv, tdt, tdlnp, zlam, zphi, plam, pphi, divint, rdel2, ci, h1, h2, tov, rc, rk, w, ibmax, kmax, iblim )
 1075.       t$39 = ibmax
 1075.       t$40 = kmax
 1093.       t$134 = _zla( 0, ibmax )
 1075.       t$135 = _zla( 0, ibmax )
 1093.       t$136 = _zla( 0, kmax )
 1075.       t$137 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1075.       t$41 = ( 1 + kmax )
 1088.       t$138 = _zla( 0, ( 1 + kmax ) )
 1106.       if ( kmax > 0 ) then
 1107.          if ( iblim > 0 ) then
 1106.             $I_L1106_97 = 0
 1106.             if ( kmax >= 4 ) then
 1106.                $I_L1106_114 = 0
 1106. !dir$ blocking_size( 0, 0 )
 1106.                do
 1107.                   $SCA_tov#1_U0 = tov(1 + 4 * $I_L1106_114)
 1107.                   $SCA_tov#2_U1 = tov(2 + 4 * $I_L1106_114)
 1107.                   $SCA_tov#3_U2 = tov(3 + 4 * $I_L1106_114)
 1107.                   $SCA_tov#4_U3 = tov(4 + 4 * $I_L1106_114)
 1107.                   $I_L1107_84 = 0
 1107. !dir$ ivdep
 1107. !dir$ blocking_size( 0, 0 )
 1107.                   do
 1108.                      tdu(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) = tdu(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) + -5.0e-1 * ( zlam(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) + rc * $SCA_tov#1_U0 * plam(1 + $I_L1107_84) )
 1109.                      tdv(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) = tdv(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) + -5.0e-1 * ( zphi(1 + $I_L1107_84, 1 + 4 * $I_L1106_114) + rc * $SCA_tov#1_U0 * pphi(1 + $I_L1107_84) )
 1108.                      tdu(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) = tdu(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) + -5.0e-1 * ( zlam(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) + rc * $SCA_tov#2_U1 * plam(1 + $I_L1107_84) )
 1109.                      tdv(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) = tdv(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) + -5.0e-1 * ( zphi(1 + $I_L1107_84, 2 + 4 * $I_L1106_114) + rc * $SCA_tov#2_U1 * pphi(1 + $I_L1107_84) )
 1108.                      tdu(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) = tdu(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) + -5.0e-1 * ( zlam(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) + rc * $SCA_tov#3_U2 * plam(1 + $I_L1107_84) )
 1109.                      tdv(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) = tdv(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) + -5.0e-1 * ( zphi(1 + $I_L1107_84, 3 + 4 * $I_L1106_114) + rc * $SCA_tov#3_U2 * pphi(1 + $I_L1107_84) )
 1108.                      tdu(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) = tdu(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) + -5.0e-1 * ( zlam(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) + rc * $SCA_tov#4_U3 * plam(1 + $I_L1107_84) )
 1109.                      tdv(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) = tdv(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) + -5.0e-1 * ( zphi(1 + $I_L1107_84, 4 + 4 * $I_L1106_114) + rc * $SCA_tov#4_U3 * pphi(1 + $I_L1107_84) )
 1110.                      $I_L1107_84 = 1 + $I_L1107_84
 1107.                      if ( $I_L1107_84 >= iblim ) exit
 1107.                   enddo
 1111.                   $I_L1106_114 = 1 + $I_L1106_114
 1110.                   if ( $I_L1106_114 >= _rsh( kmax, 2 ) ) exit
 1110.                enddo
 1111.                $I_L1106_97 = and( 0xfffffffffffffffcUL, kmax )
 1111.             endif
 1106.             if ( $I_L1106_97 < kmax ) then
 1106.                $I_L1106_105 = 0
 1106. !dir$ blocking_size( 0, 0 )
 1106.                do
 1107.                   $SCA_tov_I6 = tov($I_L1106_97 + $I_L1106_105 + 1)
 1107.                   $I_L1107_84 = 0
 1107. !dir$ ivdep
 1107. !dir$ blocking_size( 0, 0 )
 1107.                   do
 1108.                      tdu(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) = tdu(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) + -5.0e-1 * ( zlam(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) + rc * $SCA_tov_I6 * plam(1 + $I_L1107_84) )
 1109.                      tdv(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) = tdv(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) + -5.0e-1 * ( zphi(1 + $I_L1107_84, $I_L1106_97 + $I_L1106_105 + 1) + rc * $SCA_tov_I6 * pphi(1 + $I_L1107_84) )
 1110.                      $I_L1107_84 = 1 + $I_L1107_84
 1107.                      if ( $I_L1107_84 >= iblim ) exit
 1107.                   enddo
 1111.                   $I_L1106_105 = 1 + $I_L1106_105
 1110.                   if ( $I_L1106_105 >= kmax + -$I_L1106_97 ) exit
 1110.                enddo
 1110.             endif
 1110.          endif
 1110.       endif
 1115.       if ( iblim > 0 ) then
 1115.          $I_L1115_86 = 0
 1115. !dir$ ivdep
 1115.          do
 1116.             tdlnp(1 + $I_L1115_86) = tdlnp(1 + $I_L1115_86) + -5.0e-1 * divint(1 + $I_L1115_86, kmax)
 1117.             $I_L1115_86 = 1 + $I_L1115_86
 1115.             if ( $I_L1115_86 >= iblim ) exit
 1115.          enddo
 1115.       endif
 1121.       if ( -1 + kmax > 0 ) then
 1122.          if ( iblim > 0 ) then
 1121.             $I_L1121_99 = 0
 1121.             if ( -5 + kmax >= 0 ) then
 1121.                $I_L1121_116 = 0
 1121. !dir$ blocking_size( 0, 0 )
 1121.                do
 1122.                   $SCA_ci#1_U4 = ci(2 + 4 * $I_L1121_116)
 1122.                   $SCA_ci#2_U5 = ci(3 + 4 * $I_L1121_116)
 1122.                   $SCA_ci#3_U6 = ci(4 + 4 * $I_L1121_116)
 1122.                   $SCA_ci#4_U7 = ci(5 + 4 * $I_L1121_116)
 1122.                   $I_L1122_88 = 0
 1122. !dir$ ivdep
 1122. !dir$ blocking_size( 0, 0 )
 1122.                   do
 1123.                      w(1 + $I_L1122_88, 1 + 4 * $I_L1121_116) = $SCA_ci#1_U4 * divint(1 + $I_L1122_88, kmax) + -divint(1 + $I_L1122_88, 1 + 4 * $I_L1121_116)
 1123.                      w(1 + $I_L1122_88, 2 + 4 * $I_L1121_116) = $SCA_ci#2_U5 * divint(1 + $I_L1122_88, kmax) + -divint(1 + $I_L1122_88, 2 + 4 * $I_L1121_116)
 1123.                      w(1 + $I_L1122_88, 3 + 4 * $I_L1121_116) = $SCA_ci#3_U6 * divint(1 + $I_L1122_88, kmax) + -divint(1 + $I_L1122_88, 3 + 4 * $I_L1121_116)
 1123.                      w(1 + $I_L1122_88, 4 + 4 * $I_L1121_116) = $SCA_ci#4_U7 * divint(1 + $I_L1122_88, kmax) + -divint(1 + $I_L1122_88, 4 + 4 * $I_L1121_116)
 1124.                      $I_L1122_88 = 1 + $I_L1122_88
 1122.                      if ( $I_L1122_88 >= iblim ) exit
 1122.                   enddo
 1125.                   $I_L1121_116 = 1 + $I_L1121_116
 1124.                   if ( $I_L1121_116 >= _rsh( -1 + kmax, 2 ) ) exit
 1124.                enddo
 1125.                $I_L1121_99 = and( 0xfffffffffffffffcUL, -1 + kmax )
 1125.             endif
 1121.             if ( $I_L1121_99 < -1 + kmax ) then
 1121.                $I_L1121_108 = 0
 1121. !dir$ blocking_size( 0, 0 )
 1121.                do
 1122.                   $SCA_ci_I7 = ci($I_L1121_99 + $I_L1121_108 + 2)
 1122.                   $I_L1122_88 = 0
 1122. !dir$ ivdep
 1122. !dir$ blocking_size( 0, 0 )
 1122.                   do
 1123.                      w(1 + $I_L1122_88, $I_L1121_99 + $I_L1121_108 + 1) = $SCA_ci_I7 * divint(1 + $I_L1122_88, kmax) + -divint(1 + $I_L1122_88, $I_L1121_99 + $I_L1121_108 + 1)
 1124.                      $I_L1122_88 = 1 + $I_L1122_88
 1122.                      if ( $I_L1122_88 >= iblim ) exit
 1122.                   enddo
 1125.                   $I_L1121_108 = 1 + $I_L1121_108
 1124.                   if ( $I_L1121_108 >= kmax + -$I_L1121_99 + -1 ) exit
 1124.                enddo
 1124.             endif
 1124.          endif
 1124.       endif
 1127.       if ( iblim > 0 ) then
 1128.          $SC_tov_I2 = tov(1)
 1128.          $SC_rdel2_I1 = rdel2(1)
 1128.          $SC_h1_I0 = h1(1)
 1127.          $I_L1127_90 = 0
 1127. !dir$ ivdep
 1127.          do
 1128.             tdt(1 + $I_L1127_90, 1) = tdt(1 + $I_L1127_90, 1) + -5.0e-1 * ( rk * $SC_tov_I2 * divint(1 + $I_L1127_90, kmax) + $SC_rdel2_I1 * $SC_h1_I0 * w(1 + $I_L1127_90, 1) )
 1130.             $I_L1127_90 = 1 + $I_L1127_90
 1127.             if ( $I_L1127_90 >= iblim ) exit
 1127.          enddo
 1127.       endif
 1131.       if ( -3 + kmax >= 0 ) then
 1132.          if ( iblim > 0 ) then
 1132.             $I_L1132_103 = 0
 1132.             do
 1131.                $I_L1131_101 = 0
 1131.                if ( -6 + kmax >= 0 ) then
 1131.                   $I_L1131_118 = 0
 1131. !dir$ blocking_size( 0, 0 )
 1131.                   do
 1132.                      $SCA#1_U8 = h2(2 + 4 * $I_L1131_118)
 1132.                      $SCA#1_U12 = h1(2 + 4 * $I_L1131_118)
 1132.                      $SCA_rdel2#1_U16 = rdel2(2 + 4 * $I_L1131_118)
 1132.                      $SCA_tov#1_U20 = tov(2 + 4 * $I_L1131_118)
 1132.                      $SCA#2_U9 = h2(3 + 4 * $I_L1131_118)
 1132.                      $SCA#2_U13 = h1(3 + 4 * $I_L1131_118)
 1132.                      $SCA_rdel2#2_U17 = rdel2(3 + 4 * $I_L1131_118)
 1132.                      $SCA_tov#2_U21 = tov(3 + 4 * $I_L1131_118)
 1132.                      $SCA#3_U10 = h2(4 + 4 * $I_L1131_118)
 1132.                      $SCA#3_U14 = h1(4 + 4 * $I_L1131_118)
 1132.                      $SCA_rdel2#3_U18 = rdel2(4 + 4 * $I_L1131_118)
 1132.                      $SCA_tov#3_U22 = tov(4 + 4 * $I_L1131_118)
 1132.                      $SCA#4_U11 = h2(5 + 4 * $I_L1131_118)
 1132.                      $SCA#4_U15 = h1(5 + 4 * $I_L1131_118)
 1132.                      $SCA_rdel2#4_U19 = rdel2(5 + 4 * $I_L1131_118)
 1132.                      $SCA_tov#4_U23 = tov(5 + 4 * $I_L1131_118)
 1132.                      $I_L1132_92 = 0
 1132. !dir$ ivdep
 1132. !dir$ blocking_size( 256, 256 )
 1132.                      do
 1133.                         tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 2 + 4 * $I_L1131_118) = tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 2 + 4 * $I_L1131_118) + -5.0e-1 * ( rk * $SCA_tov#1_U20 * divint($I_L1132_92 + 256 * $I_L1132_103 + 1, kmax) + $SCA_rdel2#1_U16 * ( $SCA#1_U12 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 2 + 4 * $I_L1131_118) + $SCA#1_U8 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 1 + 4 * $I_L1131_118) ) )
 1133.                         tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 3 + 4 * $I_L1131_118) = tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 3 + 4 * $I_L1131_118) + -5.0e-1 * ( rk * $SCA_tov#2_U21 * divint($I_L1132_92 + 256 * $I_L1132_103 + 1, kmax) + $SCA_rdel2#2_U17 * ( $SCA#2_U13 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 3 + 4 * $I_L1131_118) + $SCA#2_U9 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 2 + 4 * $I_L1131_118) ) )
 1133.                         tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 4 + 4 * $I_L1131_118) = tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 4 + 4 * $I_L1131_118) + -5.0e-1 * ( rk * $SCA_tov#3_U22 * divint($I_L1132_92 + 256 * $I_L1132_103 + 1, kmax) + $SCA_rdel2#3_U18 * ( $SCA#3_U14 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 4 + 4 * $I_L1131_118) + $SCA#3_U10 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 3 + 4 * $I_L1131_118) ) )
 1133.                         tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 5 + 4 * $I_L1131_118) = tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, 5 + 4 * $I_L1131_118) + -5.0e-1 * ( rk * $SCA_tov#4_U23 * divint($I_L1132_92 + 256 * $I_L1132_103 + 1, kmax) + $SCA_rdel2#4_U19 * ( $SCA#4_U15 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 5 + 4 * $I_L1131_118) + $SCA#4_U11 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, 4 + 4 * $I_L1131_118) ) )
 1132.                         $I_L1132_92 = 1 + $I_L1132_92
 1132.                         if ( $I_L1132_92 >= min( iblim, 256 + 256 * $I_L1132_103 ) + -256 * $I_L1132_103 ) exit
 1132.                      enddo
 1136.                      $I_L1131_118 = 1 + $I_L1131_118
 1136.                      if ( $I_L1131_118 >= _rsh( -2 + kmax, 2 ) ) exit
 1136.                   enddo
 1136.                   $I_L1131_101 = and( 0xfffffffffffffffcUL, -2 + kmax )
 1136.                endif
 1131.                if ( $I_L1131_101 < -2 + kmax ) then
 1131.                   $I_L1131_111 = 0
 1131. !dir$ blocking_size( 0, 0 )
 1131.                   do
 1132.                      $SCA_h2_I8 = h2($I_L1131_101 + $I_L1131_111 + 2)
 1132.                      $SCA_h1_I9 = h1($I_L1131_101 + $I_L1131_111 + 2)
 1132.                      $SCA_rdel2_I10 = rdel2($I_L1131_101 + $I_L1131_111 + 2)
 1132.                      $SCA_tov_I11 = tov($I_L1131_101 + $I_L1131_111 + 2)
 1132.                      $I_L1132_92 = 0
 1132. !dir$ ivdep
 1132. !dir$ blocking_size( 256, 256 )
 1132.                      do
 1133.                         tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, $I_L1131_101 + $I_L1131_111 + 2) = tdt($I_L1132_92 + 256 * $I_L1132_103 + 1, $I_L1131_101 + $I_L1131_111 + 2) + -5.0e-1 * ( rk * $SCA_tov_I11 * divint($I_L1132_92 + 256 * $I_L1132_103 + 1, kmax) + $SCA_rdel2_I10 * ( $SCA_h1_I9 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, $I_L1131_101 + $I_L1131_111 + 2) + $SCA_h2_I8 * w($I_L1132_92 + 256 * $I_L1132_103 + 1, $I_L1131_101 + $I_L1131_111 + 1) ) )
 1132.                         $I_L1132_92 = 1 + $I_L1132_92
 1132.                         if ( $I_L1132_92 >= min( iblim, 256 + 256 * $I_L1132_103 ) + -256 * $I_L1132_103 ) exit
 1132.                      enddo
 1136.                      $I_L1131_111 = 1 + $I_L1131_111
 1136.                      if ( $I_L1131_111 >= kmax + -$I_L1131_101 + -2 ) exit
 1136.                   enddo
 1136.                endif
 1132.                $I_L1132_103 = 1 + $I_L1132_103
 1135.                if ( $I_L1132_103 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1135.             enddo
 1135.          endif
 1135.       endif
 1138.       if ( iblim > 0 ) then
 1139.          $SC_tov_I5 = tov(kmax)
 1139.          $SC_rdel2_I4 = rdel2(kmax)
 1139.          $SC_h2_I3 = h2(kmax)
 1138.          $I_L1138_95 = 0
 1138. !dir$ ivdep
 1138.          do
 1139.             tdt(1 + $I_L1138_95, kmax) = tdt(1 + $I_L1138_95, kmax) + -5.0e-1 * ( rk * $SC_tov_I5 * divint(1 + $I_L1138_95, kmax) + $SC_rdel2_I4 * $SC_h2_I3 * w(1 + $I_L1138_95, -1 + kmax) )
 1141.             $I_L1138_95 = 1 + $I_L1138_95
 1138.             if ( $I_L1138_95 >= iblim ) exit
 1138.          enddo
 1138.       endif
 1142.       return
 1142.       end
 1142.       
 1148.       
 1148.       subroutine addtend( dt, nlnminit, jbfirst, jblast )
 1155.       $dt2_S4 = 2.0 * dt
 1156.       if ( nlnminit == 0 ) then
 1158.          if ( jblast + -jbfirst >= 0 ) then
 1159.             if ( kmax > 0 ) then
 1158.                $I_L1158_86 = 0
 1158.                do
 1159.                   $SCA_ibmaxperjb_I62 = (ibmaxperjb%base_addr)(jbfirst + $I_L1158_86, 0)
 1159.                   $I_L1159_78 = 0
 1159.                   do
 1160.                      if ( $SCA_ibmaxperjb_I62 > 0 ) then
 1160.                         $I_L1160_68 = 0
 1160. !dir$ ivdep
 1160. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyum, fgvm, fgum, fgtmpm, fgtdm, fgqm, fgtd, fgyv, fgyu )
 1160.                         do
 1161.                            (fgyu%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) = (fgum%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + $dt2_S4 * ( (fgyu%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + (fgyum%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) )
 1163.                            (fgyv%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) = (fgvm%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + $dt2_S4 * ( (fgyv%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + (fgyvm%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) )
 1165.                            (fgtd%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) = (fgtmpm%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + $dt2_S4 * ( (fgtd%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + (fgtdm%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) )
 1167.                            (fgqd%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) = (fgqm%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0) + $dt2_S4 * (fgqd%base_addr)(1 + $I_L1160_68, 1 + $I_L1159_78, jbfirst + $I_L1158_86, 0)
 1169.                            $I_L1160_68 = 1 + $I_L1160_68
 1160.                            if ( $I_L1160_68 >= $SCA_ibmaxperjb_I62 ) exit
 1160.                         enddo
 1160.                      endif
 1170.                      $I_L1159_78 = 1 + $I_L1159_78
 1169.                      if ( $I_L1159_78 >= kmax ) exit
 1169.                   enddo
 1171.                   if ( $SCA_ibmaxperjb_I62 > 0 ) then
 1171.                      $I_L1171_70 = 0
 1171. !dir$ ivdep
 1171.                      do
 1172.                         (fgvdlnp%base_addr)(1 + $I_L1171_70, jbfirst + $I_L1158_86, 0) = (fglnpm%base_addr)(1 + $I_L1171_70, jbfirst + $I_L1158_86, 0) + $dt2_S4 * ( (fgvdlnp%base_addr)(1 + $I_L1171_70, jbfirst + $I_L1158_86, 0) + (fgvdlnpm%base_addr)(1 + $I_L1171_70, jbfirst + $I_L1158_86, 0) )
 1174.                         $I_L1171_70 = 1 + $I_L1171_70
 1171.                         if ( $I_L1171_70 >= $SCA_ibmaxperjb_I62 ) exit
 1171.                      enddo
 1171.                   endif
 1175.                   $I_L1158_86 = 1 + $I_L1158_86
 1174.                   if ( $I_L1158_86 >= jblast + -jbfirst + 1 ) exit
 1174.                enddo
 1174.             else
 1158.                $I_L1158_82 = 0
 1158.                do
 1171.                   $t_S5 = (ibmaxperjb%base_addr)(jbfirst + $I_L1158_82, 0)
 1171.                   if ( $t_S5 > 0 ) then
 1171.                      $I_L1171_74 = 0
 1171. !dir$ ivdep
 1171.                      do
 1172.                         (fgvdlnp%base_addr)(1 + $I_L1171_74, jbfirst + $I_L1158_82, 0) = (fglnpm%base_addr)(1 + $I_L1171_74, jbfirst + $I_L1158_82, 0) + $dt2_S4 * ( (fgvdlnp%base_addr)(1 + $I_L1171_74, jbfirst + $I_L1158_82, 0) + (fgvdlnpm%base_addr)(1 + $I_L1171_74, jbfirst + $I_L1158_82, 0) )
 1174.                         $I_L1171_74 = 1 + $I_L1171_74
 1171.                         if ( $I_L1171_74 >= $t_S5 ) exit
 1171.                      enddo
 1171.                   endif
 1175.                   $I_L1158_82 = 1 + $I_L1158_82
 1174.                   if ( $I_L1158_82 >= jblast + -jbfirst + 1 ) exit
 1174.                enddo
 1174.             endif
 1174.          endif
 1177.       else if ( jblast + -jbfirst >= 0 ) then
 1180.          if ( kmax > 0 ) then
 1179.             $I_L1179_84 = 0
 1179.             do
 1180.                $SCA_ibmaxperjb_I63 = (ibmaxperjb%base_addr)(jbfirst + $I_L1179_84, 0)
 1180.                $I_L1180_76 = 0
 1180.                do
 1181.                   if ( $SCA_ibmaxperjb_I63 > 0 ) then
 1181.                      $I_L1181_64 = 0
 1181. !dir$ ivdep
 1181. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyum, fgtdm, fgyv, fgyu )
 1181.                      do
 1182.                         (fgyu%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) = (fgyu%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) + 2.0 * (fgyum%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0)
 1183.                         (fgyv%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) = (fgyv%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) + 2.0 * (fgyvm%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0)
 1184.                         (fgtd%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) = (fgtd%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0) + 2.0 * (fgtdm%base_addr)(1 + $I_L1181_64, 1 + $I_L1180_76, jbfirst + $I_L1179_84, 0)
 1186.                         $I_L1181_64 = 1 + $I_L1181_64
 1181.                         if ( $I_L1181_64 >= $SCA_ibmaxperjb_I63 ) exit
 1181.                      enddo
 1181.                   endif
 1187.                   $I_L1180_76 = 1 + $I_L1180_76
 1186.                   if ( $I_L1180_76 >= kmax ) exit
 1186.                enddo
 1188.                if ( $SCA_ibmaxperjb_I63 > 0 ) then
 1188.                   $I_L1188_66 = 0
 1188. !dir$ ivdep
 1188.                   do
 1189.                      (fgvdlnp%base_addr)(1 + $I_L1188_66, jbfirst + $I_L1179_84, 0) = (fgvdlnp%base_addr)(1 + $I_L1188_66, jbfirst + $I_L1179_84, 0) + 2.0 * (fgvdlnpm%base_addr)(1 + $I_L1188_66, jbfirst + $I_L1179_84, 0)
 1190.                      $I_L1188_66 = 1 + $I_L1188_66
 1188.                      if ( $I_L1188_66 >= $SCA_ibmaxperjb_I63 ) exit
 1188.                   enddo
 1188.                endif
 1191.                $I_L1179_84 = 1 + $I_L1179_84
 1190.                if ( $I_L1179_84 >= jblast + -jbfirst + 1 ) exit
 1190.             enddo
 1190.          else
 1179.             $I_L1179_80 = 0
 1179.             do
 1188.                $t_S11 = (ibmaxperjb%base_addr)(jbfirst + $I_L1179_80, 0)
 1188.                if ( $t_S11 > 0 ) then
 1188.                   $I_L1188_72 = 0
 1188. !dir$ ivdep
 1188.                   do
 1189.                      (fgvdlnp%base_addr)(1 + $I_L1188_72, jbfirst + $I_L1179_80, 0) = (fgvdlnp%base_addr)(1 + $I_L1188_72, jbfirst + $I_L1179_80, 0) + 2.0 * (fgvdlnpm%base_addr)(1 + $I_L1188_72, jbfirst + $I_L1179_80, 0)
 1190.                      $I_L1188_72 = 1 + $I_L1188_72
 1188.                      if ( $I_L1188_72 >= $t_S11 ) exit
 1188.                   enddo
 1188.                endif
 1191.                $I_L1179_80 = 1 + $I_L1179_80
 1190.                if ( $I_L1179_80 >= jblast + -jbfirst + 1 ) exit
 1190.             enddo
 1190.          endif
 1190.       endif
 1194.       return
 1194.       end
 1194.       
 1200.       
 1200.       subroutine timefilterstep1( fa, fb, jbfirst, jblast )
 1207.       if ( jblast + -jbfirst >= 0 ) then
 1208.          if ( kmax > 0 ) then
 1207.             $I_L1207_42 = 0
 1207.             do
 1208.                $SCA_ibmaxperjb_I48 = (ibmaxperjb%base_addr)(jbfirst + $I_L1207_42, 0)
 1208.                $I_L1208_38 = 0
 1208.                do
 1209.                   if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1209.                      $I_L1209_32 = 0
 1209. !dir$ ivdep
 1209. !dir$ loop_info (automatic) cache_nt( fgv, fgu, fgtphi, fgtmp, fgtlam, fgq, fgdiv, fgtphim, fgtlamm, fgqm, fgvm, fgum, fgtmpm )
 1209.                      do
 1210.                         (fgtmpm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgtmp%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgtmpm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1211.                         (fgdivm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgdiv%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgdivm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1212.                         (fgum%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgu%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgum%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1213.                         (fgvm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgv%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgvm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1214.                         (fgqm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgq%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgqm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1215.                         (fgtlamm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgtlam%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgtlamm%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1216.                         (fgtphim%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) = fa * (fgtphi%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0) + fb * (fgtphim%base_addr)(1 + $I_L1209_32, 1 + $I_L1208_38, jbfirst + $I_L1207_42, 0)
 1217.                         $I_L1209_32 = 1 + $I_L1209_32
 1209.                         if ( $I_L1209_32 >= $SCA_ibmaxperjb_I48 ) exit
 1209.                      enddo
 1209.                   endif
 1218.                   $I_L1208_38 = 1 + $I_L1208_38
 1217.                   if ( $I_L1208_38 >= kmax ) exit
 1217.                enddo
 1219.                if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1219.                   $I_L1219_34 = 0
 1219. !dir$ ivdep
 1219.                   do
 1220.                      (fglnpm%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) = fa * (fglnps%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) + fb * (fglnpm%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0)
 1221.                      (fgplamm%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) = fa * (fgplam%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) + fb * (fgplamm%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0)
 1222.                      (fgpphim%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) = fa * (fgpphi%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0) + fb * (fgpphim%base_addr)(1 + $I_L1219_34, jbfirst + $I_L1207_42, 0)
 1223.                      $I_L1219_34 = 1 + $I_L1219_34
 1219.                      if ( $I_L1219_34 >= $SCA_ibmaxperjb_I48 ) exit
 1219.                   enddo
 1219.                endif
 1224.                $I_L1207_42 = 1 + $I_L1207_42
 1223.                if ( $I_L1207_42 >= jblast + -jbfirst + 1 ) exit
 1223.             enddo
 1223.          else
 1207.             $I_L1207_40 = 0
 1207.             do
 1219.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1207_40, 0)
 1219.                if ( $t_S4 > 0 ) then
 1219.                   $I_L1219_36 = 0
 1219. !dir$ ivdep
 1219.                   do
 1220.                      (fglnpm%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) = fa * (fglnps%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) + fb * (fglnpm%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0)
 1221.                      (fgplamm%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) = fa * (fgplam%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) + fb * (fgplamm%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0)
 1222.                      (fgpphim%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) = fa * (fgpphi%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0) + fb * (fgpphim%base_addr)(1 + $I_L1219_36, jbfirst + $I_L1207_40, 0)
 1223.                      $I_L1219_36 = 1 + $I_L1219_36
 1219.                      if ( $I_L1219_36 >= $t_S4 ) exit
 1219.                   enddo
 1219.                endif
 1224.                $I_L1207_40 = 1 + $I_L1207_40
 1223.                if ( $I_L1207_40 >= jblast + -jbfirst + 1 ) exit
 1223.             enddo
 1223.          endif
 1223.       endif
 1225.       return
 1225.       end
 1225.       
 1231.       
 1231.       subroutine timefilterstep2( fb1, jbfirst, jblast )
 1237.       if ( jblast + -jbfirst >= 0 ) then
 1238.          if ( kmax > 0 ) then
 1237.             $I_L1237_42 = 0
 1237.             do
 1238.                $SCA_ibmaxperjb_I48 = (ibmaxperjb%base_addr)(jbfirst + $I_L1237_42, 0)
 1238.                $I_L1238_38 = 0
 1238.                do
 1239.                   if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1239.                      $I_L1239_32 = 0
 1239. !dir$ ivdep
 1239. !dir$ loop_info (automatic) cache_nt( fgv, fgu, fgtphi, fgtmp, fgtlam, fgq, fgdiv, fgtphim, fgtlamm, fgqm, fgvm, fgum, fgtmpm )
 1239.                      do
 1240.                         (fgtmpm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgtmpm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgtmp%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1241.                         (fgdivm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgdivm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgdiv%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1242.                         (fgum%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgum%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgu%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1243.                         (fgvm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgvm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgv%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1244.                         (fgqm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgqm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgq%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1245.                         (fgtlamm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgtlamm%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgtlam%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1246.                         (fgtphim%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) = (fgtphim%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0) + fb1 * (fgtphi%base_addr)(1 + $I_L1239_32, 1 + $I_L1238_38, jbfirst + $I_L1237_42, 0)
 1247.                         $I_L1239_32 = 1 + $I_L1239_32
 1239.                         if ( $I_L1239_32 >= $SCA_ibmaxperjb_I48 ) exit
 1239.                      enddo
 1239.                   endif
 1248.                   $I_L1238_38 = 1 + $I_L1238_38
 1247.                   if ( $I_L1238_38 >= kmax ) exit
 1247.                enddo
 1249.                if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1249.                   $I_L1249_34 = 0
 1249. !dir$ ivdep
 1249.                   do
 1250.                      (fglnpm%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) = (fglnpm%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) + fb1 * (fglnps%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0)
 1251.                      (fgplamm%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) = (fgplamm%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) + fb1 * (fgplam%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0)
 1252.                      (fgpphim%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) = (fgpphim%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0) + fb1 * (fgpphi%base_addr)(1 + $I_L1249_34, jbfirst + $I_L1237_42, 0)
 1253.                      $I_L1249_34 = 1 + $I_L1249_34
 1249.                      if ( $I_L1249_34 >= $SCA_ibmaxperjb_I48 ) exit
 1249.                   enddo
 1249.                endif
 1254.                $I_L1237_42 = 1 + $I_L1237_42
 1253.                if ( $I_L1237_42 >= jblast + -jbfirst + 1 ) exit
 1253.             enddo
 1253.          else
 1237.             $I_L1237_40 = 0
 1237.             do
 1249.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1237_40, 0)
 1249.                if ( $t_S4 > 0 ) then
 1249.                   $I_L1249_36 = 0
 1249. !dir$ ivdep
 1249.                   do
 1250.                      (fglnpm%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) = (fglnpm%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) + fb1 * (fglnps%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0)
 1251.                      (fgplamm%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) = (fgplamm%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) + fb1 * (fgplam%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0)
 1252.                      (fgpphim%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) = (fgpphim%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0) + fb1 * (fgpphi%base_addr)(1 + $I_L1249_36, jbfirst + $I_L1237_40, 0)
 1253.                      $I_L1249_36 = 1 + $I_L1249_36
 1249.                      if ( $I_L1249_36 >= $t_S4 ) exit
 1249.                   enddo
 1249.                endif
 1254.                $I_L1237_40 = 1 + $I_L1237_40
 1253.                if ( $I_L1237_40 >= jblast + -jbfirst + 1 ) exit
 1253.             enddo
 1253.          endif
 1253.       endif
 1255.       return
 1255.       end
 1255.       
 1419.       
 1419.       subroutine globconservation( jfirst, jlast, jbfirst, jblast, jfirst_d, jlast_d )
 1285.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
 1286.       if ( fps%header%assoc /= 1 ) then
 1287.          fps%header%a_contig = 1
 1287.          fps%dim_1%LB = 1
 1287.          fps%dim_1%EX = _zla( 0, imax )
 1287.          fps%dim_1%SM = 1
 1287.          fps%dim_2%LB = 1
 1287.          fps%dim_2%EX = _zla( 0, myjmax_d )
 1287.          fps%dim_2%SM = _zla( 0, imax )
 1287.          $_allo_P0(0) = 0x1000000000001L
 1287.          $_allo_P0(1) = loc( fps )
 1287.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1288.          if ( nscalars > 0 ) then
 1288.             fgs%header%a_contig = 1
 1288.             fgs%dim_1%LB = 1
 1288.             fgs%dim_1%EX = _zla( 0, imax )
 1288.             fgs%dim_1%SM = 1
 1288.             fgs%dim_2%LB = 1
 1288.             fgs%dim_2%EX = _zla( 0, myjmax_d )
 1288.             fgs%dim_2%SM = _zla( 0, imax )
 1288.             fgs%dim_3%LB = 1
 1288.             fgs%dim_3%EX = _zla( 0, nscalars )
 1288.             fgs%dim_3%SM = ( _zla( 0, imax ) * _zla( 0, myjmax_d ) )
 1288.             $_allo_P1(0) = 0x1000000000001L
 1288.             $_allo_P1(1) = loc( fgs )
 1288.             call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1288.          endif
 1289.          if ( nscalars > 0 ) then
 1289.             fg%header%a_contig = 1
 1289.             fg%dim_1%LB = 1
 1289.             fg%dim_1%EX = _zla( 0, ibmax )
 1289.             fg%dim_1%SM = 1
 1289.             fg%dim_2%LB = 1
 1289.             fg%dim_2%EX = _zla( 0, nscalars )
 1289.             fg%dim_2%SM = _zla( 0, ibmax )
 1289.             fg%dim_3%LB = 1
 1289.             fg%dim_3%EX = _zla( 0, jbmax )
 1289.             fg%dim_3%SM = ( _zla( 0, nscalars ) * _zla( 0, ibmax ) )
 1289.             $_allo_P2(0) = 0x1000000000001L
 1289.             $_allo_P2(1) = loc( fg )
 1289.             call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1289.          endif
 1290.          displ%header%a_contig = 1
 1290.          displ%dim_1%LB = 0
 1290.          displ%dim_1%EX = _zla( 0, maxnodes )
 1290.          displ%dim_1%SM = 1
 1290.          $_allo_P3(0) = 0x1000000000001L
 1290.          $_allo_P3(1) = loc( displ )
 1290.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1290.       endif
 1292.       if ( init_globconserv ) then
 1293.          ipa$654 = 1
 1293.          call collect_gauss( (fgps%base_addr)(fgps%dim_1%LB, fgps%dim_2%LB, 0), (fps%base_addr)(fps%dim_1%LB, fps%dim_2%LB, 0), ipa$654 )
 1293.       else
 1295.          ipa$663 = 1
 1295.          call collect_gauss( (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0), (fps%base_addr)(fps%dim_1%LB, fps%dim_2%LB, 0), ipa$663 )
 1295.       endif
 1297.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
 1298.       j = jfirst_d
 1298.       if ( jlast_d + -jfirst_d >= 0 ) then
 1304.          $SC_cel_area_I102 = cel_area%dim_1%EX
 1304.          $SC_cel_area_I103 = cel_area%dim_1%LB
 1304.          $SC_massconsrv_I104 = massconsrv%dim_1%EX
 1304.          $SC_massconsrv_I105 = massconsrv%dim_1%LB
 1301.          $SC_imaxperj_I95 = imaxperj%dim_1%EX
 1301.          $SC_imaxperj_I96 = imaxperj%dim_1%LB
 1302.          $SC_fps_I100 = fps%dim_2%SM
 1302.          $SC_fps_I99 = fps%dim_2%EX
 1302.          $SC_fps_I101 = fps%dim_2%LB
 1302.          $SC_fps_I97 = fps%dim_1%EX
 1302.          $SC_fps_I98 = fps%dim_1%LB
 1298.          $I_L1298_468 = 0
 1298.          do
 1299.             s = 0.0
 1301.             $t_S1 = (imaxperj%base_addr)(jfirst_d + $I_L1298_468, 0)
 1301.             i = 1
 1301.             if ( $t_S1 > 0 ) then
 1301.                $I_L1301_422 = 0
 1301. !dir$ ivdep
 1301.                do
 1302.                   s = s + (fps%base_addr)(1 + $I_L1301_422, jfirst_d + $I_L1298_468 + -myfirstlat_diag + 1, 0)
 1303.                   $I_L1301_422 = 1 + $I_L1301_422
 1301.                   if ( $I_L1301_422 >= $t_S1 ) exit
 1301.                enddo
 1303.                i = ( 1 + $t_S1 )
 1303.             endif
 1304.             (massconsrv%base_addr)(jfirst_d + $I_L1298_468, 0) = s * (cel_area%base_addr)(jfirst_d + $I_L1298_468, 0)
 1305.             $I_L1298_468 = 1 + $I_L1298_468
 1303.             if ( $I_L1298_468 >= jlast_d + -jfirst_d + 1 ) exit
 1303.          enddo
 1305.          j = 1 + jlast_d
 1305.       endif
 1306.       _mt_barrier( 2, _mt_rw_list(...) )
 1307.       $snt_T1 = _mt_single( 3, _mt_rw_list(...) )
 1308.       (displ%base_addr)(0, 0) = 0
 1309.       t$514 = -1 + maxnodes
 1309.       i = 1
 1309.       if ( -1 + maxnodes > 0 ) then
 1309.          t$515 = ( -1 + maxnodes )
 1309.          $displ_WR0_R0 = (displ%base_addr)(0, 0)
 1310.          $SC_nlatsinproc_I106 = nlatsinproc_d%dim_1%EX
 1310.          $SC_nlatsinproc_I107 = nlatsinproc_d%dim_1%LB
 1310.          $SC_displ_I108 = displ%dim_1%EX
 1310.          $SC_displ_I109 = displ%dim_1%LB
 1309.          $I_L1309_424 = 0
 1309. !dir$ unroll 4
 1309.          do
 1310.             $displ_WR0_R0 = $displ_WR0_R0 + (nlatsinproc_d%base_addr)($I_L1309_424, 0)
 1310.             (displ%base_addr)(1 + $I_L1309_424, 0) = $displ_WR0_R0
 1311.             $I_L1309_424 = 1 + $I_L1309_424
 1309.             if ( $I_L1309_424 >= -1 + maxnodes ) exit
 1309.          enddo
 1311.          t$516 = -1 + maxnodes
 1311.          i = maxnodes
 1311.       endif
 1315.       call mpi_allgatherv( (massconsrv%base_addr)(myfirstlat_diag, 0), myjmax_d, 1275070495, (massconsrv%base_addr)(massconsrv%dim_1%LB, 0), (nlatsinproc_d%base_addr)(nlatsinproc_d%dim_1%LB, 0), (displ%base_addr)(displ%dim_1%LB, 0), 1275070495, 1140850688, ierr )
 1318.       totmass = 0.0
 1319.       t$517 = jmax
 1319.       j = 1
 1319.       if ( jmax > 0 ) then
 1319.          t$518 = jmax
 1320.          $SC_massconsrv_I104 = massconsrv%dim_1%EX
 1320.          $SC_massconsrv_I105 = massconsrv%dim_1%LB
 1319.          $I_L1319_426 = 0
 1319. !dir$ ivdep
 1319.          do
 1320.             totmass = totmass + (massconsrv%base_addr)(1 + $I_L1319_426, 0)
 1321.             $I_L1319_426 = 1 + $I_L1319_426
 1319.             if ( $I_L1319_426 >= jmax ) exit
 1319.          enddo
 1321.          t$519 = jmax
 1321.          j = ( 1 + jmax )
 1321.       endif
 1322.       $snt_T1 = _mt_endsingle( 3, _mt_rw_list(...), $snt_T1 )
 1327.       if ( init_globconserv == 0 ) then
 1328.          s = ( (total_mass%base_addr)(0, 0) * 1.0/totmass )
 1329.          j = jbfirst
 1329.          if ( jblast + -jbfirst >= 0 ) then
 1330.             $SC_ibmaxperjb_I110 = ibmaxperjb%dim_1%EX
 1330.             $SC_ibmaxperjb_I111 = ibmaxperjb%dim_1%LB
 1331.             $SC_fgpsp_I112 = fgpsp%dim_1%EX
 1331.             $SC_fgpsp_I113 = fgpsp%dim_1%LB
 1331.             $SC_fgpsp_I115 = fgpsp%dim_2%SM
 1331.             $SC_fgpsp_I114 = fgpsp%dim_2%EX
 1331.             $SC_fgpsp_I116 = fgpsp%dim_2%LB
 1329.             $I_L1329_470 = 0
 1329.             do
 1330.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1329_470, 0)
 1330.                i = 1
 1330.                if ( $t_S4 > 0 ) then
 1330.                   $I_L1330_428 = 0
 1330. !dir$ ivdep
 1330.                   do
 1331.                      (fgpsp%base_addr)(1 + $I_L1330_428, jbfirst + $I_L1329_470, 0) = (fgpsp%base_addr)(1 + $I_L1330_428, jbfirst + $I_L1329_470, 0) * s
 1332.                      $I_L1330_428 = 1 + $I_L1330_428
 1330.                      if ( $I_L1330_428 >= $t_S4 ) exit
 1330.                   enddo
 1332.                   i = ( 1 + $t_S4 )
 1332.                endif
 1333.                $I_L1329_470 = 1 + $I_L1329_470
 1332.                if ( $I_L1329_470 >= jblast + -jbfirst + 1 ) exit
 1332.             enddo
 1333.             j = 1 + jblast
 1333.          endif
 1333.       else
 1335.          (total_mass%base_addr)(0, 0) = totmass
 1335.       endif
 1338.       if ( do_globconserv ) then
 1342.          _mt_barrier( 4, _mt_rw_list(...) )
 1343.          ins = adr_scalars
 1344.          if ( nscalars > 0 ) then
 1345.             if ( jlast + -jfirst < 0 ) then
 1345.                j = jfirst
 1345.             else if ( kmax > 0 ) then
 1356.                if ( init_globconserv == 0 ) then
 1354.                   $SC_del_I131 = del%dim_1%EX
 1354.                   $SC_del_I132 = del%dim_1%LB
 1354.                   $SC_fgpass_scalars_I133 = fgpass_scalars%dim_1%EX
 1354.                   $SC_fgpass_scalars_I134 = fgpass_scalars%dim_1%LB
 1354.                   $SC_fgpass_scalars_I136 = fgpass_scalars%dim_2%SM
 1354.                   $SC_fgpass_scalars_I135 = fgpass_scalars%dim_2%EX
 1354.                   $SC_fgpass_scalars_I137 = fgpass_scalars%dim_2%LB
 1354.                   $SC_fgpass_scalars_I139 = fgpass_scalars%dim_3%SM
 1354.                   $SC_fgpass_scalars_I138 = fgpass_scalars%dim_3%EX
 1354.                   $SC_fgpass_scalars_I140 = fgpass_scalars%dim_3%LB
 1354.                   $SC_fgpass_scalars_I142 = fgpass_scalars%dim_4%SM
 1354.                   $SC_fgpass_scalars_I141 = fgpass_scalars%dim_4%EX
 1354.                   $SC_fgpass_scalars_I143 = fgpass_scalars%dim_4%LB
 1354.                   $SC_fgpass_scalars_I145 = fgpass_scalars%dim_5%SM
 1354.                   $SC_fgpass_scalars_I144 = fgpass_scalars%dim_5%EX
 1354.                   $SC_fgpass_scalars_I146 = fgpass_scalars%dim_5%LB
 1351.                   $SC_jbperij_I126 = jbperij%dim_1%EX
 1351.                   $SC_jbperij_I127 = jbperij%dim_1%LB
 1351.                   $SC_jbperij_I129 = jbperij%dim_2%SM
 1351.                   $SC_jbperij_I128 = jbperij%dim_2%EX
 1351.                   $SC_jbperij_I130 = jbperij%dim_2%LB
 1350.                   $SC_ibperij_I121 = ibperij%dim_1%EX
 1350.                   $SC_ibperij_I122 = ibperij%dim_1%LB
 1350.                   $SC_ibperij_I124 = ibperij%dim_2%SM
 1350.                   $SC_ibperij_I123 = ibperij%dim_2%EX
 1350.                   $SC_ibperij_I125 = ibperij%dim_2%LB
 1344.                   $SC_mylastlon_I119 = mylastlon%dim_1%EX
 1344.                   $SC_mylastlon_I120 = mylastlon%dim_1%LB
 1344.                   $SC_myfirstlon_I117 = myfirstlon%dim_1%EX
 1344.                   $SC_myfirstlon_I118 = myfirstlon%dim_1%LB
 1357.                   $SC_fgpsp_I112 = fgpsp%dim_1%EX
 1357.                   $SC_fgpsp_I113 = fgpsp%dim_1%LB
 1357.                   $SC_fgpsp_I115 = fgpsp%dim_2%SM
 1357.                   $SC_fgpsp_I114 = fgpsp%dim_2%EX
 1357.                   $SC_fgpsp_I116 = fgpsp%dim_2%LB
 1357.                   $SC_fg_I153 = fg%dim_3%SM
 1357.                   $SC_fg_I152 = fg%dim_3%EX
 1357.                   $SC_fg_I154 = fg%dim_3%LB
 1357.                   $SC_fg_I150 = fg%dim_2%SM
 1357.                   $SC_fg_I149 = fg%dim_2%EX
 1357.                   $SC_fg_I151 = fg%dim_2%LB
 1357.                   $SC_fg_I147 = fg%dim_1%EX
 1357.                   $SC_fg_I148 = fg%dim_1%LB
 1345.                   $I_L1345_498 = 0
 1345. !dir$ loop_info (automatic) cache_nt( mylastlon, myfirstlon )
 1345.                   do
 1344.                      $SCA_myfirstlon_I82 = (myfirstlon%base_addr)(jfirst + $I_L1345_498, 0)
 1344.                      $SCA_mylastlon_I83 = (mylastlon%base_addr)(jfirst + $I_L1345_498, 0)
 1349.                      if ( $SCA_mylastlon_I83 + -$SCA_myfirstlon_I82 >= 0 ) then
 1344.                         $I_L1344_486 = 0
 1344.                         do
 1349.                            $I_L1349_472 = 0
 1349. !dir$ ivdep
 1349.                            do
 1350.                               ib = (ibperij%base_addr)($SCA_myfirstlon_I82 + $I_L1349_472, jfirst + $I_L1345_498, 0)
 1351.                               jb = (jbperij%base_addr)($SCA_myfirstlon_I82 + $I_L1349_472, jfirst + $I_L1345_498, 0)
 1352.                               s = 0.0
 1353.                               $I_L1353_430 = 0
 1353. !dir$ unroll 4
 1353.                               do
 1354.                                  s = s + (fgpass_scalars%base_addr)(ib, 1 + $I_L1353_430, jb, 1 + $I_L1344_486, adr_scalars, 0) * (del%base_addr)(1 + $I_L1353_430, 0)
 1355.                                  $I_L1353_430 = 1 + $I_L1353_430
 1353.                                  if ( $I_L1353_430 >= kmax ) exit
 1353.                               enddo
 1357.                               (fg%base_addr)(ib, 1 + $I_L1344_486, jb, 0) = s * (fgpsp%base_addr)(ib, jb, 0)
 1361.                               $I_L1349_472 = 1 + $I_L1349_472
 1360.                               if ( $I_L1349_472 >= $SCA_mylastlon_I83 + -$SCA_myfirstlon_I82 + 1 ) exit
 1360.                            enddo
 1361.                            i = 1 + $SCA_mylastlon_I83
 1363.                            $I_L1344_486 = 1 + $I_L1344_486
 1361.                            if ( $I_L1344_486 >= nscalars ) exit
 1361.                         enddo
 1361.                      else
 1344.                         $I_L1344_458 = 0
 1344. !dir$ ivdep
 1344.                         do
 1349.                            i = $SCA_myfirstlon_I82
 1363.                            $I_L1344_458 = 1 + $I_L1344_458
 1361.                            if ( $I_L1344_458 >= nscalars ) exit
 1361.                         enddo
 1361.                      endif
 1362.                      $I_L1345_498 = 1 + $I_L1345_498
 1362.                      if ( $I_L1345_498 >= jlast + -jfirst + 1 ) exit
 1362.                   enddo
 1362.                   j = 1 + jlast
 1362.                else
 1354.                   $SC_del_I131 = del%dim_1%EX
 1354.                   $SC_del_I132 = del%dim_1%LB
 1354.                   $SC_fgpass_scalars_I133 = fgpass_scalars%dim_1%EX
 1354.                   $SC_fgpass_scalars_I134 = fgpass_scalars%dim_1%LB
 1354.                   $SC_fgpass_scalars_I136 = fgpass_scalars%dim_2%SM
 1354.                   $SC_fgpass_scalars_I135 = fgpass_scalars%dim_2%EX
 1354.                   $SC_fgpass_scalars_I137 = fgpass_scalars%dim_2%LB
 1354.                   $SC_fgpass_scalars_I139 = fgpass_scalars%dim_3%SM
 1354.                   $SC_fgpass_scalars_I138 = fgpass_scalars%dim_3%EX
 1354.                   $SC_fgpass_scalars_I140 = fgpass_scalars%dim_3%LB
 1354.                   $SC_fgpass_scalars_I142 = fgpass_scalars%dim_4%SM
 1354.                   $SC_fgpass_scalars_I141 = fgpass_scalars%dim_4%EX
 1354.                   $SC_fgpass_scalars_I143 = fgpass_scalars%dim_4%LB
 1354.                   $SC_fgpass_scalars_I145 = fgpass_scalars%dim_5%SM
 1354.                   $SC_fgpass_scalars_I144 = fgpass_scalars%dim_5%EX
 1354.                   $SC_fgpass_scalars_I146 = fgpass_scalars%dim_5%LB
 1351.                   $SC_jbperij_I126 = jbperij%dim_1%EX
 1351.                   $SC_jbperij_I127 = jbperij%dim_1%LB
 1351.                   $SC_jbperij_I129 = jbperij%dim_2%SM
 1351.                   $SC_jbperij_I128 = jbperij%dim_2%EX
 1351.                   $SC_jbperij_I130 = jbperij%dim_2%LB
 1350.                   $SC_ibperij_I121 = ibperij%dim_1%EX
 1350.                   $SC_ibperij_I122 = ibperij%dim_1%LB
 1350.                   $SC_ibperij_I124 = ibperij%dim_2%SM
 1350.                   $SC_ibperij_I123 = ibperij%dim_2%EX
 1350.                   $SC_ibperij_I125 = ibperij%dim_2%LB
 1344.                   $SC_mylastlon_I119 = mylastlon%dim_1%EX
 1344.                   $SC_mylastlon_I120 = mylastlon%dim_1%LB
 1344.                   $SC_myfirstlon_I117 = myfirstlon%dim_1%EX
 1344.                   $SC_myfirstlon_I118 = myfirstlon%dim_1%LB
 1359.                   $SC_fgps_I155 = fgps%dim_1%EX
 1359.                   $SC_fgps_I156 = fgps%dim_1%LB
 1359.                   $SC_fgps_I158 = fgps%dim_2%SM
 1359.                   $SC_fgps_I157 = fgps%dim_2%EX
 1359.                   $SC_fgps_I159 = fgps%dim_2%LB
 1359.                   $SC_fg_I153 = fg%dim_3%SM
 1359.                   $SC_fg_I152 = fg%dim_3%EX
 1359.                   $SC_fg_I154 = fg%dim_3%LB
 1359.                   $SC_fg_I150 = fg%dim_2%SM
 1359.                   $SC_fg_I149 = fg%dim_2%EX
 1359.                   $SC_fg_I151 = fg%dim_2%LB
 1359.                   $SC_fg_I147 = fg%dim_1%EX
 1359.                   $SC_fg_I148 = fg%dim_1%LB
 1345.                   $I_L1345_502 = 0
 1345. !dir$ loop_info (automatic) cache_nt( mylastlon, myfirstlon )
 1345.                   do
 1344.                      $SCA_myfirstlon_I84 = (myfirstlon%base_addr)(jfirst + $I_L1345_502, 0)
 1344.                      $SCA_mylastlon_I85 = (mylastlon%base_addr)(jfirst + $I_L1345_502, 0)
 1349.                      if ( $SCA_mylastlon_I85 + -$SCA_myfirstlon_I84 >= 0 ) then
 1344.                         $I_L1344_494 = 0
 1344.                         do
 1349.                            $I_L1349_480 = 0
 1349. !dir$ ivdep
 1349.                            do
 1350.                               ib = (ibperij%base_addr)($SCA_myfirstlon_I84 + $I_L1349_480, jfirst + $I_L1345_502, 0)
 1351.                               jb = (jbperij%base_addr)($SCA_myfirstlon_I84 + $I_L1349_480, jfirst + $I_L1345_502, 0)
 1352.                               s = 0.0
 1353.                               $I_L1353_444 = 0
 1353. !dir$ unroll 4
 1353.                               do
 1354.                                  s = s + (fgpass_scalars%base_addr)(ib, 1 + $I_L1353_444, jb, 1 + $I_L1344_494, adr_scalars, 0) * (del%base_addr)(1 + $I_L1353_444, 0)
 1355.                                  $I_L1353_444 = 1 + $I_L1353_444
 1353.                                  if ( $I_L1353_444 >= kmax ) exit
 1353.                               enddo
 1359.                               (fg%base_addr)(ib, 1 + $I_L1344_494, jb, 0) = s * (fgps%base_addr)(ib, jb, 0)
 1361.                               $I_L1349_480 = 1 + $I_L1349_480
 1360.                               if ( $I_L1349_480 >= $SCA_mylastlon_I85 + -$SCA_myfirstlon_I84 + 1 ) exit
 1360.                            enddo
 1361.                            i = 1 + $SCA_mylastlon_I85
 1363.                            $I_L1344_494 = 1 + $I_L1344_494
 1361.                            if ( $I_L1344_494 >= nscalars ) exit
 1361.                         enddo
 1361.                      else
 1344.                         $I_L1344_464 = 0
 1344. !dir$ ivdep
 1344.                         do
 1349.                            i = $SCA_myfirstlon_I84
 1363.                            $I_L1344_464 = 1 + $I_L1344_464
 1361.                            if ( $I_L1344_464 >= nscalars ) exit
 1361.                         enddo
 1361.                      endif
 1362.                      $I_L1345_502 = 1 + $I_L1345_502
 1362.                      if ( $I_L1345_502 >= jlast + -jfirst + 1 ) exit
 1362.                   enddo
 1362.                   j = 1 + jlast
 1362.                endif
 1362.             else if ( init_globconserv == 0 ) then
 1351.                $SC_jbperij_I126 = jbperij%dim_1%EX
 1351.                $SC_jbperij_I127 = jbperij%dim_1%LB
 1351.                $SC_jbperij_I129 = jbperij%dim_2%SM
 1351.                $SC_jbperij_I128 = jbperij%dim_2%EX
 1351.                $SC_jbperij_I130 = jbperij%dim_2%LB
 1350.                $SC_ibperij_I121 = ibperij%dim_1%EX
 1350.                $SC_ibperij_I122 = ibperij%dim_1%LB
 1350.                $SC_ibperij_I124 = ibperij%dim_2%SM
 1350.                $SC_ibperij_I123 = ibperij%dim_2%EX
 1350.                $SC_ibperij_I125 = ibperij%dim_2%LB
 1344.                $SC_mylastlon_I119 = mylastlon%dim_1%EX
 1344.                $SC_mylastlon_I120 = mylastlon%dim_1%LB
 1344.                $SC_myfirstlon_I117 = myfirstlon%dim_1%EX
 1344.                $SC_myfirstlon_I118 = myfirstlon%dim_1%LB
 1357.                $SC_fg_I153 = fg%dim_3%SM
 1357.                $SC_fg_I152 = fg%dim_3%EX
 1357.                $SC_fg_I154 = fg%dim_3%LB
 1357.                $SC_fg_I150 = fg%dim_2%SM
 1357.                $SC_fg_I149 = fg%dim_2%EX
 1357.                $SC_fg_I151 = fg%dim_2%LB
 1357.                $SC_fg_I147 = fg%dim_1%EX
 1357.                $SC_fg_I148 = fg%dim_1%LB
 1345.                $I_L1345_492 = 0
 1345.                do
 1344.                   $SCA_myfirstlon_I86 = (myfirstlon%base_addr)(jfirst + $I_L1345_492, 0)
 1344.                   $SCA_mylastlon_I87 = (mylastlon%base_addr)(jfirst + $I_L1345_492, 0)
 1349.                   if ( $SCA_mylastlon_I87 + -$SCA_myfirstlon_I86 >= 0 ) then
 1344.                      $I_L1344_478 = 0
 1344. !dir$ ivdep
 1344.                      do
 1349.                         $I_L1349_442 = 0
 1349.                         do
 1350.                            ib = (ibperij%base_addr)($SCA_myfirstlon_I86 + $I_L1349_442, jfirst + $I_L1345_492, 0)
 1351.                            jb = (jbperij%base_addr)($SCA_myfirstlon_I86 + $I_L1349_442, jfirst + $I_L1345_492, 0)
 1357.                            (fg%base_addr)(ib, 1 + $I_L1344_478, jb, 0) = 0.0
 1361.                            $I_L1349_442 = 1 + $I_L1349_442
 1360.                            if ( $I_L1349_442 >= $SCA_mylastlon_I87 + -$SCA_myfirstlon_I86 + 1 ) exit
 1360.                         enddo
 1361.                         i = 1 + $SCA_mylastlon_I87
 1363.                         $I_L1344_478 = 1 + $I_L1344_478
 1361.                         if ( $I_L1344_478 >= nscalars ) exit
 1361.                      enddo
 1361.                   else
 1344.                      $I_L1344_462 = 0
 1344. !dir$ ivdep
 1344.                      do
 1349.                         i = $SCA_myfirstlon_I86
 1363.                         $I_L1344_462 = 1 + $I_L1344_462
 1361.                         if ( $I_L1344_462 >= nscalars ) exit
 1361.                      enddo
 1361.                   endif
 1362.                   $I_L1345_492 = 1 + $I_L1345_492
 1362.                   if ( $I_L1345_492 >= jlast + -jfirst + 1 ) exit
 1362.                enddo
 1362.                j = 1 + jlast
 1362.             else
 1351.                $SC_jbperij_I126 = jbperij%dim_1%EX
 1351.                $SC_jbperij_I127 = jbperij%dim_1%LB
 1351.                $SC_jbperij_I129 = jbperij%dim_2%SM
 1351.                $SC_jbperij_I128 = jbperij%dim_2%EX
 1351.                $SC_jbperij_I130 = jbperij%dim_2%LB
 1350.                $SC_ibperij_I121 = ibperij%dim_1%EX
 1350.                $SC_ibperij_I122 = ibperij%dim_1%LB
 1350.                $SC_ibperij_I124 = ibperij%dim_2%SM
 1350.                $SC_ibperij_I123 = ibperij%dim_2%EX
 1350.                $SC_ibperij_I125 = ibperij%dim_2%LB
 1344.                $SC_mylastlon_I119 = mylastlon%dim_1%EX
 1344.                $SC_mylastlon_I120 = mylastlon%dim_1%LB
 1344.                $SC_myfirstlon_I117 = myfirstlon%dim_1%EX
 1344.                $SC_myfirstlon_I118 = myfirstlon%dim_1%LB
 1359.                $SC_fg_I153 = fg%dim_3%SM
 1359.                $SC_fg_I152 = fg%dim_3%EX
 1359.                $SC_fg_I154 = fg%dim_3%LB
 1359.                $SC_fg_I150 = fg%dim_2%SM
 1359.                $SC_fg_I149 = fg%dim_2%EX
 1359.                $SC_fg_I151 = fg%dim_2%LB
 1359.                $SC_fg_I147 = fg%dim_1%EX
 1359.                $SC_fg_I148 = fg%dim_1%LB
 1345.                $I_L1345_496 = 0
 1345.                do
 1344.                   $SCA_myfirstlon_I88 = (myfirstlon%base_addr)(jfirst + $I_L1345_496, 0)
 1344.                   $SCA_mylastlon_I89 = (mylastlon%base_addr)(jfirst + $I_L1345_496, 0)
 1349.                   if ( $SCA_mylastlon_I89 + -$SCA_myfirstlon_I88 >= 0 ) then
 1344.                      $I_L1344_482 = 0
 1344. !dir$ ivdep
 1344.                      do
 1349.                         $I_L1349_446 = 0
 1349.                         do
 1350.                            ib = (ibperij%base_addr)($SCA_myfirstlon_I88 + $I_L1349_446, jfirst + $I_L1345_496, 0)
 1351.                            jb = (jbperij%base_addr)($SCA_myfirstlon_I88 + $I_L1349_446, jfirst + $I_L1345_496, 0)
 1359.                            (fg%base_addr)(ib, 1 + $I_L1344_482, jb, 0) = 0.0
 1361.                            $I_L1349_446 = 1 + $I_L1349_446
 1360.                            if ( $I_L1349_446 >= $SCA_mylastlon_I89 + -$SCA_myfirstlon_I88 + 1 ) exit
 1360.                         enddo
 1361.                         i = 1 + $SCA_mylastlon_I89
 1363.                         $I_L1344_482 = 1 + $I_L1344_482
 1361.                         if ( $I_L1344_482 >= nscalars ) exit
 1361.                      enddo
 1361.                   else
 1344.                      $I_L1344_466 = 0
 1344. !dir$ ivdep
 1344.                      do
 1349.                         i = $SCA_myfirstlon_I88
 1363.                         $I_L1344_466 = 1 + $I_L1344_466
 1361.                         if ( $I_L1344_466 >= nscalars ) exit
 1361.                      enddo
 1361.                   endif
 1362.                   $I_L1345_496 = 1 + $I_L1345_496
 1362.                   if ( $I_L1345_496 >= jlast + -jfirst + 1 ) exit
 1362.                enddo
 1362.                j = 1 + jlast
 1362.             endif
 1362.          endif
 1364.          _mt_barrier( 5, _mt_rw_list(...) )
 1365.          $snt_T2 = _mt_single( 6, _mt_rw_list(...) )
 1367.          call collect_gauss( (fg%base_addr)(fg%dim_1%LB, fg%dim_2%LB, fg%dim_3%LB, 0), (fgs%base_addr)(fgs%dim_1%LB, fgs%dim_2%LB, fgs%dim_3%LB, 0), nscalars )
 1368.          $snt_T2 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T2 )
 1369.          ns = 1
 1369.          if ( nscalars > 0 ) then
 1370.             if ( jlast_d + -jfirst_d >= 0 ) then
 1376.                $SC_fconsrv_I168 = fconsrv%dim_1%EX
 1376.                $SC_fconsrv_I169 = fconsrv%dim_1%LB
 1376.                $SC_fconsrv_I171 = fconsrv%dim_2%SM
 1376.                $SC_fconsrv_I170 = fconsrv%dim_2%EX
 1376.                $SC_fconsrv_I172 = fconsrv%dim_2%LB
 1369.                $SC_cel_area_I102 = cel_area%dim_1%EX
 1369.                $SC_cel_area_I103 = cel_area%dim_1%LB
 1369.                $SC_imaxperj_I95 = imaxperj%dim_1%EX
 1369.                $SC_imaxperj_I96 = imaxperj%dim_1%LB
 1374.                $SC_fgs_I166 = fgs%dim_3%SM
 1374.                $SC_fgs_I165 = fgs%dim_3%EX
 1374.                $SC_fgs_I167 = fgs%dim_3%LB
 1374.                $SC_fgs_I163 = fgs%dim_2%SM
 1374.                $SC_fgs_I162 = fgs%dim_2%EX
 1374.                $SC_fgs_I164 = fgs%dim_2%LB
 1374.                $SC_fgs_I160 = fgs%dim_1%EX
 1374.                $SC_fgs_I161 = fgs%dim_1%LB
 1370.                $I_L1370_488 = 0
 1370.                do
 1369.                   $SCA_imaxperj_I90 = (imaxperj%base_addr)(jfirst_d + $I_L1370_488, 0)
 1369.                   $SCA_cel_area_I91 = (cel_area%base_addr)(jfirst_d + $I_L1370_488, 0)
 1373.                   if ( $SCA_imaxperj_I90 > 0 ) then
 1369.                      $I_L1369_474 = 0
 1369. !dir$ ivdep
 1369.                      do
 1371.                         s = 0.0
 1373.                         $I_L1373_432 = 0
 1373. !dir$ unroll 4
 1373.                         do
 1374.                            s = s + (fgs%base_addr)(1 + $I_L1373_432, jfirst_d + $I_L1370_488 + -myfirstlat_diag + 1, 1 + $I_L1369_474, 0)
 1375.                            $I_L1373_432 = 1 + $I_L1373_432
 1373.                            if ( $I_L1373_432 >= $SCA_imaxperj_I90 ) exit
 1373.                         enddo
 1375.                         i = ( 1 + $SCA_imaxperj_I90 )
 1376.                         (fconsrv%base_addr)(1 + $I_L1369_474, jfirst_d + $I_L1370_488, 0) = s * $SCA_cel_area_I91
 1378.                         $I_L1369_474 = 1 + $I_L1369_474
 1375.                         if ( $I_L1369_474 >= nscalars ) exit
 1375.                      enddo
 1375.                   else
 1369.                      $I_L1369_460 = 0
 1369. !dir$ ivdep
 1369.                      do
 1373.                         i = 1
 1376.                         (fconsrv%base_addr)(1 + $I_L1369_460, jfirst_d + $I_L1370_488, 0) = 0.0
 1378.                         $I_L1369_460 = 1 + $I_L1369_460
 1375.                         if ( $I_L1369_460 >= nscalars ) exit
 1375.                      enddo
 1375.                   endif
 1377.                   $I_L1370_488 = 1 + $I_L1370_488
 1377.                   if ( $I_L1370_488 >= jlast_d + -jfirst_d + 1 ) exit
 1377.                enddo
 1377.                j = 1 + jlast_d
 1377.             else
 1370.                j = jfirst_d
 1370.             endif
 1378.             ns = ( 1 + nscalars )
 1378.          endif
 1379.          _mt_barrier( 7, _mt_rw_list(...) )
 1380.          $snt_T3 = _mt_single( 8, _mt_rw_list(...) )
 1382.          (displ%base_addr)(0, 0) = 0
 1383.          t$551 = -1 + maxnodes
 1383.          i = 1
 1383.          if ( -1 + maxnodes > 0 ) then
 1383.             t$552 = ( -1 + maxnodes )
 1383.             $displ_WR0_R1 = 0
 1384.             $SC_nlatsinproc_I106 = nlatsinproc_d%dim_1%EX
 1384.             $SC_nlatsinproc_I107 = nlatsinproc_d%dim_1%LB
 1384.             $SC_displ_I108 = displ%dim_1%EX
 1384.             $SC_displ_I109 = displ%dim_1%LB
 1383.             $I_L1383_434 = 0
 1383. !dir$ unroll 4
 1383.             do
 1384.                $displ_WR0_R1 = $displ_WR0_R1 + nscalars * (nlatsinproc_d%base_addr)($I_L1383_434, 0)
 1384.                (displ%base_addr)(1 + $I_L1383_434, 0) = $displ_WR0_R1
 1385.                $I_L1383_434 = 1 + $I_L1383_434
 1383.                if ( $I_L1383_434 >= -1 + maxnodes ) exit
 1383.             enddo
 1385.             t$553 = -1 + maxnodes
 1385.             i = maxnodes
 1385.          endif
 1387.          t$554 = myjmax_d * nscalars
 1388.          t$555 = ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) )
 1388.          t$556 = max( 0, ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) ) )
 1388.          t$558 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) ) ) ) ), 8 )
 1388.          $F_A33 = -1 + nlatsinproc_d%dim_1%EX + 1
 1388.          if ( -1 + nlatsinproc_d%dim_1%EX >= 0 ) then
 1388.             $SC_nlatsinproc_I106 = nlatsinproc_d%dim_1%EX
 1388.             $SC_nlatsinproc_I107 = nlatsinproc_d%dim_1%LB
 1388.             $I_L1388_448 = 0
 1388. !dir$ ivdep
 1388.             do
 1388.                t$557(1 + $I_L1388_448) = nscalars * (nlatsinproc_d%base_addr)($SC_nlatsinproc_I107 + $I_L1388_448, 0)
 1388.                $I_L1388_448 = 1 + $I_L1388_448
 1388.                if ( $I_L1388_448 >= $F_A33 ) exit
 1388.             enddo
 1388.          endif
 1386.          call mpi_allgatherv( (fconsrv%base_addr)(1, myfirstlat_diag, 0), t$554, 1275070495, (fconsrv%base_addr)(fconsrv%dim_1%LB, fconsrv%dim_2%LB, 0), t$557(1), (displ%base_addr)(displ%dim_1%LB, 0), 1275070495, 1140850688, ierr )
 1388.          _free( t$558 )
 1390.          t$559 = nscalars
 1390.          ns = 1
 1390.          if ( nscalars > 0 ) then
 1390.             t$560 = nscalars
 1392.             if ( jmax > 0 ) then
 1391.                $SC_totmas_I173 = totmas%dim_1%EX
 1391.                $SC_totmas_I174 = totmas%dim_1%LB
 1390.                $I_L1390_452 = 0
 1390. !dir$ ivdep
 1390.                do
 1391.                   (totmas%base_addr)(1 + $I_L1390_452, 0) = 0.0
 1395.                   $I_L1390_452 = 1 + $I_L1390_452
 1394.                   if ( $I_L1390_452 >= nscalars ) exit
 1394.                enddo
 1393.                $SC_totmas_I173 = totmas%dim_1%EX
 1393.                $SC_totmas_I174 = totmas%dim_1%LB
 1393.                $SC_fconsrv_I168 = fconsrv%dim_1%EX
 1393.                $SC_fconsrv_I169 = fconsrv%dim_1%LB
 1393.                $SC_fconsrv_I171 = fconsrv%dim_2%SM
 1393.                $SC_fconsrv_I170 = fconsrv%dim_2%EX
 1393.                $SC_fconsrv_I172 = fconsrv%dim_2%LB
 1392.                $I_L1392_484 = 0
 1392. !dir$ blocking_size( 0, 0 )
 1392.                do
 1390.                   $I_L1390_454 = 0
 1390. !dir$ ivdep
 1390. !dir$ blocking_size( 0, 0 )
 1390.                   do
 1393.                      (totmas%base_addr)(1 + $I_L1390_454, 0) = (totmas%base_addr)(1 + $I_L1390_454, 0) + (fconsrv%base_addr)(1 + $I_L1390_454, 1 + $I_L1392_484, 0)
 1395.                      $I_L1390_454 = 1 + $I_L1390_454
 1392.                      if ( $I_L1390_454 >= nscalars ) exit
 1392.                   enddo
 1394.                   $I_L1392_484 = 1 + $I_L1392_484
 1394.                   if ( $I_L1392_484 >= jmax ) exit
 1394.                enddo
 1392.                t$562 = jmax
 1392.                t$563 = jmax
 1394.                t$564 = jmax
 1394.                j = ( 1 + jmax )
 1394.             else
 1391.                $SC_totmas_I173 = totmas%dim_1%EX
 1391.                $SC_totmas_I174 = totmas%dim_1%LB
 1390.                $I_L1390_438 = 0
 1390. !dir$ ivdep
 1390. !dir$ loop_info (automatic) cache_nt( totmas )
 1390.                do
 1391.                   (totmas%base_addr)(1 + $I_L1390_438, 0) = 0.0
 1395.                   $I_L1390_438 = 1 + $I_L1390_438
 1394.                   if ( $I_L1390_438 >= nscalars ) exit
 1394.                enddo
 1392.                t$562 = jmax
 1392.                j = 1
 1392.             endif
 1395.             t$561 = nscalars
 1395.             ns = ( 1 + nscalars )
 1395.          endif
 1396.          $snt_T3 = _mt_endsingle( 8, _mt_rw_list(...), $snt_T3 )
 1397.          if ( init_globconserv ) then
 1412.             $snt_T5 = _mt_single( 10, _mt_rw_list(...) )
 1413.             t$575 = nscalars
 1413.             ns = 1
 1413.             if ( nscalars > 0 ) then
 1413.                t$576 = nscalars
 1414.                $SC_totmas_I173 = totmas%dim_1%EX
 1414.                $SC_totmas_I174 = totmas%dim_1%LB
 1414.                $SC_total_mass_I175 = total_mass%dim_1%EX
 1414.                $SC_total_mass_I176 = total_mass%dim_1%LB
 1413.                $I_L1413_436 = 0
 1413. !dir$ ivdep
 1413.                do
 1414.                   (total_mass%base_addr)(1 + $I_L1413_436, 0) = (totmas%base_addr)(1 + $I_L1413_436, 0)
 1415.                   $I_L1413_436 = 1 + $I_L1413_436
 1413.                   if ( $I_L1413_436 >= nscalars ) exit
 1413.                enddo
 1415.                t$577 = nscalars
 1415.                ns = ( 1 + nscalars )
 1415.             endif
 1416.             $snt_T5 = _mt_endsingle( 10, _mt_rw_list(...), $snt_T5 )
 1398.          else if ( nscalars > 0 ) then
 1403.             if ( jblast + -jbfirst < 0 ) then
 1399.                $SC_totmas_I173 = totmas%dim_1%EX
 1399.                $SC_totmas_I174 = totmas%dim_1%LB
 1401.                $SC_total_mass_I175 = total_mass%dim_1%EX
 1401.                $SC_total_mass_I176 = total_mass%dim_1%LB
 1398.                $I_L1398_440 = 0
 1398. !dir$ ivdep
 1398.                do
 1399.                   if ( (totmas%base_addr)(1 + $I_L1398_440, 0) /= 0.0 ) then
 1400.                      $snt_T4 = _mt_single( 11, _mt_rw_list(...) )
 1401.                      (totmas%base_addr)(1 + $I_L1398_440, 0) = ( (total_mass%base_addr)(1 + $I_L1398_440, 0) * 1.0/(totmas%base_addr)(1 + $I_L1398_440, 0) )
 1402.                      $snt_T4 = _mt_endsingle( 11, _mt_rw_list(...), $snt_T4 )
 1402.                   endif
 1410.                   $I_L1398_440 = 1 + $I_L1398_440
 1409.                   if ( $I_L1398_440 >= nscalars ) exit
 1409.                enddo
 1409.             else if ( fgpass_scalars%dim_2%EX > 0 ) then
 1399.                $SC_totmas_I173 = totmas%dim_1%EX
 1399.                $SC_totmas_I174 = totmas%dim_1%LB
 1405.                $SC_fgpass_scalars_I133 = fgpass_scalars%dim_1%EX
 1405.                $SC_fgpass_scalars_I134 = fgpass_scalars%dim_1%LB
 1405.                $SC_fgpass_scalars_I136 = fgpass_scalars%dim_2%SM
 1405.                $SC_fgpass_scalars_I135 = fgpass_scalars%dim_2%EX
 1405.                $SC_fgpass_scalars_I137 = fgpass_scalars%dim_2%LB
 1405.                $SC_fgpass_scalars_I139 = fgpass_scalars%dim_3%SM
 1405.                $SC_fgpass_scalars_I138 = fgpass_scalars%dim_3%EX
 1405.                $SC_fgpass_scalars_I140 = fgpass_scalars%dim_3%LB
 1405.                $SC_fgpass_scalars_I142 = fgpass_scalars%dim_4%SM
 1405.                $SC_fgpass_scalars_I141 = fgpass_scalars%dim_4%EX
 1405.                $SC_fgpass_scalars_I143 = fgpass_scalars%dim_4%LB
 1405.                $SC_fgpass_scalars_I145 = fgpass_scalars%dim_5%SM
 1405.                $SC_fgpass_scalars_I144 = fgpass_scalars%dim_5%EX
 1405.                $SC_fgpass_scalars_I146 = fgpass_scalars%dim_5%LB
 1404.                $SC_ibmaxperjb_I110 = ibmaxperjb%dim_1%EX
 1404.                $SC_ibmaxperjb_I111 = ibmaxperjb%dim_1%LB
 1401.                $SC_total_mass_I175 = total_mass%dim_1%EX
 1401.                $SC_total_mass_I176 = total_mass%dim_1%LB
 1398.                $I_L1398_500 = 0
 1398. !dir$ loop_info (automatic) cache_nt( total_mass )
 1398.                do
 1399.                   if ( (totmas%base_addr)(1 + $I_L1398_500, 0) /= 0.0 ) then
 1400.                      $snt_T4 = _mt_single( 9, _mt_rw_list(...) )
 1401.                      (totmas%base_addr)(1 + $I_L1398_500, 0) = ( (total_mass%base_addr)(1 + $I_L1398_500, 0) * 1.0/(totmas%base_addr)(1 + $I_L1398_500, 0) )
 1402.                      $snt_T4 = _mt_endsingle( 9, _mt_rw_list(...), $snt_T4 )
 1403.                      $I_L1403_490 = 0
 1403.                      do
 1404.                         $t_S18 = (ibmaxperjb%base_addr)(jbfirst + $I_L1403_490, 0)
 1404.                         if ( $t_S18 > 0 ) then
 1405.                            $SC_totmas_I177 = (totmas%base_addr)(1 + $I_L1398_500, 0)
 1404.                            $I_L1404_476 = 0
 1404.                            do
 1405.                               $F_A34 = $SC_fgpass_scalars_I135
 1405.                               $I_L1405_450 = 0
 1405. !dir$ ivdep
 1405.                               do
 1405.                                  (fgpass_scalars%base_addr)(1 + $I_L1404_476, $SC_fgpass_scalars_I137 + $I_L1405_450, jbfirst + $I_L1403_490, 1 + $I_L1398_500, ins, 0) = (fgpass_scalars%base_addr)(1 + $I_L1404_476, $SC_fgpass_scalars_I137 + $I_L1405_450, jbfirst + $I_L1403_490, 1 + $I_L1398_500, ins, 0) * $SC_totmas_I177
 1405.                                  $I_L1405_450 = 1 + $I_L1405_450
 1405.                                  if ( $I_L1405_450 >= $F_A34 ) exit
 1405.                               enddo
 1407.                               $I_L1404_476 = 1 + $I_L1404_476
 1404.                               if ( $I_L1404_476 >= $t_S18 ) exit
 1404.                            enddo
 1404.                         endif
 1408.                         $I_L1403_490 = 1 + $I_L1403_490
 1407.                         if ( $I_L1403_490 >= jblast + -jbfirst + 1 ) exit
 1407.                      enddo
 1407.                   endif
 1410.                   $I_L1398_500 = 1 + $I_L1398_500
 1409.                   if ( $I_L1398_500 >= nscalars ) exit
 1409.                enddo
 1409.             else
 1399.                $SC_totmas_I173 = totmas%dim_1%EX
 1399.                $SC_totmas_I174 = totmas%dim_1%LB
 1401.                $SC_total_mass_I175 = total_mass%dim_1%EX
 1401.                $SC_total_mass_I176 = total_mass%dim_1%LB
 1398.                $I_L1398_456 = 0
 1398.                do
 1399.                   if ( (totmas%base_addr)(1 + $I_L1398_456, 0) /= 0.0 ) then
 1400.                      $snt_T4 = _mt_single( 12, _mt_rw_list(...) )
 1401.                      (totmas%base_addr)(1 + $I_L1398_456, 0) = ( (total_mass%base_addr)(1 + $I_L1398_456, 0) * 1.0/(totmas%base_addr)(1 + $I_L1398_456, 0) )
 1402.                      $snt_T4 = _mt_endsingle( 12, _mt_rw_list(...), $snt_T4 )
 1402.                   endif
 1410.                   $I_L1398_456 = 1 + $I_L1398_456
 1409.                   if ( $I_L1398_456 >= nscalars ) exit
 1409.                enddo
 1409.             endif
 1409.          endif
 1409.       endif
 1419.       return
 1419.       end
 1419.       
 1445.       
 1445.       subroutine scalardiffusion( iblim, jb, deltat, kh, tov, tv, gq )
 1445.       t$42 = ibmax
 1445.       t$43 = kmax
 1457.       t$139 = _zla( 0, ibmax )
 1445.       t$140 = _zla( 0, ibmax )
 1457.       t$141 = _zla( 0, kmax )
 1445.       t$142 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1472.       t$145 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1472.       t$146 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1472.       t$148 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1472.       t$149 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1472.       t$151 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
 1475.       t$152 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
 1475.       t$154 = _zla( 0, ibmax ) * _zla( 0, kmax ) * 32
 1445.       t$143 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, kmax ) * 32 ), 8 )
 1472.       t$144 = t$143
 1472.       t$147 = t$143 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 8
 1472.       t$150 = t$143 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 16
 1475.       t$153 = t$143 + _zla( 0, ibmax ) * _zla( 0, kmax ) * 24
 1481.       $dt2_S3 = -deltat
 1484.       if ( kmax > 0 ) then
 1485.          if ( iblim > 0 ) then
 1484.             $I_L1484_183 = 0
 1484.             do
 1485.                $SCA_tov_I22 = tov(1 + $I_L1484_183)
 1485.                $I_L1485_162 = 0
 1485. !dir$ ivdep
 1485.                do
 1486.                   gt(1 + $I_L1485_162, 1 + $I_L1484_183) = ( ( tv(1 + $I_L1485_162, 1 + $I_L1484_183) + $SCA_tov_I22 ) * 1.0/( 1.0 + 6.0799999999999998e-1 * gq(1 + $I_L1485_162, 1 + $I_L1484_183) ) )
 1487.                   $I_L1485_162 = 1 + $I_L1485_162
 1485.                   if ( $I_L1485_162 >= iblim ) exit
 1485.                enddo
 1488.                $I_L1484_183 = 1 + $I_L1484_183
 1487.                if ( $I_L1484_183 >= kmax ) exit
 1487.             enddo
 1487.          endif
 1487.       endif
 1491.       if ( iblim > 0 ) then
 1491.          $I_L1491_164 = 0
 1491. !dir$ ivdep
 1491.          do
 1492.             b(1 + $I_L1491_164, 1) = 0.0
 1493.             $I_L1491_164 = 1 + $I_L1491_164
 1491.             if ( $I_L1491_164 >= iblim ) exit
 1491.          enddo
 1491.       endif
 1494.       if ( -2 + kmax >= 0 ) then
 1496.          if ( iblim > 0 ) then
 1494.             $I_L1494_185 = 0
 1494.             do
 1495.                $s2_S6 = ( (sl%base_addr)(2 + $I_L1494_185, 0) * $dt2_S3 * (si%base_addr)(2 + $I_L1494_185, 0) * 1.0/( (delcl%base_addr)(1 + $I_L1494_185, 0) * (del%base_addr)(2 + $I_L1494_185, 0) ) * 1.1655664792352676e-3 )
 1496.                $I_L1496_166 = 0
 1496. !dir$ ivdep
 1496.                do
 1497.                   b(1 + $I_L1496_166, 2 + $I_L1494_185) = ( ( $s2_S6 * kh(1 + $I_L1496_166, 1 + $I_L1494_185) * 1.0/( gt(1 + $I_L1496_166, 1 + $I_L1494_185) + gt(1 + $I_L1496_166, 2 + $I_L1494_185) ) * 2.0 ) * 1.0/gt(1 + $I_L1496_166, 2 + $I_L1494_185) )
 1498.                   $I_L1496_166 = 1 + $I_L1496_166
 1496.                   if ( $I_L1496_166 >= iblim ) exit
 1496.                enddo
 1499.                $I_L1494_185 = 1 + $I_L1494_185
 1498.                if ( $I_L1494_185 >= -1 + kmax ) exit
 1498.             enddo
 1502.             $I_L1502_187 = 0
 1502.             do
 1503.                $s1_S9 = ( (sl%base_addr)(1 + $I_L1502_187, 0) * $dt2_S3 * (si%base_addr)(2 + $I_L1502_187, 0) * 1.0/( (delcl%base_addr)(1 + $I_L1502_187, 0) * (del%base_addr)(1 + $I_L1502_187, 0) ) * 1.1655664792352676e-3 )
 1504.                $I_L1504_168 = 0
 1504. !dir$ ivdep
 1504.                do
 1505.                   c(1 + $I_L1504_168, 1 + $I_L1502_187) = ( ( $s1_S9 * kh(1 + $I_L1504_168, 1 + $I_L1502_187) * 1.0/( gt(1 + $I_L1504_168, 1 + $I_L1502_187) + gt(1 + $I_L1504_168, 2 + $I_L1502_187) ) * 2.0 ) * 1.0/gt(1 + $I_L1504_168, 1 + $I_L1502_187) )
 1506.                   $I_L1504_168 = 1 + $I_L1504_168
 1504.                   if ( $I_L1504_168 >= iblim ) exit
 1504.                enddo
 1507.                $I_L1502_187 = 1 + $I_L1502_187
 1506.                if ( $I_L1502_187 >= -1 + kmax ) exit
 1506.             enddo
 1506.          endif
 1506.       endif
 1508.       if ( iblim > 0 ) then
 1508.          $I_L1508_170 = 0
 1508. !dir$ ivdep
 1508.          do
 1509.             c(1 + $I_L1508_170, kmax) = 0.0
 1510.             $I_L1508_170 = 1 + $I_L1508_170
 1508.             if ( $I_L1508_170 >= iblim ) exit
 1508.          enddo
 1508.       endif
 1514.       if ( kmax > 0 ) then
 1515.          if ( iblim > 0 ) then
 1514.             $I_L1514_189 = 0
 1514.             do
 1515.                $I_L1515_172 = 0
 1515. !dir$ ivdep
 1515.                do
 1516.                   a(1 + $I_L1515_172, 1 + $I_L1514_189) = -c(1 + $I_L1515_172, 1 + $I_L1514_189) + -b(1 + $I_L1515_172, 1 + $I_L1514_189) + 1.0
 1517.                   $I_L1515_172 = 1 + $I_L1515_172
 1515.                   if ( $I_L1515_172 >= iblim ) exit
 1515.                enddo
 1518.                $I_L1514_189 = 1 + $I_L1514_189
 1517.                if ( $I_L1514_189 >= kmax ) exit
 1517.             enddo
 1517.          endif
 1517.       endif
 1526.       if ( -2 + kmax >= 0 ) then
 1526.          $I_L1526_201 = 0
 1526.          do
 1527.             if ( iblim > 0 ) then
 1527.                $I_L1527_179 = 0
 1527. !dir$ ivdep
 1527.                do
 1528.                   a(1 + $I_L1527_179, 2 + $I_L1526_201) = a(1 + $I_L1527_179, 2 + $I_L1526_201) + -( c(1 + $I_L1527_179, 1 + $I_L1526_201) * b(1 + $I_L1527_179, 2 + $I_L1526_201) * 1.0/a(1 + $I_L1527_179, 1 + $I_L1526_201) )
 1529.                   $I_L1527_179 = 1 + $I_L1527_179
 1527.                   if ( $I_L1527_179 >= iblim ) exit
 1527.                enddo
 1527.             endif
 1530.             if ( nscalars > 0 ) then
 1531.                if ( iblim > 0 ) then
 1530.                   $I_L1530_193 = 0
 1530. !dir$ blocking_size( 0, 0 )
 1530.                   do
 1531.                      $I_L1531_181 = 0
 1531. !dir$ ivdep
 1531. !dir$ blocking_size( 0, 0 )
 1531.                      do
 1532.                         (fgpass_scalars%base_addr)(1 + $I_L1531_181, 2 + $I_L1526_201, jb, 1 + $I_L1530_193, adr_scalars, 0) = (fgpass_scalars%base_addr)(1 + $I_L1531_181, 2 + $I_L1526_201, jb, 1 + $I_L1530_193, adr_scalars, 0) + -( (fgpass_scalars%base_addr)(1 + $I_L1531_181, 1 + $I_L1526_201, jb, 1 + $I_L1530_193, adr_scalars, 0) * b(1 + $I_L1531_181, 2 + $I_L1526_201) * 1.0/a(1 + $I_L1531_181, 1 + $I_L1526_201) )
 1534.                         $I_L1531_181 = 1 + $I_L1531_181
 1531.                         if ( $I_L1531_181 >= iblim ) exit
 1531.                      enddo
 1535.                      $I_L1530_193 = 1 + $I_L1530_193
 1534.                      if ( $I_L1530_193 >= nscalars ) exit
 1534.                   enddo
 1534.                endif
 1534.             endif
 1539.             $I_L1526_201 = 1 + $I_L1526_201
 1538.             if ( $I_L1526_201 >= -1 + kmax ) exit
 1538.          enddo
 1538.       endif
 1541.       if ( nscalars > 0 ) then
 1542.          if ( iblim > 0 ) then
 1541.             $I_L1541_191 = 0
 1541.             if ( nscalars >= 4 ) then
 1541.                $I_L1541_212 = 0
 1541. !dir$ blocking_size( 0, 0 )
 1541.                do
 1542.                   $I_L1542_174 = 0
 1542. !dir$ ivdep
 1542. !dir$ blocking_size( 0, 0 )
 1542.                   do
 1543.                      (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 1 + 4 * $I_L1541_212, adr_scalars, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 1 + 4 * $I_L1541_212, adr_scalars, 0) * 1.0/a(1 + $I_L1542_174, kmax) )
 1543.                      (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 2 + 4 * $I_L1541_212, adr_scalars, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 2 + 4 * $I_L1541_212, adr_scalars, 0) * 1.0/a(1 + $I_L1542_174, kmax) )
 1543.                      (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 3 + 4 * $I_L1541_212, adr_scalars, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 3 + 4 * $I_L1541_212, adr_scalars, 0) * 1.0/a(1 + $I_L1542_174, kmax) )
 1543.                      (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 4 + 4 * $I_L1541_212, adr_scalars, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, 4 + 4 * $I_L1541_212, adr_scalars, 0) * 1.0/a(1 + $I_L1542_174, kmax) )
 1545.                      $I_L1542_174 = 1 + $I_L1542_174
 1542.                      if ( $I_L1542_174 >= iblim ) exit
 1542.                   enddo
 1546.                   $I_L1541_212 = 1 + $I_L1541_212
 1545.                   if ( $I_L1541_212 >= _rsh( nscalars, 2 ) ) exit
 1545.                enddo
 1546.                $I_L1541_191 = and( 0xfffffffffffffffcUL, nscalars )
 1546.             endif
 1541.             if ( $I_L1541_191 < nscalars ) then
 1541.                $I_L1541_209 = 0
 1541. !dir$ blocking_size( 0, 0 )
 1541.                do
 1542.                   $I_L1542_174 = 0
 1542. !dir$ ivdep
 1542. !dir$ blocking_size( 0, 0 )
 1542.                   do
 1543.                      (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, $I_L1541_191 + $I_L1541_209 + 1, adr_scalars, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1542_174, kmax, jb, $I_L1541_191 + $I_L1541_209 + 1, adr_scalars, 0) * 1.0/a(1 + $I_L1542_174, kmax) )
 1545.                      $I_L1542_174 = 1 + $I_L1542_174
 1542.                      if ( $I_L1542_174 >= iblim ) exit
 1542.                   enddo
 1546.                   $I_L1541_209 = 1 + $I_L1541_209
 1545.                   if ( $I_L1541_209 >= nscalars + -$I_L1541_191 ) exit
 1545.                enddo
 1545.             endif
 1545.          endif
 1545.       endif
 1548.       if ( 1 + -kmax < 0 ) then
 1549.          if ( nscalars > 0 ) then
 1550.             if ( iblim > 0 ) then
 1549.                $I_L1549_207 = 0
 1549.                do
 1548.                   $I_L1548_205 = 0
 1548.                   do
 1550.                      $I_L1550_203 = 0
 1550.                      do
 1549.                         $I_L1549_198 = 0
 1549. !dir$ shortloop16
 1549. !dir$ blocking_size( 4, 4 )
 1549.                         do
 1548.                            $I_L1548_195 = 0
 1548.                            if ( min( -1 + kmax, 4 + 4 * $I_L1548_205 ) + -4 * $I_L1548_205 >= 2 ) then
 1548.                               $I_L1548_214 = 0
 1548. !dir$ shortloop16
 1548. !dir$ blocking_size( 4, 4 )
 1548.                               do
 1550.                                  $I_L1550_176 = 0
 1550. !dir$ ivdep
 1550. !dir$ blocking_size( 256, 256 )
 1550.                                  do
 1551.                                     (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -1, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) = ( ( (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -1, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) + -( c($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -1) * (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) ) ) * 1.0/a($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -1) )
 1551.                                     (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -2, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) = ( ( (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -2, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) + -( c($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -2) * (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -1, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) ) ) * 1.0/a($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -4 * $I_L1548_205 + -2 * $I_L1548_214 + -2) )
 1550.                                     $I_L1550_176 = 1 + $I_L1550_176
 1550.                                     if ( $I_L1550_176 >= min( iblim, 256 + 256 * $I_L1550_203 ) + -256 * $I_L1550_203 ) exit
 1550.                                  enddo
 1548.                                  $I_L1548_214 = 1 + $I_L1548_214
 1548.                                  if ( $I_L1548_214 >= _rsh( min( -1 + kmax, 4 + 4 * $I_L1548_205 ) + -4 * $I_L1548_205, 1 ) ) exit
 1548.                               enddo
 1548.                               $I_L1548_195 = and( 0xfffffffffffffffeUL, min( -1 + kmax, 4 + 4 * $I_L1548_205 ) + -4 * $I_L1548_205 )
 1548.                            endif
 1548.                            if ( $I_L1548_195 < min( -1 + kmax, 4 + 4 * $I_L1548_205 ) + -4 * $I_L1548_205 ) then
 1550.                               $I_L1550_176 = 0
 1550. !dir$ ivdep
 1550. !dir$ blocking_size( 256, 256 )
 1550.                               do
 1551.                                  (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -$I_L1548_195 + -4 * $I_L1548_205 + -1, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) = ( ( (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -$I_L1548_195 + -4 * $I_L1548_205 + -1, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) + -( c($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -$I_L1548_195 + -4 * $I_L1548_205 + -1) * (fgpass_scalars%base_addr)($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -$I_L1548_195 + -4 * $I_L1548_205, jb, $I_L1549_198 + 4 * $I_L1549_207 + 1, adr_scalars, 0) ) ) * 1.0/a($I_L1550_176 + 256 * $I_L1550_203 + 1, kmax + -$I_L1548_195 + -4 * $I_L1548_205 + -1) )
 1550.                                  $I_L1550_176 = 1 + $I_L1550_176
 1550.                                  if ( $I_L1550_176 >= min( iblim, 256 + 256 * $I_L1550_203 ) + -256 * $I_L1550_203 ) exit
 1550.                               enddo
 1550.                            endif
 1549.                            $I_L1549_198 = 1 + $I_L1549_198
 1553.                            if ( $I_L1549_198 >= min( nscalars, 4 + 4 * $I_L1549_207 ) + -4 * $I_L1549_207 ) exit
 1553.                         enddo
 1550.                         $I_L1550_203 = 1 + $I_L1550_203
 1550.                         if ( $I_L1550_203 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1550.                      enddo
 1548.                      $I_L1548_205 = 1 + $I_L1548_205
 1554.                      if ( $I_L1548_205 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 2 ) ) ) exit
 1554.                   enddo
 1549.                   $I_L1549_207 = 1 + $I_L1549_207
 1549.                   if ( $I_L1549_207 >= 1 + max( 0, -1 + _rsh( 3 + nscalars, 2 ) ) ) exit
 1549.                enddo
 1549.             endif
 1549.          endif
 1549.       endif
 1445.       _free( t$143 )
 1557.       return
 1557.       end
 1557.       
 1621.       
 1621.       subroutine updateconserv( jfirst, jlast, jbfirst, jblast, jfirst_d, jlast_d )
 1576.       if ( nscalars > 0 ) then
 1577.          if ( jlast + -jfirst < 0 ) then
 1577.             j = jfirst
 1577.          else if ( kmax > 0 ) then
 1585.             $SC_fgpsp_I104 = fgpsp%dim_1%EX
 1585.             $SC_fgpsp_I105 = fgpsp%dim_1%LB
 1585.             $SC_fgpsp_I107 = fgpsp%dim_2%SM
 1585.             $SC_fgpsp_I106 = fgpsp%dim_2%EX
 1585.             $SC_fgpsp_I108 = fgpsp%dim_2%LB
 1585.             $SC_fg_I109 = fg%dim_1%EX
 1585.             $SC_fg_I110 = fg%dim_1%LB
 1585.             $SC_fg_I112 = fg%dim_2%SM
 1585.             $SC_fg_I111 = fg%dim_2%EX
 1585.             $SC_fg_I113 = fg%dim_2%LB
 1585.             $SC_fg_I115 = fg%dim_3%SM
 1585.             $SC_fg_I114 = fg%dim_3%EX
 1585.             $SC_fg_I116 = fg%dim_3%LB
 1583.             $SC_del_I88 = del%dim_1%EX
 1583.             $SC_del_I89 = del%dim_1%LB
 1583.             $SC_fgpass_scalars_I90 = fgpass_scalars%dim_1%EX
 1583.             $SC_fgpass_scalars_I91 = fgpass_scalars%dim_1%LB
 1583.             $SC_fgpass_scalars_I93 = fgpass_scalars%dim_2%SM
 1583.             $SC_fgpass_scalars_I92 = fgpass_scalars%dim_2%EX
 1583.             $SC_fgpass_scalars_I94 = fgpass_scalars%dim_2%LB
 1583.             $SC_fgpass_scalars_I96 = fgpass_scalars%dim_3%SM
 1583.             $SC_fgpass_scalars_I95 = fgpass_scalars%dim_3%EX
 1583.             $SC_fgpass_scalars_I97 = fgpass_scalars%dim_3%LB
 1583.             $SC_fgpass_scalars_I99 = fgpass_scalars%dim_4%SM
 1583.             $SC_fgpass_scalars_I98 = fgpass_scalars%dim_4%EX
 1583.             $SC_fgpass_scalars_I100 = fgpass_scalars%dim_4%LB
 1583.             $SC_fgpass_scalars_I102 = fgpass_scalars%dim_5%SM
 1583.             $SC_fgpass_scalars_I101 = fgpass_scalars%dim_5%EX
 1583.             $SC_fgpass_scalars_I103 = fgpass_scalars%dim_5%LB
 1580.             $SC_jbperij_I83 = jbperij%dim_1%EX
 1580.             $SC_jbperij_I84 = jbperij%dim_1%LB
 1580.             $SC_jbperij_I86 = jbperij%dim_2%SM
 1580.             $SC_jbperij_I85 = jbperij%dim_2%EX
 1580.             $SC_jbperij_I87 = jbperij%dim_2%LB
 1579.             $SC_ibperij_I78 = ibperij%dim_1%EX
 1579.             $SC_ibperij_I79 = ibperij%dim_1%LB
 1579.             $SC_ibperij_I81 = ibperij%dim_2%SM
 1579.             $SC_ibperij_I80 = ibperij%dim_2%EX
 1579.             $SC_ibperij_I82 = ibperij%dim_2%LB
 1576.             $SC_mylastlon_I76 = mylastlon%dim_1%EX
 1576.             $SC_mylastlon_I77 = mylastlon%dim_1%LB
 1576.             $SC_myfirstlon_I74 = myfirstlon%dim_1%EX
 1576.             $SC_myfirstlon_I75 = myfirstlon%dim_1%LB
 1577.             $I_L1577_212 = 0
 1577. !dir$ loop_info (automatic) cache_nt( mylastlon, myfirstlon )
 1577.             do
 1576.                $SCA_myfirstlon_I66 = (myfirstlon%base_addr)(jfirst + $I_L1577_212, 0)
 1576.                $SCA_mylastlon_I67 = (mylastlon%base_addr)(jfirst + $I_L1577_212, 0)
 1576.                $I_L1576_206 = 0
 1576.                do
 1578.                   i = $SCA_myfirstlon_I66
 1578.                   if ( $SCA_mylastlon_I67 + -$SCA_myfirstlon_I66 >= 0 ) then
 1578.                      $I_L1578_198 = 0
 1578. !dir$ ivdep
 1578.                      do
 1579.                         ib = (ibperij%base_addr)($SCA_myfirstlon_I66 + $I_L1578_198, jfirst + $I_L1577_212, 0)
 1580.                         jb = (jbperij%base_addr)($SCA_myfirstlon_I66 + $I_L1578_198, jfirst + $I_L1577_212, 0)
 1581.                         s = 0.0
 1582.                         $I_L1582_182 = 0
 1582. !dir$ unroll 4
 1582.                         do
 1583.                            s = s + (fgpass_scalars%base_addr)(ib, 1 + $I_L1582_182, jb, 1 + $I_L1576_206, adr_scalars, 0) * (del%base_addr)(1 + $I_L1582_182, 0)
 1584.                            $I_L1582_182 = 1 + $I_L1582_182
 1582.                            if ( $I_L1582_182 >= kmax ) exit
 1582.                         enddo
 1585.                         (fg%base_addr)(ib, 1 + $I_L1576_206, jb, 0) = s * (fgpsp%base_addr)(ib, jb, 0)
 1586.                         $I_L1578_198 = 1 + $I_L1578_198
 1584.                         if ( $I_L1578_198 >= $SCA_mylastlon_I67 + -$SCA_myfirstlon_I66 + 1 ) exit
 1584.                      enddo
 1586.                      i = 1 + $SCA_mylastlon_I67
 1586.                   endif
 1588.                   $I_L1576_206 = 1 + $I_L1576_206
 1586.                   if ( $I_L1576_206 >= nscalars ) exit
 1586.                enddo
 1587.                $I_L1577_212 = 1 + $I_L1577_212
 1587.                if ( $I_L1577_212 >= jlast + -jfirst + 1 ) exit
 1587.             enddo
 1587.             j = 1 + jlast
 1587.          else
 1585.             $SC_fg_I109 = fg%dim_1%EX
 1585.             $SC_fg_I110 = fg%dim_1%LB
 1585.             $SC_fg_I112 = fg%dim_2%SM
 1585.             $SC_fg_I111 = fg%dim_2%EX
 1585.             $SC_fg_I113 = fg%dim_2%LB
 1585.             $SC_fg_I115 = fg%dim_3%SM
 1585.             $SC_fg_I114 = fg%dim_3%EX
 1585.             $SC_fg_I116 = fg%dim_3%LB
 1580.             $SC_jbperij_I83 = jbperij%dim_1%EX
 1580.             $SC_jbperij_I84 = jbperij%dim_1%LB
 1580.             $SC_jbperij_I86 = jbperij%dim_2%SM
 1580.             $SC_jbperij_I85 = jbperij%dim_2%EX
 1580.             $SC_jbperij_I87 = jbperij%dim_2%LB
 1579.             $SC_ibperij_I78 = ibperij%dim_1%EX
 1579.             $SC_ibperij_I79 = ibperij%dim_1%LB
 1579.             $SC_ibperij_I81 = ibperij%dim_2%SM
 1579.             $SC_ibperij_I80 = ibperij%dim_2%EX
 1579.             $SC_ibperij_I82 = ibperij%dim_2%LB
 1576.             $SC_mylastlon_I76 = mylastlon%dim_1%EX
 1576.             $SC_mylastlon_I77 = mylastlon%dim_1%LB
 1576.             $SC_myfirstlon_I74 = myfirstlon%dim_1%EX
 1576.             $SC_myfirstlon_I75 = myfirstlon%dim_1%LB
 1577.             $I_L1577_210 = 0
 1577.             do
 1576.                $SCA_myfirstlon_I68 = (myfirstlon%base_addr)(jfirst + $I_L1577_210, 0)
 1576.                $SCA_mylastlon_I69 = (mylastlon%base_addr)(jfirst + $I_L1577_210, 0)
 1576.                $I_L1576_202 = 0
 1576.                do
 1578.                   i = $SCA_myfirstlon_I68
 1578.                   if ( $SCA_mylastlon_I69 + -$SCA_myfirstlon_I68 >= 0 ) then
 1578.                      $I_L1578_190 = 0
 1578. !dir$ ivdep
 1578.                      do
 1579.                         ib = (ibperij%base_addr)($SCA_myfirstlon_I68 + $I_L1578_190, jfirst + $I_L1577_210, 0)
 1580.                         jb = (jbperij%base_addr)($SCA_myfirstlon_I68 + $I_L1578_190, jfirst + $I_L1577_210, 0)
 1585.                         (fg%base_addr)(ib, 1 + $I_L1576_202, jb, 0) = 0.0
 1586.                         $I_L1578_190 = 1 + $I_L1578_190
 1584.                         if ( $I_L1578_190 >= $SCA_mylastlon_I69 + -$SCA_myfirstlon_I68 + 1 ) exit
 1584.                      enddo
 1586.                      i = 1 + $SCA_mylastlon_I69
 1586.                   endif
 1588.                   $I_L1576_202 = 1 + $I_L1576_202
 1586.                   if ( $I_L1576_202 >= nscalars ) exit
 1586.                enddo
 1587.                $I_L1577_210 = 1 + $I_L1577_210
 1587.                if ( $I_L1577_210 >= jlast + -jfirst + 1 ) exit
 1587.             enddo
 1587.             j = 1 + jlast
 1587.          endif
 1587.       endif
 1589.       _mt_barrier( 1, _mt_rw_list(...) )
 1590.       $snt_T0 = _mt_single( 2, _mt_rw_list(...) )
 1591.       call collect_gauss( (fg%base_addr)(fg%dim_1%LB, fg%dim_2%LB, fg%dim_3%LB, 0), (fgs%base_addr)(fgs%dim_1%LB, fgs%dim_2%LB, fgs%dim_3%LB, 0), nscalars )
 1592.       $snt_T0 = _mt_endsingle( 2, _mt_rw_list(...), $snt_T0 )
 1593.       ns = 1
 1593.       if ( nscalars > 0 ) then
 1594.          if ( jlast_d + -jfirst_d >= 0 ) then
 1593.             $SC_cel_area_I119 = cel_area%dim_1%EX
 1593.             $SC_cel_area_I120 = cel_area%dim_1%LB
 1600.             $SC_fconsrv_I129 = fconsrv%dim_1%EX
 1600.             $SC_fconsrv_I130 = fconsrv%dim_1%LB
 1600.             $SC_fconsrv_I132 = fconsrv%dim_2%SM
 1600.             $SC_fconsrv_I131 = fconsrv%dim_2%EX
 1600.             $SC_fconsrv_I133 = fconsrv%dim_2%LB
 1593.             $SC_imaxperj_I117 = imaxperj%dim_1%EX
 1593.             $SC_imaxperj_I118 = imaxperj%dim_1%LB
 1598.             $SC_fgs_I121 = fgs%dim_1%EX
 1598.             $SC_fgs_I122 = fgs%dim_1%LB
 1598.             $SC_fgs_I124 = fgs%dim_2%SM
 1598.             $SC_fgs_I123 = fgs%dim_2%EX
 1598.             $SC_fgs_I125 = fgs%dim_2%LB
 1598.             $SC_fgs_I127 = fgs%dim_3%SM
 1598.             $SC_fgs_I126 = fgs%dim_3%EX
 1598.             $SC_fgs_I128 = fgs%dim_3%LB
 1594.             $I_L1594_208 = 0
 1594.             do
 1593.                $SCA_imaxperj_I70 = (imaxperj%base_addr)(jfirst_d + $I_L1594_208, 0)
 1593.                $SCA_cel_area_I71 = (cel_area%base_addr)(jfirst_d + $I_L1594_208, 0)
 1593.                $I_L1593_200 = 0
 1593.                do
 1595.                   s = 0.0
 1597.                   i = 1
 1597.                   if ( $SCA_imaxperj_I70 > 0 ) then
 1597.                      $I_L1597_184 = 0
 1597. !dir$ ivdep
 1597.                      do
 1598.                         s = s + (fgs%base_addr)(1 + $I_L1597_184, jfirst_d + $I_L1594_208 + -myfirstlat_diag + 1, 1 + $I_L1593_200, 0)
 1599.                         $I_L1597_184 = 1 + $I_L1597_184
 1597.                         if ( $I_L1597_184 >= $SCA_imaxperj_I70 ) exit
 1597.                      enddo
 1599.                      i = ( 1 + $SCA_imaxperj_I70 )
 1599.                   endif
 1600.                   (fconsrv%base_addr)(1 + $I_L1593_200, jfirst_d + $I_L1594_208, 0) = s * $SCA_cel_area_I71
 1602.                   $I_L1593_200 = 1 + $I_L1593_200
 1599.                   if ( $I_L1593_200 >= nscalars ) exit
 1599.                enddo
 1601.                $I_L1594_208 = 1 + $I_L1594_208
 1601.                if ( $I_L1594_208 >= jlast_d + -jfirst_d + 1 ) exit
 1601.             enddo
 1601.             j = 1 + jlast_d
 1601.          else
 1594.             j = jfirst_d
 1594.          endif
 1602.          ns = ( 1 + nscalars )
 1602.       endif
 1603.       _mt_barrier( 3, _mt_rw_list(...) )
 1604.       $snt_T1 = _mt_single( 4, _mt_rw_list(...) )
 1605.       (displ%base_addr)(0, 0) = 0
 1606.       t$662 = -1 + maxnodes
 1606.       i = 1
 1606.       if ( -1 + maxnodes > 0 ) then
 1606.          t$663 = ( -1 + maxnodes )
 1606.          $displ_WR0_R0 = 0
 1607.          $SC_nlatsinproc_I134 = nlatsinproc_d%dim_1%EX
 1607.          $SC_nlatsinproc_I135 = nlatsinproc_d%dim_1%LB
 1607.          $SC_displ_I136 = displ%dim_1%EX
 1607.          $SC_displ_I137 = displ%dim_1%LB
 1606.          $I_L1606_186 = 0
 1606. !dir$ unroll 4
 1606.          do
 1607.             $displ_WR0_R0 = $displ_WR0_R0 + nscalars * (nlatsinproc_d%base_addr)($I_L1606_186, 0)
 1607.             (displ%base_addr)(1 + $I_L1606_186, 0) = $displ_WR0_R0
 1608.             $I_L1606_186 = 1 + $I_L1606_186
 1606.             if ( $I_L1606_186 >= -1 + maxnodes ) exit
 1606.          enddo
 1608.          t$664 = -1 + maxnodes
 1608.          i = maxnodes
 1608.       endif
 1610.       t$665 = nscalars * myjmax_d
 1611.       t$666 = ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) )
 1611.       t$667 = max( 0, ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) ) )
 1611.       t$669 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ( -1 + nlatsinproc_d%dim_1%EX + 1 ) ) ) ) ) ), 8 )
 1611.       $F_A33 = -1 + nlatsinproc_d%dim_1%EX + 1
 1611.       if ( -1 + nlatsinproc_d%dim_1%EX >= 0 ) then
 1611.          $SC_nlatsinproc_I134 = nlatsinproc_d%dim_1%EX
 1611.          $SC_nlatsinproc_I135 = nlatsinproc_d%dim_1%LB
 1611.          $I_L1611_192 = 0
 1611. !dir$ ivdep
 1611.          do
 1611.             t$668(1 + $I_L1611_192) = nscalars * (nlatsinproc_d%base_addr)($SC_nlatsinproc_I135 + $I_L1611_192, 0)
 1611.             $I_L1611_192 = 1 + $I_L1611_192
 1611.             if ( $I_L1611_192 >= $F_A33 ) exit
 1611.          enddo
 1611.       endif
 1609.       call mpi_allgatherv( (fconsrv%base_addr)(1, myfirstlat_diag, 0), t$665, 1275070495, (fconsrv%base_addr)(fconsrv%dim_1%LB, fconsrv%dim_2%LB, 0), t$668(1), (displ%base_addr)(displ%dim_1%LB, 0), 1275070495, 1140850688, ierr )
 1611.       _free( t$669 )
 1613.       t$670 = nscalars
 1613.       ns = 1
 1613.       if ( nscalars > 0 ) then
 1613.          t$671 = nscalars
 1615.          if ( jmax > 0 ) then
 1614.             $SC_total_mass_I138 = total_mass%dim_1%EX
 1614.             $SC_total_mass_I139 = total_mass%dim_1%LB
 1613.             $I_L1613_194 = 0
 1613. !dir$ ivdep
 1613.             do
 1614.                (total_mass%base_addr)(1 + $I_L1613_194, 0) = 0.0
 1618.                $I_L1613_194 = 1 + $I_L1613_194
 1617.                if ( $I_L1613_194 >= nscalars ) exit
 1617.             enddo
 1616.             $SC_total_mass_I138 = total_mass%dim_1%EX
 1616.             $SC_total_mass_I139 = total_mass%dim_1%LB
 1616.             $SC_fconsrv_I129 = fconsrv%dim_1%EX
 1616.             $SC_fconsrv_I130 = fconsrv%dim_1%LB
 1616.             $SC_fconsrv_I132 = fconsrv%dim_2%SM
 1616.             $SC_fconsrv_I131 = fconsrv%dim_2%EX
 1616.             $SC_fconsrv_I133 = fconsrv%dim_2%LB
 1615.             $I_L1615_204 = 0
 1615. !dir$ blocking_size( 0, 0 )
 1615.             do
 1613.                $I_L1613_196 = 0
 1613. !dir$ ivdep
 1613. !dir$ blocking_size( 0, 0 )
 1613.                do
 1616.                   (total_mass%base_addr)(1 + $I_L1613_196, 0) = (total_mass%base_addr)(1 + $I_L1613_196, 0) + (fconsrv%base_addr)(1 + $I_L1613_196, 1 + $I_L1615_204, 0)
 1618.                   $I_L1613_196 = 1 + $I_L1613_196
 1615.                   if ( $I_L1613_196 >= nscalars ) exit
 1615.                enddo
 1617.                $I_L1615_204 = 1 + $I_L1615_204
 1617.                if ( $I_L1615_204 >= jmax ) exit
 1617.             enddo
 1615.             t$673 = jmax
 1615.             t$674 = jmax
 1617.             t$675 = jmax
 1617.             j = ( 1 + jmax )
 1617.          else
 1614.             $SC_total_mass_I138 = total_mass%dim_1%EX
 1614.             $SC_total_mass_I139 = total_mass%dim_1%LB
 1613.             $I_L1613_188 = 0
 1613. !dir$ ivdep
 1613.             do
 1614.                (total_mass%base_addr)(1 + $I_L1613_188, 0) = 0.0
 1618.                $I_L1613_188 = 1 + $I_L1613_188
 1617.                if ( $I_L1613_188 >= nscalars ) exit
 1617.             enddo
 1615.             t$673 = jmax
 1615.             j = 1
 1615.          endif
 1618.          t$672 = nscalars
 1618.          ns = ( 1 + nscalars )
 1618.       endif
 1619.       $snt_T1 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T1 )
 1621.       return
 1621.       end
 1621.       
  185.       
  185.       module griddynamics
 1623.       return
 1623.       end
 1623.       
