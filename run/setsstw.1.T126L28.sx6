#!/bin/ksh
#*****************************************************************#
#                                                                 #
#       Name:      setsstwT126L28.sx6               #
#                                                                 #
#       Function:  This script file is used to set the            #
#                  environmental variables and start the          #
#                  weekly running mean SST script.                #
#                                                                 #
#*****************************************************************#
#
#  At NEC Both the output (stdout) and the error
#  messages (stderr) are written to the same file
#
#PBS -o tupan00:/gfs/home3/modoper/tempo/global/oens/run/setout/setsstw.1.T126L28.sx6.2012021404:29:38.out
#PBS -j o
#
#
#   Set date (year,month,day) and hour (hour:minute) 
#
#   DATE=yyyymmdd
#   HOUR=hh:mn:ss
#
DATE=20120214
HOUR=04:29:38
echo 'Date: '${DATE}
echo 'Hour: '${HOUR}
export DATE HOUR
#
#   Set a label (date, UTC hour)
#
#   LABELI=yyyymmddhh
#   LABELS=yyyymmdd
#
LABELI=2012021400
echo ${LABELI} > label.out
LABELS=`awk '{ print substr($1,1,8) }' label.out`
rm -f label.out
export LABELI LABELS
#
#   Check for sstwkl. file
#
if [ "run" = "run" ]
then
if [ ! -s /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELS} ]
then
echo ${LABELS} > label.out
YR=`awk '{ print substr($1,1,4) }' label.out`
MR=`awk '{ print substr($1,5,2) }' label.out`
DR=`awk '{ print substr($1,7,2) }' label.out`
rm -f label.out
let ybi=${YR}%4
if [ ${ybi} = 0 ]
then
set -A MLR 31 29 31 30 31 30 31 31 30 31 30 31
else
set -A MLR 31 28 31 30 31 30 31 31 30 31 30 31
fi
let dr=${DR}
let mr=${MR}
let yr=${YR}
let nsst=0
let nsstx=15
while [ ! -s /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELS} -a nsst -lt nsstx ]
do
let dr=dr-1
if [ dr -le 0 ]
then
let nr=mr-2
if [ nr -lt 0 ]
then let nr=11
fi
let dr=dr+MLR[${nr}]
let mr=mr-1
fi
if [ mr -le 0 ]
then
let mr=12
let yr=yr-1
fi
if [ dr -lt 10 ]
then DR=0${dr}
else DR=${dr}
fi
if [ mr -lt 10 ]
then MR=0${mr}
else MR=${mr}
fi
YR=${yr}
LABELR=${YR}${MR}${DR}
export LABELR
echo "LABELR = ${LABELR}"
let nsst=nsst+1
if [ -s /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} ]
then
echo "Tentative number = ${nsst} : /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} does exist, then"
echo "cp /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELS}"
cp /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELS}
else
echo "Tentative number = ${nsst} : /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} does not exist"
fi
done
if [ ! -s /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELR} -a nsst -eq nsstx ]
then
echo "Tentatives exceeded limit of ${nsstx}"
echo "File /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl.${LABELS} does not exist"
echo "File /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl${LABELS}.T126 does not generated"
echo "rm -f /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl${LABELS}.T126"
rm -f /gfs/dk22/modoper/tempo/global/oens/model/datain/sstwkl${LABELS}.T126
echo "Use Climatological SST for model"
exit 99
fi
#
fi
fi
#
#   Set directories
#
#   OPERMOD  is the directory for sources, scripts and
#            printouts files.
#   SOPERMOD is the directory for input and output data
#            and bin files.
#   ROPERMOD is the directory for big selected output files.
#   AOPERMOD is the directory for alternative initial conditions.
#   ROPERMODI is the directory for sstwkl 1X1 degree file.
#
OPERMOD=/gfs/home3/modoper/tempo/global/oens
SOPERMOD=/gfs/home3/modoper/tempo/global/oens
ROPERMOD=/gfs/dk22/modoper/tempo/global/oens
AOPERMOD=/gfs/dk22/modoper/tempo/global/oens
ROPERMODI=/gfs/dk22/modoper/tempo/global/oens/model/datain
export OPERMOD SOPERMOD ROPERMOD AOPERMOD ROPERMODI
echo ${OPERMOD}
echo ${SOPERMOD}
echo ${ROPERMOD}
echo ${AOPERMOD}
echo ${ROPERMODI}
#
cd ${OPERMOD}/run
#
#   Set Horizontal Truncation and Vertical Layers
#
LEV=L28
TRUNC=T126
export TRUNC LEV
#
#   Set machine
#
MACH=sx6
export MACH
#
#   Set option for compiling or not the source codes.
#
#   If COMPILE=make then only the modified sources will be compiled.
#   If COMPILE=clean then the touch files will be removed and 
#              all sources will be compiled.
#             =run for run with no compilation
#
#   If COMPILE is make or clean then the script generates the binary file 
#              and exits;
#              if it is run then the script runs the existent binary file.
#
COMPILE=run
export COMPILE
echo ${COMPILE}
#
#      Define variables to generate variable data file names:
#
NAMEI=GANLAVN
NAMEA=GANLAVN
EXTS=S.unf
export NAMEI NAMEA EXTS
#
#   Set NEC FORTRAN variables for output time diagnostics
#
#   F_PROGINF gives the elapsed, user, system and vector instruction
#             execution time, and execution count of all instructions
#             and number of vector instruction executions.
#   F_FILEINF gives informations about I/O operations.
#
F_PROGINF=DETAIL
export F_PROGINF
#F_FILEINF=DETAIL
#export F_FILEINF
#
#   Set FORTRAN compilation flags
#
#   -pvctl noaltcode either scalar or vector code is generated at compilation
#   -O nodiv         division may not be changed to reciprocal multiplication
#   -O nomove        not move invariant expression outside the loop
#   -float0 floating-point data format IEEE is enabled
#   -ew     sets the basic numeric size to 8 bytes
#
FTNFLAG='-C vsafe -float0 -ew -Wf" -pvctl noaltcode nomatmul -O nodiv nomove " '
export FTNFLAG
#
#   Set C pre-processing flags
#
INC=${OPERMOD}/include/${TRUNC}${LEV}
export INC
echo ${INC}
#
#   Set FORTRAN compiler name
#
F77=f90
export F77
#
#   Set FORTRAN environment file name
#
#    is associated with FORTRAN file unit = n
#
FFF=F_FF
export FFF
#
#   Set environmental variables to binary conversion
#
F_UFMTIEEE=23,50,52,54
export F_UFMTIEEE
F_UFMTADJUST23=TYPE2
F_UFMTADJUST50=TYPE2
F_UFMTADJUST52=TYPE2
F_UFMTADJUST54=TYPE2
export F_UFMTADJUST23 F_UFMTADJUST50 F_UFMTADJUST52 F_UFMTADJUST54
#
#  Now, build the necessary INCLUDE for the choosen truncation
#       and vertical resolution..
#
  if [ "${COMPILE}" != "run" ]
  then
#
cd ${INC}
#
cat <<EOT1 > reshsst.n
      INTEGER MEND1,NEND1,JEND1,JMAX,IMAX
      PARAMETER(MEND1=127,NEND1=127,JEND1=127)
      PARAMETER(IMAX=384)
      PARAMETER(JMAX=192)
EOT1
if (diff reshsst.n reshsst.h > /dev/null)
then 
    echo "reshsst.n and reshsst.h are the same"
    rm -f reshsst.n
else
    echo "reshsst.n and reshsst.h are different"
    mv reshsst.n reshsst.h
fi
#
fi
#
#  End of includes
#
#  Build the necessary NAMELIST input..
#
cat <<EOT3 > ${SOPERMOD}/pre/datain/sstwkl.nml
 &SSTNML
  CLMWDW=.FALSE.
  SICE=-1.749
 &END
EOT3
#
cd ${OPERMOD}/run
#
#   Run weekly sst
#
echo 'WEEKLY SST -- SUBMITTED TO BATCH ...'
#
$OPERMOD/pre/scripts/sstwkl.scr
#
