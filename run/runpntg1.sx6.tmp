#!/bin/ksh
#MODIFICADO PARA GERAR SAIDAS A CADA 6 HORAS E MODIFICAR O .files PARA DEIXAR APENAS ARQUIVOS com timestep 12.
#ARQUIVO .files.full TEM TODOS OS ARQUIVOS GERADOS PELO MODELO.
#ESTE ARQUIVO EH COPIADO PARA O DIRETORIO DO IO, ONDE EH RODADO O TIGGE COM TIMESTEP 06. 
#help#
#*******************************************************************#
#                                                                   #
#     Name:           runpntg.sx6                                   #
#                                                                   #
#     Function:       This script generated and submit              #
#                     a script to start the global model            #
#                     at a given date/time to integration           #
#                     from initial date till final date.            #
#                                                                   #
#     Date:           June   02th, 2003.                            #
#     Last change:    June   02th, 2003.                            #
#                                                                   #
#     Valid Arguments for runpntg.sx6                               #
#                                                                   #
#     First :   HELP: help or nothing for getting help              #
#     First :    TRC: three-digit triangular truncation             #
#     Second:     LV: two-digit number of vertical sigma-layers     #
#     Third : LABELI: initial forecasting label                     #
#     Fourth: NFDAYS: number of forecasting days                    #
#     Fifth :   PERT: perturbation                                  #
#     Sixth :NUMPERT: number of random perturbations                #
#   Seventh :  NMSST: SST file name or nothing                      #
#                                                                   #
#     Obs.  : NMSST : default sstaoi                                #
#             PERT  : NMC,01P,01N,02P,02N,...                       #
#             LABELx: yyyymmddhh                                    #
#                     yyyy = four digit year                        #
#                       mm = two digit month                        #
#                       dd = two digit day                          #
#                       hh = two digit UTC hour                     #
#*******************************************************************#
#help#
#
# Help:
#
if [ "${1}" = "help" -o -z "${1}" ]
then
    cat < ${0} | sed -n '/^#help#/,/^#help#/p'
    exit 0
fi
if [ -z "${2}" ]
then
echo "Second argument is not set: LV"
exit
fi
if [ -z "${3}" ]
then
echo "Third argument is not set (LABELI: yyyymmddhh)"
exit
fi
if [ -z "${4}" ]
then
echo "Fourth argument is not set NFDAYS"
exit
fi
if [ -z "${5}" ]
then
echo "Fifth argument is not set PERT"
exit
else
PERR=${5}
fi
if [ -z "${6}" ]
then
echo "Sixth argument is not set NUMPERT"
exit
else
NUMPERT=${6}
fi
if [ -z "${7}" ]
then
echo "Warning NMSST is not set. Using default: sstaoi"
fi
#
#       Testing Valid Arguments
#
if [ -z "${1}" ]
then
TRC=062
else
TRC=${1}
fi
if [ -z "${2}" ]
then
LV=28
else
LV=${2}
fi
#
#   Set host, machine, NQS Queue, Run time and Extention
#
HSTMAQ=`hostname`
MAQUI=sx6
QUEUE=Inter
RUNTM=`date +'%Y%m%d%H:%M'`
EXT=out
export HSTMAQ MAQUI RUNTM EXT
#
#   Set directories and remote machines
#
#   OPERM : is the directory for sources, scripts and printouts 
#           at SX6.
#   SOPERM: is the directory for input and output files at SX6.
#   ROPERM: is the directory for big selected output files at SX6.
#   CTLDIR: is the directory where the outputs will be available
#           after they where send to the machine RMTCPF.
#   DIRPRD: is the directory of the machine RMTCPR where there
#           are the programs to generate special products.
#   RMTUSR: is the remote user at the telecom machine RMTCPR.
#   RMTCPR: is the remote machine to run the special products.
#   RMTCPF: is the remote archieve machine.
#   RMUSCF: is the remote archieve machine user.
#   RMPWCF: is the remote archieve machine password.
#   RMTCPY: is the remote products machine for external users.
#
. ./config.sx6
#################################################
CTLDIR=
DIRPRD=
RMTUSR=
RMTCPR=
RMTCPF=
RMUSCF=
RMPWCF=
RMTCPY=
#################################################
export OPERM SOPERM ROPERM CTLDIR DIRPRD
export RMTUSR RMTCPR RMTCPF RMUSCF RMPWCF RMTCPY
#
#   Set Horizontal Truncation (TRUNC) and Vertical Layers (LEV)
#
TRUNC=T${TRC}
LEV=L${LV}
NIVELP=K15
export TRUNC LEV NIVELP
#
#   Set initial and final forecasting labels and UTC Hour
#
LABELI=${3}
export LABELI
#
NFDAYS=${4}
#
calday ()
{
echo ${LABELI} > labeli${PERR}.out
yi=`awk '{ print substr($1,1,4) }' labeli${PERR}.out`
mi=`awk '{ print substr($1,5,2) }' labeli${PERR}.out`
di=`awk '{ print substr($1,7,2) }' labeli${PERR}.out`
hi=`awk '{ print substr($1,9,2) }' labeli${PERR}.out`
rm -f labeli${PERR}.out
let ybi=${yi}%4
if [ ${ybi} = 0 ]
then
set -A md 31 29 31 30 31 30 31 31 30 31 30 31
else
set -A md 31 28 31 30 31 30 31 31 30 31 30 31
fi
let df=${di}+${NFDAYS}
let mf=${mi}
let yf=${yi}
let hf=${hi}
let n=${mi}-1
if [ df -gt md[${n}] ]
then
let df=df-md[${n}]
let mf=mf+1
if [ mf -eq 13 ]
then
let mf=1
let yf=yf+1
fi
fi
if [ df -lt 10 ]
then DF=0${df}
else DF=${df}
fi
if [ mf -lt 10 ]
then MF=0${mf}
else MF=${mf}
fi
YF=${yf}
if [ hf -lt 10 ]
then HF=0${hf}
else HF=${hf}
fi
}
#
caldaya ()
{
echo ${LABELI} > labeli${PERR}.out
yi=`awk '{ print substr($1,1,4) }' labeli${PERR}.out`
mi=`awk '{ print substr($1,5,2) }' labeli${PERR}.out`
di=`awk '{ print substr($1,7,2) }' labeli${PERR}.out`
hi=`awk '{ print substr($1,9,2) }' labeli${PERR}.out`
rm -f labeli${PERR}.out
let ybi=${yi}%4
if [ ${ybi} = 0 ]
then
set -A md 31 29 31 30 31 30 31 31 30 31 30 31
else
set -A md 31 28 31 30 31 30 31 31 30 31 30 31
fi
let df=${di}
let mf=${mi}
let yf=${yi}
let hf=${hi}+12
let n=${mi}-1
if [ hf -gt 23 ]
then
let hf=hf-24
let df=df+1
if [ df -gt md[${n}] ]
then
let df=df-md[${n}]
let mf=mf+1
if [ mf -eq 13 ]
then
let mf=1
let yf=yf+1
fi
fi
fi
if [ df -lt 10 ]
then DF=0${df}
else DF=${df}
fi
if [ mf -lt 10 ]
then MF=0${mf}
else MF=${mf}
fi
YF=${yf}
if [ hf -lt 10 ]
then HF=0${hf}
else HF=${hf}
fi
}
#
#############Set number (fct) post-processing (out's each 12 hs) #########
calday
UTC=${hi}
if [ "${UTC}" = "00" -o "${UTC}" = "12" ]
then
let NF=2*${NFDAYS}
echo "NF="${NF}
else
caldaya
NF=2
fi
let NFILEOUT=${NF}+2
export UTC NF
####################################################### 
LABELF=${YF}${MF}${DF}${HF}
export LABELF
#
#   Set Perturbation
#
PERT=${5}
export PERT
#
#   Set SST file name
#
if [ -z "${7}" ]
then
NMSST=sstaoi
else
NMSST=${7}
fi
export NMSST
#
######Set some parameters to run ensemble members#########
dhfct=06
dhdhn=0
nhdhn=0
dhext=6
nhext=120
prefx=${PERT}
prefy=${PERT}
#AMM if [ "${PERT}" = "NMC" ]
#AMM then
#AMM nproc=8
#AMM else
nproc=1
#AMM fi
##########################################################
#
######Set parameters to run probability plumes############
let NMEMB=2*${NUMPERT}+1
NPRPLM=4
##########################################################
#
cd ${OPERM}/run
#

if [ ${PERT} = "AVN" ]
then
	NPROC=8
else
	NPROC=2
fi

cat <<EOT0 > setpntg${PERT}${TRUNC}${LEV}.${MAQUI}
#!/bin/ksh
#
#*******************************************************#
#                                                       #
#      Name:     setpntg${PERT}${TRUNC}${LEV}.${MAQUI}  #
#                                                       #
#      Function: This script runs the spectral          #
#                global numerical weather               #
#                forecasting at ${MAQUI}.               #
#                                                       #
#*******************************************************#
#
#PBS -l cpunum_prc=$NPROC
#PBS -l tasknum_prc=$NPROC
#PBS -l memsz_job=10gb
#PBS -l cputim_job=30000.0
#PBS -o ${HSTMAQ}:${OPERM}/run/setout/setpntg${PERT}${TRUNC}${LEV}.${MAQUI}.${RUNTM}.${EXT}
#PBS -j o
#
#
#   Change directory to run
#
cd ${OPERM}/run
#
#   Set current sst file name for model run
#
SSTNM=${NMSST}
#
#   Run spectral global model forecast
#
echo "runmodgpro.${MAQUI} ${TRC} ${LV} ${LABELI} ${LABELF} ${dhfct} ${prefx}"
runmodgprompi.${MAQUI} ${TRC} ${LV} ${LABELI} ${LABELF} ${dhfct} ${prefx}
set -x
sleep 30
arqfiles=${ROPERM}/model/dataout/T${TRC}L${LV}/GFCT${prefx}${LABELI}${LABELF}F.dir.T${TRC}L${LV}.files
#
#MODIFICA .files PARA LEITURA DO TIGGE E NAO INTERFERENCIA NOS PRODUTOS DO ENSEMBLE
#
mv \${arqfiles} \${arqfiles}.full
echo "ORIGINAL .files: \${arqfiles}"
cat \${arqfiles}.full | egrep "[02]F\." > \${arqfiles}
set +x
echo " "
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
cat \${arqfiles}
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo " "
#
#   Run control forecast
#
#AMM if [ "${PERT}" = "07N" ]
#AMM then
#AMM echo "${OPERM}/run/runpntg.sx6 ${TRC} ${LV} ${LABELI} ${NFDAYS} NMC ${NUMPERT} sstwkl"
#AMM ${OPERM}/run/runpntg.sx6 ${TRC} ${LV} ${LABELI} ${NFDAYS} NMC ${NUMPERT} sstwkl
#AMM fi
#
#   Run upper-level post-processing
#
echo "runpost.${MAQUI} run ${TRC} ${LV} cold ${LABELI} ${LABELF} -1 ${NF} 0 0 ${prefx}"
runpost1.${MAQUI} run ${TRC} ${LV} cold ${LABELI} ${LABELF} -1 ${NF} 0 0 ${prefx}
mv \${arqfiles} \${arqfiles}.tmp
mv \${arqfiles}.full \${arqfiles}
#
#   Run ETA post-processing
#
#AMM echo "runpost.${MAQUI} run ${TRC} ${LV} cold ${LABELI} ${LABELF} ${PERT} -1 32 0 e"
#AMM runpost.${MAQUI} run ${TRC} ${LV} cold ${LABELI} ${LABELF} ${PERT} -1 32 0 e
#
#   Run DHN post-processing
#
#AMM echo "rundhnp.${MAQUI} run ${TRC} ${LV} ${LABELI} ${LABELF} ${PERT}"
#AMM rundhnp.${MAQUI} run ${TRC} ${LV} ${LABELI} ${LABELF} ${PERT}
#
#   Transfer data to Bangu
#
#echo "runtransfer.${MAQUI} ${TRC} ${LV} ${LABELI} ${PERT}"
#runtransfer.${MAQUI} ${TRC} ${LV} ${LABELI} ${PERT}
#
#   GRIB FILES
#
#AAF echo "rungpgrib.sx6 $LABELI ${prefx}"
#AAF rungpgrib.sx6 $LABELI ${prefx}

set -x
dateU=`echo ${LABELI} | cut -c 1-8`
HH=`echo ${LABELI} | cut -c 9-10`
DATEF=`date -d "$dateU 15 days" +%Y%m%d${HH}`
cd ../produtos/grh_new/run/
echo "RunGrh.sx6.T126L28.scr run ${TRC} ${LV} ${LABELI} ${DATEF} ${prefx}"
RunGrh.sx6.T126L28.scr run ${TRC} ${LV} ${LABELI} ${DATEF} ${prefx}
set +x

#
exit 0
### F I M ###
EOT0
#
echo "chmod a+x ${OPERM}/run/setpntg${PERT}${TRUNC}${LEV}.${MAQUI}"
chmod a+x ${OPERM}/run/setpntg${PERT}${TRUNC}${LEV}.${MAQUI}
#
#   Submit setpntg${PERT}${TRUNC}${LEV}.${MAQUI} to NQS ${QUEUE}
#
#AMM if [ "${PERT}" = "NMC" ]
#AMM then
echo "/usr/bin/nqsII/qsub -q ${QUEUE} -l cpunum_prc=1 ${OPERM}/run/setpntg${PERT}${TRUNC}${LEV}.${MAQUI}"
/usr/bin/nqsII/qsub -q ${QUEUE} -N OENS${PERT} ${OPERM}/run/setpntg${PERT}${TRUNC}${LEV}.${MAQUI}

exit 0 #AAF
